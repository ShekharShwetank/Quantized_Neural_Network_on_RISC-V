
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/src/debug/main.elf:     file format elf32-littleriscv
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/src/debug/main.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20100000

Program Header:
0x70000003 off    0x00049ef2 vaddr 0x00000000 paddr 0x00000000 align 2**0
         filesz 0x0000004d memsz 0x00000000 flags r--
    LOAD off    0x00001000 vaddr 0x20100000 paddr 0x20100000 align 2**12
         filesz 0x0000363c memsz 0x0000363c flags rwx
    LOAD off    0x0000c000 vaddr 0x80000000 paddr 0x2010a470 align 2**12
         filesz 0x00000aa8 memsz 0x00000aa8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00000aa8 vaddr 0x80000aa8 paddr 0x80000aa8 align 2**12
         filesz 0x00000000 memsz 0x00000df8 flags rw-
    LOAD off    0x00000134 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004680 vaddr 0x20103680 paddr 0x20103680 align 2**12
         filesz 0x00006dec memsz 0x00006dec flags r-x
    LOAD off    0x00000134 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002c4  20100000  20100000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  201002c8  201002c8  000012c8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  201002d4  201002d4  000012d4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           000032ec  20100350  20100350  00001350  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00006dec  20103680  20103680  00004680  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000aa8  80000000  2010a470  0000c000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000001f4  80000aa8  80000aa8  0000caa8  2**3  ALLOC
  7 .stack            00000400  80000ca0  80000ca0  0000caa8  2**4  ALLOC
  8 .heap             00000800  800010a0  800010a0  0000caa8  2**3  ALLOC
  9 .debug_info       00025a7c  00000000  00000000  0000caa8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     0000360c  00000000  00000000  00032524  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000db0  00000000  00000000  00035b30  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000b78  00000000  00000000  000368e0  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000d649  00000000  00000000  00037458  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        0000542c  00000000  00000000  00044aa1  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000025  00000000  00000000  00049ecd  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000004d  00000000  00000000  00049ef2  2**0  CONTENTS, READONLY
 17 .debug_frame      00003744  00000000  00000000  00049f40  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20100000 l    d  .init	00000000 .init
201002c8 l    d  .init_array	00000000 .init_array
201002d4 l    d  .ctors	00000000 .ctors
20100350 l    d  .rodata	00000000 .rodata
20103680 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000aa8 l    d  .bss	00000000 .bss
80000ca0 l    d  .stack	00000000 .stack
800010a0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 entry.o
00000000 l    df *ABS*	00000000 scrub.o
201000c0 l     F .init	00000000 __metal_memory_scrub
2010012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 trap.o
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20100240 l       .init	00000000 _skip_init
201035e8 l       .rodata	00000000 argv
201035ec l       .rodata	00000000 envp
201035f0 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
201080aa l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
201080c4 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
201080de l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
201080f4 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20108108 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2010811a l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
2010812a l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20108140 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20108152 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
20102c6c l     O .rodata	00000880 pll_configs
20108168 l     F .text	0000004e get_pll_config_freq
201083d8 l     F .text	000000aa find_closest_config
20108482 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 mnist_model_params.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
2010447e l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
201054ba l     F .text	0000002a __metal_driver_sifive_clint0_control_base
201054e4 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
2010550c l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20105548 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
201056a8 l     F .text	00000032 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20105be6 l     F .text	00000024 __metal_driver_cpu_hartid
20105c0a l     F .text	0000002a __metal_driver_cpu_timebase
20105c34 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20105c5e l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
201075f2 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2010761c l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20107646 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2010766e l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20107696 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
201076b8 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio-leds.c
20108810 l     F .text	0000004a __metal_driver_sifive_gpio_led_gpio
2010885a l     F .text	00000044 __metal_driver_sifive_gpio_led_pin
2010889e l     F .text	0000005c __metal_driver_sifive_gpio_led_label
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20108a40 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20108a66 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20108a90 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
201092f4 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
2010931e l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
2010934c l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20109374 l     F .text	0000002e __metal_driver_sifive_uart0_clock
201093a2 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
201093cc l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
201093f4 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
201097be l     F .text	000000da pre_rate_change_callback_func
20109898 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20107eba l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20107ed4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20107eea l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20107efe l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20107fba l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20107fd4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20107fea l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20107ffe l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20108798 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20109d80 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 freer.c
00000000 l    df *ABS*	00000000 mallocr.c
201042f8 l     F .text	0000005e sbrk_aligned
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
20104c32 l     F .text	00000068 std
20104c9a l     F .text	0000001a stdio_exit_handler
20104cb4 l     F .text	00000046 cleanup_stdio
20104cfa l     F .text	0000003e global_stdio_init.part.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20109d00 l       .text	00000000 IRQ_0
20109d04 l       .text	00000000 IRQ_1
20109d08 l       .text	00000000 IRQ_2
20109d0c l       .text	00000000 IRQ_3
20109d10 l       .text	00000000 IRQ_4
20109d14 l       .text	00000000 IRQ_5
20109d18 l       .text	00000000 IRQ_6
20109d1c l       .text	00000000 IRQ_7
20109d20 l       .text	00000000 IRQ_8
20109d24 l       .text	00000000 IRQ_9
20109d28 l       .text	00000000 IRQ_10
20109d2c l       .text	00000000 IRQ_11
20109d30 l       .text	00000000 IRQ_12
20109d34 l       .text	00000000 IRQ_13
20109d38 l       .text	00000000 IRQ_14
20109d3c l       .text	00000000 IRQ_15
20109d40 l       .text	00000000 IRQ_LC0
20109d44 l       .text	00000000 IRQ_LC1
20109d48 l       .text	00000000 IRQ_LC2
20109d4c l       .text	00000000 IRQ_LC3
20109d50 l       .text	00000000 IRQ_LC4
20109d54 l       .text	00000000 IRQ_LC5
20109d58 l       .text	00000000 IRQ_LC6
20109d5c l       .text	00000000 IRQ_LC7
20109d60 l       .text	00000000 IRQ_LC8
20109d64 l       .text	00000000 IRQ_LC9
20109d68 l       .text	00000000 IRQ_LC10
20109d6c l       .text	00000000 IRQ_LC11
20109d70 l       .text	00000000 IRQ_LC12
20109d74 l       .text	00000000 IRQ_LC13
20109d78 l       .text	00000000 IRQ_LC14
20109d7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000aa4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80000abc l     O .bss	00000004 init_done.1
80000ac0 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
00000000 l    df *ABS*	00000000 inline.c
201002d4 l       .init_array	00000000 metal_constructors_end
201002d8 l       .init_array	00000000 __fini_array_end
201002d8 l       .init_array	00000000 metal_destructors_end
201002d8 l       .init_array	00000000 metal_destructors_start
201002d8 l       .init_array	00000000 __fini_array_start
201002c8 l       .init_array	00000000 __init_array_end
201002c8 l       .init_array	00000000 __preinit_array_end
201002c8 l       .init_array	00000000 __init_array_start
201002c8 l       .init_array	00000000 metal_constructors_start
201002c8 l       .init_array	00000000 __preinit_array_start
2010402e g     F .text	00000010 putchar
201035a8 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
201088fa g     F .text	00000036 __metal_driver_led_exist
20105266 g     F .text	00000026 metal_cpu_timer_get_interrupt_id
201023c8 g     O .rodata	00000310 input_data_2
2010503c g     F .text	00000030 _isatty_r
2010a0a4 g     F .text	00000012 strcpy
201064d2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
2010403e g     F .text	000000a4 _puts_r
2010506c g     F .text	00000034 _lseek_r
20109a2c g     F .text	00000026 metal_clock_get_rate_hz
2010971e g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20105880 g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
20109572 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2010643c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20106ce4 g     F .text	00000056 __metal_valid_interrupt_id
20109bea g     F .text	00000040 metal_gpio_toggle_pin
20104002 g     F .text	0000002c printf
201002cc g     O .init_array	00000004 _use_hfxosc_ptr
20107162 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80001278 g       .data	00000000 __global_pointer$
2010032a g     F .ctors	00000024 metal_tty_init
20105240 g     F .text	00000026 metal_cpu_timer_interrupt_controller
20105400 g     F .text	00000024 metal_led_off
201099d8 g     F .text	00000054 _metal_clock_append_to_callbacks
20107712 g     F .text	00000046 __metal_plic0_complete_interrupt
20106f28 g     F .text	000001e2 __metal_driver_riscv_cpu_controller_interrupt_register
201002c8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20104f84 g     F .text	00000036 __sseek
20104d38 g     F .text	0000001c __sinit
20103518 g     O .rodata	00000014 __metal_driver_vtable_sifive_led
201040ee g     F .text	0000009c __swbuf_r
80000aa8 g       .data	00000000 __tls_base
2010447c g     F .text	00000002 __malloc_unlock
201052b2 g     F .text	0000002e metal_cpu_get
201053dc g     F .text	00000024 metal_led_on
80000a30 g     O .data	00000020 __metal_dt_serial_10013000
20108ece g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20102a7c g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000c9c g       .bss	00000000 metal_segment_bss_target_end
20105578 g     F .text	0000009a __metal_clint0_mtime_get
20107566 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
2010361a g     O .rodata	00000001 label_2
00000001 g       *ABS*	00000000 __metal_chicken_bit
20109636 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20108c84 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
2010a006 g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20109542 g     F .text	00000030 __metal_driver_sifive_uart0_txready
201094d0 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
80000ab0 g     O .bss	00000004 __stdio_exit_handler
20109b42 g     F .text	00000040 metal_gpio_enable_output
20100142 g     F .init	0000000e __metal_synchronize_harts
80000aa8 g       .data	00000000 metal_segment_bss_target_start
20105612 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
2010500a g     F .text	00000032 _fstat_r
2010911e g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000ab4 g     O .bss	00000004 errno
2010825a g     F .text	0000017e __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20103608 g     O .rodata	00000004 L1_outgoing_weights
20109a9e g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20103604 g     O .rodata	00000004 L1_incoming_weights
2010897c g     F .text	00000042 __metal_driver_led_on
201067c0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
201000cc  w    F .init	00000000 __metal_before_start
2010a404  w    F .text	00000016 metal_init_run
20102c08 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20102bc4 g     O .rodata	00000044 __metal_driver_vtable_cpu
20109c92 g     F .text	0000002e metal_uart_set_baud_rate
201098c6 g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000c88 g     O .bss	00000004 cpu
201071ee g     F .text	00000070 __metal_driver_cpu_mcycle_get
201034ec g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
800010a0 g       .heap	00000000 metal_segment_heap_target_start
80000a88 g     O .data	00000008 __metal_dt_cpu_0
2010672a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20108632 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20107e1e g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
201040e2 g     F .text	0000000c puts
20106a18  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20109b82 g     F .text	00000068 metal_gpio_set_pin
20105df0 g     F .text	00000018 __metal_default_exception_handler
20109e48 g     F .text	00000026 _fstat
20105bb2 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
2010717e g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20105c82 g     F .text	00000030 __metal_driver_cpu_get
20102b60 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20105ce4 g     F .text	00000018 __metal_interrupt_global_disable
20107e92 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
201053b8 g     F .text	00000024 metal_led_enable
20106694  w    F .text	00000096 metal_lc7_interrupt_vector_handler
2010360c g     O .rodata	00000004 L2_bitperweight
20106856  w    F .text	00000096 metal_lc10_interrupt_vector_handler
201050d4 g     F .text	00000030 _sbrk_r
20107c3e g     F .text	00000050 __metal_driver_riscv_plic0_disable
20106df6 g     F .text	0000004e __metal_exception_register
20105424 g     F .text	00000096 metal_led_get_rgb
2010a314 g     F .text	00000078 metal_init
201050a0 g     F .text	00000034 _read_r
20107380 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20108d66 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20105ee0 g     F .text	00000068 __metal_default_sw_handler
20109ad0 g     F .text	00000032 metal_clock_register_post_rate_change_callback
80000070 g     O .data	0000000c __metal_dt_clock_2
2010941e g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20109e6e g     F .text	00000020 _isatty
20108e2c g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
201026d8 g     O .rodata	00000310 input_data_3
2010945e g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20103634 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20105f48  w    F .text	00000092 metal_timer_interrupt_vector_handler
2010a010 g     F .text	0000005e __libc_init_array
201089be g     F .text	00000042 __metal_driver_led_off
80000a9c g     O .data	00000004 __metal_dt_led_2
20108da6 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
201068ec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20108088 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
2010710a g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20109ee2 g     F .text	0000006a _sbrk
20108d20 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20109996 g     F .text	00000042 _metal_clock_call_all_callbacks
201002a2 g     F .init	00000002 _init
20105d46 g     F .text	0000001a __metal_interrupt_timer_disable
20108f18 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
2010743e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
2010356c g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20109498 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20108e6c g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
2010a06e g     F .text	00000036 __libc_fini_array
80000a68 g     O .data	0000000c __metal_dt_clock_4
20101d58 g     O .rodata	00000050 L2_weights
2010a38c g     F .text	00000078 metal_fini
201092a6 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
201073c8 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
201075d2 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20105d98 g     F .text	0000002c __metal_interrupt_local_enable
20105b7e g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
2010a430 g     F .text	00000028 metal_tty_putc
20107912 g     F .text	00000018 __metal_plic0_default_handler
80000ac4 g     O .bss	00000138 __sf
20109f4c  w    F .text	0000006e write
20104eb0 g     F .text	00000056 _putc_r
00000000 g       *ABS*	00000000 __tbss_size
80000064 g     O .data	0000000c __metal_dt_clock_0
20103614 g     O .rodata	00000004 L2_outgoing_weights
20109fea g     F .text	0000001c strcat
00000800 g       *ABS*	00000000 __heap_size
20107c8e g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20105fda g     F .text	00000016 __metal_default_beu_handler
201051e0 g     F .text	0000002a metal_cpu_get_mtime
20105d7c g     F .text	0000001c __metal_interrupt_external_disable
2010943e g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20103806 g     F .text	00000432 processfclayer
201071d2 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20106e44 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
201044a6 g     F .text	00000042 __sfputs_r
20107520 g     F .text	00000046 __metal_driver_cpu_exception_register
20105cfc g     F .text	00000018 __metal_interrupt_software_enable
20106310  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20104fc0 g     F .text	0000001a memchr
20104256 g     F .text	000000a2 _free_r
201077d8 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20106bda g     F .text	00000058 __metal_controller_interrupt_vector_mode
2010a24c g     F .text	000000c8 __call_exitprocs
80000bfc g     O .bss	0000008c __atexit0
800010a0 g       .stack	00000000 _sp
201002d0 g     O .init_array	00000004 _metal_tty_init_ptr
20100150 g     F .init	00000000 _start
20103c38 g     F .text	000000d0 BitMnistInference
20107f14 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20109e8e g     F .text	0000002a _lseek
20107500 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20107594 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20105d60 g     F .text	0000001c __metal_interrupt_external_enable
2010a1d4 g     F .text	00000078 __register_exitproc
20109666 g     F .text	00000042 __metal_driver_sifive_uart0_putc
201079d2 g     F .text	0000015a __metal_driver_riscv_plic0_init
20107bee g     F .text	00000050 __metal_driver_riscv_plic0_enable
20108cf4 g     F .text	0000002c __metal_driver_sifive_gpio0_output
201065fe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20105cb2 g     F .text	0000001a __metal_myhart_id
201092c6 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20103610 g     O .rodata	00000004 L2_incoming_weights
20103680 g     F .text	00000186 ReLUNorm
20105e4e  w    F .text	00000092 metal_software_interrupt_vector_handler
20107136 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20104fda g     F .text	00000030 _close_r
201096fe g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20105762 g     F .text	000000da __metal_driver_riscv_clint0_register
20109b02 g     F .text	00000040 metal_gpio_disable_input
80000a80 g     O .data	00000008 __metal_dt_clint_2000000
20103619 g     O .rodata	00000001 label_1
2010418a g     F .text	000000cc __swsetup_r
2010531e g     F .text	0000003e metal_interrupt_register_handler
80000ab8 g     O .bss	00000004 __atexit
20109a52 g     F .text	0000004c metal_clock_set_rate_hz
20104f06 g     F .text	00000030 __sread
20108c44 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
201002a4  w    F .init	00000000 secondary_main
20105e20  w    F .text	0000002e metal_interrupt_vector_handler
2010447a g     F .text	00000002 __malloc_lock
2010950a g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
80000c8c g     O .bss	00000004 tmr_intr
20104bfc g     F .text	00000036 _fflush_r
2010779e g     F .text	0000003a __metal_plic0_get_threshold
201087aa g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20106d3a g     F .text	000000bc __metal_local_interrupt_enable
20105a3e g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20105138 g     F .text	000000a8 memset
20106568  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20103df0 g     F .text	00000212 main
80000aa8 g       .data	00000000 metal_segment_data_target_end
201095ec g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
2010361c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
201073dc g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
201074a0 g     F .text	00000060 __metal_driver_cpu_get_msip
20109c2a g     F .text	0000000e metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
201075b2 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20108a00 g     F .text	00000040 __metal_driver_led_toggle
201076d6 g     F .text	0000003c __metal_plic0_claim_interrupt
201095bc g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20104fba g     F .text	00000006 __sclose
80000058  w    O .data	0000000c __metal_led_table
20106982  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2010008a g     F .init	00000000 metal_mem_scrub
80000a98 g     O .data	00000004 __metal_dt_led_1
20104356 g     F .text	00000124 _malloc_r
20105864 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
201004d8 g     O .rodata	00001880 L1_weights
20108930 g     F .text	0000004c __metal_driver_led_enable
201020b8 g     O .rodata	00000310 input_data_1
80000aa0 g     O .data	00000004 __metal_dt_prci_10008000
2010725e g     F .text	00000046 __metal_driver_cpu_timebase_get
20107d82 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20100000 g       .init	00000000 _enter
201052e0 g     F .text	0000001a metal_cpu_get_current_hartid
2010a0b6 g     F .text	0000011e strcmp
20108014 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20109d00 g       .text	00000000 __metal_vector_table
20103640 g       *ABS*	00000000 metal_segment_itim_source_start
80000a7c  w    O .data	00000004 __metal_cpu_table
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
201002a2 g     F .init	00000002 _fini
20104002 g     F .text	0000002c iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20103618 g     O .rodata	00000001 label_0
2010783a g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20103d08 g     F .text	0000003a display_banner
20100300 g     F .ctors	0000002a use_hfxosc
20105ccc g     F .text	00000018 __metal_interrupt_global_enable
20109fba g     F .text	0000000a atexit
20105104 g     F .text	00000034 _write_r
20105d2c g     F .text	0000001a __metal_interrupt_timer_enable
20103d72 g     F .text	0000007e wait_for_timer
201096a8 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20105986 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
2010474e g     F .text	00000110 _printf_common
80000a78 g     O .data	00000004 _impure_ptr
2010730a g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20104ac0 g     F .text	0000013c __sflush_r
20104d54 g     F .text	00000068 _fwalk_sglue
20107cbe g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
201081b6 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
8000007c g     O .data	0000000c __metal_dt_clock_5
80000c90 g     O .bss	00000004 cpu_intr
201087d8 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20109de2 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20101da8 g     O .rodata	00000310 input_data_0
201058d4 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
2010361b g     O .rodata	00000001 label_3
2010a470 g       *ABS*	00000000 metal_segment_data_source_start
20100134 g       .init	00000000 early_trap_vector
800018a0 g       .heap	00000000 metal_segment_heap_target_end
20106c32 g     F .text	000000b2 __metal_controller_interrupt_vector
80000a5c g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20104dbc g     F .text	0000005a __swhatbuf_r
20108de6 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20103600 g     O .rodata	00000004 L1_bitperweight
8000004c g     O .data	0000000c __sglue
20105ff0 g     F .text	00000066 __metal_default_timer_handler
20109f4c g     F .text	0000006e _write
2010792a g     F .text	000000a8 __metal_plic0_handler
201063a6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20106b44  w    F .text	00000096 metal_lc15_interrupt_vector_handler
2010528c g     F .text	00000026 metal_cpu_interrupt_controller
201052fa g     F .text	00000024 metal_interrupt_init
20104f36 g     F .text	0000004e __swrite
2010520a g     F .text	00000036 metal_cpu_set_mtimecmp
20109fc4 g     F .text	00000026 exit
201044e8 g     F .text	00000266 _vfiprintf_r
80000000 g     O .data	0000004c _impure_data
20109e02 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20103640 g       *ABS*	00000000 metal_segment_lim_source_start
80000a90 g     O .data	00000004 __metal_dt_gpio_10012000
20105e08 g     F .text	00000018 __metal_default_interrupt_handler
2010535c g     F .text	0000002e metal_interrupt_enable
20109c64 g     F .text	0000002e metal_uart_putc
20109eb8 g     F .text	0000002a _read
2010a41a  w    F .text	00000016 metal_fini_run
20108cca g     F .text	0000002a __metal_driver_sifive_gpio0_input
20106080 g     F .text	00000180 __metal_exception_handler
2010627a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
2010a458 g     F .text	00000014 _exit
20103d42 g     F .text	00000030 timer_isr
201072a4 g     F .text	00000066 __metal_driver_cpu_mtime_get
20104e16 g     F .text	0000009a __smakebuf_r
2010583c g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
2010485e g     F .text	00000262 _printf_i
80000aa8 g     O .bss	00000004 __malloc_sbrk_start
80000c94 g     O .bss	00000004 timer_isr_flag
20106aae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20103624 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
201056da g     F .text	00000088 __metal_driver_riscv_clint0_init
80000aac g     O .bss	00000004 __malloc_free_list
201002d4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
80000c98 g     O .bss	00000004 tmr_id
201044e8 g     F .text	00000266 _vfprintf_r
2010739a g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2010786e g     F .text	000000a4 __metal_plic0_enable
20100088  w      .init	00000000 __register_frame_info
20107f98 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
201073ae g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20105dc4 g     F .text	0000002c __metal_interrupt_local_disable
20105d14 g     F .text	00000018 __metal_interrupt_software_disable
20109c38 g     F .text	0000002c metal_uart_init
80000a50 g     O .data	0000000c __metal_dt_clock_3
20107758 g     F .text	00000046 __metal_plic0_set_threshold
80000a94 g     O .data	00000004 __metal_dt_led_0
20107ce6 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20109e26 g     F .text	00000022 _close
2010362c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20107b2c g     F .text	000000c2 __metal_driver_riscv_plic0_register
2010538a g     F .text	0000002e metal_interrupt_disable



Disassembly of section .init:

20100000 <_enter>:
_enter():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:31
    auipc a0, %pcrel_hi(__global_pointer__)
    addi a0, a0, %pcrel_lo(1b)
    ld   gp, 0(a0)
    add  gp, gp, a0
#else
    la gp, __global_pointer$
20100000:	5ff01197          	auipc	gp,0x5ff01
20100004:	27818193          	add	gp,gp,632 # 80001278 <__global_pointer$>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:36
#endif
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20100008:	00000297          	auipc	t0,0x0
2010000c:	01828293          	add	t0,t0,24 # 20100020 <_enter+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:37
    csrw mtvec, t0
20100010:	30529073          	csrw	mtvec,t0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:39
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20100014:	00100293          	li	t0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:40
    beqz t0, 1f
20100018:	00028463          	beqz	t0,20100020 <_enter+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:42
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2010001c:	7c105073          	csrw	0x7c1,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:47
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20100020:	00000297          	auipc	t0,0x0
20100024:	11428293          	add	t0,t0,276 # 20100134 <early_trap_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:48
    csrw mtvec, t0
20100028:	30529073          	csrw	mtvec,t0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:56
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2010002c:	00000113          	li	sp,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:63
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20100030:	00011463          	bnez	sp,20100038 <_enter+0x38>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:67
#ifdef __riscv_cmodel_compact
    lla.gprel sp, _sp
#else
    la sp, _sp
20100034:	e2818113          	add	sp,gp,-472 # 800010a0 <_sp>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:71
#endif
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20100038:	f1402573          	csrr	a0,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:72
    li t0, 0
2010003c:	4281                	li	t0,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:73
    la t1, __stack_size
2010003e:	40000313          	li	t1,1024
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:75
1:
    andi sp, sp, -16
20100042:	ff017113          	and	sp,sp,-16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:76
    beq t0, a0, 1f
20100046:	00a28563          	beq	t0,a0,20100050 <_enter+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:77
    add sp, sp, t1
2010004a:	911a                	add	sp,sp,t1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:78
    addi t0, t0, 1
2010004c:	0285                	add	t0,t0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:79
    j 1b
2010004e:	bfd5                	j	20100042 <_enter+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:88
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20100050:	00000097          	auipc	ra,0x0
20100054:	07c08093          	add	ra,ra,124 # 201000cc <__metal_before_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:89
    beqz ra, 1f
20100058:	00008363          	beqz	ra,2010005e <_enter+0x5e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:90
    jalr ra
2010005c:	9082                	jalr	ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:96
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2010005e:	f1402573          	csrr	a0,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:97
    li a1, 0
20100062:	4581                	li	a1,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:98
    li a2, 0
20100064:	4601                	li	a2,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:99
    call _start
20100066:	20ed                	jal	20100150 <_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:104

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20100068:	00000093          	li	ra,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:105
    beqz ra, 1f
2010006c:	00008363          	beqz	ra,20100072 <_enter+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:106
    jalr ra
20100070:	9082                	jalr	ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:111
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20100072:	00000297          	auipc	t0,0x0
20100076:	00c28293          	add	t0,t0,12 # 2010007e <_enter+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:112
     csrw mtvec, t0
2010007a:	30529073          	csrw	mtvec,t0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:114
1:
     lw t1, 0(x0)
2010007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:115
     j 1b
20100082:	bff5                	j	2010007e <_enter+0x7e>
20100084:	0000                	unimp
	...

20100088 <__register_frame_info>:
__register_frame_info():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:128
 * going to leave this in for now.  At least it's fairly cheap :) */
.weak __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20100088:	8082                	ret

2010008a <metal_mem_scrub>:
metal_mem_scrub():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2010008a:	46a1                	li	a3,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2010008c:	3006b373          	csrrc	t1,mstatus,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20100090:	4291                	li	t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20100092:	0055c563          	blt	a1,t0,2010009c <metal_mem_scrub+0x12>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20100096:	00357613          	and	a2,a0,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2010009a:	ca11                	beqz	a2,201000ae <metal_mem_scrub+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2010009c:	00050023          	sb	zero,0(a0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
201000a0:	0505                	add	a0,a0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
201000a2:	15fd                	add	a1,a1,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
201000a4:	feb047e3          	bgtz	a1,20100092 <metal_mem_scrub+0x8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
201000a8:	30031073          	csrw	mstatus,t1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:39
    ret
201000ac:	8082                	ret
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
201000ae:	00052023          	sw	zero,0(a0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
201000b2:	0511                	add	a0,a0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
201000b4:	15f1                	add	a1,a1,-4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
201000b6:	fcb04ee3          	bgtz	a1,20100092 <metal_mem_scrub+0x8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
201000ba:	30031073          	csrw	mstatus,t1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:46
    ret
201000be:	8082                	ret

201000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
201000c0:	00032023          	sw	zero,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
201000c4:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
201000c6:	fe734de3          	blt	t1,t2,201000c0 <__metal_memory_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
201000ca:	8082                	ret

201000cc <__metal_before_start>:
__metal_before_start():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:93
.weak __metal_eccscrub_bit
.weak __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
201000cc:	8406                	mv	s0,ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:95

    la      t0, __metal_eccscrub_bit
201000ce:	dff00297          	auipc	t0,0xdff00
201000d2:	f3228293          	add	t0,t0,-206 # 0 <__metal_boot_hart>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:96
    beqz    t0, skip_scrub
201000d6:	04028c63          	beqz	t0,2010012e <skip_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:98

    la      t0, __metal_boot_hart
201000da:	dff00297          	auipc	t0,0xdff00
201000de:	f2628293          	add	t0,t0,-218 # 0 <__metal_boot_hart>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:99
    csrr    a5, mhartid
201000e2:	f14027f3          	csrr	a5,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:102

    /* Disable machine interrupts to be safe */
    li      a3, 8
201000e6:	46a1                	li	a3,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:103
    csrc    mstatus, a3
201000e8:	3006b073          	csrc	mstatus,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:106

    /* Zero out per hart stack */
    mv      t1, sp
201000ec:	830a                	mv	t1,sp
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:107
    la      t2, __stack_size
201000ee:	dff00397          	auipc	t2,0xdff00
201000f2:	31238393          	add	t2,t2,786 # 400 <__stack_size>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:108
    add     t2, t2, sp
201000f6:	938a                	add	t2,t2,sp
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:109
    beq     t1, t2, 1f
201000f8:	00730363          	beq	t1,t2,201000fe <__metal_before_start+0x32>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:110
    jal     __metal_memory_scrub
201000fc:	37d1                	jal	201000c0 <__metal_memory_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:112
1:
    bne     a5, t0, skip_scrub
201000fe:	02579863          	bne	a5,t0,2010012e <skip_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:119
    /* Zero out data segment */
#ifdef __riscv_cmodel_compact
    lla.gprel t1, metal_segment_data_target_start
    lla.gprel t2, metal_segment_data_target_end
#else
    la      t1, metal_segment_data_target_start
20100102:	5ff00317          	auipc	t1,0x5ff00
20100106:	efe30313          	add	t1,t1,-258 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:120
    la      t2, metal_segment_data_target_end
2010010a:	5ff01397          	auipc	t2,0x5ff01
2010010e:	99e38393          	add	t2,t2,-1634 # 80000aa8 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:122
#endif
    beq     t1, t2, 1f
20100112:	00730363          	beq	t1,t2,20100118 <__metal_before_start+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:123
    jal     __metal_memory_scrub
20100116:	376d                	jal	201000c0 <__metal_memory_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:130
    /* Zero out itim memory */
#ifdef __riscv_cmodel_compact
    la.got.gprel t1, metal_segment_itim_target_start
    la.got.gprel t2, metal_segment_itim_target_end
#else
    la      t1, metal_segment_itim_target_start
20100118:	5ff00317          	auipc	t1,0x5ff00
2010011c:	ee830313          	add	t1,t1,-280 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:131
    la      t2, metal_segment_itim_target_end
20100120:	5ff00397          	auipc	t2,0x5ff00
20100124:	ee038393          	add	t2,t2,-288 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:133
#endif
    beq     t1, t2, skip_scrub
20100128:	00730363          	beq	t1,t2,2010012e <skip_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:134
    jal     __metal_memory_scrub
2010012c:	3f51                	jal	201000c0 <__metal_memory_scrub>

2010012e <skip_scrub>:
skip_scrub():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:138

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2010012e:	80a2                	mv	ra,s0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:139
    ret
20100130:	8082                	ret
	...

20100134 <early_trap_vector>:
early_trap_vector():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20100134:	342022f3          	csrr	t0,mcause
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:65
    csrr t1, mepc
20100138:	34102373          	csrr	t1,mepc
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:66
    csrr t2, mtval
2010013c:	343023f3          	csrr	t2,mtval
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:67
    j early_trap_vector
20100140:	bfd5                	j	20100134 <early_trap_vector>

20100142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20100142:	1141                	add	sp,sp,-16
20100144:	c622                	sw	s0,12(sp)
20100146:	0800                	add	s0,sp,16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20100148:	0001                	nop
2010014a:	4432                	lw	s0,12(sp)
2010014c:	0141                	add	sp,sp,16
2010014e:	8082                	ret

20100150 <_start>:
_start():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20100150:	8406                	mv	s0,ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:51
  auipc a0, %pcrel_hi(__global_pointer__)
  addi a0, a0, %pcrel_lo(1b)
  ld   gp, 0(a0)
  add  gp, gp, a0
#else
  la gp, __global_pointer$
20100152:	5ff01197          	auipc	gp,0x5ff01
20100156:	12618193          	add	gp,gp,294 # 80001278 <__global_pointer$>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:58
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2010015a:	00000293          	li	t0,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:59
  bne a0, t0, _skip_init
2010015e:	0e551163          	bne	a0,t0,20100240 <_skip_init>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:73
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_data_source_start
  lla.gprel t1, metal_segment_data_target_start
  lla.gprel t2, metal_segment_data_target_end
#else
  la t0, metal_segment_data_source_start
20100162:	0000a297          	auipc	t0,0xa
20100166:	30e28293          	add	t0,t0,782 # 2010a470 <metal_segment_data_source_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:74
  la t1, metal_segment_data_target_start
2010016a:	5ff00317          	auipc	t1,0x5ff00
2010016e:	e9630313          	add	t1,t1,-362 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:75
  la t2, metal_segment_data_target_end
20100172:	5ff01397          	auipc	t2,0x5ff01
20100176:	93638393          	add	t2,t2,-1738 # 80000aa8 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:78
#endif

  beq t0, t1, 2f
2010017a:	00628c63          	beq	t0,t1,20100192 <_start+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:79
  bge t1, t2, 2f
2010017e:	00735a63          	bge	t1,t2,20100192 <_start+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:83

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20100182:	0002a503          	lw	a0,0(t0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:84
  addi t0, t0, 4
20100186:	0291                	add	t0,t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:85
  sw   a0, 0(t1)
20100188:	00a32023          	sw	a0,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:86
  addi t1, t1, 4
2010018c:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:87
  blt  t1, t2, 1b
2010018e:	fe734ae3          	blt	t1,t2,20100182 <_start+0x32>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:103
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_itim_source_start
  la.got.gprel t1, metal_segment_itim_target_start
  la.got.gprel t2, metal_segment_itim_target_end
#else
  la t0, metal_segment_itim_source_start
20100192:	00003297          	auipc	t0,0x3
20100196:	4ae28293          	add	t0,t0,1198 # 20103640 <metal_segment_itim_source_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:104
  la t1, metal_segment_itim_target_start
2010019a:	5ff00317          	auipc	t1,0x5ff00
2010019e:	e6630313          	add	t1,t1,-410 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:105
  la t2, metal_segment_itim_target_end
201001a2:	5ff00397          	auipc	t2,0x5ff00
201001a6:	e5e38393          	add	t2,t2,-418 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:108
#endif

  beq t0, t1, 2f
201001aa:	00628c63          	beq	t0,t1,201001c2 <_start+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:109
  bge t1, t2, 2f
201001ae:	00735a63          	bge	t1,t2,201001c2 <_start+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:113

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
201001b2:	0002a503          	lw	a0,0(t0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:114
  addi t0, t0, 4
201001b6:	0291                	add	t0,t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:115
  sw   a0, 0(t1)
201001b8:	00a32023          	sw	a0,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:116
  addi t1, t1, 4
201001bc:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:117
  blt  t1, t2, 1b
201001be:	fe734ae3          	blt	t1,t2,201001b2 <_start+0x62>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:129
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
201001c2:	0000100f          	fence.i
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:139
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_lim_source_start
  lla.gprel t1, metal_segment_lim_target_start
  lla.gprel t2, metal_segment_lim_target_end
#else
  la t0, metal_segment_lim_source_start
201001c6:	00003297          	auipc	t0,0x3
201001ca:	47a28293          	add	t0,t0,1146 # 20103640 <metal_segment_itim_source_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:140
  la t1, metal_segment_lim_target_start
201001ce:	5ff00317          	auipc	t1,0x5ff00
201001d2:	e3230313          	add	t1,t1,-462 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:141
  la t2, metal_segment_lim_target_end
201001d6:	5ff00397          	auipc	t2,0x5ff00
201001da:	e2a38393          	add	t2,t2,-470 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:144
#endif

  beq t0, t1, 2f
201001de:	00628c63          	beq	t0,t1,201001f6 <_start+0xa6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:145
  bge t1, t2, 2f
201001e2:	00735a63          	bge	t1,t2,201001f6 <_start+0xa6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
201001e6:	0002a503          	lw	a0,0(t0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:150
  addi t0, t0, 4
201001ea:	0291                	add	t0,t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:151
  sw   a0, 0(t1)
201001ec:	00a32023          	sw	a0,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:152
  addi t1, t1, 4
201001f0:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:153
  blt  t1, t2, 1b
201001f2:	fe734ae3          	blt	t1,t2,201001e6 <_start+0x96>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:165
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
201001f6:	0000100f          	fence.i
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:172
  /* Zero the BSS segment. */
#ifdef __riscv_cmodel_compact
  lla.gprel t1, metal_segment_bss_target_start
  lla.gprel t2, metal_segment_bss_target_end
#else
  la t1, metal_segment_bss_target_start
201001fa:	5ff01317          	auipc	t1,0x5ff01
201001fe:	8ae30313          	add	t1,t1,-1874 # 80000aa8 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:173
  la t2, metal_segment_bss_target_end
20100202:	a2418393          	add	t2,gp,-1500 # 80000c9c <metal_segment_bss_target_end>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:176
#endif

  bge t1, t2, 2f
20100206:	00735763          	bge	t1,t2,20100214 <_start+0xc4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:180

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2010020a:	00032023          	sw	zero,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:181
  addi t1, t1, 4
2010020e:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:182
  blt  t1, t2, 1b
20100210:	fe734de3          	blt	t1,t2,2010020a <_start+0xba>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:195
  /* Set TLS pointer */
  .weak __tls_base	
#ifdef __riscv_cmodel_compact
  lla.gprel tp, __tls_base
#else
  la tp, __tls_base
20100214:	5ff01217          	auipc	tp,0x5ff01
20100218:	89420213          	add	tp,tp,-1900 # 80000aa8 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:201
#endif

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2010021c:	c211                	beqz	a2,20100220 <_start+0xd0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:202
  jalr a2
2010021e:	9602                	jalr	a2
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:206
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20100220:	0000a517          	auipc	a0,0xa
20100224:	e4e50513          	add	a0,a0,-434 # 2010a06e <__libc_fini_array>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:207
  call atexit
20100228:	593090ef          	jal	20109fba <atexit>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:208
  call __libc_init_array
2010022c:	5e5090ef          	jal	2010a010 <__libc_init_array>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:212

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20100230:	0000a517          	auipc	a0,0xa
20100234:	1ea50513          	add	a0,a0,490 # 2010a41a <metal_fini_run>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:213
  call atexit
20100238:	583090ef          	jal	20109fba <atexit>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:214
  call metal_init_run
2010023c:	1c80a0ef          	jal	2010a404 <metal_init_run>

20100240 <_skip_init>:
_skip_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:220

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20100240:	3709                	jal	20100142 <__metal_synchronize_harts>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:223

  /* Disable and clear all interrupt sources */
  li   a3, -1
20100242:	56fd                	li	a3,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:224
  csrc mie, a3
20100244:	3046b073          	csrc	mie,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:225
  csrc mip, a3
20100248:	3446b073          	csrc	mip,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:229

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2010024c:	301027f3          	csrr	a5,misa
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:230
  lui  a4, 0x42
20100250:	00042737          	lui	a4,0x42
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:231
  and  a4, a4, a5
20100254:	8f7d                	and	a4,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:232
  beqz a4, 1f
20100256:	c709                	beqz	a4,20100260 <_skip_init+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:233
  csrc mideleg, a3
20100258:	3036b073          	csrc	mideleg,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:234
  csrc medeleg, a3
2010025c:	3026b073          	csrc	medeleg,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:238
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20100260:	00040737          	lui	a4,0x40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:239
  and  a4, a4, a5
20100264:	8f7d                	and	a4,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:240
  beqz a4, 1f
20100266:	c319                	beqz	a4,2010026c <_skip_init+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:241
  csrc satp, a3
20100268:	1806b073          	csrc	satp,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:245
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2010026c:	6741                	lui	a4,0x10
2010026e:	02870713          	add	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:246
  and  a5, a5, a4
20100272:	8ff9                	and	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:247
  beqz a5, 1f
20100274:	cb89                	beqz	a5,20100286 <_skip_init+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:248
  csrr a5, mstatus
20100276:	300027f3          	csrr	a5,mstatus
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:249
  lui  a4, 0x2
2010027a:	6709                	lui	a4,0x2
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:250
  or   a5, a5, a4
2010027c:	8fd9                	or	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:251
  csrw mstatus, a5
2010027e:	30079073          	csrw	mstatus,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:252
  csrwi fcsr, 0
20100282:	00305073          	csrw	fcsr,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:273
#endif

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20100286:	4505                	li	a0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:274
  la a1, argv  /* argv = {"libgloss", NULL} */
20100288:	00003597          	auipc	a1,0x3
2010028c:	36058593          	add	a1,a1,864 # 201035e8 <argv>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:275
  la a2, envp  /* envp = {NULL} */
20100290:	00003617          	auipc	a2,0x3
20100294:	35c60613          	add	a2,a2,860 # 201035ec <envp>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:276
  call secondary_main
20100298:	2031                	jal	201002a4 <secondary_main>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:282

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2010029a:	52b090ef          	jal	20109fc4 <exit>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:287

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
2010029e:	80a2                	mv	ra,s0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:288
  ret
201002a0:	8082                	ret

201002a2 <_fini>:
_fini():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:300
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
201002a2:	8082                	ret

201002a4 <secondary_main>:
secondary_main():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:310
 * Users can redefine secondary_main themselves to run code on secondary harts */
.weak   secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
201002a4:	1141                	add	sp,sp,-16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:312
#if __riscv_xlen == 32
  sw ra, 4(sp)
201002a6:	c206                	sw	ra,4(sp)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:316
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
201002a8:	f14022f3          	csrr	t0,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:317
  la t1, __metal_boot_hart
201002ac:	00000313          	li	t1,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:318
  beq t0, t1, 2f
201002b0:	00628563          	beq	t0,t1,201002ba <secondary_main+0x16>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:320
1:
  wfi
201002b4:	10500073          	wfi
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:321
  j 1b
201002b8:	bff5                	j	201002b4 <secondary_main+0x10>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:323
2:
  call main
201002ba:	337030ef          	jal	20103df0 <main>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:325
#if __riscv_xlen == 32
  lw ra, 4(sp)
201002be:	4092                	lw	ra,4(sp)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:329
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
201002c0:	0141                	add	sp,sp,16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:330
  ret
201002c2:	8082                	ret

Disassembly of section .ctors:

201002d4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
201002d4:	1101                	add	sp,sp,-32
201002d6:	ce06                	sw	ra,28(sp)
201002d8:	cc22                	sw	s0,24(sp)
201002da:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
201002dc:	64f070ef          	jal	2010812a <__metal_driver_sifive_fe310_g000_pll_init_rate>
201002e0:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
201002e4:	fec42783          	lw	a5,-20(s0)
201002e8:	c799                	beqz	a5,201002f6 <__fini_array_end+0x1e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
201002ea:	800017b7          	lui	a5,0x80001
201002ee:	a6878513          	add	a0,a5,-1432 # 80000a68 <__metal_dt_clock_4>
201002f2:	6c5070ef          	jal	201081b6 <__metal_driver_sifive_fe310_g000_pll_init>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
201002f6:	0001                	nop
201002f8:	40f2                	lw	ra,28(sp)
201002fa:	4462                	lw	s0,24(sp)
201002fc:	6105                	add	sp,sp,32
201002fe:	8082                	ret

20100300 <use_hfxosc>:
use_hfxosc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20100300:	1101                	add	sp,sp,-32
20100302:	ce06                	sw	ra,28(sp)
20100304:	cc22                	sw	s0,24(sp)
20100306:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20100308:	623070ef          	jal	2010812a <__metal_driver_sifive_fe310_g000_pll_init_rate>
2010030c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20100310:	fec42583          	lw	a1,-20(s0)
20100314:	800017b7          	lui	a5,0x80001
20100318:	a6878513          	add	a0,a5,-1432 # 80000a68 <__metal_dt_clock_4>
2010031c:	736090ef          	jal	20109a52 <metal_clock_set_rate_hz>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20100320:	0001                	nop
20100322:	40f2                	lw	ra,28(sp)
20100324:	4462                	lw	s0,24(sp)
20100326:	6105                	add	sp,sp,32
20100328:	8082                	ret

2010032a <metal_tty_init>:
metal_tty_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2010032a:	1141                	add	sp,sp,-16
2010032c:	c606                	sw	ra,12(sp)
2010032e:	c422                	sw	s0,8(sp)
20100330:	0800                	add	s0,sp,16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20100332:	67f1                	lui	a5,0x1c
20100334:	20078593          	add	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20100338:	800017b7          	lui	a5,0x80001
2010033c:	a3078513          	add	a0,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
20100340:	0f9090ef          	jal	20109c38 <metal_uart_init>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:30
}
20100344:	0001                	nop
20100346:	40b2                	lw	ra,12(sp)
20100348:	4422                	lw	s0,8(sp)
2010034a:	0141                	add	sp,sp,16
2010034c:	8082                	ret

Disassembly of section .text:

20103680 <ReLUNorm>:
ReLUNorm():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:27
 * @param output Pointer to the output array of 8-bit integers.
 * @param n_input The number of elements in the input array.
 * @return The position of maximum value found in the input array before applying the ReLU activation.
 */

uint32_t ReLUNorm(int32_t *input, int8_t *output, uint32_t n_input) {
20103680:	715d                	add	sp,sp,-80
20103682:	c6a2                	sw	s0,76(sp)
20103684:	0880                	add	s0,sp,80
20103686:	faa42e23          	sw	a0,-68(s0)
2010368a:	fab42c23          	sw	a1,-72(s0)
2010368e:	fac42a23          	sw	a2,-76(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:28
    int32_t max_val = 0; // Initialize to 0. For ReLU, we only care about positive max values.
20103692:	fe042623          	sw	zero,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:30
                         // If all inputs are negative, max_val should remain 0 after this loop.
    uint32_t max_pos = 0; // Initialize to a default valid index (e.g., 0)
20103696:	fe042423          	sw	zero,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:34

    // Find the maximum positive value in the input array.
    // This loop identifies the maximum value that could potentially be scaled.
    for (uint32_t i = 0; i < n_input; i++) {
2010369a:	fe042223          	sw	zero,-28(s0)
2010369e:	a835                	j	201036da <ReLUNorm+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:35
        if (input[i] > max_val) {
201036a0:	fe442783          	lw	a5,-28(s0)
201036a4:	078a                	sll	a5,a5,0x2
201036a6:	fbc42703          	lw	a4,-68(s0)
201036aa:	97ba                	add	a5,a5,a4
201036ac:	439c                	lw	a5,0(a5)
201036ae:	fec42703          	lw	a4,-20(s0)
201036b2:	00f75f63          	bge	a4,a5,201036d0 <ReLUNorm+0x50>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:36
            max_val = input[i];
201036b6:	fe442783          	lw	a5,-28(s0)
201036ba:	078a                	sll	a5,a5,0x2
201036bc:	fbc42703          	lw	a4,-68(s0)
201036c0:	97ba                	add	a5,a5,a4
201036c2:	439c                	lw	a5,0(a5)
201036c4:	fef42623          	sw	a5,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:37
            max_pos = i; // Store the index of this maximum value
201036c8:	fe442783          	lw	a5,-28(s0)
201036cc:	fef42423          	sw	a5,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:34 (discriminator 2)
    for (uint32_t i = 0; i < n_input; i++) {
201036d0:	fe442783          	lw	a5,-28(s0)
201036d4:	0785                	add	a5,a5,1
201036d6:	fef42223          	sw	a5,-28(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:34 (discriminator 1)
201036da:	fe442703          	lw	a4,-28(s0)
201036de:	fb442783          	lw	a5,-76(s0)
201036e2:	faf76fe3          	bltu	a4,a5,201036a0 <ReLUNorm+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:43
        }
    }

    // If the maximum value found is 0 or negative, it means all inputs to ReLU are non-positive.
    // In such a case, all outputs after ReLU should be 0.
    if (max_val <= 0) {
201036e6:	fec42783          	lw	a5,-20(s0)
201036ea:	02f04a63          	bgtz	a5,2010371e <ReLUNorm+0x9e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:44
        for (uint32_t i = 0; i < n_input; i++) {
201036ee:	fe042023          	sw	zero,-32(s0)
201036f2:	a829                	j	2010370c <ReLUNorm+0x8c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:45
            output[i] = 0; // Set all output elements to 0
201036f4:	fb842703          	lw	a4,-72(s0)
201036f8:	fe042783          	lw	a5,-32(s0)
201036fc:	97ba                	add	a5,a5,a4
201036fe:	00078023          	sb	zero,0(a5)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:44 (discriminator 3)
        for (uint32_t i = 0; i < n_input; i++) {
20103702:	fe042783          	lw	a5,-32(s0)
20103706:	0785                	add	a5,a5,1
20103708:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:44 (discriminator 1)
2010370c:	fe042703          	lw	a4,-32(s0)
20103710:	fb442783          	lw	a5,-76(s0)
20103714:	fef760e3          	bltu	a4,a5,201036f4 <ReLUNorm+0x74>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:47
        }
        return max_pos; // Return the position of the max_val, even if it's 0 or negative
20103718:	fe842783          	lw	a5,-24(s0)
2010371c:	a0cd                	j	201037fe <ReLUNorm+0x17e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:52
    }

    // Calculate the optimal right shift amount to scale 'max_val' into the target 8-bit range [0, 127].
    // This is done by repeatedly right-shifting 'max_val' until it fits.
    uint32_t shift = 0;
2010371e:	fc042e23          	sw	zero,-36(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:54
    // Create a temporary variable to avoid modifying original max_val prematurely.
    uint32_t temp_max_val = (uint32_t)max_val; // Cast to unsigned for logical shifts
20103722:	fec42783          	lw	a5,-20(s0)
20103726:	fcf42c23          	sw	a5,-40(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:57

    // Find the minimum 'shift' value such that 'temp_max_val' fits within 7 bits (0-127 range, leaving sign bit for int8_t)
    while (temp_max_val > 127) {
2010372a:	a819                	j	20103740 <ReLUNorm+0xc0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:58
        temp_max_val >>= 1; // Equivalent to dividing by 2
2010372c:	fd842783          	lw	a5,-40(s0)
20103730:	8385                	srl	a5,a5,0x1
20103732:	fcf42c23          	sw	a5,-40(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:59
        shift++;
20103736:	fdc42783          	lw	a5,-36(s0)
2010373a:	0785                	add	a5,a5,1
2010373c:	fcf42e23          	sw	a5,-36(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:57
    while (temp_max_val > 127) {
20103740:	fd842703          	lw	a4,-40(s0)
20103744:	07f00793          	li	a5,127
20103748:	fee7e2e3          	bltu	a5,a4,2010372c <ReLUNorm+0xac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:65
    }

    // Calculate rounding value for "round to nearest" behavior in integer division.
    // If there's no shift (shift == 0), no rounding is needed as there's no division.
    // Otherwise, rounding is half of the smallest unit (1 << (shift - 1)).
    int32_t rounding = (shift > 0) ? (1 << (shift - 1)) : 0;
2010374c:	fdc42783          	lw	a5,-36(s0)
20103750:	cb81                	beqz	a5,20103760 <ReLUNorm+0xe0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:65 (discriminator 1)
20103752:	fdc42783          	lw	a5,-36(s0)
20103756:	17fd                	add	a5,a5,-1
20103758:	4705                	li	a4,1
2010375a:	00f717b3          	sll	a5,a4,a5
2010375e:	a011                	j	20103762 <ReLUNorm+0xe2>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:65 (discriminator 2)
20103760:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:65 (discriminator 4)
20103762:	fcf42823          	sw	a5,-48(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:68

    // Apply ReLU activation and then scale the input values to the 8-bit output range.
    for (uint32_t i = 0; i < n_input; i++) {
20103766:	fc042a23          	sw	zero,-44(s0)
2010376a:	a051                	j	201037ee <ReLUNorm+0x16e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:69
        if (input[i] < 0) {
2010376c:	fd442783          	lw	a5,-44(s0)
20103770:	078a                	sll	a5,a5,0x2
20103772:	fbc42703          	lw	a4,-68(s0)
20103776:	97ba                	add	a5,a5,a4
20103778:	439c                	lw	a5,0(a5)
2010377a:	0007da63          	bgez	a5,2010378e <ReLUNorm+0x10e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:70
            output[i] = 0; // ReLU: Negative inputs become zero
2010377e:	fb842703          	lw	a4,-72(s0)
20103782:	fd442783          	lw	a5,-44(s0)
20103786:	97ba                	add	a5,a5,a4
20103788:	00078023          	sb	zero,0(a5)
2010378c:	a8a1                	j	201037e4 <ReLUNorm+0x164>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:73
        } else {
            // Apply scaling with the calculated shift and rounding.
            int32_t scaled_val = (input[i] + rounding) >> shift;
2010378e:	fd442783          	lw	a5,-44(s0)
20103792:	078a                	sll	a5,a5,0x2
20103794:	fbc42703          	lw	a4,-68(s0)
20103798:	97ba                	add	a5,a5,a4
2010379a:	4398                	lw	a4,0(a5)
2010379c:	fd042783          	lw	a5,-48(s0)
201037a0:	973e                	add	a4,a4,a5
201037a2:	fdc42783          	lw	a5,-36(s0)
201037a6:	40f757b3          	sra	a5,a4,a5
201037aa:	fcf42623          	sw	a5,-52(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:76

            // Clip the scaled value to fit within the valid signed 8-bit range [0, 127] (since inputs are non-negative after ReLU).
            if (scaled_val > 127) {
201037ae:	fcc42703          	lw	a4,-52(s0)
201037b2:	07f00793          	li	a5,127
201037b6:	00e7dc63          	bge	a5,a4,201037ce <ReLUNorm+0x14e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:77
                output[i] = 127; // Clip to max positive 8-bit value
201037ba:	fb842703          	lw	a4,-72(s0)
201037be:	fd442783          	lw	a5,-44(s0)
201037c2:	97ba                	add	a5,a5,a4
201037c4:	07f00713          	li	a4,127
201037c8:	00e78023          	sb	a4,0(a5)
201037cc:	a821                	j	201037e4 <ReLUNorm+0x164>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:79
            } else {
                output[i] = (int8_t)scaled_val; // Cast to signed 8-bit integer
201037ce:	fb842703          	lw	a4,-72(s0)
201037d2:	fd442783          	lw	a5,-44(s0)
201037d6:	97ba                	add	a5,a5,a4
201037d8:	fcc42703          	lw	a4,-52(s0)
201037dc:	0762                	sll	a4,a4,0x18
201037de:	8761                	sra	a4,a4,0x18
201037e0:	00e78023          	sb	a4,0(a5)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:68 (discriminator 2)
    for (uint32_t i = 0; i < n_input; i++) {
201037e4:	fd442783          	lw	a5,-44(s0)
201037e8:	0785                	add	a5,a5,1
201037ea:	fcf42a23          	sw	a5,-44(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:68 (discriminator 1)
201037ee:	fd442703          	lw	a4,-44(s0)
201037f2:	fb442783          	lw	a5,-76(s0)
201037f6:	f6f76be3          	bltu	a4,a5,2010376c <ReLUNorm+0xec>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:83
            }
        }
    }
    return max_pos; // Return the index of the detected maximum value.
201037fa:	fe842783          	lw	a5,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:84
}
201037fe:	853e                	mv	a0,a5
20103800:	4436                	lw	s0,76(sp)
20103802:	6161                	add	sp,sp,80
20103804:	8082                	ret

20103806 <processfclayer>:
processfclayer():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:100
 * @param n_output The number of output neurons.
 * @param output Pointer to the output array where the result of the layer is stored.
 */

void processfclayer( int8_t *activations,  const uint32_t *weights, int32_t bits_per_weight, uint32_t n_input, uint32_t n_output, int32_t *output)
{
20103806:	7131                	add	sp,sp,-192
20103808:	df22                	sw	s0,188(sp)
2010380a:	0180                	add	s0,sp,192
2010380c:	f4a42e23          	sw	a0,-164(s0)
20103810:	f4b42c23          	sw	a1,-168(s0)
20103814:	f4c42a23          	sw	a2,-172(s0)
20103818:	f4d42823          	sw	a3,-176(s0)
2010381c:	f4e42623          	sw	a4,-180(s0)
20103820:	f4f42423          	sw	a5,-184(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:101
   const uint32_t *weightidx = weights;
20103824:	f5842783          	lw	a5,-168(s0)
20103828:	fef42623          	sw	a5,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:103

    for (uint32_t i = 0; i < n_output; i++) {
2010382c:	fe042423          	sw	zero,-24(s0)
20103830:	aecd                	j	20103c22 <processfclayer+0x41c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:104
        int8_t *activations_idx = activations;
20103832:	f5c42783          	lw	a5,-164(s0)
20103836:	fef42223          	sw	a5,-28(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:105
        int32_t sum = 0;
2010383a:	fe042023          	sw	zero,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:107

        if (bits_per_weight == 1) {
2010383e:	f5442703          	lw	a4,-172(s0)
20103842:	4785                	li	a5,1
20103844:	08f71763          	bne	a4,a5,201038d2 <processfclayer+0xcc>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:108
            for (uint32_t k = 0; k < n_input; k+=32) {
20103848:	fc042e23          	sw	zero,-36(s0)
2010384c:	a8a5                	j	201038c4 <processfclayer+0xbe>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:109
                uint32_t weightChunk = *weightidx++;
2010384e:	fec42783          	lw	a5,-20(s0)
20103852:	00478713          	add	a4,a5,4
20103856:	fee42623          	sw	a4,-20(s0)
2010385a:	439c                	lw	a5,0(a5)
2010385c:	fcf42c23          	sw	a5,-40(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:110
                for (uint32_t j = 0; j < 32; j++) {
20103860:	fc042a23          	sw	zero,-44(s0)
20103864:	a0a9                	j	201038ae <processfclayer+0xa8>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:111
                    int32_t in=*activations_idx++;
20103866:	fe442783          	lw	a5,-28(s0)
2010386a:	00178713          	add	a4,a5,1
2010386e:	fee42223          	sw	a4,-28(s0)
20103872:	00078783          	lb	a5,0(a5)
20103876:	f6f42423          	sw	a5,-152(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:112
                    sum += (weightChunk & 0x80000000) ? in : -in;  // Note that sign is flipped for Binary quant (bit set equals positive)
2010387a:	fd842783          	lw	a5,-40(s0)
2010387e:	0007c763          	bltz	a5,2010388c <processfclayer+0x86>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:112 (discriminator 1)
20103882:	f6842783          	lw	a5,-152(s0)
20103886:	40f007b3          	neg	a5,a5
2010388a:	a019                	j	20103890 <processfclayer+0x8a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:112 (discriminator 2)
2010388c:	f6842783          	lw	a5,-152(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:112 (discriminator 4)
20103890:	fe042703          	lw	a4,-32(s0)
20103894:	97ba                	add	a5,a5,a4
20103896:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:113
                    weightChunk <<= 1;
2010389a:	fd842783          	lw	a5,-40(s0)
2010389e:	0786                	sll	a5,a5,0x1
201038a0:	fcf42c23          	sw	a5,-40(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:110 (discriminator 2)
                for (uint32_t j = 0; j < 32; j++) {
201038a4:	fd442783          	lw	a5,-44(s0)
201038a8:	0785                	add	a5,a5,1
201038aa:	fcf42a23          	sw	a5,-44(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:110 (discriminator 1)
201038ae:	fd442703          	lw	a4,-44(s0)
201038b2:	47fd                	li	a5,31
201038b4:	fae7f9e3          	bgeu	a5,a4,20103866 <processfclayer+0x60>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:108 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=32) {
201038b8:	fdc42783          	lw	a5,-36(s0)
201038bc:	02078793          	add	a5,a5,32
201038c0:	fcf42e23          	sw	a5,-36(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:108 (discriminator 1)
201038c4:	fdc42703          	lw	a4,-36(s0)
201038c8:	f5042783          	lw	a5,-176(s0)
201038cc:	f8f761e3          	bltu	a4,a5,2010384e <processfclayer+0x48>
201038d0:	ae1d                	j	20103c06 <processfclayer+0x400>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:116
                }
            }
        } else if (bits_per_weight == 2 ) {
201038d2:	f5442703          	lw	a4,-172(s0)
201038d6:	4789                	li	a5,2
201038d8:	0af71863          	bne	a4,a5,20103988 <processfclayer+0x182>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:117
            for (uint32_t k = 0; k < n_input; k+=16) {
201038dc:	fc042823          	sw	zero,-48(s0)
201038e0:	a869                	j	2010397a <processfclayer+0x174>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:118
                uint32_t weightChunk = *weightidx++;
201038e2:	fec42783          	lw	a5,-20(s0)
201038e6:	00478713          	add	a4,a5,4
201038ea:	fee42623          	sw	a4,-20(s0)
201038ee:	439c                	lw	a5,0(a5)
201038f0:	fcf42623          	sw	a5,-52(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:119
                for (uint32_t j = 0; j < 16; j++) {
201038f4:	fc042423          	sw	zero,-56(s0)
201038f8:	a0bd                	j	20103966 <processfclayer+0x160>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:120
                    int32_t in=*activations_idx++;
201038fa:	fe442783          	lw	a5,-28(s0)
201038fe:	00178713          	add	a4,a5,1
20103902:	fee42223          	sw	a4,-28(s0)
20103906:	00078783          	lb	a5,0(a5)
2010390a:	f6f42823          	sw	a5,-144(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:121
                    int32_t tmpsum = (weightChunk & 0x80000000) ? -in : in; // one complements sign (bit set equals negative)
2010390e:	fcc42783          	lw	a5,-52(s0)
20103912:	0007d763          	bgez	a5,20103920 <processfclayer+0x11a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:121 (discriminator 1)
20103916:	f7042783          	lw	a5,-144(s0)
2010391a:	40f007b3          	neg	a5,a5
2010391e:	a019                	j	20103924 <processfclayer+0x11e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:121 (discriminator 2)
20103920:	f7042783          	lw	a5,-144(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:121 (discriminator 4)
20103924:	f6f42623          	sw	a5,-148(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:122
                    sum += tmpsum;                                  // sign*in*1
20103928:	fe042703          	lw	a4,-32(s0)
2010392c:	f6c42783          	lw	a5,-148(s0)
20103930:	97ba                	add	a5,a5,a4
20103932:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:123
                    if (weightChunk & 0x40000000) sum += tmpsum<<1; // sign*in*2
20103936:	fcc42703          	lw	a4,-52(s0)
2010393a:	400007b7          	lui	a5,0x40000
2010393e:	8ff9                	and	a5,a5,a4
20103940:	cb89                	beqz	a5,20103952 <processfclayer+0x14c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:123 (discriminator 1)
20103942:	f6c42783          	lw	a5,-148(s0)
20103946:	0786                	sll	a5,a5,0x1
20103948:	fe042703          	lw	a4,-32(s0)
2010394c:	97ba                	add	a5,a5,a4
2010394e:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:124
                    weightChunk <<= 2;
20103952:	fcc42783          	lw	a5,-52(s0)
20103956:	078a                	sll	a5,a5,0x2
20103958:	fcf42623          	sw	a5,-52(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:119 (discriminator 2)
                for (uint32_t j = 0; j < 16; j++) {
2010395c:	fc842783          	lw	a5,-56(s0)
20103960:	0785                	add	a5,a5,1 # 40000001 <metal_segment_data_source_start+0x1fef5b91>
20103962:	fcf42423          	sw	a5,-56(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:119 (discriminator 1)
20103966:	fc842703          	lw	a4,-56(s0)
2010396a:	47bd                	li	a5,15
2010396c:	f8e7f7e3          	bgeu	a5,a4,201038fa <processfclayer+0xf4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:117 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=16) {
20103970:	fd042783          	lw	a5,-48(s0)
20103974:	07c1                	add	a5,a5,16
20103976:	fcf42823          	sw	a5,-48(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:117 (discriminator 1)
2010397a:	fd042703          	lw	a4,-48(s0)
2010397e:	f5042783          	lw	a5,-176(s0)
20103982:	f6f760e3          	bltu	a4,a5,201038e2 <processfclayer+0xdc>
20103986:	a441                	j	20103c06 <processfclayer+0x400>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:145
                    }
                    weightChunk <<= 4;
                }
            }
#else
        } else if (bits_per_weight == 4) { // 4 bit symmetric
20103988:	f5442703          	lw	a4,-172(s0)
2010398c:	4791                	li	a5,4
2010398e:	0af71863          	bne	a4,a5,20103a3e <processfclayer+0x238>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:146
            for (uint32_t k = 0; k < n_input; k+=8) { // Iterating 8 elements (4 bits each) per uint32_t chunk
20103992:	fc042223          	sw	zero,-60(s0)
20103996:	a869                	j	20103a30 <processfclayer+0x22a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:147
                uint32_t weightChunk = *weightidx++; // Retrieve the 32-bit chunk containing 8 packed 4-bit weights
20103998:	fec42783          	lw	a5,-20(s0)
2010399c:	00478713          	add	a4,a5,4
201039a0:	fee42623          	sw	a4,-20(s0)
201039a4:	439c                	lw	a5,0(a5)
201039a6:	fcf42023          	sw	a5,-64(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:148
                for (uint32_t j = 0; j < 8; j++) { // Process each of the 8 individual 4-bit weights within the chunk
201039aa:	fa042e23          	sw	zero,-68(s0)
201039ae:	a0bd                	j	20103a1c <processfclayer+0x216>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:149
                    int32_t in = *activations_idx++; // Get the current input activation (int8_t, extended to int32_t)
201039b0:	fe442783          	lw	a5,-28(s0)
201039b4:	00178713          	add	a4,a5,1
201039b8:	fee42223          	sw	a4,-28(s0)
201039bc:	00078783          	lb	a5,0(a5)
201039c0:	f6f42c23          	sw	a5,-136(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:154

                    // Extract the current 4-bit weight from the most significant bits of weightChunk.
                    // (weightChunk >> 28) brings the relevant 4-bit group to the least significant position.
                    // (& 0xF) masks to isolate only those 4 bits.
                    uint8_t nibble = (uint8_t)((weightChunk >> 28) & 0xF);
201039c4:	fc042783          	lw	a5,-64(s0)
201039c8:	83f1                	srl	a5,a5,0x1c
201039ca:	0ff7f793          	zext.b	a5,a5
201039ce:	8bbd                	and	a5,a5,15
201039d0:	f6f40ba3          	sb	a5,-137(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:159

                    // Perform manual sign extension from 4 bits to 32 bits.
                    // For a 4-bit signed number, if the most significant bit (0x8) is set, it's a negative number.
                    int32_t weight;
                    if (nibble & 0x8) { // Check if the highest bit of the 4-bit value is set (indicating negative)
201039d4:	f7744783          	lbu	a5,-137(s0)
201039d8:	8ba1                	and	a5,a5,8
201039da:	cb81                	beqz	a5,201039ea <processfclayer+0x1e4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:160
                        weight = (int32_t)(nibble | 0xFFFFFFF0); // Sign extend: fill the upper 28 bits with ones (0xFFFFFFF0)
201039dc:	f7744783          	lbu	a5,-137(s0)
201039e0:	ff07e793          	or	a5,a5,-16
201039e4:	faf42c23          	sw	a5,-72(s0)
201039e8:	a029                	j	201039f2 <processfclayer+0x1ec>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:162
                    } else {
                        weight = (int32_t)nibble; // Positive number, no sign extension needed
201039ea:	f7744783          	lbu	a5,-137(s0)
201039ee:	faf42c23          	sw	a5,-72(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:165
                    }

                    sum += in * weight; // Perform the multiply-accumulate operation
201039f2:	f7842703          	lw	a4,-136(s0)
201039f6:	fb842783          	lw	a5,-72(s0)
201039fa:	02f707b3          	mul	a5,a4,a5
201039fe:	fe042703          	lw	a4,-32(s0)
20103a02:	97ba                	add	a5,a5,a4
20103a04:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:166
                    weightChunk <<= 4; // Shift the chunk left by 4 bits to bring the next 4-bit weight to the MSB position for the next iteration
20103a08:	fc042783          	lw	a5,-64(s0)
20103a0c:	0792                	sll	a5,a5,0x4
20103a0e:	fcf42023          	sw	a5,-64(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:148 (discriminator 2)
                for (uint32_t j = 0; j < 8; j++) { // Process each of the 8 individual 4-bit weights within the chunk
20103a12:	fbc42783          	lw	a5,-68(s0)
20103a16:	0785                	add	a5,a5,1
20103a18:	faf42e23          	sw	a5,-68(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:148 (discriminator 1)
20103a1c:	fbc42703          	lw	a4,-68(s0)
20103a20:	479d                	li	a5,7
20103a22:	f8e7f7e3          	bgeu	a5,a4,201039b0 <processfclayer+0x1aa>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:146 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=8) { // Iterating 8 elements (4 bits each) per uint32_t chunk
20103a26:	fc442783          	lw	a5,-60(s0)
20103a2a:	07a1                	add	a5,a5,8
20103a2c:	fcf42223          	sw	a5,-60(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:146 (discriminator 1)
20103a30:	fc442703          	lw	a4,-60(s0)
20103a34:	f5042783          	lw	a5,-176(s0)
20103a38:	f6f760e3          	bltu	a4,a5,20103998 <processfclayer+0x192>
20103a3c:	a2e9                	j	20103c06 <processfclayer+0x400>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:169
                }
            }
        } else if (bits_per_weight == 8 + 4 ) {   // 4 bit twos-complement
20103a3e:	f5442703          	lw	a4,-172(s0)
20103a42:	47b1                	li	a5,12
20103a44:	08f71663          	bne	a4,a5,20103ad0 <processfclayer+0x2ca>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:170
            for (uint32_t k = 0; k < n_input; k+=8) {
20103a48:	fa042a23          	sw	zero,-76(s0)
20103a4c:	a89d                	j	20103ac2 <processfclayer+0x2bc>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:171
                int32_t weightChunk = *weightidx++;
20103a4e:	fec42783          	lw	a5,-20(s0)
20103a52:	00478713          	add	a4,a5,4
20103a56:	fee42623          	sw	a4,-20(s0)
20103a5a:	439c                	lw	a5,0(a5)
20103a5c:	faf42823          	sw	a5,-80(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:172
                for (uint32_t j = 0; j < 8; j++) {
20103a60:	fa042623          	sw	zero,-84(s0)
20103a64:	a0a9                	j	20103aae <processfclayer+0x2a8>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:173
                    int32_t in=*activations_idx++;
20103a66:	fe442783          	lw	a5,-28(s0)
20103a6a:	00178713          	add	a4,a5,1
20103a6e:	fee42223          	sw	a4,-28(s0)
20103a72:	00078783          	lb	a5,0(a5)
20103a76:	f8f42023          	sw	a5,-128(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:174
                    int32_t weight = (weightChunk) >> (32-4); // extend sign, cut off lower bits
20103a7a:	fb042783          	lw	a5,-80(s0)
20103a7e:	87f1                	sra	a5,a5,0x1c
20103a80:	f6f42e23          	sw	a5,-132(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:175
                    sum += in*weight;
20103a84:	f8042703          	lw	a4,-128(s0)
20103a88:	f7c42783          	lw	a5,-132(s0)
20103a8c:	02f707b3          	mul	a5,a4,a5
20103a90:	fe042703          	lw	a4,-32(s0)
20103a94:	97ba                	add	a5,a5,a4
20103a96:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:176
                    weightChunk <<= 4;
20103a9a:	fb042783          	lw	a5,-80(s0)
20103a9e:	0792                	sll	a5,a5,0x4
20103aa0:	faf42823          	sw	a5,-80(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:172 (discriminator 3)
                for (uint32_t j = 0; j < 8; j++) {
20103aa4:	fac42783          	lw	a5,-84(s0)
20103aa8:	0785                	add	a5,a5,1
20103aaa:	faf42623          	sw	a5,-84(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:172 (discriminator 1)
20103aae:	fac42703          	lw	a4,-84(s0)
20103ab2:	479d                	li	a5,7
20103ab4:	fae7f9e3          	bgeu	a5,a4,20103a66 <processfclayer+0x260>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:170 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=8) {
20103ab8:	fb442783          	lw	a5,-76(s0)
20103abc:	07a1                	add	a5,a5,8
20103abe:	faf42a23          	sw	a5,-76(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:170 (discriminator 1)
20103ac2:	fb442703          	lw	a4,-76(s0)
20103ac6:	f5042783          	lw	a5,-176(s0)
20103aca:	f8f762e3          	bltu	a4,a5,20103a4e <processfclayer+0x248>
20103ace:	aa25                	j	20103c06 <processfclayer+0x400>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:179
                }
            }
        } else if (bits_per_weight == 8 + 8 ) {   // 8 bit twos-complement
20103ad0:	f5442703          	lw	a4,-172(s0)
20103ad4:	47c1                	li	a5,16
20103ad6:	08f71663          	bne	a4,a5,20103b62 <processfclayer+0x35c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:180
            for (uint32_t k = 0; k < n_input; k+=4) {
20103ada:	fa042423          	sw	zero,-88(s0)
20103ade:	a89d                	j	20103b54 <processfclayer+0x34e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:181
                int32_t weightChunk = *weightidx++;
20103ae0:	fec42783          	lw	a5,-20(s0)
20103ae4:	00478713          	add	a4,a5,4
20103ae8:	fee42623          	sw	a4,-20(s0)
20103aec:	439c                	lw	a5,0(a5)
20103aee:	faf42223          	sw	a5,-92(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:182
                for (uint32_t j = 0; j < 4; j++) {
20103af2:	fa042023          	sw	zero,-96(s0)
20103af6:	a0a9                	j	20103b40 <processfclayer+0x33a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:183
                    int32_t in=*activations_idx++;
20103af8:	fe442783          	lw	a5,-28(s0)
20103afc:	00178713          	add	a4,a5,1
20103b00:	fee42223          	sw	a4,-28(s0)
20103b04:	00078783          	lb	a5,0(a5)
20103b08:	f8f42423          	sw	a5,-120(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:184
                    int32_t weight = (weightChunk) >> (32-8); // extend sign, cut off lower bits
20103b0c:	fa442783          	lw	a5,-92(s0)
20103b10:	87e1                	sra	a5,a5,0x18
20103b12:	f8f42223          	sw	a5,-124(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:185
                    sum += in*weight;
20103b16:	f8842703          	lw	a4,-120(s0)
20103b1a:	f8442783          	lw	a5,-124(s0)
20103b1e:	02f707b3          	mul	a5,a4,a5
20103b22:	fe042703          	lw	a4,-32(s0)
20103b26:	97ba                	add	a5,a5,a4
20103b28:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:186
                    weightChunk <<= 8;
20103b2c:	fa442783          	lw	a5,-92(s0)
20103b30:	07a2                	sll	a5,a5,0x8
20103b32:	faf42223          	sw	a5,-92(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:182 (discriminator 3)
                for (uint32_t j = 0; j < 4; j++) {
20103b36:	fa042783          	lw	a5,-96(s0)
20103b3a:	0785                	add	a5,a5,1
20103b3c:	faf42023          	sw	a5,-96(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:182 (discriminator 1)
20103b40:	fa042703          	lw	a4,-96(s0)
20103b44:	478d                	li	a5,3
20103b46:	fae7f9e3          	bgeu	a5,a4,20103af8 <processfclayer+0x2f2>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:180 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=4) {
20103b4a:	fa842783          	lw	a5,-88(s0)
20103b4e:	0791                	add	a5,a5,4
20103b50:	faf42423          	sw	a5,-88(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:180 (discriminator 1)
20103b54:	fa842703          	lw	a4,-88(s0)
20103b58:	f5042783          	lw	a5,-176(s0)
20103b5c:	f8f762e3          	bltu	a4,a5,20103ae0 <processfclayer+0x2da>
20103b60:	a05d                	j	20103c06 <processfclayer+0x400>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:190
                }
            }
#endif
        }  else if (bits_per_weight == 16 + 4 ) {  // 4 bit shift
20103b62:	f5442703          	lw	a4,-172(s0)
20103b66:	47d1                	li	a5,20
20103b68:	08f71f63          	bne	a4,a5,20103c06 <processfclayer+0x400>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:191
            for (uint32_t k = 0; k < n_input; k+=8) {
20103b6c:	f8042e23          	sw	zero,-100(s0)
20103b70:	a069                	j	20103bfa <processfclayer+0x3f4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:192
                uint32_t weightChunk = *weightidx++;
20103b72:	fec42783          	lw	a5,-20(s0)
20103b76:	00478713          	add	a4,a5,4
20103b7a:	fee42623          	sw	a4,-20(s0)
20103b7e:	439c                	lw	a5,0(a5)
20103b80:	f8f42c23          	sw	a5,-104(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:193
                for (uint32_t j = 0; j < 8; j++) {
20103b84:	f8042a23          	sw	zero,-108(s0)
20103b88:	a8b9                	j	20103be6 <processfclayer+0x3e0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:194
                    int32_t in=*activations_idx++;
20103b8a:	fe442783          	lw	a5,-28(s0)
20103b8e:	00178713          	add	a4,a5,1
20103b92:	fee42223          	sw	a4,-28(s0)
20103b96:	00078783          	lb	a5,0(a5)
20103b9a:	f8f42823          	sw	a5,-112(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:197
                    int32_t tmpsum;

                    tmpsum = (weightChunk & 0x80000000) ? -in : in; // one complements sign (bit set equals negative)
20103b9e:	f9842783          	lw	a5,-104(s0)
20103ba2:	0007d763          	bgez	a5,20103bb0 <processfclayer+0x3aa>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:197 (discriminator 1)
20103ba6:	f9042783          	lw	a5,-112(s0)
20103baa:	40f007b3          	neg	a5,a5
20103bae:	a019                	j	20103bb4 <processfclayer+0x3ae>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:197 (discriminator 2)
20103bb0:	f9042783          	lw	a5,-112(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:197 (discriminator 4)
20103bb4:	f8f42623          	sw	a5,-116(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:198
                    sum += tmpsum << ((weightChunk >> 28) & 7); // sign*in*2^log
20103bb8:	f9842783          	lw	a5,-104(s0)
20103bbc:	83f1                	srl	a5,a5,0x1c
20103bbe:	8b9d                	and	a5,a5,7
20103bc0:	f8c42703          	lw	a4,-116(s0)
20103bc4:	00f717b3          	sll	a5,a4,a5
20103bc8:	fe042703          	lw	a4,-32(s0)
20103bcc:	97ba                	add	a5,a5,a4
20103bce:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:199
                    weightChunk <<= 4;
20103bd2:	f9842783          	lw	a5,-104(s0)
20103bd6:	0792                	sll	a5,a5,0x4
20103bd8:	f8f42c23          	sw	a5,-104(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:193 (discriminator 2)
                for (uint32_t j = 0; j < 8; j++) {
20103bdc:	f9442783          	lw	a5,-108(s0)
20103be0:	0785                	add	a5,a5,1
20103be2:	f8f42a23          	sw	a5,-108(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:193 (discriminator 1)
20103be6:	f9442703          	lw	a4,-108(s0)
20103bea:	479d                	li	a5,7
20103bec:	f8e7ffe3          	bgeu	a5,a4,20103b8a <processfclayer+0x384>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:191 (discriminator 2)
            for (uint32_t k = 0; k < n_input; k+=8) {
20103bf0:	f9c42783          	lw	a5,-100(s0)
20103bf4:	07a1                	add	a5,a5,8
20103bf6:	f8f42e23          	sw	a5,-100(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:191 (discriminator 1)
20103bfa:	f9c42703          	lw	a4,-100(s0)
20103bfe:	f5042783          	lw	a5,-176(s0)
20103c02:	f6f768e3          	bltu	a4,a5,20103b72 <processfclayer+0x36c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:204
                }
            }
        }   // else printf("Error: unsupported weight bit width %d\n", bits_per_weight);

        output[i] = sum;
20103c06:	fe842783          	lw	a5,-24(s0)
20103c0a:	078a                	sll	a5,a5,0x2
20103c0c:	f4842703          	lw	a4,-184(s0)
20103c10:	97ba                	add	a5,a5,a4
20103c12:	fe042703          	lw	a4,-32(s0)
20103c16:	c398                	sw	a4,0(a5)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:103 (discriminator 2)
    for (uint32_t i = 0; i < n_output; i++) {
20103c18:	fe842783          	lw	a5,-24(s0)
20103c1c:	0785                	add	a5,a5,1
20103c1e:	fef42423          	sw	a5,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:103 (discriminator 1)
20103c22:	fe842703          	lw	a4,-24(s0)
20103c26:	f4c42783          	lw	a5,-180(s0)
20103c2a:	c0f764e3          	bltu	a4,a5,20103832 <processfclayer+0x2c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:207
        // printf("%d,", output[i]);
    }
}
20103c2e:	0001                	nop
20103c30:	0001                	nop
20103c32:	547a                	lw	s0,188(sp)
20103c34:	6129                	add	sp,sp,192
20103c36:	8082                	ret

20103c38 <BitMnistInference>:
BitMnistInference():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:69

	printf( "Inference of Sample %d\tPrediction: %ld\tLabel: %d\t\n", sample, prediction, label);
}
*/

void BitMnistInference(const int8_t *input, const uint8_t label, const uint8_t sample) {
20103c38:	7149                	add	sp,sp,-368
20103c3a:	16112623          	sw	ra,364(sp)
20103c3e:	16812423          	sw	s0,360(sp)
20103c42:	1a80                	add	s0,sp,368
20103c44:	e8a42e23          	sw	a0,-356(s0)
20103c48:	87ae                	mv	a5,a1
20103c4a:	8732                	mv	a4,a2
20103c4c:	e8f40da3          	sb	a5,-357(s0)
20103c50:	87ba                	mv	a5,a4
20103c52:	e8f40d23          	sb	a5,-358(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:78
    uint32_t startticks, endticks; // Timer variables (currently commented out)

    // Layer 1: Corresponds to Dense(8) in Python model
    // Input: `input` (quantized 784-element flattened image)
    // Output: `layer_out` (8 elements, before ReLU)
    processfclayer((int8_t*)input, L1_weights, L1_bitperweight, L1_incoming_weights, L1_outgoing_weights, layer_out);
20103c56:	201037b7          	lui	a5,0x20103
20103c5a:	6007a603          	lw	a2,1536(a5) # 20103600 <L1_bitperweight>
20103c5e:	201037b7          	lui	a5,0x20103
20103c62:	6047a683          	lw	a3,1540(a5) # 20103604 <L1_incoming_weights>
20103c66:	201037b7          	lui	a5,0x20103
20103c6a:	6087a703          	lw	a4,1544(a5) # 20103608 <L1_outgoing_weights>
20103c6e:	eec40793          	add	a5,s0,-276
20103c72:	201005b7          	lui	a1,0x20100
20103c76:	4d858593          	add	a1,a1,1240 # 201004d8 <L1_weights>
20103c7a:	e9c42503          	lw	a0,-356(s0)
20103c7e:	3661                	jal	20103806 <processfclayer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:81
    // Apply ReLU activation and normalize to 8-bit for next layer's input.
    // Output: `layer_in` (8 elements, after ReLU)
    ReLUNorm(layer_out, layer_in, L1_outgoing_weights);
20103c80:	201037b7          	lui	a5,0x20103
20103c84:	6087a683          	lw	a3,1544(a5) # 20103608 <L1_outgoing_weights>
20103c88:	eac40713          	add	a4,s0,-340
20103c8c:	eec40793          	add	a5,s0,-276
20103c90:	8636                	mv	a2,a3
20103c92:	85ba                	mv	a1,a4
20103c94:	853e                	mv	a0,a5
20103c96:	32ed                	jal	20103680 <ReLUNorm>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:86

    // Layer 2: Corresponds to Dense(10) in Python model
    // Input: `layer_in` (8 elements, output from previous ReLU)
    // Output: `layer_out` (10 elements, before final activation)
    processfclayer(layer_in, L2_weights, L2_bitperweight, L2_incoming_weights,  L2_outgoing_weights, layer_out);
20103c98:	201037b7          	lui	a5,0x20103
20103c9c:	60c7a603          	lw	a2,1548(a5) # 2010360c <L2_bitperweight>
20103ca0:	201037b7          	lui	a5,0x20103
20103ca4:	6107a683          	lw	a3,1552(a5) # 20103610 <L2_incoming_weights>
20103ca8:	201037b7          	lui	a5,0x20103
20103cac:	6147a703          	lw	a4,1556(a5) # 20103614 <L2_outgoing_weights>
20103cb0:	eec40793          	add	a5,s0,-276
20103cb4:	eac40513          	add	a0,s0,-340
20103cb8:	201025b7          	lui	a1,0x20102
20103cbc:	d5858593          	add	a1,a1,-680 # 20101d58 <L2_weights>
20103cc0:	3699                	jal	20103806 <processfclayer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:89
    // Apply final activation (Softmax in Python, but ReLUNorm is used here to find max value for prediction)
    // Output: `layer_in` (10 elements, after final normalization, used only for finding max_pos for prediction)
    prediction = ReLUNorm(layer_out, layer_in, L2_outgoing_weights); // `ReLUNorm` returns max_pos, which is the predicted class index.
20103cc2:	201037b7          	lui	a5,0x20103
20103cc6:	6147a683          	lw	a3,1556(a5) # 20103614 <L2_outgoing_weights>
20103cca:	eac40713          	add	a4,s0,-340
20103cce:	eec40793          	add	a5,s0,-276
20103cd2:	8636                	mv	a2,a3
20103cd4:	85ba                	mv	a1,a4
20103cd6:	853e                	mv	a0,a5
20103cd8:	3265                	jal	20103680 <ReLUNorm>
20103cda:	87aa                	mv	a5,a0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:89 (discriminator 1)
20103cdc:	fef42623          	sw	a5,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:99
    //     processfclayer(layer_in, L4_weights, L4_bitperweight, L4_incoming_weights,  L4_outgoing_weights, layer_out);
    //     prediction=ReLUNorm(layer_out, layer_in, L4_outgoing_weights);
    // #endif

    // Print inference result
    printf( "Inference of Sample %d\tPrediction: %ld\tLabel: %d\t\n", sample, prediction, label);
20103ce0:	e9a44783          	lbu	a5,-358(s0)
20103ce4:	e9b44703          	lbu	a4,-357(s0)
20103ce8:	86ba                	mv	a3,a4
20103cea:	fec42603          	lw	a2,-20(s0)
20103cee:	85be                	mv	a1,a5
20103cf0:	201007b7          	lui	a5,0x20100
20103cf4:	35078513          	add	a0,a5,848 # 20100350 <metal_tty_init+0x26>
20103cf8:	2629                	jal	20104002 <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:100
}
20103cfa:	0001                	nop
20103cfc:	16c12083          	lw	ra,364(sp)
20103d00:	16812403          	lw	s0,360(sp)
20103d04:	6175                	add	sp,sp,368
20103d06:	8082                	ret

20103d08 <display_banner>:
display_banner():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:102

void display_banner (void) {
20103d08:	1141                	add	sp,sp,-16
20103d0a:	c606                	sw	ra,12(sp)
20103d0c:	c422                	sw	s0,8(sp)
20103d0e:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:104

    printf("\n");
20103d10:	4529                	li	a0,10
20103d12:	2e31                	jal	2010402e <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:105
    printf("\n");
20103d14:	4529                	li	a0,10
20103d16:	2e21                	jal	2010402e <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:106
    printf("BitNet MNIST Dataset Handwritten Digit Classification on sifive-hifive1.\n");
20103d18:	201007b7          	lui	a5,0x20100
20103d1c:	38478513          	add	a0,a5,900 # 20100384 <metal_tty_init+0x5a>
20103d20:	26c9                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:107
    printf("\n");
20103d22:	4529                	li	a0,10
20103d24:	2629                	jal	2010402e <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:108
    printf("\n");
20103d26:	4529                	li	a0,10
20103d28:	2619                	jal	2010402e <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:110

    printf("\n");
20103d2a:	4529                	li	a0,10
20103d2c:	2609                	jal	2010402e <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:111
    printf("By Shwetank Shekhar");
20103d2e:	201007b7          	lui	a5,0x20100
20103d32:	3d078513          	add	a0,a5,976 # 201003d0 <metal_tty_init+0xa6>
20103d36:	24f1                	jal	20104002 <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:113

}
20103d38:	0001                	nop
20103d3a:	40b2                	lw	ra,12(sp)
20103d3c:	4422                	lw	s0,8(sp)
20103d3e:	0141                	add	sp,sp,16
20103d40:	8082                	ret

20103d42 <timer_isr>:
timer_isr():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:115

void timer_isr (int id, void *data) {
20103d42:	1101                	add	sp,sp,-32
20103d44:	ce06                	sw	ra,28(sp)
20103d46:	cc22                	sw	s0,24(sp)
20103d48:	1000                	add	s0,sp,32
20103d4a:	fea42623          	sw	a0,-20(s0)
20103d4e:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:118

    // Disable Timer interrupt
    metal_interrupt_disable(tmr_intr, tmr_id);
20103d52:	a141a703          	lw	a4,-1516(gp) # 80000c8c <tmr_intr>
20103d56:	a201a783          	lw	a5,-1504(gp) # 80000c98 <tmr_id>
20103d5a:	85be                	mv	a1,a5
20103d5c:	853a                	mv	a0,a4
20103d5e:	62c010ef          	jal	2010538a <metal_interrupt_disable>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:121

    // Flag showing we hit timer isr
    timer_isr_flag = 1;
20103d62:	4705                	li	a4,1
20103d64:	a0e1ae23          	sw	a4,-1508(gp) # 80000c94 <timer_isr_flag>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:122
}
20103d68:	0001                	nop
20103d6a:	40f2                	lw	ra,28(sp)
20103d6c:	4462                	lw	s0,24(sp)
20103d6e:	6105                	add	sp,sp,32
20103d70:	8082                	ret

20103d72 <wait_for_timer>:
wait_for_timer():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:124

void wait_for_timer(struct metal_led *which_led) {
20103d72:	1101                	add	sp,sp,-32
20103d74:	ce06                	sw	ra,28(sp)
20103d76:	cc22                	sw	s0,24(sp)
20103d78:	ca26                	sw	s1,20(sp)
20103d7a:	1000                	add	s0,sp,32
20103d7c:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:127

    // clear global timer isr flag
    timer_isr_flag = 0;
20103d80:	a001ae23          	sw	zero,-1508(gp) # 80000c94 <timer_isr_flag>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:130

    // Turn on desired LED
    metal_led_on(which_led);
20103d84:	fec42503          	lw	a0,-20(s0)
20103d88:	654010ef          	jal	201053dc <metal_led_on>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:133

    // Set timer
    metal_cpu_set_mtimecmp(cpu, metal_cpu_get_mtime(cpu) + RTC_FREQ);
20103d8c:	a101a483          	lw	s1,-1520(gp) # 80000c88 <cpu>
20103d90:	a101a783          	lw	a5,-1520(gp) # 80000c88 <cpu>
20103d94:	853e                	mv	a0,a5
20103d96:	44a010ef          	jal	201051e0 <metal_cpu_get_mtime>
20103d9a:	862a                	mv	a2,a0
20103d9c:	86ae                	mv	a3,a1
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:133 (discriminator 1)
20103d9e:	6521                	lui	a0,0x8
20103da0:	4581                	li	a1,0
20103da2:	00a60733          	add	a4,a2,a0
20103da6:	883a                	mv	a6,a4
20103da8:	00c83833          	sltu	a6,a6,a2
20103dac:	00b687b3          	add	a5,a3,a1
20103db0:	00f806b3          	add	a3,a6,a5
20103db4:	87b6                	mv	a5,a3
20103db6:	85ba                	mv	a1,a4
20103db8:	863e                	mv	a2,a5
20103dba:	8526                	mv	a0,s1
20103dbc:	44e010ef          	jal	2010520a <metal_cpu_set_mtimecmp>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:136

    // Enable Timer interrupt
    metal_interrupt_enable(tmr_intr, tmr_id);
20103dc0:	a141a703          	lw	a4,-1516(gp) # 80000c8c <tmr_intr>
20103dc4:	a201a783          	lw	a5,-1504(gp) # 80000c98 <tmr_id>
20103dc8:	85be                	mv	a1,a5
20103dca:	853a                	mv	a0,a4
20103dcc:	590010ef          	jal	2010535c <metal_interrupt_enable>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:139

    // wait till timer triggers and isr is hit
    while (timer_isr_flag == 0){};
20103dd0:	0001                	nop
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:139 (discriminator 1)
20103dd2:	a1c1a783          	lw	a5,-1508(gp) # 80000c94 <timer_isr_flag>
20103dd6:	dff5                	beqz	a5,20103dd2 <wait_for_timer+0x60>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:141

    timer_isr_flag = 0;
20103dd8:	a001ae23          	sw	zero,-1508(gp) # 80000c94 <timer_isr_flag>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:144

    // Turn off this LED
    metal_led_off(which_led);
20103ddc:	fec42503          	lw	a0,-20(s0)
20103de0:	620010ef          	jal	20105400 <metal_led_off>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:145
}
20103de4:	0001                	nop
20103de6:	40f2                	lw	ra,28(sp)
20103de8:	4462                	lw	s0,24(sp)
20103dea:	44d2                	lw	s1,20(sp)
20103dec:	6105                	add	sp,sp,32
20103dee:	8082                	ret

20103df0 <main>:
main():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:148

int main (void)
{
20103df0:	1101                	add	sp,sp,-32
20103df2:	ce06                	sw	ra,28(sp)
20103df4:	cc22                	sw	s0,24(sp)
20103df6:	1000                	add	s0,sp,32
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:153
    int rc;
    struct metal_led *led0_red, *led0_green, *led0_blue;

    // This demo will toggle LEDs colors so we define them here
    led0_red = metal_led_get_rgb("LD0", "red");
20103df8:	201007b7          	lui	a5,0x20100
20103dfc:	3e478593          	add	a1,a5,996 # 201003e4 <metal_tty_init+0xba>
20103e00:	201007b7          	lui	a5,0x20100
20103e04:	3e878513          	add	a0,a5,1000 # 201003e8 <metal_tty_init+0xbe>
20103e08:	61c010ef          	jal	20105424 <metal_led_get_rgb>
20103e0c:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:154
    led0_green = metal_led_get_rgb("LD0", "green");
20103e10:	201007b7          	lui	a5,0x20100
20103e14:	3ec78593          	add	a1,a5,1004 # 201003ec <metal_tty_init+0xc2>
20103e18:	201007b7          	lui	a5,0x20100
20103e1c:	3e878513          	add	a0,a5,1000 # 201003e8 <metal_tty_init+0xbe>
20103e20:	604010ef          	jal	20105424 <metal_led_get_rgb>
20103e24:	fea42423          	sw	a0,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:155
    led0_blue = metal_led_get_rgb("LD0", "blue");
20103e28:	201007b7          	lui	a5,0x20100
20103e2c:	3f478593          	add	a1,a5,1012 # 201003f4 <metal_tty_init+0xca>
20103e30:	201007b7          	lui	a5,0x20100
20103e34:	3e878513          	add	a0,a5,1000 # 201003e8 <metal_tty_init+0xbe>
20103e38:	5ec010ef          	jal	20105424 <metal_led_get_rgb>
20103e3c:	fea42223          	sw	a0,-28(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:156
    if ((led0_red == NULL) || (led0_green == NULL) || (led0_blue == NULL)) {
20103e40:	fec42783          	lw	a5,-20(s0)
20103e44:	c799                	beqz	a5,20103e52 <main+0x62>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:156 (discriminator 1)
20103e46:	fe842783          	lw	a5,-24(s0)
20103e4a:	c781                	beqz	a5,20103e52 <main+0x62>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:156 (discriminator 2)
20103e4c:	fe442783          	lw	a5,-28(s0)
20103e50:	eb81                	bnez	a5,20103e60 <main+0x70>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:157
        printf("At least one of LEDs is null.\n");
20103e52:	201007b7          	lui	a5,0x20100
20103e56:	3fc78513          	add	a0,a5,1020 # 201003fc <metal_tty_init+0xd2>
20103e5a:	2461                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:158
        return 1;
20103e5c:	4785                	li	a5,1
20103e5e:	aa69                	j	20103ff8 <main+0x208>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:162
    }

    // Enable each LED
    metal_led_enable(led0_red);
20103e60:	fec42503          	lw	a0,-20(s0)
20103e64:	554010ef          	jal	201053b8 <metal_led_enable>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:163
    metal_led_enable(led0_green);
20103e68:	fe842503          	lw	a0,-24(s0)
20103e6c:	54c010ef          	jal	201053b8 <metal_led_enable>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:164
    metal_led_enable(led0_blue);
20103e70:	fe442503          	lw	a0,-28(s0)
20103e74:	544010ef          	jal	201053b8 <metal_led_enable>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:167

    // All Off
    metal_led_off(led0_red);
20103e78:	fec42503          	lw	a0,-20(s0)
20103e7c:	584010ef          	jal	20105400 <metal_led_off>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:168
    metal_led_off(led0_green);
20103e80:	fe842503          	lw	a0,-24(s0)
20103e84:	57c010ef          	jal	20105400 <metal_led_off>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:169
    metal_led_off(led0_blue);
20103e88:	fe442503          	lw	a0,-28(s0)
20103e8c:	574010ef          	jal	20105400 <metal_led_off>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:172

    // Lets get the CPU and its interrupt
    cpu = metal_cpu_get(metal_cpu_get_current_hartid());
20103e90:	450010ef          	jal	201052e0 <metal_cpu_get_current_hartid>
20103e94:	87aa                	mv	a5,a0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:172 (discriminator 1)
20103e96:	853e                	mv	a0,a5
20103e98:	41a010ef          	jal	201052b2 <metal_cpu_get>
20103e9c:	872a                	mv	a4,a0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:172 (discriminator 2)
20103e9e:	a0e1a823          	sw	a4,-1520(gp) # 80000c88 <cpu>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:173
    if (cpu == NULL) {
20103ea2:	a101a783          	lw	a5,-1520(gp) # 80000c88 <cpu>
20103ea6:	eb81                	bnez	a5,20103eb6 <main+0xc6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:174
        printf("CPU null.\n");
20103ea8:	201007b7          	lui	a5,0x20100
20103eac:	41c78513          	add	a0,a5,1052 # 2010041c <metal_tty_init+0xf2>
20103eb0:	2c0d                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:175
        return 2;
20103eb2:	4789                	li	a5,2
20103eb4:	a291                	j	20103ff8 <main+0x208>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:177
    }
    cpu_intr = metal_cpu_interrupt_controller(cpu);
20103eb6:	a101a783          	lw	a5,-1520(gp) # 80000c88 <cpu>
20103eba:	853e                	mv	a0,a5
20103ebc:	3d0010ef          	jal	2010528c <metal_cpu_interrupt_controller>
20103ec0:	872a                	mv	a4,a0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:177 (discriminator 1)
20103ec2:	a0e1ac23          	sw	a4,-1512(gp) # 80000c90 <cpu_intr>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:178
    if (cpu_intr == NULL) {
20103ec6:	a181a783          	lw	a5,-1512(gp) # 80000c90 <cpu_intr>
20103eca:	eb81                	bnez	a5,20103eda <main+0xea>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:179
        printf("CPU interrupt controller is null.\n");
20103ecc:	201007b7          	lui	a5,0x20100
20103ed0:	42878513          	add	a0,a5,1064 # 20100428 <metal_tty_init+0xfe>
20103ed4:	2439                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:180
        return 3;
20103ed6:	478d                	li	a5,3
20103ed8:	a205                	j	20103ff8 <main+0x208>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:182
    }
    metal_interrupt_init(cpu_intr);
20103eda:	a181a783          	lw	a5,-1512(gp) # 80000c90 <cpu_intr>
20103ede:	853e                	mv	a0,a5
20103ee0:	41a010ef          	jal	201052fa <metal_interrupt_init>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:185

    // display welcome banner
    display_banner();
20103ee4:	3515                	jal	20103d08 <display_banner>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:187

	printf("Starting MNIST inference...\n");
20103ee6:	201007b7          	lui	a5,0x20100
20103eea:	44c78513          	add	a0,a5,1100 # 2010044c <metal_tty_init+0x122>
20103eee:	2ad5                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:188
	BitMnistInference(input_data_0, label_0,1);
20103ef0:	201037b7          	lui	a5,0x20103
20103ef4:	6187c783          	lbu	a5,1560(a5) # 20103618 <label_0>
20103ef8:	4605                	li	a2,1
20103efa:	85be                	mv	a1,a5
20103efc:	201027b7          	lui	a5,0x20102
20103f00:	da878513          	add	a0,a5,-600 # 20101da8 <input_data_0>
20103f04:	3b15                	jal	20103c38 <BitMnistInference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:189
	BitMnistInference(input_data_1, label_1,2);
20103f06:	201037b7          	lui	a5,0x20103
20103f0a:	6197c783          	lbu	a5,1561(a5) # 20103619 <label_1>
20103f0e:	4609                	li	a2,2
20103f10:	85be                	mv	a1,a5
20103f12:	201027b7          	lui	a5,0x20102
20103f16:	0b878513          	add	a0,a5,184 # 201020b8 <input_data_1>
20103f1a:	3b39                	jal	20103c38 <BitMnistInference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:190
	BitMnistInference(input_data_2, label_2,3);
20103f1c:	201037b7          	lui	a5,0x20103
20103f20:	61a7c783          	lbu	a5,1562(a5) # 2010361a <label_2>
20103f24:	460d                	li	a2,3
20103f26:	85be                	mv	a1,a5
20103f28:	201027b7          	lui	a5,0x20102
20103f2c:	3c878513          	add	a0,a5,968 # 201023c8 <input_data_2>
20103f30:	3321                	jal	20103c38 <BitMnistInference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:191
	BitMnistInference(input_data_3, label_3,4);
20103f32:	201037b7          	lui	a5,0x20103
20103f36:	61b7c783          	lbu	a5,1563(a5) # 2010361b <label_3>
20103f3a:	4611                	li	a2,4
20103f3c:	85be                	mv	a1,a5
20103f3e:	201027b7          	lui	a5,0x20102
20103f42:	6d878513          	add	a0,a5,1752 # 201026d8 <input_data_3>
20103f46:	39cd                	jal	20103c38 <BitMnistInference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:194

    // Setup Timer and its interrupt so we can toggle LEDs on 1s cadence
    tmr_intr = metal_cpu_timer_interrupt_controller(cpu);
20103f48:	a101a783          	lw	a5,-1520(gp) # 80000c88 <cpu>
20103f4c:	853e                	mv	a0,a5
20103f4e:	2f2010ef          	jal	20105240 <metal_cpu_timer_interrupt_controller>
20103f52:	872a                	mv	a4,a0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:194 (discriminator 1)
20103f54:	a0e1aa23          	sw	a4,-1516(gp) # 80000c8c <tmr_intr>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:195
    if (tmr_intr == NULL) {
20103f58:	a141a783          	lw	a5,-1516(gp) # 80000c8c <tmr_intr>
20103f5c:	eb81                	bnez	a5,20103f6c <main+0x17c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:196
        printf("TIMER interrupt controller is  null.\n");
20103f5e:	201007b7          	lui	a5,0x20100
20103f62:	46878513          	add	a0,a5,1128 # 20100468 <metal_tty_init+0x13e>
20103f66:	2ab5                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:197
        return 4;
20103f68:	4791                	li	a5,4
20103f6a:	a079                	j	20103ff8 <main+0x208>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:199
    }
    metal_interrupt_init(tmr_intr);
20103f6c:	a141a783          	lw	a5,-1516(gp) # 80000c8c <tmr_intr>
20103f70:	853e                	mv	a0,a5
20103f72:	388010ef          	jal	201052fa <metal_interrupt_init>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:200
    tmr_id = metal_cpu_timer_get_interrupt_id(cpu);
20103f76:	a101a783          	lw	a5,-1520(gp) # 80000c88 <cpu>
20103f7a:	853e                	mv	a0,a5
20103f7c:	2ea010ef          	jal	20105266 <metal_cpu_timer_get_interrupt_id>
20103f80:	872a                	mv	a4,a0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:200 (discriminator 1)
20103f82:	a2e1a023          	sw	a4,-1504(gp) # 80000c98 <tmr_id>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:201
    rc = metal_interrupt_register_handler(tmr_intr, tmr_id, timer_isr, cpu);
20103f86:	a141a703          	lw	a4,-1516(gp) # 80000c8c <tmr_intr>
20103f8a:	a201a583          	lw	a1,-1504(gp) # 80000c98 <tmr_id>
20103f8e:	a101a783          	lw	a5,-1520(gp) # 80000c88 <cpu>
20103f92:	86be                	mv	a3,a5
20103f94:	201047b7          	lui	a5,0x20104
20103f98:	d4278613          	add	a2,a5,-702 # 20103d42 <timer_isr>
20103f9c:	853a                	mv	a0,a4
20103f9e:	380010ef          	jal	2010531e <metal_interrupt_register_handler>
20103fa2:	fea42023          	sw	a0,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:202
    if (rc < 0) {
20103fa6:	fe042783          	lw	a5,-32(s0)
20103faa:	0007dc63          	bgez	a5,20103fc2 <main+0x1d2>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:203
        printf("TIMER interrupt handler registration failed\n");
20103fae:	201007b7          	lui	a5,0x20100
20103fb2:	49078513          	add	a0,a5,1168 # 20100490 <metal_tty_init+0x166>
20103fb6:	2235                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:204
        return (rc * -1);
20103fb8:	fe042783          	lw	a5,-32(s0)
20103fbc:	40f007b3          	neg	a5,a5
20103fc0:	a825                	j	20103ff8 <main+0x208>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:208
    }

    // Lastly CPU interrupt
    if (metal_interrupt_enable(cpu_intr, 0) == -1) {
20103fc2:	a181a783          	lw	a5,-1512(gp) # 80000c90 <cpu_intr>
20103fc6:	4581                	li	a1,0
20103fc8:	853e                	mv	a0,a5
20103fca:	392010ef          	jal	2010535c <metal_interrupt_enable>
20103fce:	872a                	mv	a4,a0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:208 (discriminator 1)
20103fd0:	57fd                	li	a5,-1
20103fd2:	00f71963          	bne	a4,a5,20103fe4 <main+0x1f4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:209
        printf("CPU interrupt enable failed\n");
20103fd6:	201007b7          	lui	a5,0x20100
20103fda:	4bc78513          	add	a0,a5,1212 # 201004bc <metal_tty_init+0x192>
20103fde:	2211                	jal	201040e2 <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:210
        return 6;
20103fe0:	4799                	li	a5,6
20103fe2:	a819                	j	20103ff8 <main+0x208>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:217

    // Red -> Green -> Blue, repeat
    while (1) {

        // Turn on RED
        wait_for_timer(led0_red);
20103fe4:	fec42503          	lw	a0,-20(s0)
20103fe8:	3369                	jal	20103d72 <wait_for_timer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:220

        // Turn on Green
        wait_for_timer(led0_green);
20103fea:	fe842503          	lw	a0,-24(s0)
20103fee:	3351                	jal	20103d72 <wait_for_timer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:223 (discriminator 1)

        // Turn on Blue
        wait_for_timer(led0_blue);
20103ff0:	fe442503          	lw	a0,-28(s0)
20103ff4:	3bbd                	jal	20103d72 <wait_for_timer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:217
        wait_for_timer(led0_red);
20103ff6:	b7fd                	j	20103fe4 <main+0x1f4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:229

    }

    // return
    return 0;
}
20103ff8:	853e                	mv	a0,a5
20103ffa:	40f2                	lw	ra,28(sp)
20103ffc:	4462                	lw	s0,24(sp)
20103ffe:	6105                	add	sp,sp,32
20104000:	8082                	ret

20104002 <iprintf>:
printf():
20104002:	7139                	add	sp,sp,-64
20104004:	d432                	sw	a2,40(sp)
20104006:	d636                	sw	a3,44(sp)
20104008:	da3e                	sw	a5,52(sp)
2010400a:	d22e                	sw	a1,36(sp)
2010400c:	d83a                	sw	a4,48(sp)
2010400e:	dc42                	sw	a6,56(sp)
20104010:	de46                	sw	a7,60(sp)
20104012:	5fefd797          	auipc	a5,0x5fefd
20104016:	a667a783          	lw	a5,-1434(a5) # 80000a78 <_impure_ptr>
2010401a:	478c                	lw	a1,8(a5)
2010401c:	1054                	add	a3,sp,36
2010401e:	862a                	mv	a2,a0
20104020:	853e                	mv	a0,a5
20104022:	ce06                	sw	ra,28(sp)
20104024:	c636                	sw	a3,12(sp)
20104026:	21c9                	jal	201044e8 <_vfiprintf_r>
20104028:	40f2                	lw	ra,28(sp)
2010402a:	6121                	add	sp,sp,64
2010402c:	8082                	ret

2010402e <putchar>:
putchar():
2010402e:	85aa                	mv	a1,a0
20104030:	5fefd517          	auipc	a0,0x5fefd
20104034:	a4852503          	lw	a0,-1464(a0) # 80000a78 <_impure_ptr>
20104038:	4510                	lw	a2,8(a0)
2010403a:	6770006f          	j	20104eb0 <_putc_r>

2010403e <_puts_r>:
_puts_r():
2010403e:	511c                	lw	a5,32(a0)
20104040:	1101                	add	sp,sp,-32
20104042:	cc22                	sw	s0,24(sp)
20104044:	ca26                	sw	s1,20(sp)
20104046:	c84a                	sw	s2,16(sp)
20104048:	ce06                	sw	ra,28(sp)
2010404a:	c64e                	sw	s3,12(sp)
2010404c:	c452                	sw	s4,8(sp)
2010404e:	4500                	lw	s0,8(a0)
20104050:	84aa                	mv	s1,a0
20104052:	892e                	mv	s2,a1
20104054:	e399                	bnez	a5,2010405a <_puts_r+0x1c>
20104056:	4e3000ef          	jal	20104d38 <__sinit>
2010405a:	00c45783          	lhu	a5,12(s0)
2010405e:	8ba1                	and	a5,a5,8
20104060:	c399                	beqz	a5,20104066 <_puts_r+0x28>
20104062:	481c                	lw	a5,16(s0)
20104064:	e7a5                	bnez	a5,201040cc <_puts_r+0x8e>
20104066:	85a2                	mv	a1,s0
20104068:	8526                	mv	a0,s1
2010406a:	2205                	jal	2010418a <__swsetup_r>
2010406c:	c125                	beqz	a0,201040cc <_puts_r+0x8e>
2010406e:	557d                	li	a0,-1
20104070:	40f2                	lw	ra,28(sp)
20104072:	4462                	lw	s0,24(sp)
20104074:	44d2                	lw	s1,20(sp)
20104076:	4942                	lw	s2,16(sp)
20104078:	49b2                	lw	s3,12(sp)
2010407a:	4a22                	lw	s4,8(sp)
2010407c:	6105                	add	sp,sp,32
2010407e:	8082                	ret
20104080:	c41c                	sw	a5,8(s0)
20104082:	0905                	add	s2,s2,1
20104084:	0007d763          	bgez	a5,20104092 <_puts_r+0x54>
20104088:	4c18                	lw	a4,24(s0)
2010408a:	02e7cb63          	blt	a5,a4,201040c0 <_puts_r+0x82>
2010408e:	03458963          	beq	a1,s4,201040c0 <_puts_r+0x82>
20104092:	401c                	lw	a5,0(s0)
20104094:	00178713          	add	a4,a5,1
20104098:	c018                	sw	a4,0(s0)
2010409a:	00b78023          	sb	a1,0(a5)
2010409e:	441c                	lw	a5,8(s0)
201040a0:	00094583          	lbu	a1,0(s2)
201040a4:	17fd                	add	a5,a5,-1
201040a6:	fde9                	bnez	a1,20104080 <_puts_r+0x42>
201040a8:	c41c                	sw	a5,8(s0)
201040aa:	0207d463          	bgez	a5,201040d2 <_puts_r+0x94>
201040ae:	8622                	mv	a2,s0
201040b0:	45a9                	li	a1,10
201040b2:	8526                	mv	a0,s1
201040b4:	282d                	jal	201040ee <__swbuf_r>
201040b6:	57fd                	li	a5,-1
201040b8:	faf50be3          	beq	a0,a5,2010406e <_puts_r+0x30>
201040bc:	4529                	li	a0,10
201040be:	bf4d                	j	20104070 <_puts_r+0x32>
201040c0:	8622                	mv	a2,s0
201040c2:	8526                	mv	a0,s1
201040c4:	202d                	jal	201040ee <__swbuf_r>
201040c6:	fd351ce3          	bne	a0,s3,2010409e <_puts_r+0x60>
201040ca:	b755                	j	2010406e <_puts_r+0x30>
201040cc:	59fd                	li	s3,-1
201040ce:	4a29                	li	s4,10
201040d0:	b7f9                	j	2010409e <_puts_r+0x60>
201040d2:	401c                	lw	a5,0(s0)
201040d4:	00178713          	add	a4,a5,1
201040d8:	c018                	sw	a4,0(s0)
201040da:	4729                	li	a4,10
201040dc:	00e78023          	sb	a4,0(a5)
201040e0:	bff1                	j	201040bc <_puts_r+0x7e>

201040e2 <puts>:
puts():
201040e2:	85aa                	mv	a1,a0
201040e4:	5fefd517          	auipc	a0,0x5fefd
201040e8:	99452503          	lw	a0,-1644(a0) # 80000a78 <_impure_ptr>
201040ec:	bf89                	j	2010403e <_puts_r>

201040ee <__swbuf_r>:
__swbuf_r():
201040ee:	1101                	add	sp,sp,-32
201040f0:	cc22                	sw	s0,24(sp)
201040f2:	ca26                	sw	s1,20(sp)
201040f4:	c84a                	sw	s2,16(sp)
201040f6:	ce06                	sw	ra,28(sp)
201040f8:	c64e                	sw	s3,12(sp)
201040fa:	892a                	mv	s2,a0
201040fc:	84ae                	mv	s1,a1
201040fe:	8432                	mv	s0,a2
20104100:	c509                	beqz	a0,2010410a <__swbuf_r+0x1c>
20104102:	511c                	lw	a5,32(a0)
20104104:	e399                	bnez	a5,2010410a <__swbuf_r+0x1c>
20104106:	433000ef          	jal	20104d38 <__sinit>
2010410a:	4c1c                	lw	a5,24(s0)
2010410c:	c41c                	sw	a5,8(s0)
2010410e:	00c45783          	lhu	a5,12(s0)
20104112:	8ba1                	and	a5,a5,8
20104114:	c399                	beqz	a5,2010411a <__swbuf_r+0x2c>
20104116:	481c                	lw	a5,16(s0)
20104118:	ef91                	bnez	a5,20104134 <__swbuf_r+0x46>
2010411a:	85a2                	mv	a1,s0
2010411c:	854a                	mv	a0,s2
2010411e:	20b5                	jal	2010418a <__swsetup_r>
20104120:	c911                	beqz	a0,20104134 <__swbuf_r+0x46>
20104122:	54fd                	li	s1,-1
20104124:	40f2                	lw	ra,28(sp)
20104126:	4462                	lw	s0,24(sp)
20104128:	4942                	lw	s2,16(sp)
2010412a:	49b2                	lw	s3,12(sp)
2010412c:	8526                	mv	a0,s1
2010412e:	44d2                	lw	s1,20(sp)
20104130:	6105                	add	sp,sp,32
20104132:	8082                	ret
20104134:	401c                	lw	a5,0(s0)
20104136:	4818                	lw	a4,16(s0)
20104138:	0ff4f993          	zext.b	s3,s1
2010413c:	0ff4f493          	zext.b	s1,s1
20104140:	40e78533          	sub	a0,a5,a4
20104144:	485c                	lw	a5,20(s0)
20104146:	00f54763          	blt	a0,a5,20104154 <__swbuf_r+0x66>
2010414a:	85a2                	mv	a1,s0
2010414c:	854a                	mv	a0,s2
2010414e:	2af000ef          	jal	20104bfc <_fflush_r>
20104152:	f961                	bnez	a0,20104122 <__swbuf_r+0x34>
20104154:	441c                	lw	a5,8(s0)
20104156:	17fd                	add	a5,a5,-1
20104158:	c41c                	sw	a5,8(s0)
2010415a:	401c                	lw	a5,0(s0)
2010415c:	00178713          	add	a4,a5,1
20104160:	c018                	sw	a4,0(s0)
20104162:	01378023          	sb	s3,0(a5)
20104166:	4858                	lw	a4,20(s0)
20104168:	00150793          	add	a5,a0,1
2010416c:	00f70963          	beq	a4,a5,2010417e <__swbuf_r+0x90>
20104170:	00c45783          	lhu	a5,12(s0)
20104174:	8b85                	and	a5,a5,1
20104176:	d7dd                	beqz	a5,20104124 <__swbuf_r+0x36>
20104178:	47a9                	li	a5,10
2010417a:	faf495e3          	bne	s1,a5,20104124 <__swbuf_r+0x36>
2010417e:	85a2                	mv	a1,s0
20104180:	854a                	mv	a0,s2
20104182:	27b000ef          	jal	20104bfc <_fflush_r>
20104186:	dd59                	beqz	a0,20104124 <__swbuf_r+0x36>
20104188:	bf69                	j	20104122 <__swbuf_r+0x34>

2010418a <__swsetup_r>:
__swsetup_r():
2010418a:	1141                	add	sp,sp,-16
2010418c:	c422                	sw	s0,8(sp)
2010418e:	c226                	sw	s1,4(sp)
20104190:	c606                	sw	ra,12(sp)
20104192:	84aa                	mv	s1,a0
20104194:	5fefd517          	auipc	a0,0x5fefd
20104198:	8e452503          	lw	a0,-1820(a0) # 80000a78 <_impure_ptr>
2010419c:	842e                	mv	s0,a1
2010419e:	c509                	beqz	a0,201041a8 <__swsetup_r+0x1e>
201041a0:	511c                	lw	a5,32(a0)
201041a2:	e399                	bnez	a5,201041a8 <__swsetup_r+0x1e>
201041a4:	395000ef          	jal	20104d38 <__sinit>
201041a8:	00c41783          	lh	a5,12(s0)
201041ac:	0087f713          	and	a4,a5,8
201041b0:	eb21                	bnez	a4,20104200 <__swsetup_r+0x76>
201041b2:	0107f713          	and	a4,a5,16
201041b6:	eb09                	bnez	a4,201041c8 <__swsetup_r+0x3e>
201041b8:	4725                	li	a4,9
201041ba:	c098                	sw	a4,0(s1)
201041bc:	0407e793          	or	a5,a5,64
201041c0:	00f41623          	sh	a5,12(s0)
201041c4:	557d                	li	a0,-1
201041c6:	a8a5                	j	2010423e <__swsetup_r+0xb4>
201041c8:	8b91                	and	a5,a5,4
201041ca:	c78d                	beqz	a5,201041f4 <__swsetup_r+0x6a>
201041cc:	584c                	lw	a1,52(s0)
201041ce:	c989                	beqz	a1,201041e0 <__swsetup_r+0x56>
201041d0:	04440793          	add	a5,s0,68
201041d4:	00f58463          	beq	a1,a5,201041dc <__swsetup_r+0x52>
201041d8:	8526                	mv	a0,s1
201041da:	28b5                	jal	20104256 <_free_r>
201041dc:	02042a23          	sw	zero,52(s0)
201041e0:	00c45783          	lhu	a5,12(s0)
201041e4:	00042223          	sw	zero,4(s0)
201041e8:	fdb7f793          	and	a5,a5,-37
201041ec:	00f41623          	sh	a5,12(s0)
201041f0:	481c                	lw	a5,16(s0)
201041f2:	c01c                	sw	a5,0(s0)
201041f4:	00c45783          	lhu	a5,12(s0)
201041f8:	0087e793          	or	a5,a5,8
201041fc:	00f41623          	sh	a5,12(s0)
20104200:	481c                	lw	a5,16(s0)
20104202:	ef89                	bnez	a5,2010421c <__swsetup_r+0x92>
20104204:	00c45783          	lhu	a5,12(s0)
20104208:	20000713          	li	a4,512
2010420c:	2807f793          	and	a5,a5,640
20104210:	00e78663          	beq	a5,a4,2010421c <__swsetup_r+0x92>
20104214:	85a2                	mv	a1,s0
20104216:	8526                	mv	a0,s1
20104218:	3ff000ef          	jal	20104e16 <__smakebuf_r>
2010421c:	00c41783          	lh	a5,12(s0)
20104220:	0017f713          	and	a4,a5,1
20104224:	c315                	beqz	a4,20104248 <__swsetup_r+0xbe>
20104226:	4858                	lw	a4,20(s0)
20104228:	00042423          	sw	zero,8(s0)
2010422c:	40e00733          	neg	a4,a4
20104230:	cc18                	sw	a4,24(s0)
20104232:	4818                	lw	a4,16(s0)
20104234:	4501                	li	a0,0
20104236:	e701                	bnez	a4,2010423e <__swsetup_r+0xb4>
20104238:	0807f713          	and	a4,a5,128
2010423c:	f341                	bnez	a4,201041bc <__swsetup_r+0x32>
2010423e:	40b2                	lw	ra,12(sp)
20104240:	4422                	lw	s0,8(sp)
20104242:	4492                	lw	s1,4(sp)
20104244:	0141                	add	sp,sp,16
20104246:	8082                	ret
20104248:	0027f713          	and	a4,a5,2
2010424c:	4681                	li	a3,0
2010424e:	e311                	bnez	a4,20104252 <__swsetup_r+0xc8>
20104250:	4854                	lw	a3,20(s0)
20104252:	c414                	sw	a3,8(s0)
20104254:	bff9                	j	20104232 <__swsetup_r+0xa8>

20104256 <_free_r>:
_free_r():
20104256:	c1c5                	beqz	a1,201042f6 <_free_r+0xa0>
20104258:	ffc5a783          	lw	a5,-4(a1)
2010425c:	1101                	add	sp,sp,-32
2010425e:	cc22                	sw	s0,24(sp)
20104260:	ce06                	sw	ra,28(sp)
20104262:	ffc58413          	add	s0,a1,-4
20104266:	0007d363          	bgez	a5,2010426c <_free_r+0x16>
2010426a:	943e                	add	s0,s0,a5
2010426c:	c62a                	sw	a0,12(sp)
2010426e:	2431                	jal	2010447a <__malloc_lock>
20104270:	5fefd717          	auipc	a4,0x5fefd
20104274:	83c70713          	add	a4,a4,-1988 # 80000aac <__malloc_free_list>
20104278:	431c                	lw	a5,0(a4)
2010427a:	4532                	lw	a0,12(sp)
2010427c:	eb81                	bnez	a5,2010428c <_free_r+0x36>
2010427e:	00042223          	sw	zero,4(s0)
20104282:	c300                	sw	s0,0(a4)
20104284:	4462                	lw	s0,24(sp)
20104286:	40f2                	lw	ra,28(sp)
20104288:	6105                	add	sp,sp,32
2010428a:	aacd                	j	2010447c <__malloc_unlock>
2010428c:	00f47d63          	bgeu	s0,a5,201042a6 <_free_r+0x50>
20104290:	4010                	lw	a2,0(s0)
20104292:	00c406b3          	add	a3,s0,a2
20104296:	00d79663          	bne	a5,a3,201042a2 <_free_r+0x4c>
2010429a:	4394                	lw	a3,0(a5)
2010429c:	43dc                	lw	a5,4(a5)
2010429e:	96b2                	add	a3,a3,a2
201042a0:	c014                	sw	a3,0(s0)
201042a2:	c05c                	sw	a5,4(s0)
201042a4:	bff9                	j	20104282 <_free_r+0x2c>
201042a6:	873e                	mv	a4,a5
201042a8:	43dc                	lw	a5,4(a5)
201042aa:	c399                	beqz	a5,201042b0 <_free_r+0x5a>
201042ac:	fef47de3          	bgeu	s0,a5,201042a6 <_free_r+0x50>
201042b0:	4314                	lw	a3,0(a4)
201042b2:	00d70633          	add	a2,a4,a3
201042b6:	00861f63          	bne	a2,s0,201042d4 <_free_r+0x7e>
201042ba:	4010                	lw	a2,0(s0)
201042bc:	96b2                	add	a3,a3,a2
201042be:	c314                	sw	a3,0(a4)
201042c0:	00d70633          	add	a2,a4,a3
201042c4:	fcc790e3          	bne	a5,a2,20104284 <_free_r+0x2e>
201042c8:	4390                	lw	a2,0(a5)
201042ca:	43dc                	lw	a5,4(a5)
201042cc:	96b2                	add	a3,a3,a2
201042ce:	c314                	sw	a3,0(a4)
201042d0:	c35c                	sw	a5,4(a4)
201042d2:	bf4d                	j	20104284 <_free_r+0x2e>
201042d4:	00c47563          	bgeu	s0,a2,201042de <_free_r+0x88>
201042d8:	47b1                	li	a5,12
201042da:	c11c                	sw	a5,0(a0)
201042dc:	b765                	j	20104284 <_free_r+0x2e>
201042de:	4010                	lw	a2,0(s0)
201042e0:	00c406b3          	add	a3,s0,a2
201042e4:	00d79663          	bne	a5,a3,201042f0 <_free_r+0x9a>
201042e8:	4394                	lw	a3,0(a5)
201042ea:	43dc                	lw	a5,4(a5)
201042ec:	96b2                	add	a3,a3,a2
201042ee:	c014                	sw	a3,0(s0)
201042f0:	c05c                	sw	a5,4(s0)
201042f2:	c340                	sw	s0,4(a4)
201042f4:	bf41                	j	20104284 <_free_r+0x2e>
201042f6:	8082                	ret

201042f8 <sbrk_aligned>:
sbrk_aligned():
201042f8:	1141                	add	sp,sp,-16
201042fa:	c04a                	sw	s2,0(sp)
201042fc:	5fefc917          	auipc	s2,0x5fefc
20104300:	7ac90913          	add	s2,s2,1964 # 80000aa8 <__malloc_sbrk_start>
20104304:	00092783          	lw	a5,0(s2)
20104308:	c422                	sw	s0,8(sp)
2010430a:	c226                	sw	s1,4(sp)
2010430c:	c606                	sw	ra,12(sp)
2010430e:	84aa                	mv	s1,a0
20104310:	842e                	mv	s0,a1
20104312:	e791                	bnez	a5,2010431e <sbrk_aligned+0x26>
20104314:	4581                	li	a1,0
20104316:	5bf000ef          	jal	201050d4 <_sbrk_r>
2010431a:	00a92023          	sw	a0,0(s2)
2010431e:	85a2                	mv	a1,s0
20104320:	8526                	mv	a0,s1
20104322:	5b3000ef          	jal	201050d4 <_sbrk_r>
20104326:	597d                	li	s2,-1
20104328:	01251a63          	bne	a0,s2,2010433c <sbrk_aligned+0x44>
2010432c:	547d                	li	s0,-1
2010432e:	40b2                	lw	ra,12(sp)
20104330:	8522                	mv	a0,s0
20104332:	4422                	lw	s0,8(sp)
20104334:	4492                	lw	s1,4(sp)
20104336:	4902                	lw	s2,0(sp)
20104338:	0141                	add	sp,sp,16
2010433a:	8082                	ret
2010433c:	00350413          	add	s0,a0,3
20104340:	9871                	and	s0,s0,-4
20104342:	fe8506e3          	beq	a0,s0,2010432e <sbrk_aligned+0x36>
20104346:	40a405b3          	sub	a1,s0,a0
2010434a:	8526                	mv	a0,s1
2010434c:	589000ef          	jal	201050d4 <_sbrk_r>
20104350:	fd251fe3          	bne	a0,s2,2010432e <sbrk_aligned+0x36>
20104354:	bfe1                	j	2010432c <sbrk_aligned+0x34>

20104356 <_malloc_r>:
_malloc_r():
20104356:	1101                	add	sp,sp,-32
20104358:	ca26                	sw	s1,20(sp)
2010435a:	00358493          	add	s1,a1,3
2010435e:	98f1                	and	s1,s1,-4
20104360:	c84a                	sw	s2,16(sp)
20104362:	ce06                	sw	ra,28(sp)
20104364:	cc22                	sw	s0,24(sp)
20104366:	c64e                	sw	s3,12(sp)
20104368:	c452                	sw	s4,8(sp)
2010436a:	04a1                	add	s1,s1,8
2010436c:	47b1                	li	a5,12
2010436e:	892a                	mv	s2,a0
20104370:	06f4f863          	bgeu	s1,a5,201043e0 <_malloc_r+0x8a>
20104374:	44b1                	li	s1,12
20104376:	06b4e763          	bltu	s1,a1,201043e4 <_malloc_r+0x8e>
2010437a:	854a                	mv	a0,s2
2010437c:	28fd                	jal	2010447a <__malloc_lock>
2010437e:	5fefc997          	auipc	s3,0x5fefc
20104382:	72e98993          	add	s3,s3,1838 # 80000aac <__malloc_free_list>
20104386:	0009a783          	lw	a5,0(s3)
2010438a:	843e                	mv	s0,a5
2010438c:	e825                	bnez	s0,201043fc <_malloc_r+0xa6>
2010438e:	85a6                	mv	a1,s1
20104390:	854a                	mv	a0,s2
20104392:	379d                	jal	201042f8 <sbrk_aligned>
20104394:	57fd                	li	a5,-1
20104396:	842a                	mv	s0,a0
20104398:	0cf51f63          	bne	a0,a5,20104476 <_malloc_r+0x120>
2010439c:	0009a403          	lw	s0,0(s3)
201043a0:	87a2                	mv	a5,s0
201043a2:	ebd5                	bnez	a5,20104456 <_malloc_r+0x100>
201043a4:	c079                	beqz	s0,2010446a <_malloc_r+0x114>
201043a6:	00042a03          	lw	s4,0(s0)
201043aa:	4581                	li	a1,0
201043ac:	854a                	mv	a0,s2
201043ae:	9a22                	add	s4,s4,s0
201043b0:	525000ef          	jal	201050d4 <_sbrk_r>
201043b4:	0aaa1b63          	bne	s4,a0,2010446a <_malloc_r+0x114>
201043b8:	401c                	lw	a5,0(s0)
201043ba:	854a                	mv	a0,s2
201043bc:	8c9d                	sub	s1,s1,a5
201043be:	85a6                	mv	a1,s1
201043c0:	3f25                	jal	201042f8 <sbrk_aligned>
201043c2:	57fd                	li	a5,-1
201043c4:	0af50363          	beq	a0,a5,2010446a <_malloc_r+0x114>
201043c8:	401c                	lw	a5,0(s0)
201043ca:	97a6                	add	a5,a5,s1
201043cc:	c01c                	sw	a5,0(s0)
201043ce:	0009a783          	lw	a5,0(s3)
201043d2:	43d8                	lw	a4,4(a5)
201043d4:	e741                	bnez	a4,2010445c <_malloc_r+0x106>
201043d6:	5fefc797          	auipc	a5,0x5fefc
201043da:	6c07ab23          	sw	zero,1750(a5) # 80000aac <__malloc_free_list>
201043de:	a081                	j	2010441e <_malloc_r+0xc8>
201043e0:	f804dbe3          	bgez	s1,20104376 <_malloc_r+0x20>
201043e4:	47b1                	li	a5,12
201043e6:	00f92023          	sw	a5,0(s2)
201043ea:	4501                	li	a0,0
201043ec:	40f2                	lw	ra,28(sp)
201043ee:	4462                	lw	s0,24(sp)
201043f0:	44d2                	lw	s1,20(sp)
201043f2:	4942                	lw	s2,16(sp)
201043f4:	49b2                	lw	s3,12(sp)
201043f6:	4a22                	lw	s4,8(sp)
201043f8:	6105                	add	sp,sp,32
201043fa:	8082                	ret
201043fc:	4014                	lw	a3,0(s0)
201043fe:	8e85                	sub	a3,a3,s1
20104400:	0406c863          	bltz	a3,20104450 <_malloc_r+0xfa>
20104404:	472d                	li	a4,11
20104406:	02d77d63          	bgeu	a4,a3,20104440 <_malloc_r+0xea>
2010440a:	c004                	sw	s1,0(s0)
2010440c:	00940733          	add	a4,s0,s1
20104410:	02879663          	bne	a5,s0,2010443c <_malloc_r+0xe6>
20104414:	00e9a023          	sw	a4,0(s3)
20104418:	405c                	lw	a5,4(s0)
2010441a:	c314                	sw	a3,0(a4)
2010441c:	c35c                	sw	a5,4(a4)
2010441e:	854a                	mv	a0,s2
20104420:	28b1                	jal	2010447c <__malloc_unlock>
20104422:	00b40513          	add	a0,s0,11
20104426:	00440793          	add	a5,s0,4
2010442a:	9961                	and	a0,a0,-8
2010442c:	40f50733          	sub	a4,a0,a5
20104430:	faf50ee3          	beq	a0,a5,201043ec <_malloc_r+0x96>
20104434:	943a                	add	s0,s0,a4
20104436:	8f89                	sub	a5,a5,a0
20104438:	c01c                	sw	a5,0(s0)
2010443a:	bf4d                	j	201043ec <_malloc_r+0x96>
2010443c:	c3d8                	sw	a4,4(a5)
2010443e:	bfe9                	j	20104418 <_malloc_r+0xc2>
20104440:	4058                	lw	a4,4(s0)
20104442:	00879563          	bne	a5,s0,2010444c <_malloc_r+0xf6>
20104446:	00e9a023          	sw	a4,0(s3)
2010444a:	bfd1                	j	2010441e <_malloc_r+0xc8>
2010444c:	c3d8                	sw	a4,4(a5)
2010444e:	bfc1                	j	2010441e <_malloc_r+0xc8>
20104450:	87a2                	mv	a5,s0
20104452:	4040                	lw	s0,4(s0)
20104454:	bf25                	j	2010438c <_malloc_r+0x36>
20104456:	843e                	mv	s0,a5
20104458:	43dc                	lw	a5,4(a5)
2010445a:	b7a1                	j	201043a2 <_malloc_r+0x4c>
2010445c:	873e                	mv	a4,a5
2010445e:	43dc                	lw	a5,4(a5)
20104460:	fe879ee3          	bne	a5,s0,2010445c <_malloc_r+0x106>
20104464:	00072223          	sw	zero,4(a4)
20104468:	bf5d                	j	2010441e <_malloc_r+0xc8>
2010446a:	47b1                	li	a5,12
2010446c:	00f92023          	sw	a5,0(s2)
20104470:	854a                	mv	a0,s2
20104472:	2029                	jal	2010447c <__malloc_unlock>
20104474:	bf9d                	j	201043ea <_malloc_r+0x94>
20104476:	c104                	sw	s1,0(a0)
20104478:	b75d                	j	2010441e <_malloc_r+0xc8>

2010447a <__malloc_lock>:
__malloc_lock():
2010447a:	8082                	ret

2010447c <__malloc_unlock>:
__malloc_unlock():
2010447c:	8082                	ret

2010447e <__sfputc_r>:
__sfputc_r():
2010447e:	461c                	lw	a5,8(a2)
20104480:	17fd                	add	a5,a5,-1
20104482:	c61c                	sw	a5,8(a2)
20104484:	0007d963          	bgez	a5,20104496 <__sfputc_r+0x18>
20104488:	4e18                	lw	a4,24(a2)
2010448a:	00e7c563          	blt	a5,a4,20104494 <__sfputc_r+0x16>
2010448e:	47a9                	li	a5,10
20104490:	00f59363          	bne	a1,a5,20104496 <__sfputc_r+0x18>
20104494:	b9a9                	j	201040ee <__swbuf_r>
20104496:	421c                	lw	a5,0(a2)
20104498:	852e                	mv	a0,a1
2010449a:	00178713          	add	a4,a5,1
2010449e:	c218                	sw	a4,0(a2)
201044a0:	00b78023          	sb	a1,0(a5)
201044a4:	8082                	ret

201044a6 <__sfputs_r>:
__sfputs_r():
201044a6:	1101                	add	sp,sp,-32
201044a8:	cc22                	sw	s0,24(sp)
201044aa:	ca26                	sw	s1,20(sp)
201044ac:	c84a                	sw	s2,16(sp)
201044ae:	c64e                	sw	s3,12(sp)
201044b0:	c452                	sw	s4,8(sp)
201044b2:	ce06                	sw	ra,28(sp)
201044b4:	892a                	mv	s2,a0
201044b6:	89ae                	mv	s3,a1
201044b8:	8432                	mv	s0,a2
201044ba:	00d604b3          	add	s1,a2,a3
201044be:	5a7d                	li	s4,-1
201044c0:	00941463          	bne	s0,s1,201044c8 <__sfputs_r+0x22>
201044c4:	4501                	li	a0,0
201044c6:	a809                	j	201044d8 <__sfputs_r+0x32>
201044c8:	00044583          	lbu	a1,0(s0)
201044cc:	864e                	mv	a2,s3
201044ce:	854a                	mv	a0,s2
201044d0:	377d                	jal	2010447e <__sfputc_r>
201044d2:	0405                	add	s0,s0,1
201044d4:	ff4516e3          	bne	a0,s4,201044c0 <__sfputs_r+0x1a>
201044d8:	40f2                	lw	ra,28(sp)
201044da:	4462                	lw	s0,24(sp)
201044dc:	44d2                	lw	s1,20(sp)
201044de:	4942                	lw	s2,16(sp)
201044e0:	49b2                	lw	s3,12(sp)
201044e2:	4a22                	lw	s4,8(sp)
201044e4:	6105                	add	sp,sp,32
201044e6:	8082                	ret

201044e8 <_vfiprintf_r>:
_vfiprintf_r():
201044e8:	7135                	add	sp,sp,-160
201044ea:	cd22                	sw	s0,152(sp)
201044ec:	cb26                	sw	s1,148(sp)
201044ee:	c94a                	sw	s2,144(sp)
201044f0:	c74e                	sw	s3,140(sp)
201044f2:	cf06                	sw	ra,156(sp)
201044f4:	c552                	sw	s4,136(sp)
201044f6:	c356                	sw	s5,132(sp)
201044f8:	c15a                	sw	s6,128(sp)
201044fa:	dede                	sw	s7,124(sp)
201044fc:	dce2                	sw	s8,120(sp)
201044fe:	dae6                	sw	s9,116(sp)
20104500:	89aa                	mv	s3,a0
20104502:	892e                	mv	s2,a1
20104504:	84b2                	mv	s1,a2
20104506:	8436                	mv	s0,a3
20104508:	c509                	beqz	a0,20104512 <_vfiprintf_r+0x2a>
2010450a:	511c                	lw	a5,32(a0)
2010450c:	e399                	bnez	a5,20104512 <_vfiprintf_r+0x2a>
2010450e:	02b000ef          	jal	20104d38 <__sinit>
20104512:	00c95783          	lhu	a5,12(s2)
20104516:	8ba1                	and	a5,a5,8
20104518:	c7f1                	beqz	a5,201045e4 <_vfiprintf_r+0xfc>
2010451a:	01092783          	lw	a5,16(s2)
2010451e:	c3f9                	beqz	a5,201045e4 <_vfiprintf_r+0xfc>
20104520:	02000793          	li	a5,32
20104524:	02f104a3          	sb	a5,41(sp)
20104528:	03000793          	li	a5,48
2010452c:	d202                	sw	zero,36(sp)
2010452e:	02f10523          	sb	a5,42(sp)
20104532:	c622                	sw	s0,12(sp)
20104534:	02500b93          	li	s7,37
20104538:	ffffea97          	auipc	s5,0xffffe
2010453c:	4b0a8a93          	add	s5,s5,1200 # 201029e8 <input_data_3+0x310>
20104540:	4c05                	li	s8,1
20104542:	4b29                	li	s6,10
20104544:	8426                	mv	s0,s1
20104546:	00044783          	lbu	a5,0(s0)
2010454a:	c399                	beqz	a5,20104550 <_vfiprintf_r+0x68>
2010454c:	0b779e63          	bne	a5,s7,20104608 <_vfiprintf_r+0x120>
20104550:	40940cb3          	sub	s9,s0,s1
20104554:	00940d63          	beq	s0,s1,2010456e <_vfiprintf_r+0x86>
20104558:	86e6                	mv	a3,s9
2010455a:	8626                	mv	a2,s1
2010455c:	85ca                	mv	a1,s2
2010455e:	854e                	mv	a0,s3
20104560:	3799                	jal	201044a6 <__sfputs_r>
20104562:	57fd                	li	a5,-1
20104564:	1cf50363          	beq	a0,a5,2010472a <_vfiprintf_r+0x242>
20104568:	5792                	lw	a5,36(sp)
2010456a:	97e6                	add	a5,a5,s9
2010456c:	d23e                	sw	a5,36(sp)
2010456e:	00044783          	lbu	a5,0(s0)
20104572:	1a078c63          	beqz	a5,2010472a <_vfiprintf_r+0x242>
20104576:	57fd                	li	a5,-1
20104578:	00140493          	add	s1,s0,1
2010457c:	c802                	sw	zero,16(sp)
2010457e:	ce02                	sw	zero,28(sp)
20104580:	ca3e                	sw	a5,20(sp)
20104582:	cc02                	sw	zero,24(sp)
20104584:	040109a3          	sb	zero,83(sp)
20104588:	d482                	sw	zero,104(sp)
2010458a:	0004c583          	lbu	a1,0(s1)
2010458e:	4615                	li	a2,5
20104590:	8556                	mv	a0,s5
20104592:	22f000ef          	jal	20104fc0 <memchr>
20104596:	47c2                	lw	a5,16(sp)
20104598:	00148413          	add	s0,s1,1
2010459c:	e925                	bnez	a0,2010460c <_vfiprintf_r+0x124>
2010459e:	0107f713          	and	a4,a5,16
201045a2:	c709                	beqz	a4,201045ac <_vfiprintf_r+0xc4>
201045a4:	02000713          	li	a4,32
201045a8:	04e109a3          	sb	a4,83(sp)
201045ac:	0087f713          	and	a4,a5,8
201045b0:	c709                	beqz	a4,201045ba <_vfiprintf_r+0xd2>
201045b2:	02b00713          	li	a4,43
201045b6:	04e109a3          	sb	a4,83(sp)
201045ba:	0004c683          	lbu	a3,0(s1)
201045be:	02a00713          	li	a4,42
201045c2:	04e68d63          	beq	a3,a4,2010461c <_vfiprintf_r+0x134>
201045c6:	47f2                	lw	a5,28(sp)
201045c8:	8426                	mv	s0,s1
201045ca:	4681                	li	a3,0
201045cc:	4625                	li	a2,9
201045ce:	00044703          	lbu	a4,0(s0)
201045d2:	00140593          	add	a1,s0,1
201045d6:	fd070713          	add	a4,a4,-48
201045da:	08e67763          	bgeu	a2,a4,20104668 <_vfiprintf_r+0x180>
201045de:	c6b9                	beqz	a3,2010462c <_vfiprintf_r+0x144>
201045e0:	ce3e                	sw	a5,28(sp)
201045e2:	a0a9                	j	2010462c <_vfiprintf_r+0x144>
201045e4:	85ca                	mv	a1,s2
201045e6:	854e                	mv	a0,s3
201045e8:	364d                	jal	2010418a <__swsetup_r>
201045ea:	d91d                	beqz	a0,20104520 <_vfiprintf_r+0x38>
201045ec:	557d                	li	a0,-1
201045ee:	40fa                	lw	ra,156(sp)
201045f0:	446a                	lw	s0,152(sp)
201045f2:	44da                	lw	s1,148(sp)
201045f4:	494a                	lw	s2,144(sp)
201045f6:	49ba                	lw	s3,140(sp)
201045f8:	4a2a                	lw	s4,136(sp)
201045fa:	4a9a                	lw	s5,132(sp)
201045fc:	4b0a                	lw	s6,128(sp)
201045fe:	5bf6                	lw	s7,124(sp)
20104600:	5c66                	lw	s8,120(sp)
20104602:	5cd6                	lw	s9,116(sp)
20104604:	610d                	add	sp,sp,160
20104606:	8082                	ret
20104608:	0405                	add	s0,s0,1
2010460a:	bf35                	j	20104546 <_vfiprintf_r+0x5e>
2010460c:	41550533          	sub	a0,a0,s5
20104610:	00ac1533          	sll	a0,s8,a0
20104614:	8fc9                	or	a5,a5,a0
20104616:	c83e                	sw	a5,16(sp)
20104618:	84a2                	mv	s1,s0
2010461a:	bf85                	j	2010458a <_vfiprintf_r+0xa2>
2010461c:	4732                	lw	a4,12(sp)
2010461e:	00470693          	add	a3,a4,4
20104622:	4318                	lw	a4,0(a4)
20104624:	c636                	sw	a3,12(sp)
20104626:	02074a63          	bltz	a4,2010465a <_vfiprintf_r+0x172>
2010462a:	ce3a                	sw	a4,28(sp)
2010462c:	00044703          	lbu	a4,0(s0)
20104630:	02e00793          	li	a5,46
20104634:	04f71e63          	bne	a4,a5,20104690 <_vfiprintf_r+0x1a8>
20104638:	00144703          	lbu	a4,1(s0)
2010463c:	02a00793          	li	a5,42
20104640:	02f71a63          	bne	a4,a5,20104674 <_vfiprintf_r+0x18c>
20104644:	47b2                	lw	a5,12(sp)
20104646:	0409                	add	s0,s0,2
20104648:	00478713          	add	a4,a5,4
2010464c:	439c                	lw	a5,0(a5)
2010464e:	c63a                	sw	a4,12(sp)
20104650:	0007d363          	bgez	a5,20104656 <_vfiprintf_r+0x16e>
20104654:	57fd                	li	a5,-1
20104656:	ca3e                	sw	a5,20(sp)
20104658:	a825                	j	20104690 <_vfiprintf_r+0x1a8>
2010465a:	40e00733          	neg	a4,a4
2010465e:	0027e793          	or	a5,a5,2
20104662:	ce3a                	sw	a4,28(sp)
20104664:	c83e                	sw	a5,16(sp)
20104666:	b7d9                	j	2010462c <_vfiprintf_r+0x144>
20104668:	036787b3          	mul	a5,a5,s6
2010466c:	842e                	mv	s0,a1
2010466e:	4685                	li	a3,1
20104670:	97ba                	add	a5,a5,a4
20104672:	bfb1                	j	201045ce <_vfiprintf_r+0xe6>
20104674:	0405                	add	s0,s0,1
20104676:	ca02                	sw	zero,20(sp)
20104678:	4681                	li	a3,0
2010467a:	4781                	li	a5,0
2010467c:	4625                	li	a2,9
2010467e:	00044703          	lbu	a4,0(s0)
20104682:	00140593          	add	a1,s0,1
20104686:	fd070713          	add	a4,a4,-48
2010468a:	06e67663          	bgeu	a2,a4,201046f6 <_vfiprintf_r+0x20e>
2010468e:	f6e1                	bnez	a3,20104656 <_vfiprintf_r+0x16e>
20104690:	00044583          	lbu	a1,0(s0)
20104694:	460d                	li	a2,3
20104696:	ffffe517          	auipc	a0,0xffffe
2010469a:	35a50513          	add	a0,a0,858 # 201029f0 <input_data_3+0x318>
2010469e:	123000ef          	jal	20104fc0 <memchr>
201046a2:	cd11                	beqz	a0,201046be <_vfiprintf_r+0x1d6>
201046a4:	ffffe797          	auipc	a5,0xffffe
201046a8:	34c78793          	add	a5,a5,844 # 201029f0 <input_data_3+0x318>
201046ac:	8d1d                	sub	a0,a0,a5
201046ae:	47c2                	lw	a5,16(sp)
201046b0:	04000713          	li	a4,64
201046b4:	00a71733          	sll	a4,a4,a0
201046b8:	8fd9                	or	a5,a5,a4
201046ba:	0405                	add	s0,s0,1
201046bc:	c83e                	sw	a5,16(sp)
201046be:	00044583          	lbu	a1,0(s0)
201046c2:	4619                	li	a2,6
201046c4:	ffffe517          	auipc	a0,0xffffe
201046c8:	33050513          	add	a0,a0,816 # 201029f4 <input_data_3+0x31c>
201046cc:	00140493          	add	s1,s0,1
201046d0:	02b10423          	sb	a1,40(sp)
201046d4:	0ed000ef          	jal	20104fc0 <memchr>
201046d8:	c12d                	beqz	a0,2010473a <_vfiprintf_r+0x252>
201046da:	00000793          	li	a5,0
201046de:	e795                	bnez	a5,2010470a <_vfiprintf_r+0x222>
201046e0:	4742                	lw	a4,16(sp)
201046e2:	47b2                	lw	a5,12(sp)
201046e4:	10077713          	and	a4,a4,256
201046e8:	cf09                	beqz	a4,20104702 <_vfiprintf_r+0x21a>
201046ea:	0791                	add	a5,a5,4
201046ec:	c63e                	sw	a5,12(sp)
201046ee:	5792                	lw	a5,36(sp)
201046f0:	97d2                	add	a5,a5,s4
201046f2:	d23e                	sw	a5,36(sp)
201046f4:	bd81                	j	20104544 <_vfiprintf_r+0x5c>
201046f6:	036787b3          	mul	a5,a5,s6
201046fa:	842e                	mv	s0,a1
201046fc:	4685                	li	a3,1
201046fe:	97ba                	add	a5,a5,a4
20104700:	bfbd                	j	2010467e <_vfiprintf_r+0x196>
20104702:	079d                	add	a5,a5,7
20104704:	9be1                	and	a5,a5,-8
20104706:	07a1                	add	a5,a5,8
20104708:	b7d5                	j	201046ec <_vfiprintf_r+0x204>
2010470a:	0078                	add	a4,sp,12
2010470c:	00000697          	auipc	a3,0x0
20104710:	d9a68693          	add	a3,a3,-614 # 201044a6 <__sfputs_r>
20104714:	864a                	mv	a2,s2
20104716:	080c                	add	a1,sp,16
20104718:	854e                	mv	a0,s3
2010471a:	00000097          	auipc	ra,0x0
2010471e:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20104722:	57fd                	li	a5,-1
20104724:	8a2a                	mv	s4,a0
20104726:	fcf514e3          	bne	a0,a5,201046ee <_vfiprintf_r+0x206>
2010472a:	00c95783          	lhu	a5,12(s2)
2010472e:	0407f793          	and	a5,a5,64
20104732:	ea079de3          	bnez	a5,201045ec <_vfiprintf_r+0x104>
20104736:	5512                	lw	a0,36(sp)
20104738:	bd5d                	j	201045ee <_vfiprintf_r+0x106>
2010473a:	0078                	add	a4,sp,12
2010473c:	00000697          	auipc	a3,0x0
20104740:	d6a68693          	add	a3,a3,-662 # 201044a6 <__sfputs_r>
20104744:	864a                	mv	a2,s2
20104746:	080c                	add	a1,sp,16
20104748:	854e                	mv	a0,s3
2010474a:	2a11                	jal	2010485e <_printf_i>
2010474c:	bfd9                	j	20104722 <_vfiprintf_r+0x23a>

2010474e <_printf_common>:
_printf_common():
2010474e:	7179                	add	sp,sp,-48
20104750:	ca56                	sw	s5,20(sp)
20104752:	499c                	lw	a5,16(a1)
20104754:	8aba                	mv	s5,a4
20104756:	4598                	lw	a4,8(a1)
20104758:	d422                	sw	s0,40(sp)
2010475a:	d04a                	sw	s2,32(sp)
2010475c:	ce4e                	sw	s3,28(sp)
2010475e:	cc52                	sw	s4,24(sp)
20104760:	d606                	sw	ra,44(sp)
20104762:	d226                	sw	s1,36(sp)
20104764:	c85a                	sw	s6,16(sp)
20104766:	c65e                	sw	s7,12(sp)
20104768:	89aa                	mv	s3,a0
2010476a:	842e                	mv	s0,a1
2010476c:	8932                	mv	s2,a2
2010476e:	8a36                	mv	s4,a3
20104770:	00e7d363          	bge	a5,a4,20104776 <_printf_common+0x28>
20104774:	87ba                	mv	a5,a4
20104776:	00f92023          	sw	a5,0(s2)
2010477a:	04344703          	lbu	a4,67(s0)
2010477e:	c701                	beqz	a4,20104786 <_printf_common+0x38>
20104780:	0785                	add	a5,a5,1
20104782:	00f92023          	sw	a5,0(s2)
20104786:	401c                	lw	a5,0(s0)
20104788:	0207f793          	and	a5,a5,32
2010478c:	c791                	beqz	a5,20104798 <_printf_common+0x4a>
2010478e:	00092783          	lw	a5,0(s2)
20104792:	0789                	add	a5,a5,2
20104794:	00f92023          	sw	a5,0(s2)
20104798:	4004                	lw	s1,0(s0)
2010479a:	8899                	and	s1,s1,6
2010479c:	e891                	bnez	s1,201047b0 <_printf_common+0x62>
2010479e:	01940b13          	add	s6,s0,25
201047a2:	5bfd                	li	s7,-1
201047a4:	445c                	lw	a5,12(s0)
201047a6:	00092703          	lw	a4,0(s2)
201047aa:	8f99                	sub	a5,a5,a4
201047ac:	04f4cc63          	blt	s1,a5,20104804 <_printf_common+0xb6>
201047b0:	04344783          	lbu	a5,67(s0)
201047b4:	00f036b3          	snez	a3,a5
201047b8:	401c                	lw	a5,0(s0)
201047ba:	0207f793          	and	a5,a5,32
201047be:	eba5                	bnez	a5,2010482e <_printf_common+0xe0>
201047c0:	04340613          	add	a2,s0,67
201047c4:	85d2                	mv	a1,s4
201047c6:	854e                	mv	a0,s3
201047c8:	9a82                	jalr	s5
201047ca:	57fd                	li	a5,-1
201047cc:	04f50363          	beq	a0,a5,20104812 <_printf_common+0xc4>
201047d0:	401c                	lw	a5,0(s0)
201047d2:	4711                	li	a4,4
201047d4:	4481                	li	s1,0
201047d6:	8b99                	and	a5,a5,6
201047d8:	00e79963          	bne	a5,a4,201047ea <_printf_common+0x9c>
201047dc:	4444                	lw	s1,12(s0)
201047de:	00092783          	lw	a5,0(s2)
201047e2:	8c9d                	sub	s1,s1,a5
201047e4:	0004d363          	bgez	s1,201047ea <_printf_common+0x9c>
201047e8:	4481                	li	s1,0
201047ea:	441c                	lw	a5,8(s0)
201047ec:	4818                	lw	a4,16(s0)
201047ee:	00f75463          	bge	a4,a5,201047f6 <_printf_common+0xa8>
201047f2:	8f99                	sub	a5,a5,a4
201047f4:	94be                	add	s1,s1,a5
201047f6:	4901                	li	s2,0
201047f8:	0469                	add	s0,s0,26
201047fa:	5b7d                	li	s6,-1
201047fc:	05249863          	bne	s1,s2,2010484c <_printf_common+0xfe>
20104800:	4501                	li	a0,0
20104802:	a809                	j	20104814 <_printf_common+0xc6>
20104804:	4685                	li	a3,1
20104806:	865a                	mv	a2,s6
20104808:	85d2                	mv	a1,s4
2010480a:	854e                	mv	a0,s3
2010480c:	9a82                	jalr	s5
2010480e:	01751e63          	bne	a0,s7,2010482a <_printf_common+0xdc>
20104812:	557d                	li	a0,-1
20104814:	50b2                	lw	ra,44(sp)
20104816:	5422                	lw	s0,40(sp)
20104818:	5492                	lw	s1,36(sp)
2010481a:	5902                	lw	s2,32(sp)
2010481c:	49f2                	lw	s3,28(sp)
2010481e:	4a62                	lw	s4,24(sp)
20104820:	4ad2                	lw	s5,20(sp)
20104822:	4b42                	lw	s6,16(sp)
20104824:	4bb2                	lw	s7,12(sp)
20104826:	6145                	add	sp,sp,48
20104828:	8082                	ret
2010482a:	0485                	add	s1,s1,1
2010482c:	bfa5                	j	201047a4 <_printf_common+0x56>
2010482e:	00d40733          	add	a4,s0,a3
20104832:	03000613          	li	a2,48
20104836:	04c701a3          	sb	a2,67(a4)
2010483a:	04544703          	lbu	a4,69(s0)
2010483e:	00168793          	add	a5,a3,1
20104842:	97a2                	add	a5,a5,s0
20104844:	0689                	add	a3,a3,2
20104846:	04e781a3          	sb	a4,67(a5)
2010484a:	bf9d                	j	201047c0 <_printf_common+0x72>
2010484c:	4685                	li	a3,1
2010484e:	8622                	mv	a2,s0
20104850:	85d2                	mv	a1,s4
20104852:	854e                	mv	a0,s3
20104854:	9a82                	jalr	s5
20104856:	fb650ee3          	beq	a0,s6,20104812 <_printf_common+0xc4>
2010485a:	0905                	add	s2,s2,1
2010485c:	b745                	j	201047fc <_printf_common+0xae>

2010485e <_printf_i>:
_printf_i():
2010485e:	7179                	add	sp,sp,-48
20104860:	d422                	sw	s0,40(sp)
20104862:	d226                	sw	s1,36(sp)
20104864:	d04a                	sw	s2,32(sp)
20104866:	ce4e                	sw	s3,28(sp)
20104868:	d606                	sw	ra,44(sp)
2010486a:	cc52                	sw	s4,24(sp)
2010486c:	ca56                	sw	s5,20(sp)
2010486e:	c85a                	sw	s6,16(sp)
20104870:	0185c803          	lbu	a6,24(a1)
20104874:	07800793          	li	a5,120
20104878:	84aa                	mv	s1,a0
2010487a:	842e                	mv	s0,a1
2010487c:	8932                	mv	s2,a2
2010487e:	89b6                	mv	s3,a3
20104880:	0307e263          	bltu	a5,a6,201048a4 <_printf_i+0x46>
20104884:	06200793          	li	a5,98
20104888:	04358693          	add	a3,a1,67
2010488c:	0307e163          	bltu	a5,a6,201048ae <_printf_i+0x50>
20104890:	1a080e63          	beqz	a6,20104a4c <_printf_i+0x1ee>
20104894:	05800793          	li	a5,88
20104898:	ffffe617          	auipc	a2,0xffffe
2010489c:	16460613          	add	a2,a2,356 # 201029fc <input_data_3+0x324>
201048a0:	14f80163          	beq	a6,a5,201049e2 <_printf_i+0x184>
201048a4:	04240a93          	add	s5,s0,66
201048a8:	05040123          	sb	a6,66(s0)
201048ac:	a815                	j	201048e0 <_printf_i+0x82>
201048ae:	f9d80793          	add	a5,a6,-99
201048b2:	0ff7f793          	zext.b	a5,a5
201048b6:	4655                	li	a2,21
201048b8:	fef666e3          	bltu	a2,a5,201048a4 <_printf_i+0x46>
201048bc:	ffffe617          	auipc	a2,0xffffe
201048c0:	16860613          	add	a2,a2,360 # 20102a24 <input_data_3+0x34c>
201048c4:	078a                	sll	a5,a5,0x2
201048c6:	97b2                	add	a5,a5,a2
201048c8:	439c                	lw	a5,0(a5)
201048ca:	97b2                	add	a5,a5,a2
201048cc:	8782                	jr	a5
201048ce:	431c                	lw	a5,0(a4)
201048d0:	04258a93          	add	s5,a1,66
201048d4:	00478693          	add	a3,a5,4
201048d8:	439c                	lw	a5,0(a5)
201048da:	c314                	sw	a3,0(a4)
201048dc:	04f58123          	sb	a5,66(a1)
201048e0:	4785                	li	a5,1
201048e2:	aa41                	j	20104a72 <_printf_i+0x214>
201048e4:	419c                	lw	a5,0(a1)
201048e6:	4308                	lw	a0,0(a4)
201048e8:	0807f613          	and	a2,a5,128
201048ec:	00450593          	add	a1,a0,4
201048f0:	c20d                	beqz	a2,20104912 <_printf_i+0xb4>
201048f2:	411c                	lw	a5,0(a0)
201048f4:	c30c                	sw	a1,0(a4)
201048f6:	0007d863          	bgez	a5,20104906 <_printf_i+0xa8>
201048fa:	02d00713          	li	a4,45
201048fe:	40f007b3          	neg	a5,a5
20104902:	04e401a3          	sb	a4,67(s0)
20104906:	ffffe617          	auipc	a2,0xffffe
2010490a:	0f660613          	add	a2,a2,246 # 201029fc <input_data_3+0x324>
2010490e:	4829                	li	a6,10
20104910:	a089                	j	20104952 <_printf_i+0xf4>
20104912:	0407f613          	and	a2,a5,64
20104916:	411c                	lw	a5,0(a0)
20104918:	c30c                	sw	a1,0(a4)
2010491a:	de71                	beqz	a2,201048f6 <_printf_i+0x98>
2010491c:	07c2                	sll	a5,a5,0x10
2010491e:	87c1                	sra	a5,a5,0x10
20104920:	bfd9                	j	201048f6 <_printf_i+0x98>
20104922:	418c                	lw	a1,0(a1)
20104924:	4310                	lw	a2,0(a4)
20104926:	0805f513          	and	a0,a1,128
2010492a:	421c                	lw	a5,0(a2)
2010492c:	0611                	add	a2,a2,4
2010492e:	e511                	bnez	a0,2010493a <_printf_i+0xdc>
20104930:	0405f593          	and	a1,a1,64
20104934:	c199                	beqz	a1,2010493a <_printf_i+0xdc>
20104936:	07c2                	sll	a5,a5,0x10
20104938:	83c1                	srl	a5,a5,0x10
2010493a:	c310                	sw	a2,0(a4)
2010493c:	06f00713          	li	a4,111
20104940:	ffffe617          	auipc	a2,0xffffe
20104944:	0bc60613          	add	a2,a2,188 # 201029fc <input_data_3+0x324>
20104948:	0ce81c63          	bne	a6,a4,20104a20 <_printf_i+0x1c2>
2010494c:	4821                	li	a6,8
2010494e:	040401a3          	sb	zero,67(s0)
20104952:	4058                	lw	a4,4(s0)
20104954:	c418                	sw	a4,8(s0)
20104956:	00074863          	bltz	a4,20104966 <_printf_i+0x108>
2010495a:	400c                	lw	a1,0(s0)
2010495c:	8f5d                	or	a4,a4,a5
2010495e:	8ab6                	mv	s5,a3
20104960:	99ed                	and	a1,a1,-5
20104962:	c00c                	sw	a1,0(s0)
20104964:	cf19                	beqz	a4,20104982 <_printf_i+0x124>
20104966:	8ab6                	mv	s5,a3
20104968:	0307f733          	remu	a4,a5,a6
2010496c:	1afd                	add	s5,s5,-1
2010496e:	9732                	add	a4,a4,a2
20104970:	00074703          	lbu	a4,0(a4)
20104974:	00ea8023          	sb	a4,0(s5)
20104978:	873e                	mv	a4,a5
2010497a:	0307d7b3          	divu	a5,a5,a6
2010497e:	ff0775e3          	bgeu	a4,a6,20104968 <_printf_i+0x10a>
20104982:	47a1                	li	a5,8
20104984:	00f81e63          	bne	a6,a5,201049a0 <_printf_i+0x142>
20104988:	401c                	lw	a5,0(s0)
2010498a:	8b85                	and	a5,a5,1
2010498c:	cb91                	beqz	a5,201049a0 <_printf_i+0x142>
2010498e:	4058                	lw	a4,4(s0)
20104990:	481c                	lw	a5,16(s0)
20104992:	00e7c763          	blt	a5,a4,201049a0 <_printf_i+0x142>
20104996:	03000793          	li	a5,48
2010499a:	fefa8fa3          	sb	a5,-1(s5)
2010499e:	1afd                	add	s5,s5,-1
201049a0:	415686b3          	sub	a3,a3,s5
201049a4:	c814                	sw	a3,16(s0)
201049a6:	874e                	mv	a4,s3
201049a8:	86ca                	mv	a3,s2
201049aa:	0070                	add	a2,sp,12
201049ac:	85a2                	mv	a1,s0
201049ae:	8526                	mv	a0,s1
201049b0:	3b79                	jal	2010474e <_printf_common>
201049b2:	5a7d                	li	s4,-1
201049b4:	0d451363          	bne	a0,s4,20104a7a <_printf_i+0x21c>
201049b8:	557d                	li	a0,-1
201049ba:	50b2                	lw	ra,44(sp)
201049bc:	5422                	lw	s0,40(sp)
201049be:	5492                	lw	s1,36(sp)
201049c0:	5902                	lw	s2,32(sp)
201049c2:	49f2                	lw	s3,28(sp)
201049c4:	4a62                	lw	s4,24(sp)
201049c6:	4ad2                	lw	s5,20(sp)
201049c8:	4b42                	lw	s6,16(sp)
201049ca:	6145                	add	sp,sp,48
201049cc:	8082                	ret
201049ce:	419c                	lw	a5,0(a1)
201049d0:	0207e793          	or	a5,a5,32
201049d4:	c19c                	sw	a5,0(a1)
201049d6:	07800813          	li	a6,120
201049da:	ffffe617          	auipc	a2,0xffffe
201049de:	03660613          	add	a2,a2,54 # 20102a10 <input_data_3+0x338>
201049e2:	050402a3          	sb	a6,69(s0)
201049e6:	400c                	lw	a1,0(s0)
201049e8:	4308                	lw	a0,0(a4)
201049ea:	0805f813          	and	a6,a1,128
201049ee:	411c                	lw	a5,0(a0)
201049f0:	0511                	add	a0,a0,4
201049f2:	00081863          	bnez	a6,20104a02 <_printf_i+0x1a4>
201049f6:	0405f813          	and	a6,a1,64
201049fa:	00080463          	beqz	a6,20104a02 <_printf_i+0x1a4>
201049fe:	07c2                	sll	a5,a5,0x10
20104a00:	83c1                	srl	a5,a5,0x10
20104a02:	c308                	sw	a0,0(a4)
20104a04:	0015f713          	and	a4,a1,1
20104a08:	c701                	beqz	a4,20104a10 <_printf_i+0x1b2>
20104a0a:	0205e593          	or	a1,a1,32
20104a0e:	c00c                	sw	a1,0(s0)
20104a10:	c399                	beqz	a5,20104a16 <_printf_i+0x1b8>
20104a12:	4841                	li	a6,16
20104a14:	bf2d                	j	2010494e <_printf_i+0xf0>
20104a16:	4018                	lw	a4,0(s0)
20104a18:	fdf77713          	and	a4,a4,-33
20104a1c:	c018                	sw	a4,0(s0)
20104a1e:	bfd5                	j	20104a12 <_printf_i+0x1b4>
20104a20:	4829                	li	a6,10
20104a22:	b735                	j	2010494e <_printf_i+0xf0>
20104a24:	4190                	lw	a2,0(a1)
20104a26:	431c                	lw	a5,0(a4)
20104a28:	49cc                	lw	a1,20(a1)
20104a2a:	08067813          	and	a6,a2,128
20104a2e:	00478513          	add	a0,a5,4
20104a32:	00080663          	beqz	a6,20104a3e <_printf_i+0x1e0>
20104a36:	c308                	sw	a0,0(a4)
20104a38:	439c                	lw	a5,0(a5)
20104a3a:	c38c                	sw	a1,0(a5)
20104a3c:	a801                	j	20104a4c <_printf_i+0x1ee>
20104a3e:	c308                	sw	a0,0(a4)
20104a40:	04067613          	and	a2,a2,64
20104a44:	439c                	lw	a5,0(a5)
20104a46:	da75                	beqz	a2,20104a3a <_printf_i+0x1dc>
20104a48:	00b79023          	sh	a1,0(a5)
20104a4c:	00042823          	sw	zero,16(s0)
20104a50:	8ab6                	mv	s5,a3
20104a52:	bf91                	j	201049a6 <_printf_i+0x148>
20104a54:	431c                	lw	a5,0(a4)
20104a56:	41d0                	lw	a2,4(a1)
20104a58:	4581                	li	a1,0
20104a5a:	00478693          	add	a3,a5,4
20104a5e:	c314                	sw	a3,0(a4)
20104a60:	0007aa83          	lw	s5,0(a5)
20104a64:	8556                	mv	a0,s5
20104a66:	2ba9                	jal	20104fc0 <memchr>
20104a68:	c501                	beqz	a0,20104a70 <_printf_i+0x212>
20104a6a:	41550533          	sub	a0,a0,s5
20104a6e:	c048                	sw	a0,4(s0)
20104a70:	405c                	lw	a5,4(s0)
20104a72:	c81c                	sw	a5,16(s0)
20104a74:	040401a3          	sb	zero,67(s0)
20104a78:	b73d                	j	201049a6 <_printf_i+0x148>
20104a7a:	4814                	lw	a3,16(s0)
20104a7c:	8656                	mv	a2,s5
20104a7e:	85ca                	mv	a1,s2
20104a80:	8526                	mv	a0,s1
20104a82:	9982                	jalr	s3
20104a84:	f3450ae3          	beq	a0,s4,201049b8 <_printf_i+0x15a>
20104a88:	401c                	lw	a5,0(s0)
20104a8a:	8b89                	and	a5,a5,2
20104a8c:	e78d                	bnez	a5,20104ab6 <_printf_i+0x258>
20104a8e:	47b2                	lw	a5,12(sp)
20104a90:	4448                	lw	a0,12(s0)
20104a92:	f2f554e3          	bge	a0,a5,201049ba <_printf_i+0x15c>
20104a96:	853e                	mv	a0,a5
20104a98:	b70d                	j	201049ba <_printf_i+0x15c>
20104a9a:	4685                	li	a3,1
20104a9c:	8656                	mv	a2,s5
20104a9e:	85ca                	mv	a1,s2
20104aa0:	8526                	mv	a0,s1
20104aa2:	9982                	jalr	s3
20104aa4:	f1650ae3          	beq	a0,s6,201049b8 <_printf_i+0x15a>
20104aa8:	0a05                	add	s4,s4,1
20104aaa:	445c                	lw	a5,12(s0)
20104aac:	4732                	lw	a4,12(sp)
20104aae:	8f99                	sub	a5,a5,a4
20104ab0:	fefa45e3          	blt	s4,a5,20104a9a <_printf_i+0x23c>
20104ab4:	bfe9                	j	20104a8e <_printf_i+0x230>
20104ab6:	4a01                	li	s4,0
20104ab8:	01940a93          	add	s5,s0,25
20104abc:	5b7d                	li	s6,-1
20104abe:	b7f5                	j	20104aaa <_printf_i+0x24c>

20104ac0 <__sflush_r>:
__sflush_r():
20104ac0:	00c59783          	lh	a5,12(a1)
20104ac4:	1101                	add	sp,sp,-32
20104ac6:	cc22                	sw	s0,24(sp)
20104ac8:	ca26                	sw	s1,20(sp)
20104aca:	ce06                	sw	ra,28(sp)
20104acc:	c84a                	sw	s2,16(sp)
20104ace:	c64e                	sw	s3,12(sp)
20104ad0:	0087f713          	and	a4,a5,8
20104ad4:	84aa                	mv	s1,a0
20104ad6:	842e                	mv	s0,a1
20104ad8:	e779                	bnez	a4,20104ba6 <__sflush_r+0xe6>
20104ada:	41d8                	lw	a4,4(a1)
20104adc:	00e04563          	bgtz	a4,20104ae6 <__sflush_r+0x26>
20104ae0:	41b8                	lw	a4,64(a1)
20104ae2:	0ae05b63          	blez	a4,20104b98 <__sflush_r+0xd8>
20104ae6:	5458                	lw	a4,44(s0)
20104ae8:	cb45                	beqz	a4,20104b98 <__sflush_r+0xd8>
20104aea:	0004a903          	lw	s2,0(s1)
20104aee:	01379693          	sll	a3,a5,0x13
20104af2:	0004a023          	sw	zero,0(s1)
20104af6:	500c                	lw	a1,32(s0)
20104af8:	0606de63          	bgez	a3,20104b74 <__sflush_r+0xb4>
20104afc:	4870                	lw	a2,84(s0)
20104afe:	00c45783          	lhu	a5,12(s0)
20104b02:	8b91                	and	a5,a5,4
20104b04:	c799                	beqz	a5,20104b12 <__sflush_r+0x52>
20104b06:	405c                	lw	a5,4(s0)
20104b08:	8e1d                	sub	a2,a2,a5
20104b0a:	585c                	lw	a5,52(s0)
20104b0c:	c399                	beqz	a5,20104b12 <__sflush_r+0x52>
20104b0e:	403c                	lw	a5,64(s0)
20104b10:	8e1d                	sub	a2,a2,a5
20104b12:	545c                	lw	a5,44(s0)
20104b14:	500c                	lw	a1,32(s0)
20104b16:	4681                	li	a3,0
20104b18:	8526                	mv	a0,s1
20104b1a:	9782                	jalr	a5
20104b1c:	577d                	li	a4,-1
20104b1e:	00c45783          	lhu	a5,12(s0)
20104b22:	00e51d63          	bne	a0,a4,20104b3c <__sflush_r+0x7c>
20104b26:	4094                	lw	a3,0(s1)
20104b28:	4775                	li	a4,29
20104b2a:	06d76963          	bltu	a4,a3,20104b9c <__sflush_r+0xdc>
20104b2e:	20400737          	lui	a4,0x20400
20104b32:	0705                	add	a4,a4,1 # 20400001 <metal_segment_data_source_start+0x2f5b91>
20104b34:	00d75733          	srl	a4,a4,a3
20104b38:	8b05                	and	a4,a4,1
20104b3a:	c32d                	beqz	a4,20104b9c <__sflush_r+0xdc>
20104b3c:	4818                	lw	a4,16(s0)
20104b3e:	00042223          	sw	zero,4(s0)
20104b42:	c018                	sw	a4,0(s0)
20104b44:	01379713          	sll	a4,a5,0x13
20104b48:	00075863          	bgez	a4,20104b58 <__sflush_r+0x98>
20104b4c:	57fd                	li	a5,-1
20104b4e:	00f51463          	bne	a0,a5,20104b56 <__sflush_r+0x96>
20104b52:	409c                	lw	a5,0(s1)
20104b54:	e391                	bnez	a5,20104b58 <__sflush_r+0x98>
20104b56:	c868                	sw	a0,84(s0)
20104b58:	584c                	lw	a1,52(s0)
20104b5a:	0124a023          	sw	s2,0(s1)
20104b5e:	cd8d                	beqz	a1,20104b98 <__sflush_r+0xd8>
20104b60:	04440793          	add	a5,s0,68
20104b64:	00f58563          	beq	a1,a5,20104b6e <__sflush_r+0xae>
20104b68:	8526                	mv	a0,s1
20104b6a:	eecff0ef          	jal	20104256 <_free_r>
20104b6e:	02042a23          	sw	zero,52(s0)
20104b72:	a01d                	j	20104b98 <__sflush_r+0xd8>
20104b74:	4601                	li	a2,0
20104b76:	4685                	li	a3,1
20104b78:	8526                	mv	a0,s1
20104b7a:	9702                	jalr	a4
20104b7c:	57fd                	li	a5,-1
20104b7e:	862a                	mv	a2,a0
20104b80:	f6f51fe3          	bne	a0,a5,20104afe <__sflush_r+0x3e>
20104b84:	409c                	lw	a5,0(s1)
20104b86:	dfa5                	beqz	a5,20104afe <__sflush_r+0x3e>
20104b88:	4775                	li	a4,29
20104b8a:	00e78563          	beq	a5,a4,20104b94 <__sflush_r+0xd4>
20104b8e:	4759                	li	a4,22
20104b90:	04e79463          	bne	a5,a4,20104bd8 <__sflush_r+0x118>
20104b94:	0124a023          	sw	s2,0(s1)
20104b98:	4501                	li	a0,0
20104b9a:	a0b1                	j	20104be6 <__sflush_r+0x126>
20104b9c:	0407e793          	or	a5,a5,64
20104ba0:	07c2                	sll	a5,a5,0x10
20104ba2:	87c1                	sra	a5,a5,0x10
20104ba4:	a835                	j	20104be0 <__sflush_r+0x120>
20104ba6:	0105a983          	lw	s3,16(a1)
20104baa:	fe0987e3          	beqz	s3,20104b98 <__sflush_r+0xd8>
20104bae:	0005a903          	lw	s2,0(a1)
20104bb2:	8b8d                	and	a5,a5,3
20104bb4:	0135a023          	sw	s3,0(a1)
20104bb8:	41390933          	sub	s2,s2,s3
20104bbc:	4701                	li	a4,0
20104bbe:	e391                	bnez	a5,20104bc2 <__sflush_r+0x102>
20104bc0:	49d8                	lw	a4,20(a1)
20104bc2:	c418                	sw	a4,8(s0)
20104bc4:	fd205ae3          	blez	s2,20104b98 <__sflush_r+0xd8>
20104bc8:	541c                	lw	a5,40(s0)
20104bca:	500c                	lw	a1,32(s0)
20104bcc:	86ca                	mv	a3,s2
20104bce:	864e                	mv	a2,s3
20104bd0:	8526                	mv	a0,s1
20104bd2:	9782                	jalr	a5
20104bd4:	02a04063          	bgtz	a0,20104bf4 <__sflush_r+0x134>
20104bd8:	00c41783          	lh	a5,12(s0)
20104bdc:	0407e793          	or	a5,a5,64
20104be0:	00f41623          	sh	a5,12(s0)
20104be4:	557d                	li	a0,-1
20104be6:	40f2                	lw	ra,28(sp)
20104be8:	4462                	lw	s0,24(sp)
20104bea:	44d2                	lw	s1,20(sp)
20104bec:	4942                	lw	s2,16(sp)
20104bee:	49b2                	lw	s3,12(sp)
20104bf0:	6105                	add	sp,sp,32
20104bf2:	8082                	ret
20104bf4:	99aa                	add	s3,s3,a0
20104bf6:	40a90933          	sub	s2,s2,a0
20104bfa:	b7e9                	j	20104bc4 <__sflush_r+0x104>

20104bfc <_fflush_r>:
_fflush_r():
20104bfc:	499c                	lw	a5,16(a1)
20104bfe:	cb85                	beqz	a5,20104c2e <_fflush_r+0x32>
20104c00:	1101                	add	sp,sp,-32
20104c02:	cc22                	sw	s0,24(sp)
20104c04:	ce06                	sw	ra,28(sp)
20104c06:	842a                	mv	s0,a0
20104c08:	c511                	beqz	a0,20104c14 <_fflush_r+0x18>
20104c0a:	511c                	lw	a5,32(a0)
20104c0c:	e781                	bnez	a5,20104c14 <_fflush_r+0x18>
20104c0e:	c62e                	sw	a1,12(sp)
20104c10:	2225                	jal	20104d38 <__sinit>
20104c12:	45b2                	lw	a1,12(sp)
20104c14:	00c59783          	lh	a5,12(a1)
20104c18:	c791                	beqz	a5,20104c24 <_fflush_r+0x28>
20104c1a:	8522                	mv	a0,s0
20104c1c:	4462                	lw	s0,24(sp)
20104c1e:	40f2                	lw	ra,28(sp)
20104c20:	6105                	add	sp,sp,32
20104c22:	bd79                	j	20104ac0 <__sflush_r>
20104c24:	40f2                	lw	ra,28(sp)
20104c26:	4462                	lw	s0,24(sp)
20104c28:	4501                	li	a0,0
20104c2a:	6105                	add	sp,sp,32
20104c2c:	8082                	ret
20104c2e:	4501                	li	a0,0
20104c30:	8082                	ret

20104c32 <std>:
std():
20104c32:	1141                	add	sp,sp,-16
20104c34:	c422                	sw	s0,8(sp)
20104c36:	c606                	sw	ra,12(sp)
20104c38:	842a                	mv	s0,a0
20104c3a:	00b51623          	sh	a1,12(a0)
20104c3e:	00c51723          	sh	a2,14(a0)
20104c42:	00052023          	sw	zero,0(a0)
20104c46:	00052223          	sw	zero,4(a0)
20104c4a:	00052423          	sw	zero,8(a0)
20104c4e:	06052223          	sw	zero,100(a0)
20104c52:	00052823          	sw	zero,16(a0)
20104c56:	00052a23          	sw	zero,20(a0)
20104c5a:	00052c23          	sw	zero,24(a0)
20104c5e:	4621                	li	a2,8
20104c60:	4581                	li	a1,0
20104c62:	05c50513          	add	a0,a0,92
20104c66:	29c9                	jal	20105138 <memset>
20104c68:	00000797          	auipc	a5,0x0
20104c6c:	29e78793          	add	a5,a5,670 # 20104f06 <__sread>
20104c70:	d05c                	sw	a5,36(s0)
20104c72:	00000797          	auipc	a5,0x0
20104c76:	2c478793          	add	a5,a5,708 # 20104f36 <__swrite>
20104c7a:	d41c                	sw	a5,40(s0)
20104c7c:	00000797          	auipc	a5,0x0
20104c80:	30878793          	add	a5,a5,776 # 20104f84 <__sseek>
20104c84:	d45c                	sw	a5,44(s0)
20104c86:	00000797          	auipc	a5,0x0
20104c8a:	33478793          	add	a5,a5,820 # 20104fba <__sclose>
20104c8e:	40b2                	lw	ra,12(sp)
20104c90:	d000                	sw	s0,32(s0)
20104c92:	d81c                	sw	a5,48(s0)
20104c94:	4422                	lw	s0,8(sp)
20104c96:	0141                	add	sp,sp,16
20104c98:	8082                	ret

20104c9a <stdio_exit_handler>:
stdio_exit_handler():
20104c9a:	5fefb617          	auipc	a2,0x5fefb
20104c9e:	3b260613          	add	a2,a2,946 # 8000004c <__sglue>
20104ca2:	00000597          	auipc	a1,0x0
20104ca6:	f5a58593          	add	a1,a1,-166 # 20104bfc <_fflush_r>
20104caa:	5fefb517          	auipc	a0,0x5fefb
20104cae:	35650513          	add	a0,a0,854 # 80000000 <_impure_data>
20104cb2:	a04d                	j	20104d54 <_fwalk_sglue>

20104cb4 <cleanup_stdio>:
cleanup_stdio():
20104cb4:	414c                	lw	a1,4(a0)
20104cb6:	1141                	add	sp,sp,-16
20104cb8:	c422                	sw	s0,8(sp)
20104cba:	c606                	sw	ra,12(sp)
20104cbc:	5fefc797          	auipc	a5,0x5fefc
20104cc0:	e0878793          	add	a5,a5,-504 # 80000ac4 <__sf>
20104cc4:	842a                	mv	s0,a0
20104cc6:	00f58363          	beq	a1,a5,20104ccc <cleanup_stdio+0x18>
20104cca:	3f0d                	jal	20104bfc <_fflush_r>
20104ccc:	440c                	lw	a1,8(s0)
20104cce:	5fefc797          	auipc	a5,0x5fefc
20104cd2:	e5e78793          	add	a5,a5,-418 # 80000b2c <__sf+0x68>
20104cd6:	00f58463          	beq	a1,a5,20104cde <cleanup_stdio+0x2a>
20104cda:	8522                	mv	a0,s0
20104cdc:	3705                	jal	20104bfc <_fflush_r>
20104cde:	444c                	lw	a1,12(s0)
20104ce0:	91c18793          	add	a5,gp,-1764 # 80000b94 <__sf+0xd0>
20104ce4:	00f58763          	beq	a1,a5,20104cf2 <cleanup_stdio+0x3e>
20104ce8:	8522                	mv	a0,s0
20104cea:	4422                	lw	s0,8(sp)
20104cec:	40b2                	lw	ra,12(sp)
20104cee:	0141                	add	sp,sp,16
20104cf0:	b731                	j	20104bfc <_fflush_r>
20104cf2:	40b2                	lw	ra,12(sp)
20104cf4:	4422                	lw	s0,8(sp)
20104cf6:	0141                	add	sp,sp,16
20104cf8:	8082                	ret

20104cfa <global_stdio_init.part.0>:
global_stdio_init.part.0():
20104cfa:	1141                	add	sp,sp,-16
20104cfc:	00000797          	auipc	a5,0x0
20104d00:	f9e78793          	add	a5,a5,-98 # 20104c9a <stdio_exit_handler>
20104d04:	4601                	li	a2,0
20104d06:	4591                	li	a1,4
20104d08:	5fefc517          	auipc	a0,0x5fefc
20104d0c:	dbc50513          	add	a0,a0,-580 # 80000ac4 <__sf>
20104d10:	c606                	sw	ra,12(sp)
20104d12:	5fefc717          	auipc	a4,0x5fefc
20104d16:	d8f72f23          	sw	a5,-610(a4) # 80000ab0 <__stdio_exit_handler>
20104d1a:	3f21                	jal	20104c32 <std>
20104d1c:	4605                	li	a2,1
20104d1e:	45a5                	li	a1,9
20104d20:	5fefc517          	auipc	a0,0x5fefc
20104d24:	e0c50513          	add	a0,a0,-500 # 80000b2c <__sf+0x68>
20104d28:	3729                	jal	20104c32 <std>
20104d2a:	40b2                	lw	ra,12(sp)
20104d2c:	4609                	li	a2,2
20104d2e:	45c9                	li	a1,18
20104d30:	91c18513          	add	a0,gp,-1764 # 80000b94 <__sf+0xd0>
20104d34:	0141                	add	sp,sp,16
20104d36:	bdf5                	j	20104c32 <std>

20104d38 <__sinit>:
__sinit():
20104d38:	511c                	lw	a5,32(a0)
20104d3a:	ef81                	bnez	a5,20104d52 <__sinit+0x1a>
20104d3c:	00000797          	auipc	a5,0x0
20104d40:	f7878793          	add	a5,a5,-136 # 20104cb4 <cleanup_stdio>
20104d44:	d11c                	sw	a5,32(a0)
20104d46:	5fefc797          	auipc	a5,0x5fefc
20104d4a:	d6a7a783          	lw	a5,-662(a5) # 80000ab0 <__stdio_exit_handler>
20104d4e:	e391                	bnez	a5,20104d52 <__sinit+0x1a>
20104d50:	b76d                	j	20104cfa <global_stdio_init.part.0>
20104d52:	8082                	ret

20104d54 <_fwalk_sglue>:
_fwalk_sglue():
20104d54:	7179                	add	sp,sp,-48
20104d56:	d422                	sw	s0,40(sp)
20104d58:	d04a                	sw	s2,32(sp)
20104d5a:	ce4e                	sw	s3,28(sp)
20104d5c:	cc52                	sw	s4,24(sp)
20104d5e:	c85a                	sw	s6,16(sp)
20104d60:	c65e                	sw	s7,12(sp)
20104d62:	d606                	sw	ra,44(sp)
20104d64:	d226                	sw	s1,36(sp)
20104d66:	ca56                	sw	s5,20(sp)
20104d68:	89aa                	mv	s3,a0
20104d6a:	8a2e                	mv	s4,a1
20104d6c:	8432                	mv	s0,a2
20104d6e:	4901                	li	s2,0
20104d70:	4b05                	li	s6,1
20104d72:	5bfd                	li	s7,-1
20104d74:	4404                	lw	s1,8(s0)
20104d76:	00442a83          	lw	s5,4(s0)
20104d7a:	1afd                	add	s5,s5,-1
20104d7c:	020ad063          	bgez	s5,20104d9c <_fwalk_sglue+0x48>
20104d80:	4000                	lw	s0,0(s0)
20104d82:	f86d                	bnez	s0,20104d74 <_fwalk_sglue+0x20>
20104d84:	50b2                	lw	ra,44(sp)
20104d86:	5422                	lw	s0,40(sp)
20104d88:	5492                	lw	s1,36(sp)
20104d8a:	49f2                	lw	s3,28(sp)
20104d8c:	4a62                	lw	s4,24(sp)
20104d8e:	4ad2                	lw	s5,20(sp)
20104d90:	4b42                	lw	s6,16(sp)
20104d92:	4bb2                	lw	s7,12(sp)
20104d94:	854a                	mv	a0,s2
20104d96:	5902                	lw	s2,32(sp)
20104d98:	6145                	add	sp,sp,48
20104d9a:	8082                	ret
20104d9c:	00c4d783          	lhu	a5,12(s1)
20104da0:	00fb7b63          	bgeu	s6,a5,20104db6 <_fwalk_sglue+0x62>
20104da4:	00e49783          	lh	a5,14(s1)
20104da8:	01778763          	beq	a5,s7,20104db6 <_fwalk_sglue+0x62>
20104dac:	85a6                	mv	a1,s1
20104dae:	854e                	mv	a0,s3
20104db0:	9a02                	jalr	s4
20104db2:	00a96933          	or	s2,s2,a0
20104db6:	06848493          	add	s1,s1,104
20104dba:	b7c1                	j	20104d7a <_fwalk_sglue+0x26>

20104dbc <__swhatbuf_r>:
__swhatbuf_r():
20104dbc:	7159                	add	sp,sp,-112
20104dbe:	d4a2                	sw	s0,104(sp)
20104dc0:	842e                	mv	s0,a1
20104dc2:	00e59583          	lh	a1,14(a1)
20104dc6:	d2a6                	sw	s1,100(sp)
20104dc8:	d0ca                	sw	s2,96(sp)
20104dca:	d686                	sw	ra,108(sp)
20104dcc:	84b2                	mv	s1,a2
20104dce:	8936                	mv	s2,a3
20104dd0:	0205d363          	bgez	a1,20104df6 <__swhatbuf_r+0x3a>
20104dd4:	00c45783          	lhu	a5,12(s0)
20104dd8:	0807f793          	and	a5,a5,128
20104ddc:	eb8d                	bnez	a5,20104e0e <__swhatbuf_r+0x52>
20104dde:	40000713          	li	a4,1024
20104de2:	50b6                	lw	ra,108(sp)
20104de4:	5426                	lw	s0,104(sp)
20104de6:	00f92023          	sw	a5,0(s2)
20104dea:	c098                	sw	a4,0(s1)
20104dec:	5906                	lw	s2,96(sp)
20104dee:	5496                	lw	s1,100(sp)
20104df0:	4501                	li	a0,0
20104df2:	6165                	add	sp,sp,112
20104df4:	8082                	ret
20104df6:	0030                	add	a2,sp,8
20104df8:	2c09                	jal	2010500a <_fstat_r>
20104dfa:	fc054de3          	bltz	a0,20104dd4 <__swhatbuf_r+0x18>
20104dfe:	4732                	lw	a4,12(sp)
20104e00:	67bd                	lui	a5,0xf
20104e02:	8ff9                	and	a5,a5,a4
20104e04:	7779                	lui	a4,0xffffe
20104e06:	97ba                	add	a5,a5,a4
20104e08:	0017b793          	seqz	a5,a5
20104e0c:	bfc9                	j	20104dde <__swhatbuf_r+0x22>
20104e0e:	4781                	li	a5,0
20104e10:	04000713          	li	a4,64
20104e14:	b7f9                	j	20104de2 <__swhatbuf_r+0x26>

20104e16 <__smakebuf_r>:
__smakebuf_r():
20104e16:	00c5d783          	lhu	a5,12(a1)
20104e1a:	7179                	add	sp,sp,-48
20104e1c:	d422                	sw	s0,40(sp)
20104e1e:	d606                	sw	ra,44(sp)
20104e20:	d226                	sw	s1,36(sp)
20104e22:	d04a                	sw	s2,32(sp)
20104e24:	ce4e                	sw	s3,28(sp)
20104e26:	8b89                	and	a5,a5,2
20104e28:	842e                	mv	s0,a1
20104e2a:	cf91                	beqz	a5,20104e46 <__smakebuf_r+0x30>
20104e2c:	04740793          	add	a5,s0,71
20104e30:	c01c                	sw	a5,0(s0)
20104e32:	c81c                	sw	a5,16(s0)
20104e34:	4785                	li	a5,1
20104e36:	c85c                	sw	a5,20(s0)
20104e38:	50b2                	lw	ra,44(sp)
20104e3a:	5422                	lw	s0,40(sp)
20104e3c:	5492                	lw	s1,36(sp)
20104e3e:	5902                	lw	s2,32(sp)
20104e40:	49f2                	lw	s3,28(sp)
20104e42:	6145                	add	sp,sp,48
20104e44:	8082                	ret
20104e46:	0074                	add	a3,sp,12
20104e48:	0030                	add	a2,sp,8
20104e4a:	84aa                	mv	s1,a0
20104e4c:	3f85                	jal	20104dbc <__swhatbuf_r>
20104e4e:	49a2                	lw	s3,8(sp)
20104e50:	892a                	mv	s2,a0
20104e52:	8526                	mv	a0,s1
20104e54:	85ce                	mv	a1,s3
20104e56:	d00ff0ef          	jal	20104356 <_malloc_r>
20104e5a:	ed01                	bnez	a0,20104e72 <__smakebuf_r+0x5c>
20104e5c:	00c41783          	lh	a5,12(s0)
20104e60:	2007f713          	and	a4,a5,512
20104e64:	fb71                	bnez	a4,20104e38 <__smakebuf_r+0x22>
20104e66:	9bf1                	and	a5,a5,-4
20104e68:	0027e793          	or	a5,a5,2
20104e6c:	00f41623          	sh	a5,12(s0)
20104e70:	bf75                	j	20104e2c <__smakebuf_r+0x16>
20104e72:	00c45783          	lhu	a5,12(s0)
20104e76:	c008                	sw	a0,0(s0)
20104e78:	c808                	sw	a0,16(s0)
20104e7a:	0807e793          	or	a5,a5,128
20104e7e:	00f41623          	sh	a5,12(s0)
20104e82:	47b2                	lw	a5,12(sp)
20104e84:	01342a23          	sw	s3,20(s0)
20104e88:	cf89                	beqz	a5,20104ea2 <__smakebuf_r+0x8c>
20104e8a:	00e41583          	lh	a1,14(s0)
20104e8e:	8526                	mv	a0,s1
20104e90:	2275                	jal	2010503c <_isatty_r>
20104e92:	c901                	beqz	a0,20104ea2 <__smakebuf_r+0x8c>
20104e94:	00c45783          	lhu	a5,12(s0)
20104e98:	9bf1                	and	a5,a5,-4
20104e9a:	0017e793          	or	a5,a5,1
20104e9e:	00f41623          	sh	a5,12(s0)
20104ea2:	00c45783          	lhu	a5,12(s0)
20104ea6:	0127e533          	or	a0,a5,s2
20104eaa:	00a41623          	sh	a0,12(s0)
20104eae:	b769                	j	20104e38 <__smakebuf_r+0x22>

20104eb0 <_putc_r>:
_putc_r():
20104eb0:	1101                	add	sp,sp,-32
20104eb2:	cc22                	sw	s0,24(sp)
20104eb4:	ce06                	sw	ra,28(sp)
20104eb6:	842a                	mv	s0,a0
20104eb8:	c901                	beqz	a0,20104ec8 <_putc_r+0x18>
20104eba:	511c                	lw	a5,32(a0)
20104ebc:	e791                	bnez	a5,20104ec8 <_putc_r+0x18>
20104ebe:	c632                	sw	a2,12(sp)
20104ec0:	c42e                	sw	a1,8(sp)
20104ec2:	3d9d                	jal	20104d38 <__sinit>
20104ec4:	4632                	lw	a2,12(sp)
20104ec6:	45a2                	lw	a1,8(sp)
20104ec8:	461c                	lw	a5,8(a2)
20104eca:	17fd                	add	a5,a5,-1 # efff <__heap_size+0xe7ff>
20104ecc:	c61c                	sw	a5,8(a2)
20104ece:	0207d063          	bgez	a5,20104eee <_putc_r+0x3e>
20104ed2:	4e18                	lw	a4,24(a2)
20104ed4:	00e7c763          	blt	a5,a4,20104ee2 <_putc_r+0x32>
20104ed8:	0ff5f793          	zext.b	a5,a1
20104edc:	4729                	li	a4,10
20104ede:	00e79863          	bne	a5,a4,20104eee <_putc_r+0x3e>
20104ee2:	8522                	mv	a0,s0
20104ee4:	4462                	lw	s0,24(sp)
20104ee6:	40f2                	lw	ra,28(sp)
20104ee8:	6105                	add	sp,sp,32
20104eea:	a04ff06f          	j	201040ee <__swbuf_r>
20104eee:	421c                	lw	a5,0(a2)
20104ef0:	0ff5f513          	zext.b	a0,a1
20104ef4:	00178713          	add	a4,a5,1
20104ef8:	c218                	sw	a4,0(a2)
20104efa:	00b78023          	sb	a1,0(a5)
20104efe:	40f2                	lw	ra,28(sp)
20104f00:	4462                	lw	s0,24(sp)
20104f02:	6105                	add	sp,sp,32
20104f04:	8082                	ret

20104f06 <__sread>:
__sread():
20104f06:	1141                	add	sp,sp,-16
20104f08:	c422                	sw	s0,8(sp)
20104f0a:	842e                	mv	s0,a1
20104f0c:	00e59583          	lh	a1,14(a1)
20104f10:	c606                	sw	ra,12(sp)
20104f12:	2279                	jal	201050a0 <_read_r>
20104f14:	00054963          	bltz	a0,20104f26 <__sread+0x20>
20104f18:	487c                	lw	a5,84(s0)
20104f1a:	97aa                	add	a5,a5,a0
20104f1c:	c87c                	sw	a5,84(s0)
20104f1e:	40b2                	lw	ra,12(sp)
20104f20:	4422                	lw	s0,8(sp)
20104f22:	0141                	add	sp,sp,16
20104f24:	8082                	ret
20104f26:	00c45783          	lhu	a5,12(s0)
20104f2a:	777d                	lui	a4,0xfffff
20104f2c:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd75f>
20104f2e:	8ff9                	and	a5,a5,a4
20104f30:	00f41623          	sh	a5,12(s0)
20104f34:	b7ed                	j	20104f1e <__sread+0x18>

20104f36 <__swrite>:
__swrite():
20104f36:	00c5d783          	lhu	a5,12(a1)
20104f3a:	1101                	add	sp,sp,-32
20104f3c:	cc22                	sw	s0,24(sp)
20104f3e:	ca26                	sw	s1,20(sp)
20104f40:	c84a                	sw	s2,16(sp)
20104f42:	c64e                	sw	s3,12(sp)
20104f44:	ce06                	sw	ra,28(sp)
20104f46:	1007f793          	and	a5,a5,256
20104f4a:	84aa                	mv	s1,a0
20104f4c:	842e                	mv	s0,a1
20104f4e:	8932                	mv	s2,a2
20104f50:	89b6                	mv	s3,a3
20104f52:	c791                	beqz	a5,20104f5e <__swrite+0x28>
20104f54:	00e59583          	lh	a1,14(a1)
20104f58:	4689                	li	a3,2
20104f5a:	4601                	li	a2,0
20104f5c:	2a01                	jal	2010506c <_lseek_r>
20104f5e:	00c45783          	lhu	a5,12(s0)
20104f62:	777d                	lui	a4,0xfffff
20104f64:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd75f>
20104f66:	8ff9                	and	a5,a5,a4
20104f68:	00e41583          	lh	a1,14(s0)
20104f6c:	00f41623          	sh	a5,12(s0)
20104f70:	4462                	lw	s0,24(sp)
20104f72:	40f2                	lw	ra,28(sp)
20104f74:	86ce                	mv	a3,s3
20104f76:	864a                	mv	a2,s2
20104f78:	49b2                	lw	s3,12(sp)
20104f7a:	4942                	lw	s2,16(sp)
20104f7c:	8526                	mv	a0,s1
20104f7e:	44d2                	lw	s1,20(sp)
20104f80:	6105                	add	sp,sp,32
20104f82:	a249                	j	20105104 <_write_r>

20104f84 <__sseek>:
__sseek():
20104f84:	1141                	add	sp,sp,-16
20104f86:	c422                	sw	s0,8(sp)
20104f88:	842e                	mv	s0,a1
20104f8a:	00e59583          	lh	a1,14(a1)
20104f8e:	c606                	sw	ra,12(sp)
20104f90:	28f1                	jal	2010506c <_lseek_r>
20104f92:	577d                	li	a4,-1
20104f94:	00c45783          	lhu	a5,12(s0)
20104f98:	00e51b63          	bne	a0,a4,20104fae <__sseek+0x2a>
20104f9c:	777d                	lui	a4,0xfffff
20104f9e:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd75f>
20104fa0:	8ff9                	and	a5,a5,a4
20104fa2:	00f41623          	sh	a5,12(s0)
20104fa6:	40b2                	lw	ra,12(sp)
20104fa8:	4422                	lw	s0,8(sp)
20104faa:	0141                	add	sp,sp,16
20104fac:	8082                	ret
20104fae:	6705                	lui	a4,0x1
20104fb0:	8fd9                	or	a5,a5,a4
20104fb2:	00f41623          	sh	a5,12(s0)
20104fb6:	c868                	sw	a0,84(s0)
20104fb8:	b7fd                	j	20104fa6 <__sseek+0x22>

20104fba <__sclose>:
__sclose():
20104fba:	00e59583          	lh	a1,14(a1)
20104fbe:	a831                	j	20104fda <_close_r>

20104fc0 <memchr>:
memchr():
20104fc0:	0ff5f593          	zext.b	a1,a1
20104fc4:	962a                	add	a2,a2,a0
20104fc6:	00c51463          	bne	a0,a2,20104fce <memchr+0xe>
20104fca:	4501                	li	a0,0
20104fcc:	8082                	ret
20104fce:	00054783          	lbu	a5,0(a0)
20104fd2:	feb78de3          	beq	a5,a1,20104fcc <memchr+0xc>
20104fd6:	0505                	add	a0,a0,1
20104fd8:	b7fd                	j	20104fc6 <memchr+0x6>

20104fda <_close_r>:
_close_r():
20104fda:	1141                	add	sp,sp,-16
20104fdc:	c422                	sw	s0,8(sp)
20104fde:	842a                	mv	s0,a0
20104fe0:	852e                	mv	a0,a1
20104fe2:	5fefc797          	auipc	a5,0x5fefc
20104fe6:	ac07a923          	sw	zero,-1326(a5) # 80000ab4 <errno>
20104fea:	c606                	sw	ra,12(sp)
20104fec:	63b040ef          	jal	20109e26 <_close>
20104ff0:	57fd                	li	a5,-1
20104ff2:	00f51863          	bne	a0,a5,20105002 <_close_r+0x28>
20104ff6:	5fefc797          	auipc	a5,0x5fefc
20104ffa:	abe7a783          	lw	a5,-1346(a5) # 80000ab4 <errno>
20104ffe:	c391                	beqz	a5,20105002 <_close_r+0x28>
20105000:	c01c                	sw	a5,0(s0)
20105002:	40b2                	lw	ra,12(sp)
20105004:	4422                	lw	s0,8(sp)
20105006:	0141                	add	sp,sp,16
20105008:	8082                	ret

2010500a <_fstat_r>:
_fstat_r():
2010500a:	1141                	add	sp,sp,-16
2010500c:	c422                	sw	s0,8(sp)
2010500e:	842a                	mv	s0,a0
20105010:	852e                	mv	a0,a1
20105012:	85b2                	mv	a1,a2
20105014:	5fefc797          	auipc	a5,0x5fefc
20105018:	aa07a023          	sw	zero,-1376(a5) # 80000ab4 <errno>
2010501c:	c606                	sw	ra,12(sp)
2010501e:	62b040ef          	jal	20109e48 <_fstat>
20105022:	57fd                	li	a5,-1
20105024:	00f51863          	bne	a0,a5,20105034 <_fstat_r+0x2a>
20105028:	5fefc797          	auipc	a5,0x5fefc
2010502c:	a8c7a783          	lw	a5,-1396(a5) # 80000ab4 <errno>
20105030:	c391                	beqz	a5,20105034 <_fstat_r+0x2a>
20105032:	c01c                	sw	a5,0(s0)
20105034:	40b2                	lw	ra,12(sp)
20105036:	4422                	lw	s0,8(sp)
20105038:	0141                	add	sp,sp,16
2010503a:	8082                	ret

2010503c <_isatty_r>:
_isatty_r():
2010503c:	1141                	add	sp,sp,-16
2010503e:	c422                	sw	s0,8(sp)
20105040:	842a                	mv	s0,a0
20105042:	852e                	mv	a0,a1
20105044:	5fefc797          	auipc	a5,0x5fefc
20105048:	a607a823          	sw	zero,-1424(a5) # 80000ab4 <errno>
2010504c:	c606                	sw	ra,12(sp)
2010504e:	621040ef          	jal	20109e6e <_isatty>
20105052:	57fd                	li	a5,-1
20105054:	00f51863          	bne	a0,a5,20105064 <_isatty_r+0x28>
20105058:	5fefc797          	auipc	a5,0x5fefc
2010505c:	a5c7a783          	lw	a5,-1444(a5) # 80000ab4 <errno>
20105060:	c391                	beqz	a5,20105064 <_isatty_r+0x28>
20105062:	c01c                	sw	a5,0(s0)
20105064:	40b2                	lw	ra,12(sp)
20105066:	4422                	lw	s0,8(sp)
20105068:	0141                	add	sp,sp,16
2010506a:	8082                	ret

2010506c <_lseek_r>:
_lseek_r():
2010506c:	1141                	add	sp,sp,-16
2010506e:	c422                	sw	s0,8(sp)
20105070:	842a                	mv	s0,a0
20105072:	852e                	mv	a0,a1
20105074:	85b2                	mv	a1,a2
20105076:	8636                	mv	a2,a3
20105078:	5fefc797          	auipc	a5,0x5fefc
2010507c:	a207ae23          	sw	zero,-1476(a5) # 80000ab4 <errno>
20105080:	c606                	sw	ra,12(sp)
20105082:	60d040ef          	jal	20109e8e <_lseek>
20105086:	57fd                	li	a5,-1
20105088:	00f51863          	bne	a0,a5,20105098 <_lseek_r+0x2c>
2010508c:	5fefc797          	auipc	a5,0x5fefc
20105090:	a287a783          	lw	a5,-1496(a5) # 80000ab4 <errno>
20105094:	c391                	beqz	a5,20105098 <_lseek_r+0x2c>
20105096:	c01c                	sw	a5,0(s0)
20105098:	40b2                	lw	ra,12(sp)
2010509a:	4422                	lw	s0,8(sp)
2010509c:	0141                	add	sp,sp,16
2010509e:	8082                	ret

201050a0 <_read_r>:
_read_r():
201050a0:	1141                	add	sp,sp,-16
201050a2:	c422                	sw	s0,8(sp)
201050a4:	842a                	mv	s0,a0
201050a6:	852e                	mv	a0,a1
201050a8:	85b2                	mv	a1,a2
201050aa:	8636                	mv	a2,a3
201050ac:	5fefc797          	auipc	a5,0x5fefc
201050b0:	a007a423          	sw	zero,-1528(a5) # 80000ab4 <errno>
201050b4:	c606                	sw	ra,12(sp)
201050b6:	603040ef          	jal	20109eb8 <_read>
201050ba:	57fd                	li	a5,-1
201050bc:	00f51863          	bne	a0,a5,201050cc <_read_r+0x2c>
201050c0:	5fefc797          	auipc	a5,0x5fefc
201050c4:	9f47a783          	lw	a5,-1548(a5) # 80000ab4 <errno>
201050c8:	c391                	beqz	a5,201050cc <_read_r+0x2c>
201050ca:	c01c                	sw	a5,0(s0)
201050cc:	40b2                	lw	ra,12(sp)
201050ce:	4422                	lw	s0,8(sp)
201050d0:	0141                	add	sp,sp,16
201050d2:	8082                	ret

201050d4 <_sbrk_r>:
_sbrk_r():
201050d4:	1141                	add	sp,sp,-16
201050d6:	c422                	sw	s0,8(sp)
201050d8:	842a                	mv	s0,a0
201050da:	852e                	mv	a0,a1
201050dc:	5fefc797          	auipc	a5,0x5fefc
201050e0:	9c07ac23          	sw	zero,-1576(a5) # 80000ab4 <errno>
201050e4:	c606                	sw	ra,12(sp)
201050e6:	5fd040ef          	jal	20109ee2 <_sbrk>
201050ea:	57fd                	li	a5,-1
201050ec:	00f51863          	bne	a0,a5,201050fc <_sbrk_r+0x28>
201050f0:	5fefc797          	auipc	a5,0x5fefc
201050f4:	9c47a783          	lw	a5,-1596(a5) # 80000ab4 <errno>
201050f8:	c391                	beqz	a5,201050fc <_sbrk_r+0x28>
201050fa:	c01c                	sw	a5,0(s0)
201050fc:	40b2                	lw	ra,12(sp)
201050fe:	4422                	lw	s0,8(sp)
20105100:	0141                	add	sp,sp,16
20105102:	8082                	ret

20105104 <_write_r>:
_write_r():
20105104:	1141                	add	sp,sp,-16
20105106:	c422                	sw	s0,8(sp)
20105108:	842a                	mv	s0,a0
2010510a:	852e                	mv	a0,a1
2010510c:	85b2                	mv	a1,a2
2010510e:	8636                	mv	a2,a3
20105110:	5fefc797          	auipc	a5,0x5fefc
20105114:	9a07a223          	sw	zero,-1628(a5) # 80000ab4 <errno>
20105118:	c606                	sw	ra,12(sp)
2010511a:	633040ef          	jal	20109f4c <_write>
2010511e:	57fd                	li	a5,-1
20105120:	00f51863          	bne	a0,a5,20105130 <_write_r+0x2c>
20105124:	5fefc797          	auipc	a5,0x5fefc
20105128:	9907a783          	lw	a5,-1648(a5) # 80000ab4 <errno>
2010512c:	c391                	beqz	a5,20105130 <_write_r+0x2c>
2010512e:	c01c                	sw	a5,0(s0)
20105130:	40b2                	lw	ra,12(sp)
20105132:	4422                	lw	s0,8(sp)
20105134:	0141                	add	sp,sp,16
20105136:	8082                	ret

20105138 <memset>:
memset():
20105138:	433d                	li	t1,15
2010513a:	872a                	mv	a4,a0
2010513c:	02c37363          	bgeu	t1,a2,20105162 <memset+0x2a>
20105140:	00f77793          	and	a5,a4,15
20105144:	efbd                	bnez	a5,201051c2 <memset+0x8a>
20105146:	e5ad                	bnez	a1,201051b0 <memset+0x78>
20105148:	ff067693          	and	a3,a2,-16
2010514c:	8a3d                	and	a2,a2,15
2010514e:	96ba                	add	a3,a3,a4
20105150:	c30c                	sw	a1,0(a4)
20105152:	c34c                	sw	a1,4(a4)
20105154:	c70c                	sw	a1,8(a4)
20105156:	c74c                	sw	a1,12(a4)
20105158:	0741                	add	a4,a4,16 # 1010 <__heap_size+0x810>
2010515a:	fed76be3          	bltu	a4,a3,20105150 <memset+0x18>
2010515e:	e211                	bnez	a2,20105162 <memset+0x2a>
20105160:	8082                	ret
20105162:	40c306b3          	sub	a3,t1,a2
20105166:	068a                	sll	a3,a3,0x2
20105168:	00000297          	auipc	t0,0x0
2010516c:	9696                	add	a3,a3,t0
2010516e:	00a68067          	jr	10(a3)
20105172:	00b70723          	sb	a1,14(a4)
20105176:	00b706a3          	sb	a1,13(a4)
2010517a:	00b70623          	sb	a1,12(a4)
2010517e:	00b705a3          	sb	a1,11(a4)
20105182:	00b70523          	sb	a1,10(a4)
20105186:	00b704a3          	sb	a1,9(a4)
2010518a:	00b70423          	sb	a1,8(a4)
2010518e:	00b703a3          	sb	a1,7(a4)
20105192:	00b70323          	sb	a1,6(a4)
20105196:	00b702a3          	sb	a1,5(a4)
2010519a:	00b70223          	sb	a1,4(a4)
2010519e:	00b701a3          	sb	a1,3(a4)
201051a2:	00b70123          	sb	a1,2(a4)
201051a6:	00b700a3          	sb	a1,1(a4)
201051aa:	00b70023          	sb	a1,0(a4)
201051ae:	8082                	ret
201051b0:	0ff5f593          	zext.b	a1,a1
201051b4:	00859693          	sll	a3,a1,0x8
201051b8:	8dd5                	or	a1,a1,a3
201051ba:	01059693          	sll	a3,a1,0x10
201051be:	8dd5                	or	a1,a1,a3
201051c0:	b761                	j	20105148 <memset+0x10>
201051c2:	00279693          	sll	a3,a5,0x2
201051c6:	00000297          	auipc	t0,0x0
201051ca:	9696                	add	a3,a3,t0
201051cc:	8286                	mv	t0,ra
201051ce:	fa8680e7          	jalr	-88(a3)
201051d2:	8096                	mv	ra,t0
201051d4:	17c1                	add	a5,a5,-16
201051d6:	8f1d                	sub	a4,a4,a5
201051d8:	963e                	add	a2,a2,a5
201051da:	f8c374e3          	bgeu	t1,a2,20105162 <memset+0x2a>
201051de:	b7a5                	j	20105146 <memset+0xe>

201051e0 <metal_cpu_get_mtime>:
metal_cpu_get_mtime():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:97
 * will be 0.
 *
 * @param cpu The CPU device handle
 * @return The value of mtime, or 0 if failure
 */
__inline__ unsigned long long metal_cpu_get_mtime(struct metal_cpu *cpu) {
201051e0:	1101                	add	sp,sp,-32
201051e2:	ce06                	sw	ra,28(sp)
201051e4:	cc22                	sw	s0,24(sp)
201051e6:	1000                	add	s0,sp,32
201051e8:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:98
    return cpu->vtable->mtime_get(cpu);
201051ec:	fec42783          	lw	a5,-20(s0)
201051f0:	439c                	lw	a5,0(a5)
201051f2:	479c                	lw	a5,8(a5)
201051f4:	fec42503          	lw	a0,-20(s0)
201051f8:	9782                	jalr	a5
201051fa:	872a                	mv	a4,a0
201051fc:	87ae                	mv	a5,a1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:99
}
201051fe:	853a                	mv	a0,a4
20105200:	85be                	mv	a1,a5
20105202:	40f2                	lw	ra,28(sp)
20105204:	4462                	lw	s0,24(sp)
20105206:	6105                	add	sp,sp,32
20105208:	8082                	ret

2010520a <metal_cpu_set_mtimecmp>:
metal_cpu_set_mtimecmp():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:112
 * @param cpu The CPU device handle
 * @param time The value to set the compare register to
 * @return The value of mtimecmp or -1 if error
 */
__inline__ int metal_cpu_set_mtimecmp(struct metal_cpu *cpu,
                                      unsigned long long time) {
2010520a:	1101                	add	sp,sp,-32
2010520c:	ce06                	sw	ra,28(sp)
2010520e:	cc22                	sw	s0,24(sp)
20105210:	1000                	add	s0,sp,32
20105212:	fea42623          	sw	a0,-20(s0)
20105216:	feb42023          	sw	a1,-32(s0)
2010521a:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:113
    return cpu->vtable->mtimecmp_set(cpu, time);
2010521e:	fec42783          	lw	a5,-20(s0)
20105222:	439c                	lw	a5,0(a5)
20105224:	47dc                	lw	a5,12(a5)
20105226:	fe042583          	lw	a1,-32(s0)
2010522a:	fe442603          	lw	a2,-28(s0)
2010522e:	fec42503          	lw	a0,-20(s0)
20105232:	9782                	jalr	a5
20105234:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:114
}
20105236:	853e                	mv	a0,a5
20105238:	40f2                	lw	ra,28(sp)
2010523a:	4462                	lw	s0,24(sp)
2010523c:	6105                	add	sp,sp,32
2010523e:	8082                	ret

20105240 <metal_cpu_timer_interrupt_controller>:
metal_cpu_timer_interrupt_controller():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:126
 *
 * @param cpu The CPU device handle
 * @return A pointer to the timer interrupt handle
 */
__inline__ struct metal_interrupt *
metal_cpu_timer_interrupt_controller(struct metal_cpu *cpu) {
20105240:	1101                	add	sp,sp,-32
20105242:	ce06                	sw	ra,28(sp)
20105244:	cc22                	sw	s0,24(sp)
20105246:	1000                	add	s0,sp,32
20105248:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:127
    return cpu->vtable->tmr_controller_interrupt(cpu);
2010524c:	fec42783          	lw	a5,-20(s0)
20105250:	439c                	lw	a5,0(a5)
20105252:	4b9c                	lw	a5,16(a5)
20105254:	fec42503          	lw	a0,-20(s0)
20105258:	9782                	jalr	a5
2010525a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:128
}
2010525c:	853e                	mv	a0,a5
2010525e:	40f2                	lw	ra,28(sp)
20105260:	4462                	lw	s0,24(sp)
20105262:	6105                	add	sp,sp,32
20105264:	8082                	ret

20105266 <metal_cpu_timer_get_interrupt_id>:
metal_cpu_timer_get_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:137
 * Get the interrupt ID of the real-time clock interrupt
 *
 * @param cpu The CPU device handle
 * @return The timer interrupt ID
 */
__inline__ int metal_cpu_timer_get_interrupt_id(struct metal_cpu *cpu) {
20105266:	1101                	add	sp,sp,-32
20105268:	ce06                	sw	ra,28(sp)
2010526a:	cc22                	sw	s0,24(sp)
2010526c:	1000                	add	s0,sp,32
2010526e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:138
    return cpu->vtable->get_tmr_interrupt_id(cpu);
20105272:	fec42783          	lw	a5,-20(s0)
20105276:	439c                	lw	a5,0(a5)
20105278:	4bdc                	lw	a5,20(a5)
2010527a:	fec42503          	lw	a0,-20(s0)
2010527e:	9782                	jalr	a5
20105280:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:139
}
20105282:	853e                	mv	a0,a5
20105284:	40f2                	lw	ra,28(sp)
20105286:	4462                	lw	s0,24(sp)
20105288:	6105                	add	sp,sp,32
2010528a:	8082                	ret

2010528c <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
2010528c:	1101                	add	sp,sp,-32
2010528e:	ce06                	sw	ra,28(sp)
20105290:	cc22                	sw	s0,24(sp)
20105292:	1000                	add	s0,sp,32
20105294:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20105298:	fec42783          	lw	a5,-20(s0)
2010529c:	439c                	lw	a5,0(a5)
2010529e:	57dc                	lw	a5,44(a5)
201052a0:	fec42503          	lw	a0,-20(s0)
201052a4:	9782                	jalr	a5
201052a6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:226
}
201052a8:	853e                	mv	a0,a5
201052aa:	40f2                	lw	ra,28(sp)
201052ac:	4462                	lw	s0,24(sp)
201052ae:	6105                	add	sp,sp,32
201052b0:	8082                	ret

201052b2 <metal_cpu_get>:
metal_cpu_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
201052b2:	1101                	add	sp,sp,-32
201052b4:	ce22                	sw	s0,28(sp)
201052b6:	1000                	add	s0,sp,32
201052b8:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
201052bc:	fec42783          	lw	a5,-20(s0)
201052c0:	eb99                	bnez	a5,201052d6 <metal_cpu_get+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
201052c2:	800017b7          	lui	a5,0x80001
201052c6:	fec42703          	lw	a4,-20(s0)
201052ca:	070a                	sll	a4,a4,0x2
201052cc:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
201052d0:	97ba                	add	a5,a5,a4
201052d2:	439c                	lw	a5,0(a5)
201052d4:	a011                	j	201052d8 <metal_cpu_get+0x26>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:11
    }
    return NULL;
201052d6:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:12
}
201052d8:	853e                	mv	a0,a5
201052da:	4472                	lw	s0,28(sp)
201052dc:	6105                	add	sp,sp,32
201052de:	8082                	ret

201052e0 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
201052e0:	1101                	add	sp,sp,-32
201052e2:	ce22                	sw	s0,28(sp)
201052e4:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
201052e6:	f14027f3          	csrr	a5,mhartid
201052ea:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:18
    return mhartid;
201052ee:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:20
#endif
}
201052f2:	853e                	mv	a0,a5
201052f4:	4472                	lw	s0,28(sp)
201052f6:	6105                	add	sp,sp,32
201052f8:	8082                	ret

201052fa <metal_interrupt_init>:
metal_interrupt_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:130
 * before any interrupts are registered or enabled with the handler. It
 * is invalid to initialize an interrupt controller more than once.
 *
 * @param controller The handle for the interrupt controller
 */
__inline__ void metal_interrupt_init(struct metal_interrupt *controller) {
201052fa:	1101                	add	sp,sp,-32
201052fc:	ce06                	sw	ra,28(sp)
201052fe:	cc22                	sw	s0,24(sp)
20105300:	1000                	add	s0,sp,32
20105302:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:131
    controller->vtable->interrupt_init(controller);
20105306:	fec42783          	lw	a5,-20(s0)
2010530a:	439c                	lw	a5,0(a5)
2010530c:	439c                	lw	a5,0(a5)
2010530e:	fec42503          	lw	a0,-20(s0)
20105312:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:132
}
20105314:	0001                	nop
20105316:	40f2                	lw	ra,28(sp)
20105318:	4462                	lw	s0,24(sp)
2010531a:	6105                	add	sp,sp,32
2010531c:	8082                	ret

2010531e <metal_interrupt_register_handler>:
metal_interrupt_register_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:240
 * @return 0 upon success
 */
__inline__ int
metal_interrupt_register_handler(struct metal_interrupt *controller, int id,
                                 metal_interrupt_handler_t handler,
                                 void *priv_data) {
2010531e:	1101                	add	sp,sp,-32
20105320:	ce06                	sw	ra,28(sp)
20105322:	cc22                	sw	s0,24(sp)
20105324:	1000                	add	s0,sp,32
20105326:	fea42623          	sw	a0,-20(s0)
2010532a:	feb42423          	sw	a1,-24(s0)
2010532e:	fec42223          	sw	a2,-28(s0)
20105332:	fed42023          	sw	a3,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:241
    return controller->vtable->interrupt_register(controller, id, handler,
20105336:	fec42783          	lw	a5,-20(s0)
2010533a:	439c                	lw	a5,0(a5)
2010533c:	4fdc                	lw	a5,28(a5)
2010533e:	fe042683          	lw	a3,-32(s0)
20105342:	fe442603          	lw	a2,-28(s0)
20105346:	fe842583          	lw	a1,-24(s0)
2010534a:	fec42503          	lw	a0,-20(s0)
2010534e:	9782                	jalr	a5
20105350:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:243
                                                  priv_data);
}
20105352:	853e                	mv	a0,a5
20105354:	40f2                	lw	ra,28(sp)
20105356:	4462                	lw	s0,24(sp)
20105358:	6105                	add	sp,sp,32
2010535a:	8082                	ret

2010535c <metal_interrupt_enable>:
metal_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:267
 * @param controller The handle for the interrupt controller
 * @param id The interrupt ID to enable
 * @return 0 upon success
 */
__inline__ int metal_interrupt_enable(struct metal_interrupt *controller,
                                      int id) {
2010535c:	1101                	add	sp,sp,-32
2010535e:	ce06                	sw	ra,28(sp)
20105360:	cc22                	sw	s0,24(sp)
20105362:	1000                	add	s0,sp,32
20105364:	fea42623          	sw	a0,-20(s0)
20105368:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:268
    return controller->vtable->interrupt_enable(controller, id);
2010536c:	fec42783          	lw	a5,-20(s0)
20105370:	439c                	lw	a5,0(a5)
20105372:	53dc                	lw	a5,36(a5)
20105374:	fe842583          	lw	a1,-24(s0)
20105378:	fec42503          	lw	a0,-20(s0)
2010537c:	9782                	jalr	a5
2010537e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:269
}
20105380:	853e                	mv	a0,a5
20105382:	40f2                	lw	ra,28(sp)
20105384:	4462                	lw	s0,24(sp)
20105386:	6105                	add	sp,sp,32
20105388:	8082                	ret

2010538a <metal_interrupt_disable>:
metal_interrupt_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:278
 * @param controller The handle for the interrupt controller
 * @param id The interrupt ID to disable
 * @return 0 upon success
 */
__inline__ int metal_interrupt_disable(struct metal_interrupt *controller,
                                       int id) {
2010538a:	1101                	add	sp,sp,-32
2010538c:	ce06                	sw	ra,28(sp)
2010538e:	cc22                	sw	s0,24(sp)
20105390:	1000                	add	s0,sp,32
20105392:	fea42623          	sw	a0,-20(s0)
20105396:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:279
    return controller->vtable->interrupt_disable(controller, id);
2010539a:	fec42783          	lw	a5,-20(s0)
2010539e:	439c                	lw	a5,0(a5)
201053a0:	579c                	lw	a5,40(a5)
201053a2:	fe842583          	lw	a1,-24(s0)
201053a6:	fec42503          	lw	a0,-20(s0)
201053aa:	9782                	jalr	a5
201053ac:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/interrupt.h:280
}
201053ae:	853e                	mv	a0,a5
201053b0:	40f2                	lw	ra,28(sp)
201053b2:	4462                	lw	s0,24(sp)
201053b4:	6105                	add	sp,sp,32
201053b6:	8082                	ret

201053b8 <metal_led_enable>:
metal_led_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:49

/*!
 * @brief Enable an LED
 * @param led The handle for the LED
 */
__inline__ void metal_led_enable(struct metal_led *led) {
201053b8:	1101                	add	sp,sp,-32
201053ba:	ce06                	sw	ra,28(sp)
201053bc:	cc22                	sw	s0,24(sp)
201053be:	1000                	add	s0,sp,32
201053c0:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:50
    led->vtable->led_enable(led);
201053c4:	fec42783          	lw	a5,-20(s0)
201053c8:	439c                	lw	a5,0(a5)
201053ca:	43dc                	lw	a5,4(a5)
201053cc:	fec42503          	lw	a0,-20(s0)
201053d0:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:51
}
201053d2:	0001                	nop
201053d4:	40f2                	lw	ra,28(sp)
201053d6:	4462                	lw	s0,24(sp)
201053d8:	6105                	add	sp,sp,32
201053da:	8082                	ret

201053dc <metal_led_on>:
metal_led_on():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:57

/*!
 * @brief Turn an LED on
 * @param led The handle for the LED
 */
__inline__ void metal_led_on(struct metal_led *led) {
201053dc:	1101                	add	sp,sp,-32
201053de:	ce06                	sw	ra,28(sp)
201053e0:	cc22                	sw	s0,24(sp)
201053e2:	1000                	add	s0,sp,32
201053e4:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:58
    led->vtable->led_on(led);
201053e8:	fec42783          	lw	a5,-20(s0)
201053ec:	439c                	lw	a5,0(a5)
201053ee:	479c                	lw	a5,8(a5)
201053f0:	fec42503          	lw	a0,-20(s0)
201053f4:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:59
}
201053f6:	0001                	nop
201053f8:	40f2                	lw	ra,28(sp)
201053fa:	4462                	lw	s0,24(sp)
201053fc:	6105                	add	sp,sp,32
201053fe:	8082                	ret

20105400 <metal_led_off>:
metal_led_off():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:65

/*!
 * @brief Turn an LED off
 * @param led The handle for the LED
 */
__inline__ void metal_led_off(struct metal_led *led) {
20105400:	1101                	add	sp,sp,-32
20105402:	ce06                	sw	ra,28(sp)
20105404:	cc22                	sw	s0,24(sp)
20105406:	1000                	add	s0,sp,32
20105408:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:66
    led->vtable->led_off(led);
2010540c:	fec42783          	lw	a5,-20(s0)
20105410:	439c                	lw	a5,0(a5)
20105412:	47dc                	lw	a5,12(a5)
20105414:	fec42503          	lw	a0,-20(s0)
20105418:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/led.h:67
}
2010541a:	0001                	nop
2010541c:	40f2                	lw	ra,28(sp)
2010541e:	4462                	lw	s0,24(sp)
20105420:	6105                	add	sp,sp,32
20105422:	8082                	ret

20105424 <metal_led_get_rgb>:
metal_led_get_rgb():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:8

#include <metal/led.h>
#include <metal/machine.h>
#include <string.h>

struct metal_led *metal_led_get_rgb(char *label, char *color) {
20105424:	7175                	add	sp,sp,-144
20105426:	c706                	sw	ra,140(sp)
20105428:	c522                	sw	s0,136(sp)
2010542a:	0900                	add	s0,sp,144
2010542c:	f6a42e23          	sw	a0,-132(s0)
20105430:	f6b42c23          	sw	a1,-136(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:13
    int i;
    struct metal_led *led;
    char led_label[100];

    if ((__METAL_DT_MAX_LEDS == 0) || (label == NULL) || (color == NULL)) {
20105434:	f7c42783          	lw	a5,-132(s0)
20105438:	c781                	beqz	a5,20105440 <metal_led_get_rgb+0x1c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:13 (discriminator 1)
2010543a:	f7842783          	lw	a5,-136(s0)
2010543e:	e399                	bnez	a5,20105444 <metal_led_get_rgb+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:14
        return NULL;
20105440:	4781                	li	a5,0
20105442:	a0bd                	j	201054b0 <metal_led_get_rgb+0x8c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:17
    }

    strcpy(led_label, label);
20105444:	f8440793          	add	a5,s0,-124
20105448:	f7c42583          	lw	a1,-132(s0)
2010544c:	853e                	mv	a0,a5
2010544e:	457040ef          	jal	2010a0a4 <strcpy>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:18
    strcat(led_label, color);
20105452:	f8440793          	add	a5,s0,-124
20105456:	f7842583          	lw	a1,-136(s0)
2010545a:	853e                	mv	a0,a5
2010545c:	38f040ef          	jal	20109fea <strcat>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:19
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
20105460:	fe042623          	sw	zero,-20(s0)
20105464:	a081                	j	201054a4 <metal_led_get_rgb+0x80>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:20
        led = (struct metal_led *)__metal_led_table[i];
20105466:	800007b7          	lui	a5,0x80000
2010546a:	05878713          	add	a4,a5,88 # 80000058 <__metal_led_table>
2010546e:	fec42783          	lw	a5,-20(s0)
20105472:	078a                	sll	a5,a5,0x2
20105474:	97ba                	add	a5,a5,a4
20105476:	439c                	lw	a5,0(a5)
20105478:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:21
        if (led->vtable->led_exist(led, led_label)) {
2010547c:	fe842783          	lw	a5,-24(s0)
20105480:	439c                	lw	a5,0(a5)
20105482:	439c                	lw	a5,0(a5)
20105484:	f8440713          	add	a4,s0,-124
20105488:	85ba                	mv	a1,a4
2010548a:	fe842503          	lw	a0,-24(s0)
2010548e:	9782                	jalr	a5
20105490:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:21 (discriminator 1)
20105492:	c781                	beqz	a5,2010549a <metal_led_get_rgb+0x76>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:22
            return led;
20105494:	fe842783          	lw	a5,-24(s0)
20105498:	a821                	j	201054b0 <metal_led_get_rgb+0x8c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:19 (discriminator 2)
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
2010549a:	fec42783          	lw	a5,-20(s0)
2010549e:	0785                	add	a5,a5,1
201054a0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:19 (discriminator 1)
201054a4:	fec42703          	lw	a4,-20(s0)
201054a8:	4789                	li	a5,2
201054aa:	fae7dee3          	bge	a5,a4,20105466 <metal_led_get_rgb+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:25
        }
    }
    return NULL;
201054ae:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/led.c:26
}
201054b0:	853e                	mv	a0,a5
201054b2:	40ba                	lw	ra,140(sp)
201054b4:	442a                	lw	s0,136(sp)
201054b6:	6149                	add	sp,sp,144
201054b8:	8082                	ret

201054ba <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:208
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
201054ba:	1101                	add	sp,sp,-32
201054bc:	ce22                	sw	s0,28(sp)
201054be:	1000                	add	s0,sp,32
201054c0:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:209
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
201054c4:	fec42703          	lw	a4,-20(s0)
201054c8:	800017b7          	lui	a5,0x80001
201054cc:	a8078793          	add	a5,a5,-1408 # 80000a80 <__metal_dt_clint_2000000>
201054d0:	00f71563          	bne	a4,a5,201054da <__metal_driver_sifive_clint0_control_base+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:210
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
201054d4:	020007b7          	lui	a5,0x2000
201054d8:	a011                	j	201054dc <__metal_driver_sifive_clint0_control_base+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:213
	}
	else {
		return 0;
201054da:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:215
	}
}
201054dc:	853e                	mv	a0,a5
201054de:	4472                	lw	s0,28(sp)
201054e0:	6105                	add	sp,sp,32
201054e2:	8082                	ret

201054e4 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:228
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
201054e4:	1101                	add	sp,sp,-32
201054e6:	ce22                	sw	s0,28(sp)
201054e8:	1000                	add	s0,sp,32
201054ea:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:229
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
201054ee:	fec42703          	lw	a4,-20(s0)
201054f2:	800017b7          	lui	a5,0x80001
201054f6:	a8078793          	add	a5,a5,-1408 # 80000a80 <__metal_dt_clint_2000000>
201054fa:	00f71463          	bne	a4,a5,20105502 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:230
		return METAL_MAX_CLINT_INTERRUPTS;
201054fe:	4789                	li	a5,2
20105500:	a011                	j	20105504 <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:233
	}
	else {
		return 0;
20105502:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:235
	}
}
20105504:	853e                	mv	a0,a5
20105506:	4472                	lw	s0,28(sp)
20105508:	6105                	add	sp,sp,32
2010550a:	8082                	ret

2010550c <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:238

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2010550c:	1101                	add	sp,sp,-32
2010550e:	ce22                	sw	s0,28(sp)
20105510:	1000                	add	s0,sp,32
20105512:	fea42623          	sw	a0,-20(s0)
20105516:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:239
	if (idx == 0) {
2010551a:	fe842783          	lw	a5,-24(s0)
2010551e:	e791                	bnez	a5,2010552a <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:240
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20105520:	800007b7          	lui	a5,0x80000
20105524:	08878793          	add	a5,a5,136 # 80000088 <__metal_dt_cpu_0_interrupt_controller>
20105528:	a821                	j	20105540 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:242
	}
	else if (idx == 1) {
2010552a:	fe842703          	lw	a4,-24(s0)
2010552e:	4785                	li	a5,1
20105530:	00f71763          	bne	a4,a5,2010553e <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:243
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20105534:	800007b7          	lui	a5,0x80000
20105538:	08878793          	add	a5,a5,136 # 80000088 <__metal_dt_cpu_0_interrupt_controller>
2010553c:	a011                	j	20105540 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:246
	}
	else {
		return NULL;
2010553e:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:248
	}
}
20105540:	853e                	mv	a0,a5
20105542:	4472                	lw	s0,28(sp)
20105544:	6105                	add	sp,sp,32
20105546:	8082                	ret

20105548 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:251

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20105548:	1101                	add	sp,sp,-32
2010554a:	ce22                	sw	s0,28(sp)
2010554c:	1000                	add	s0,sp,32
2010554e:	fea42623          	sw	a0,-20(s0)
20105552:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:252
	if (idx == 0) {
20105556:	fe842783          	lw	a5,-24(s0)
2010555a:	e399                	bnez	a5,20105560 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:253
		return 3;
2010555c:	478d                	li	a5,3
2010555e:	a809                	j	20105570 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:255
	}
	else if (idx == 1) {
20105560:	fe842703          	lw	a4,-24(s0)
20105564:	4785                	li	a5,1
20105566:	00f71463          	bne	a4,a5,2010556e <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:256
		return 7;
2010556a:	479d                	li	a5,7
2010556c:	a011                	j	20105570 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:259
	}
	else {
		return 0;
2010556e:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:261
	}
}
20105570:	853e                	mv	a0,a5
20105572:	4472                	lw	s0,28(sp)
20105574:	6105                	add	sp,sp,32
20105576:	8082                	ret

20105578 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20105578:	715d                	add	sp,sp,-80
2010557a:	c686                	sw	ra,76(sp)
2010557c:	c4a2                	sw	s0,72(sp)
2010557e:	c2ca                	sw	s2,68(sp)
20105580:	c0ce                	sw	s3,64(sp)
20105582:	de52                	sw	s4,60(sp)
20105584:	dc56                	sw	s5,56(sp)
20105586:	da5a                	sw	s6,52(sp)
20105588:	d85e                	sw	s7,48(sp)
2010558a:	d662                	sw	s8,44(sp)
2010558c:	d466                	sw	s9,40(sp)
2010558e:	0880                	add	s0,sp,80
20105590:	faa42e23          	sw	a0,-68(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20105594:	fbc42783          	lw	a5,-68(s0)
20105598:	853e                	mv	a0,a5
2010559a:	3705                	jal	201054ba <__metal_driver_sifive_clint0_control_base>
2010559c:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:21

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
201055a0:	fcc42703          	lw	a4,-52(s0)
201055a4:	67b1                	lui	a5,0xc
201055a6:	17f1                	add	a5,a5,-4 # bffc <__heap_size+0xb7fc>
201055a8:	97ba                	add	a5,a5,a4
201055aa:	439c                	lw	a5,0(a5)
201055ac:	fcf42423          	sw	a5,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:23
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
201055b0:	fcc42703          	lw	a4,-52(s0)
201055b4:	67b1                	lui	a5,0xc
201055b6:	17e1                	add	a5,a5,-8 # bff8 <__heap_size+0xb7f8>
201055b8:	97ba                	add	a5,a5,a4
201055ba:	439c                	lw	a5,0(a5)
201055bc:	fcf42223          	sw	a5,-60(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:25
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
201055c0:	fcc42703          	lw	a4,-52(s0)
201055c4:	67b1                	lui	a5,0xc
201055c6:	17f1                	add	a5,a5,-4 # bffc <__heap_size+0xb7fc>
201055c8:	97ba                	add	a5,a5,a4
201055ca:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:27 (discriminator 1)
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);
201055cc:	fc842703          	lw	a4,-56(s0)
201055d0:	fcf718e3          	bne	a4,a5,201055a0 <__metal_clint0_mtime_get+0x28>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:29

    return (((unsigned long long)hi) << 32) | lo;
201055d4:	fc842783          	lw	a5,-56(s0)
201055d8:	8c3e                	mv	s8,a5
201055da:	4c81                	li	s9,0
201055dc:	000c1993          	sll	s3,s8,0x0
201055e0:	4901                	li	s2,0
201055e2:	fc442783          	lw	a5,-60(s0)
201055e6:	8a3e                	mv	s4,a5
201055e8:	4a81                	li	s5,0
201055ea:	01496b33          	or	s6,s2,s4
201055ee:	0159ebb3          	or	s7,s3,s5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:29 (discriminator 1)
201055f2:	875a                	mv	a4,s6
201055f4:	87de                	mv	a5,s7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:30
}
201055f6:	853a                	mv	a0,a4
201055f8:	85be                	mv	a1,a5
201055fa:	40b6                	lw	ra,76(sp)
201055fc:	4426                	lw	s0,72(sp)
201055fe:	4916                	lw	s2,68(sp)
20105600:	4986                	lw	s3,64(sp)
20105602:	5a72                	lw	s4,60(sp)
20105604:	5ae2                	lw	s5,56(sp)
20105606:	5b52                	lw	s6,52(sp)
20105608:	5bc2                	lw	s7,48(sp)
2010560a:	5c32                	lw	s8,44(sp)
2010560c:	5ca2                	lw	s9,40(sp)
2010560e:	6161                	add	sp,sp,80
20105610:	8082                	ret

20105612 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20105612:	7179                	add	sp,sp,-48
20105614:	d606                	sw	ra,44(sp)
20105616:	d422                	sw	s0,40(sp)
20105618:	d24a                	sw	s2,36(sp)
2010561a:	d04e                	sw	s3,32(sp)
2010561c:	1800                	add	s0,sp,48
2010561e:	fca42e23          	sw	a0,-36(s0)
20105622:	fcb42c23          	sw	a1,-40(s0)
20105626:	fcc42823          	sw	a2,-48(s0)
2010562a:	fcd42a23          	sw	a3,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
2010562e:	fdc42783          	lw	a5,-36(s0)
20105632:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20105636:	fec42783          	lw	a5,-20(s0)
2010563a:	853e                	mv	a0,a5
2010563c:	3dbd                	jal	201054ba <__metal_driver_sifive_clint0_control_base>
2010563e:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20105642:	fd842783          	lw	a5,-40(s0)
20105646:	078e                	sll	a5,a5,0x3
20105648:	873e                	mv	a4,a5
2010564a:	fe842783          	lw	a5,-24(s0)
2010564e:	973e                	add	a4,a4,a5
20105650:	6791                	lui	a5,0x4
20105652:	0791                	add	a5,a5,4 # 4004 <__heap_size+0x3804>
20105654:	97ba                	add	a5,a5,a4
20105656:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20105658:	57fd                	li	a5,-1
2010565a:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2010565c:	fd842783          	lw	a5,-40(s0)
20105660:	078e                	sll	a5,a5,0x3
20105662:	873e                	mv	a4,a5
20105664:	fe842783          	lw	a5,-24(s0)
20105668:	973e                	add	a4,a4,a5
2010566a:	6791                	lui	a5,0x4
2010566c:	97ba                	add	a5,a5,a4
2010566e:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20105670:	fd042783          	lw	a5,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20105674:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20105676:	fd442783          	lw	a5,-44(s0)
2010567a:	0007d913          	srl	s2,a5,0x0
2010567e:	4981                	li	s3,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20105680:	fd842783          	lw	a5,-40(s0)
20105684:	078e                	sll	a5,a5,0x3
20105686:	873e                	mv	a4,a5
20105688:	fe842783          	lw	a5,-24(s0)
2010568c:	973e                	add	a4,a4,a5
2010568e:	6791                	lui	a5,0x4
20105690:	0791                	add	a5,a5,4 # 4004 <__heap_size+0x3804>
20105692:	97ba                	add	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20105694:	874a                	mv	a4,s2
20105696:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20105698:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:55
}
2010569a:	853e                	mv	a0,a5
2010569c:	50b2                	lw	ra,44(sp)
2010569e:	5422                	lw	s0,40(sp)
201056a0:	5912                	lw	s2,36(sp)
201056a2:	5982                	lw	s3,32(sp)
201056a4:	6145                	add	sp,sp,48
201056a6:	8082                	ret

201056a8 <_get_cpu_intc>:
_get_cpu_intc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
201056a8:	1101                	add	sp,sp,-32
201056aa:	ce06                	sw	ra,28(sp)
201056ac:	cc22                	sw	s0,24(sp)
201056ae:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
201056b0:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
201056b4:	f14027f3          	csrr	a5,mhartid
201056b8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
201056bc:	fec42783          	lw	a5,-20(s0)
201056c0:	853e                	mv	a0,a5
201056c2:	3ec5                	jal	201052b2 <metal_cpu_get>
201056c4:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
201056c8:	fe842503          	lw	a0,-24(s0)
201056cc:	36c1                	jal	2010528c <metal_cpu_interrupt_controller>
201056ce:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:65
}
201056d0:	853e                	mv	a0,a5
201056d2:	40f2                	lw	ra,28(sp)
201056d4:	4462                	lw	s0,24(sp)
201056d6:	6105                	add	sp,sp,32
201056d8:	8082                	ret

201056da <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
201056da:	7139                	add	sp,sp,-64
201056dc:	de06                	sw	ra,60(sp)
201056de:	dc22                	sw	s0,56(sp)
201056e0:	0080                	add	s0,sp,64
201056e2:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
201056e6:	fcc42503          	lw	a0,-52(s0)
201056ea:	3bed                	jal	201054e4 <__metal_driver_sifive_clint0_num_interrupts>
201056ec:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
201056f0:	fcc42783          	lw	a5,-52(s0)
201056f4:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
201056f8:	fe442783          	lw	a5,-28(s0)
201056fc:	43dc                	lw	a5,4(a5)
201056fe:	efa9                	bnez	a5,20105758 <__metal_driver_riscv_clint0_init+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20105700:	fe042623          	sw	zero,-20(s0)
20105704:	a081                	j	20105744 <__metal_driver_riscv_clint0_init+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:78
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20105706:	fec42583          	lw	a1,-20(s0)
2010570a:	fcc42503          	lw	a0,-52(s0)
2010570e:	3bfd                	jal	2010550c <__metal_driver_sifive_clint0_interrupt_parents>
20105710:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:80
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20105714:	fec42583          	lw	a1,-20(s0)
20105718:	fcc42503          	lw	a0,-52(s0)
2010571c:	3535                	jal	20105548 <__metal_driver_sifive_clint0_interrupt_lines>
2010571e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:81
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20105722:	fe042783          	lw	a5,-32(s0)
20105726:	439c                	lw	a5,0(a5)
20105728:	4fdc                	lw	a5,28(a5)
2010572a:	fcc42683          	lw	a3,-52(s0)
2010572e:	4601                	li	a2,0
20105730:	fdc42583          	lw	a1,-36(s0)
20105734:	fe042503          	lw	a0,-32(s0)
20105738:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
2010573a:	fec42783          	lw	a5,-20(s0)
2010573e:	0785                	add	a5,a5,1
20105740:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20105744:	fec42703          	lw	a4,-20(s0)
20105748:	fe842783          	lw	a5,-24(s0)
2010574c:	faf74de3          	blt	a4,a5,20105706 <__metal_driver_riscv_clint0_init+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20105750:	fe442783          	lw	a5,-28(s0)
20105754:	4705                	li	a4,1
20105756:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20105758:	0001                	nop
2010575a:	50f2                	lw	ra,60(sp)
2010575c:	5462                	lw	s0,56(sp)
2010575e:	6121                	add	sp,sp,64
20105760:	8082                	ret

20105762 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20105762:	7139                	add	sp,sp,-64
20105764:	de06                	sw	ra,60(sp)
20105766:	dc22                	sw	s0,56(sp)
20105768:	0080                	add	s0,sp,64
2010576a:	fca42623          	sw	a0,-52(s0)
2010576e:	fcb42423          	sw	a1,-56(s0)
20105772:	fcc42223          	sw	a2,-60(s0)
20105776:	fcd42023          	sw	a3,-64(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
2010577a:	57fd                	li	a5,-1
2010577c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20105780:	45a010ef          	jal	20106bda <__metal_controller_interrupt_vector_mode>
20105784:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20105788:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2010578c:	3f31                	jal	201056a8 <_get_cpu_intc>
2010578e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20105792:	fcc42503          	lw	a0,-52(s0)
20105796:	33b9                	jal	201054e4 <__metal_driver_sifive_clint0_num_interrupts>
20105798:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
2010579c:	fe042703          	lw	a4,-32(s0)
201057a0:	4785                	li	a5,1
201057a2:	00f70863          	beq	a4,a5,201057b2 <__metal_driver_riscv_clint0_register+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
201057a6:	fe042783          	lw	a5,-32(s0)
201057aa:	c781                	beqz	a5,201057b2 <__metal_driver_riscv_clint0_register+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
201057ac:	fec42783          	lw	a5,-20(s0)
201057b0:	a049                	j	20105832 <__metal_driver_riscv_clint0_register+0xd0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
201057b2:	fe042223          	sw	zero,-28(s0)
201057b6:	a091                	j	201057fa <__metal_driver_riscv_clint0_register+0x98>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
201057b8:	fe442583          	lw	a1,-28(s0)
201057bc:	fcc42503          	lw	a0,-52(s0)
201057c0:	3361                	jal	20105548 <__metal_driver_sifive_clint0_interrupt_lines>
201057c2:	fca42a23          	sw	a0,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
201057c6:	fe442583          	lw	a1,-28(s0)
201057ca:	fcc42503          	lw	a0,-52(s0)
201057ce:	3b3d                	jal	2010550c <__metal_driver_sifive_clint0_interrupt_parents>
201057d0:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
201057d4:	fdc42703          	lw	a4,-36(s0)
201057d8:	fe842783          	lw	a5,-24(s0)
201057dc:	00f71863          	bne	a4,a5,201057ec <__metal_driver_riscv_clint0_register+0x8a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
201057e0:	fc842703          	lw	a4,-56(s0)
201057e4:	fd442783          	lw	a5,-44(s0)
201057e8:	02f70063          	beq	a4,a5,20105808 <__metal_driver_riscv_clint0_register+0xa6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:107
            break;
        }
        intc = NULL;
201057ec:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
201057f0:	fe442783          	lw	a5,-28(s0)
201057f4:	0785                	add	a5,a5,1
201057f6:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
201057fa:	fe442703          	lw	a4,-28(s0)
201057fe:	fd842783          	lw	a5,-40(s0)
20105802:	faf74be3          	blt	a4,a5,201057b8 <__metal_driver_riscv_clint0_register+0x56>
20105806:	a011                	j	2010580a <__metal_driver_riscv_clint0_register+0xa8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20105808:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
2010580a:	fe842783          	lw	a5,-24(s0)
2010580e:	c385                	beqz	a5,2010582e <__metal_driver_riscv_clint0_register+0xcc>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20105810:	fe842783          	lw	a5,-24(s0)
20105814:	439c                	lw	a5,0(a5)
20105816:	4fdc                	lw	a5,28(a5)
20105818:	fc042683          	lw	a3,-64(s0)
2010581c:	fc442603          	lw	a2,-60(s0)
20105820:	fc842583          	lw	a1,-56(s0)
20105824:	fe842503          	lw	a0,-24(s0)
20105828:	9782                	jalr	a5
2010582a:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
2010582e:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:115
}
20105832:	853e                	mv	a0,a5
20105834:	50f2                	lw	ra,60(sp)
20105836:	5462                	lw	s0,56(sp)
20105838:	6121                	add	sp,sp,64
2010583a:	8082                	ret

2010583c <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
2010583c:	7179                	add	sp,sp,-48
2010583e:	d622                	sw	s0,44(sp)
20105840:	1800                	add	s0,sp,48
20105842:	fca42e23          	sw	a0,-36(s0)
20105846:	fcb42c23          	sw	a1,-40(s0)
2010584a:	fcc42a23          	sw	a2,-44(s0)
2010584e:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20105852:	57fd                	li	a5,-1
20105854:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20105858:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:123
}
2010585c:	853e                	mv	a0,a5
2010585e:	5432                	lw	s0,44(sp)
20105860:	6145                	add	sp,sp,48
20105862:	8082                	ret

20105864 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20105864:	1101                	add	sp,sp,-32
20105866:	ce06                	sw	ra,28(sp)
20105868:	cc22                	sw	s0,24(sp)
2010586a:	1000                	add	s0,sp,32
2010586c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20105870:	36a010ef          	jal	20106bda <__metal_controller_interrupt_vector_mode>
20105874:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:128
}
20105876:	853e                	mv	a0,a5
20105878:	40f2                	lw	ra,28(sp)
2010587a:	4462                	lw	s0,24(sp)
2010587c:	6105                	add	sp,sp,32
2010587e:	8082                	ret

20105880 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20105880:	7179                	add	sp,sp,-48
20105882:	d606                	sw	ra,44(sp)
20105884:	d422                	sw	s0,40(sp)
20105886:	1800                	add	s0,sp,48
20105888:	fca42e23          	sw	a0,-36(s0)
2010588c:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20105890:	57fd                	li	a5,-1
20105892:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20105896:	3d09                	jal	201056a8 <_get_cpu_intc>
20105898:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
2010589c:	fe842783          	lw	a5,-24(s0)
201058a0:	c39d                	beqz	a5,201058c6 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
201058a2:	fd842703          	lw	a4,-40(s0)
201058a6:	4785                	li	a5,1
201058a8:	00e7ee63          	bltu	a5,a4,201058c4 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
201058ac:	fe842783          	lw	a5,-24(s0)
201058b0:	439c                	lw	a5,0(a5)
201058b2:	43dc                	lw	a5,4(a5)
201058b4:	fd842583          	lw	a1,-40(s0)
201058b8:	fe842503          	lw	a0,-24(s0)
201058bc:	9782                	jalr	a5
201058be:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
201058c2:	a011                	j	201058c6 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:144
        default:
            break;
201058c4:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:147
        }
    }
    return rc;
201058c6:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:148
}
201058ca:	853e                	mv	a0,a5
201058cc:	50b2                	lw	ra,44(sp)
201058ce:	5422                	lw	s0,40(sp)
201058d0:	6145                	add	sp,sp,48
201058d2:	8082                	ret

201058d4 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
201058d4:	7139                	add	sp,sp,-64
201058d6:	de06                	sw	ra,60(sp)
201058d8:	dc22                	sw	s0,56(sp)
201058da:	0080                	add	s0,sp,64
201058dc:	fca42623          	sw	a0,-52(s0)
201058e0:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
201058e4:	57fd                	li	a5,-1
201058e6:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
201058ea:	fc842783          	lw	a5,-56(s0)
201058ee:	c7c9                	beqz	a5,20105978 <__metal_driver_riscv_clint0_enable+0xa4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
201058f0:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
201058f4:	3b55                	jal	201056a8 <_get_cpu_intc>
201058f6:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
201058fa:	fcc42503          	lw	a0,-52(s0)
201058fe:	36dd                	jal	201054e4 <__metal_driver_sifive_clint0_num_interrupts>
20105900:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20105904:	fe042223          	sw	zero,-28(s0)
20105908:	a091                	j	2010594c <__metal_driver_riscv_clint0_enable+0x78>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2010590a:	fe442583          	lw	a1,-28(s0)
2010590e:	fcc42503          	lw	a0,-52(s0)
20105912:	391d                	jal	20105548 <__metal_driver_sifive_clint0_interrupt_lines>
20105914:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20105918:	fe442583          	lw	a1,-28(s0)
2010591c:	fcc42503          	lw	a0,-52(s0)
20105920:	36f5                	jal	2010550c <__metal_driver_sifive_clint0_interrupt_parents>
20105922:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20105926:	fe042703          	lw	a4,-32(s0)
2010592a:	fe842783          	lw	a5,-24(s0)
2010592e:	00f71863          	bne	a4,a5,2010593e <__metal_driver_riscv_clint0_enable+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20105932:	fc842703          	lw	a4,-56(s0)
20105936:	fd842783          	lw	a5,-40(s0)
2010593a:	02f70063          	beq	a4,a5,2010595a <__metal_driver_riscv_clint0_enable+0x86>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:168
                break;
            }
            intc = NULL;
2010593e:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20105942:	fe442783          	lw	a5,-28(s0)
20105946:	0785                	add	a5,a5,1
20105948:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
2010594c:	fe442703          	lw	a4,-28(s0)
20105950:	fdc42783          	lw	a5,-36(s0)
20105954:	faf74be3          	blt	a4,a5,2010590a <__metal_driver_riscv_clint0_enable+0x36>
20105958:	a011                	j	2010595c <__metal_driver_riscv_clint0_enable+0x88>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
2010595a:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
2010595c:	fe842783          	lw	a5,-24(s0)
20105960:	cf81                	beqz	a5,20105978 <__metal_driver_riscv_clint0_enable+0xa4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20105962:	fe842783          	lw	a5,-24(s0)
20105966:	439c                	lw	a5,0(a5)
20105968:	53dc                	lw	a5,36(a5)
2010596a:	fc842583          	lw	a1,-56(s0)
2010596e:	fe842503          	lw	a0,-24(s0)
20105972:	9782                	jalr	a5
20105974:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20105978:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:178
}
2010597c:	853e                	mv	a0,a5
2010597e:	50f2                	lw	ra,60(sp)
20105980:	5462                	lw	s0,56(sp)
20105982:	6121                	add	sp,sp,64
20105984:	8082                	ret

20105986 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20105986:	7139                	add	sp,sp,-64
20105988:	de06                	sw	ra,60(sp)
2010598a:	dc22                	sw	s0,56(sp)
2010598c:	0080                	add	s0,sp,64
2010598e:	fca42623          	sw	a0,-52(s0)
20105992:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20105996:	57fd                	li	a5,-1
20105998:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
2010599c:	fc842783          	lw	a5,-56(s0)
201059a0:	cbc1                	beqz	a5,20105a30 <__metal_driver_riscv_clint0_disable+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
201059a2:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
201059a6:	3309                	jal	201056a8 <_get_cpu_intc>
201059a8:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
201059ac:	fcc42503          	lw	a0,-52(s0)
201059b0:	b35ff0ef          	jal	201054e4 <__metal_driver_sifive_clint0_num_interrupts>
201059b4:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
201059b8:	fe042223          	sw	zero,-28(s0)
201059bc:	a0a1                	j	20105a04 <__metal_driver_riscv_clint0_disable+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
201059be:	fe442583          	lw	a1,-28(s0)
201059c2:	fcc42503          	lw	a0,-52(s0)
201059c6:	b83ff0ef          	jal	20105548 <__metal_driver_sifive_clint0_interrupt_lines>
201059ca:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
201059ce:	fe442583          	lw	a1,-28(s0)
201059d2:	fcc42503          	lw	a0,-52(s0)
201059d6:	b37ff0ef          	jal	2010550c <__metal_driver_sifive_clint0_interrupt_parents>
201059da:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
201059de:	fe042703          	lw	a4,-32(s0)
201059e2:	fe842783          	lw	a5,-24(s0)
201059e6:	00f71863          	bne	a4,a5,201059f6 <__metal_driver_riscv_clint0_disable+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
201059ea:	fc842703          	lw	a4,-56(s0)
201059ee:	fd842783          	lw	a5,-40(s0)
201059f2:	02f70063          	beq	a4,a5,20105a12 <__metal_driver_riscv_clint0_disable+0x8c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:198
                break;
            }
            intc = NULL;
201059f6:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
201059fa:	fe442783          	lw	a5,-28(s0)
201059fe:	0785                	add	a5,a5,1
20105a00:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20105a04:	fe442703          	lw	a4,-28(s0)
20105a08:	fdc42783          	lw	a5,-36(s0)
20105a0c:	faf749e3          	blt	a4,a5,201059be <__metal_driver_riscv_clint0_disable+0x38>
20105a10:	a011                	j	20105a14 <__metal_driver_riscv_clint0_disable+0x8e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20105a12:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20105a14:	fe842783          	lw	a5,-24(s0)
20105a18:	cf81                	beqz	a5,20105a30 <__metal_driver_riscv_clint0_disable+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20105a1a:	fe842783          	lw	a5,-24(s0)
20105a1e:	439c                	lw	a5,0(a5)
20105a20:	579c                	lw	a5,40(a5)
20105a22:	fc842583          	lw	a1,-56(s0)
20105a26:	fe842503          	lw	a0,-24(s0)
20105a2a:	9782                	jalr	a5
20105a2c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20105a30:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:208
}
20105a34:	853e                	mv	a0,a5
20105a36:	50f2                	lw	ra,60(sp)
20105a38:	5462                	lw	s0,56(sp)
20105a3a:	6121                	add	sp,sp,64
20105a3c:	8082                	ret

20105a3e <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20105a3e:	7179                	add	sp,sp,-48
20105a40:	d606                	sw	ra,44(sp)
20105a42:	d422                	sw	s0,40(sp)
20105a44:	1800                	add	s0,sp,48
20105a46:	fca42e23          	sw	a0,-36(s0)
20105a4a:	fcb42c23          	sw	a1,-40(s0)
20105a4e:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20105a52:	57fd                	li	a5,-1
20105a54:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20105a58:	fdc42783          	lw	a5,-36(s0)
20105a5c:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20105a60:	fdc42503          	lw	a0,-36(s0)
20105a64:	a57ff0ef          	jal	201054ba <__metal_driver_sifive_clint0_control_base>
20105a68:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20105a6c:	fd842703          	lw	a4,-40(s0)
20105a70:	4791                	li	a5,4
20105a72:	0cf70163          	beq	a4,a5,20105b34 <__metal_driver_riscv_clint0_command_request+0xf6>
20105a76:	fd842703          	lw	a4,-40(s0)
20105a7a:	4791                	li	a5,4
20105a7c:	0ee7c163          	blt	a5,a4,20105b5e <__metal_driver_riscv_clint0_command_request+0x120>
20105a80:	fd842703          	lw	a4,-40(s0)
20105a84:	478d                	li	a5,3
20105a86:	06f70663          	beq	a4,a5,20105af2 <__metal_driver_riscv_clint0_command_request+0xb4>
20105a8a:	fd842703          	lw	a4,-40(s0)
20105a8e:	478d                	li	a5,3
20105a90:	0ce7c763          	blt	a5,a4,20105b5e <__metal_driver_riscv_clint0_command_request+0x120>
20105a94:	fd842703          	lw	a4,-40(s0)
20105a98:	4785                	li	a5,1
20105a9a:	00f70863          	beq	a4,a5,20105aaa <__metal_driver_riscv_clint0_command_request+0x6c>
20105a9e:	fd842703          	lw	a4,-40(s0)
20105aa2:	4789                	li	a5,2
20105aa4:	02f70363          	beq	a4,a5,20105aca <__metal_driver_riscv_clint0_command_request+0x8c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20105aa8:	a85d                	j	20105b5e <__metal_driver_riscv_clint0_command_request+0x120>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20105aaa:	fd442783          	lw	a5,-44(s0)
20105aae:	cbd5                	beqz	a5,20105b62 <__metal_driver_riscv_clint0_command_request+0x124>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20105ab0:	fe842503          	lw	a0,-24(s0)
20105ab4:	ac5ff0ef          	jal	20105578 <__metal_clint0_mtime_get>
20105ab8:	872a                	mv	a4,a0
20105aba:	87ae                	mv	a5,a1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:222 (discriminator 1)
20105abc:	fd442683          	lw	a3,-44(s0)
20105ac0:	c298                	sw	a4,0(a3)
20105ac2:	c2dc                	sw	a5,4(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20105ac4:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20105ac8:	a869                	j	20105b62 <__metal_driver_riscv_clint0_command_request+0x124>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20105aca:	fd442783          	lw	a5,-44(s0)
20105ace:	cfc1                	beqz	a5,20105b66 <__metal_driver_riscv_clint0_command_request+0x128>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20105ad0:	fd442783          	lw	a5,-44(s0)
20105ad4:	439c                	lw	a5,0(a5)
20105ad6:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20105ada:	fe042783          	lw	a5,-32(s0)
20105ade:	078a                	sll	a5,a5,0x2
20105ae0:	873e                	mv	a4,a5
20105ae2:	fe442783          	lw	a5,-28(s0)
20105ae6:	97ba                	add	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20105ae8:	0007a023          	sw	zero,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20105aec:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20105af0:	a89d                	j	20105b66 <__metal_driver_riscv_clint0_command_request+0x128>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20105af2:	fd442783          	lw	a5,-44(s0)
20105af6:	cbb5                	beqz	a5,20105b6a <__metal_driver_riscv_clint0_command_request+0x12c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20105af8:	fd442783          	lw	a5,-44(s0)
20105afc:	439c                	lw	a5,0(a5)
20105afe:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20105b02:	fe042783          	lw	a5,-32(s0)
20105b06:	078a                	sll	a5,a5,0x2
20105b08:	873e                	mv	a4,a5
20105b0a:	fe442783          	lw	a5,-28(s0)
20105b0e:	97ba                	add	a5,a5,a4
20105b10:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20105b12:	4785                	li	a5,1
20105b14:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20105b16:	0480000f          	fence	o,i
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20105b1a:	fe042783          	lw	a5,-32(s0)
20105b1e:	078a                	sll	a5,a5,0x2
20105b20:	873e                	mv	a4,a5
20105b22:	fe442783          	lw	a5,-28(s0)
20105b26:	97ba                	add	a5,a5,a4
20105b28:	439c                	lw	a5,0(a5)
20105b2a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20105b2e:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20105b32:	a825                	j	20105b6a <__metal_driver_riscv_clint0_command_request+0x12c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20105b34:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20105b38:	fd442783          	lw	a5,-44(s0)
20105b3c:	cb8d                	beqz	a5,20105b6e <__metal_driver_riscv_clint0_command_request+0x130>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20105b3e:	fd442783          	lw	a5,-44(s0)
20105b42:	439c                	lw	a5,0(a5)
20105b44:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20105b48:	fe042783          	lw	a5,-32(s0)
20105b4c:	078a                	sll	a5,a5,0x2
20105b4e:	873e                	mv	a4,a5
20105b50:	fe442783          	lw	a5,-28(s0)
20105b54:	97ba                	add	a5,a5,a4
20105b56:	439c                	lw	a5,0(a5)
20105b58:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20105b5c:	a809                	j	20105b6e <__metal_driver_riscv_clint0_command_request+0x130>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20105b5e:	0001                	nop
20105b60:	a801                	j	20105b70 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20105b62:	0001                	nop
20105b64:	a031                	j	20105b70 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20105b66:	0001                	nop
20105b68:	a021                	j	20105b70 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20105b6a:	0001                	nop
20105b6c:	a011                	j	20105b70 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20105b6e:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20105b70:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:267
}
20105b74:	853e                	mv	a0,a5
20105b76:	50b2                	lw	ra,44(sp)
20105b78:	5422                	lw	s0,40(sp)
20105b7a:	6145                	add	sp,sp,48
20105b7c:	8082                	ret

20105b7e <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20105b7e:	7179                	add	sp,sp,-48
20105b80:	d606                	sw	ra,44(sp)
20105b82:	d422                	sw	s0,40(sp)
20105b84:	1800                	add	s0,sp,48
20105b86:	fca42e23          	sw	a0,-36(s0)
20105b8a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20105b8e:	f52ff0ef          	jal	201052e0 <metal_cpu_get_current_hartid>
20105b92:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:271 (discriminator 1)
20105b94:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20105b98:	fec40793          	add	a5,s0,-20
20105b9c:	863e                	mv	a2,a5
20105b9e:	4589                	li	a1,2
20105ba0:	fdc42503          	lw	a0,-36(s0)
20105ba4:	3d69                	jal	20105a3e <__metal_driver_riscv_clint0_command_request>
20105ba6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20105ba8:	853e                	mv	a0,a5
20105baa:	50b2                	lw	ra,44(sp)
20105bac:	5422                	lw	s0,40(sp)
20105bae:	6145                	add	sp,sp,48
20105bb0:	8082                	ret

20105bb2 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20105bb2:	7179                	add	sp,sp,-48
20105bb4:	d606                	sw	ra,44(sp)
20105bb6:	d422                	sw	s0,40(sp)
20105bb8:	1800                	add	s0,sp,48
20105bba:	fca42e23          	sw	a0,-36(s0)
20105bbe:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20105bc2:	f1eff0ef          	jal	201052e0 <metal_cpu_get_current_hartid>
20105bc6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:278 (discriminator 1)
20105bc8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20105bcc:	fec40793          	add	a5,s0,-20
20105bd0:	863e                	mv	a2,a5
20105bd2:	458d                	li	a1,3
20105bd4:	fdc42503          	lw	a0,-36(s0)
20105bd8:	359d                	jal	20105a3e <__metal_driver_riscv_clint0_command_request>
20105bda:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20105bdc:	853e                	mv	a0,a5
20105bde:	50b2                	lw	ra,44(sp)
20105be0:	5422                	lw	s0,40(sp)
20105be2:	6145                	add	sp,sp,48
20105be4:	8082                	ret

20105be6 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:267



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20105be6:	1101                	add	sp,sp,-32
20105be8:	ce22                	sw	s0,28(sp)
20105bea:	1000                	add	s0,sp,32
20105bec:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:268
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20105bf0:	fec42703          	lw	a4,-20(s0)
20105bf4:	81018793          	add	a5,gp,-2032 # 80000a88 <__metal_dt_cpu_0>
20105bf8:	00f71463          	bne	a4,a5,20105c00 <__metal_driver_cpu_hartid+0x1a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:269
		return 0;
20105bfc:	4781                	li	a5,0
20105bfe:	a011                	j	20105c02 <__metal_driver_cpu_hartid+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:272
	}
	else {
		return -1;
20105c00:	57fd                	li	a5,-1
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:274
	}
}
20105c02:	853e                	mv	a0,a5
20105c04:	4472                	lw	s0,28(sp)
20105c06:	6105                	add	sp,sp,32
20105c08:	8082                	ret

20105c0a <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:277

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20105c0a:	1101                	add	sp,sp,-32
20105c0c:	ce22                	sw	s0,28(sp)
20105c0e:	1000                	add	s0,sp,32
20105c10:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:278
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20105c14:	fec42703          	lw	a4,-20(s0)
20105c18:	81018793          	add	a5,gp,-2032 # 80000a88 <__metal_dt_cpu_0>
20105c1c:	00f71763          	bne	a4,a5,20105c2a <__metal_driver_cpu_timebase+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:279
		return 1000000;
20105c20:	000f47b7          	lui	a5,0xf4
20105c24:	24078793          	add	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20105c28:	a011                	j	20105c2c <__metal_driver_cpu_timebase+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:282
	}
	else {
		return 0;
20105c2a:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:284
	}
}
20105c2c:	853e                	mv	a0,a5
20105c2e:	4472                	lw	s0,28(sp)
20105c30:	6105                	add	sp,sp,32
20105c32:	8082                	ret

20105c34 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:287

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20105c34:	1101                	add	sp,sp,-32
20105c36:	ce22                	sw	s0,28(sp)
20105c38:	1000                	add	s0,sp,32
20105c3a:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:288
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20105c3e:	fec42703          	lw	a4,-20(s0)
20105c42:	81018793          	add	a5,gp,-2032 # 80000a88 <__metal_dt_cpu_0>
20105c46:	00f71763          	bne	a4,a5,20105c54 <__metal_driver_cpu_interrupt_controller+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:289
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20105c4a:	800007b7          	lui	a5,0x80000
20105c4e:	08878793          	add	a5,a5,136 # 80000088 <__metal_dt_cpu_0_interrupt_controller>
20105c52:	a011                	j	20105c56 <__metal_driver_cpu_interrupt_controller+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:292
	}
	else {
		return NULL;
20105c54:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:294
	}
}
20105c56:	853e                	mv	a0,a5
20105c58:	4472                	lw	s0,28(sp)
20105c5a:	6105                	add	sp,sp,32
20105c5c:	8082                	ret

20105c5e <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:307
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20105c5e:	1101                	add	sp,sp,-32
20105c60:	ce22                	sw	s0,28(sp)
20105c62:	1000                	add	s0,sp,32
20105c64:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:308
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20105c68:	fec42703          	lw	a4,-20(s0)
20105c6c:	81018793          	add	a5,gp,-2032 # 80000a88 <__metal_dt_cpu_0>
20105c70:	00f71463          	bne	a4,a5,20105c78 <__metal_driver_cpu_buserror+0x1a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:309
		return NULL;
20105c74:	4781                	li	a5,0
20105c76:	a011                	j	20105c7a <__metal_driver_cpu_buserror+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:312
	}
	else {
		return NULL;
20105c78:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:314
	}
}
20105c7a:	853e                	mv	a0,a5
20105c7c:	4472                	lw	s0,28(sp)
20105c7e:	6105                	add	sp,sp,32
20105c80:	8082                	ret

20105c82 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20105c82:	1101                	add	sp,sp,-32
20105c84:	ce22                	sw	s0,28(sp)
20105c86:	1000                	add	s0,sp,32
20105c88:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20105c8c:	fec42783          	lw	a5,-20(s0)
20105c90:	00f04c63          	bgtz	a5,20105ca8 <__metal_driver_cpu_get+0x26>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20105c94:	800017b7          	lui	a5,0x80001
20105c98:	fec42703          	lw	a4,-20(s0)
20105c9c:	070a                	sll	a4,a4,0x2
20105c9e:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20105ca2:	97ba                	add	a5,a5,a4
20105ca4:	439c                	lw	a5,0(a5)
20105ca6:	a011                	j	20105caa <__metal_driver_cpu_get+0x28>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20105ca8:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:30
}
20105caa:	853e                	mv	a0,a5
20105cac:	4472                	lw	s0,28(sp)
20105cae:	6105                	add	sp,sp,32
20105cb0:	8082                	ret

20105cb2 <__metal_myhart_id>:
__metal_myhart_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20105cb2:	1101                	add	sp,sp,-32
20105cb4:	ce22                	sw	s0,28(sp)
20105cb6:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20105cb8:	f14027f3          	csrr	a5,mhartid
20105cbc:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20105cc0:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:36
}
20105cc4:	853e                	mv	a0,a5
20105cc6:	4472                	lw	s0,28(sp)
20105cc8:	6105                	add	sp,sp,32
20105cca:	8082                	ret

20105ccc <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20105ccc:	1101                	add	sp,sp,-32
20105cce:	ce22                	sw	s0,28(sp)
20105cd0:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20105cd2:	47a1                	li	a5,8
20105cd4:	3007a7f3          	csrrs	a5,mstatus,a5
20105cd8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20105cdc:	0001                	nop
20105cde:	4472                	lw	s0,28(sp)
20105ce0:	6105                	add	sp,sp,32
20105ce2:	8082                	ret

20105ce4 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20105ce4:	1101                	add	sp,sp,-32
20105ce6:	ce22                	sw	s0,28(sp)
20105ce8:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20105cea:	47a1                	li	a5,8
20105cec:	3007b7f3          	csrrc	a5,mstatus,a5
20105cf0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20105cf4:	0001                	nop
20105cf6:	4472                	lw	s0,28(sp)
20105cf8:	6105                	add	sp,sp,32
20105cfa:	8082                	ret

20105cfc <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20105cfc:	1101                	add	sp,sp,-32
20105cfe:	ce22                	sw	s0,28(sp)
20105d00:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20105d02:	47a1                	li	a5,8
20105d04:	3047a7f3          	csrrs	a5,mie,a5
20105d08:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20105d0c:	0001                	nop
20105d0e:	4472                	lw	s0,28(sp)
20105d10:	6105                	add	sp,sp,32
20105d12:	8082                	ret

20105d14 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20105d14:	1101                	add	sp,sp,-32
20105d16:	ce22                	sw	s0,28(sp)
20105d18:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20105d1a:	47a1                	li	a5,8
20105d1c:	3047b7f3          	csrrc	a5,mie,a5
20105d20:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20105d24:	0001                	nop
20105d26:	4472                	lw	s0,28(sp)
20105d28:	6105                	add	sp,sp,32
20105d2a:	8082                	ret

20105d2c <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20105d2c:	1101                	add	sp,sp,-32
20105d2e:	ce22                	sw	s0,28(sp)
20105d30:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20105d32:	08000793          	li	a5,128
20105d36:	3047a7f3          	csrrs	a5,mie,a5
20105d3a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20105d3e:	0001                	nop
20105d40:	4472                	lw	s0,28(sp)
20105d42:	6105                	add	sp,sp,32
20105d44:	8082                	ret

20105d46 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20105d46:	1101                	add	sp,sp,-32
20105d48:	ce22                	sw	s0,28(sp)
20105d4a:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20105d4c:	08000793          	li	a5,128
20105d50:	3047b7f3          	csrrc	a5,mie,a5
20105d54:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20105d58:	0001                	nop
20105d5a:	4472                	lw	s0,28(sp)
20105d5c:	6105                	add	sp,sp,32
20105d5e:	8082                	ret

20105d60 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20105d60:	1101                	add	sp,sp,-32
20105d62:	ce22                	sw	s0,28(sp)
20105d64:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20105d66:	6785                	lui	a5,0x1
20105d68:	80078793          	add	a5,a5,-2048 # 800 <__heap_size>
20105d6c:	3047a7f3          	csrrs	a5,mie,a5
20105d70:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20105d74:	0001                	nop
20105d76:	4472                	lw	s0,28(sp)
20105d78:	6105                	add	sp,sp,32
20105d7a:	8082                	ret

20105d7c <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20105d7c:	1101                	add	sp,sp,-32
20105d7e:	ce22                	sw	s0,28(sp)
20105d80:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20105d82:	6785                	lui	a5,0x1
20105d84:	80078793          	add	a5,a5,-2048 # 800 <__heap_size>
20105d88:	3047b7f3          	csrrc	a5,mie,a5
20105d8c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20105d90:	0001                	nop
20105d92:	4472                	lw	s0,28(sp)
20105d94:	6105                	add	sp,sp,32
20105d96:	8082                	ret

20105d98 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20105d98:	7179                	add	sp,sp,-48
20105d9a:	d622                	sw	s0,44(sp)
20105d9c:	1800                	add	s0,sp,48
20105d9e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20105da2:	fdc42783          	lw	a5,-36(s0)
20105da6:	4705                	li	a4,1
20105da8:	00f717b3          	sll	a5,a4,a5
20105dac:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20105db0:	fec42783          	lw	a5,-20(s0)
20105db4:	3047a7f3          	csrrs	a5,mie,a5
20105db8:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:105
}
20105dbc:	0001                	nop
20105dbe:	5432                	lw	s0,44(sp)
20105dc0:	6145                	add	sp,sp,48
20105dc2:	8082                	ret

20105dc4 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20105dc4:	7179                	add	sp,sp,-48
20105dc6:	d622                	sw	s0,44(sp)
20105dc8:	1800                	add	s0,sp,48
20105dca:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20105dce:	fdc42783          	lw	a5,-36(s0)
20105dd2:	4705                	li	a4,1
20105dd4:	00f717b3          	sll	a5,a4,a5
20105dd8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20105ddc:	fec42783          	lw	a5,-20(s0)
20105de0:	3047b7f3          	csrrc	a5,mie,a5
20105de4:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:111
}
20105de8:	0001                	nop
20105dea:	5432                	lw	s0,44(sp)
20105dec:	6145                	add	sp,sp,48
20105dee:	8082                	ret

20105df0 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20105df0:	1101                	add	sp,sp,-32
20105df2:	ce06                	sw	ra,28(sp)
20105df4:	cc22                	sw	s0,24(sp)
20105df6:	1000                	add	s0,sp,32
20105df8:	fea42623          	sw	a0,-20(s0)
20105dfc:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20105e00:	06400513          	li	a0,100
20105e04:	627030ef          	jal	20109c2a <metal_shutdown>

20105e08 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20105e08:	1101                	add	sp,sp,-32
20105e0a:	ce06                	sw	ra,28(sp)
20105e0c:	cc22                	sw	s0,24(sp)
20105e0e:	1000                	add	s0,sp,32
20105e10:	fea42623          	sw	a0,-20(s0)
20105e14:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20105e18:	0c800513          	li	a0,200
20105e1c:	60f030ef          	jal	20109c2a <metal_shutdown>

20105e20 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20105e20:	715d                	add	sp,sp,-80
20105e22:	c686                	sw	ra,76(sp)
20105e24:	c496                	sw	t0,72(sp)
20105e26:	c29a                	sw	t1,68(sp)
20105e28:	c09e                	sw	t2,64(sp)
20105e2a:	de22                	sw	s0,60(sp)
20105e2c:	dc2a                	sw	a0,56(sp)
20105e2e:	da2e                	sw	a1,52(sp)
20105e30:	d832                	sw	a2,48(sp)
20105e32:	d636                	sw	a3,44(sp)
20105e34:	d43a                	sw	a4,40(sp)
20105e36:	d23e                	sw	a5,36(sp)
20105e38:	d042                	sw	a6,32(sp)
20105e3a:	ce46                	sw	a7,28(sp)
20105e3c:	cc72                	sw	t3,24(sp)
20105e3e:	ca76                	sw	t4,20(sp)
20105e40:	c87a                	sw	t5,16(sp)
20105e42:	c67e                	sw	t6,12(sp)
20105e44:	0880                	add	s0,sp,80
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20105e46:	12c00513          	li	a0,300
20105e4a:	5e1030ef          	jal	20109c2a <metal_shutdown>

20105e4e <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20105e4e:	711d                	add	sp,sp,-96
20105e50:	ce86                	sw	ra,92(sp)
20105e52:	cc96                	sw	t0,88(sp)
20105e54:	ca9a                	sw	t1,84(sp)
20105e56:	c89e                	sw	t2,80(sp)
20105e58:	c6a2                	sw	s0,76(sp)
20105e5a:	c4aa                	sw	a0,72(sp)
20105e5c:	c2ae                	sw	a1,68(sp)
20105e5e:	c0b2                	sw	a2,64(sp)
20105e60:	de36                	sw	a3,60(sp)
20105e62:	dc3a                	sw	a4,56(sp)
20105e64:	da3e                	sw	a5,52(sp)
20105e66:	d842                	sw	a6,48(sp)
20105e68:	d646                	sw	a7,44(sp)
20105e6a:	d472                	sw	t3,40(sp)
20105e6c:	d276                	sw	t4,36(sp)
20105e6e:	d07a                	sw	t5,32(sp)
20105e70:	ce7e                	sw	t6,28(sp)
20105e72:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20105e74:	3d3d                	jal	20105cb2 <__metal_myhart_id>
20105e76:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20105e78:	800017b7          	lui	a5,0x80001
20105e7c:	070a                	sll	a4,a4,0x2
20105e7e:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20105e82:	97ba                	add	a5,a5,a4
20105e84:	439c                	lw	a5,0(a5)
20105e86:	faf42623          	sw	a5,-84(s0)
20105e8a:	fac42783          	lw	a5,-84(s0)
20105e8e:	c785                	beqz	a5,20105eb6 <metal_software_interrupt_vector_handler+0x68>
20105e90:	fac42503          	lw	a0,-84(s0)
20105e94:	3345                	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20105e96:	faa42423          	sw	a0,-88(s0)
20105e9a:	fa842783          	lw	a5,-88(s0)
20105e9e:	0e07a783          	lw	a5,224(a5)
20105ea2:	faf42223          	sw	a5,-92(s0)
20105ea6:	fa842783          	lw	a5,-88(s0)
20105eaa:	0d87a783          	lw	a5,216(a5)
20105eae:	fa442583          	lw	a1,-92(s0)
20105eb2:	450d                	li	a0,3
20105eb4:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:130
}
20105eb6:	0001                	nop
20105eb8:	40f6                	lw	ra,92(sp)
20105eba:	42e6                	lw	t0,88(sp)
20105ebc:	4356                	lw	t1,84(sp)
20105ebe:	43c6                	lw	t2,80(sp)
20105ec0:	4436                	lw	s0,76(sp)
20105ec2:	4526                	lw	a0,72(sp)
20105ec4:	4596                	lw	a1,68(sp)
20105ec6:	4606                	lw	a2,64(sp)
20105ec8:	56f2                	lw	a3,60(sp)
20105eca:	5762                	lw	a4,56(sp)
20105ecc:	57d2                	lw	a5,52(sp)
20105ece:	5842                	lw	a6,48(sp)
20105ed0:	58b2                	lw	a7,44(sp)
20105ed2:	5e22                	lw	t3,40(sp)
20105ed4:	5e92                	lw	t4,36(sp)
20105ed6:	5f02                	lw	t5,32(sp)
20105ed8:	4ff2                	lw	t6,28(sp)
20105eda:	6125                	add	sp,sp,96
20105edc:	30200073          	mret

20105ee0 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20105ee0:	7179                	add	sp,sp,-48
20105ee2:	d606                	sw	ra,44(sp)
20105ee4:	d422                	sw	s0,40(sp)
20105ee6:	1800                	add	s0,sp,48
20105ee8:	fca42e23          	sw	a0,-36(s0)
20105eec:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20105ef0:	33c9                	jal	20105cb2 <__metal_myhart_id>
20105ef2:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:135 (discriminator 1)
20105ef4:	800017b7          	lui	a5,0x80001
20105ef8:	070a                	sll	a4,a4,0x2
20105efa:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20105efe:	97ba                	add	a5,a5,a4
20105f00:	439c                	lw	a5,0(a5)
20105f02:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20105f06:	342027f3          	csrr	a5,mcause
20105f0a:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20105f0e:	fec42783          	lw	a5,-20(s0)
20105f12:	c795                	beqz	a5,20105f3e <__metal_default_sw_handler+0x5e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20105f14:	fec42503          	lw	a0,-20(s0)
20105f18:	3b31                	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20105f1a:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20105f1e:	fe842783          	lw	a5,-24(s0)
20105f22:	3ff7f793          	and	a5,a5,1023
20105f26:	fe442703          	lw	a4,-28(s0)
20105f2a:	0e878793          	add	a5,a5,232
20105f2e:	078a                	sll	a5,a5,0x2
20105f30:	97ba                	add	a5,a5,a4
20105f32:	439c                	lw	a5,0(a5)
20105f34:	fdc42583          	lw	a1,-36(s0)
20105f38:	fec42503          	lw	a0,-20(s0)
20105f3c:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20105f3e:	0001                	nop
20105f40:	50b2                	lw	ra,44(sp)
20105f42:	5422                	lw	s0,40(sp)
20105f44:	6145                	add	sp,sp,48
20105f46:	8082                	ret

20105f48 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20105f48:	711d                	add	sp,sp,-96
20105f4a:	ce86                	sw	ra,92(sp)
20105f4c:	cc96                	sw	t0,88(sp)
20105f4e:	ca9a                	sw	t1,84(sp)
20105f50:	c89e                	sw	t2,80(sp)
20105f52:	c6a2                	sw	s0,76(sp)
20105f54:	c4aa                	sw	a0,72(sp)
20105f56:	c2ae                	sw	a1,68(sp)
20105f58:	c0b2                	sw	a2,64(sp)
20105f5a:	de36                	sw	a3,60(sp)
20105f5c:	dc3a                	sw	a4,56(sp)
20105f5e:	da3e                	sw	a5,52(sp)
20105f60:	d842                	sw	a6,48(sp)
20105f62:	d646                	sw	a7,44(sp)
20105f64:	d472                	sw	t3,40(sp)
20105f66:	d276                	sw	t4,36(sp)
20105f68:	d07a                	sw	t5,32(sp)
20105f6a:	ce7e                	sw	t6,28(sp)
20105f6c:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20105f6e:	3391                	jal	20105cb2 <__metal_myhart_id>
20105f70:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20105f72:	800017b7          	lui	a5,0x80001
20105f76:	070a                	sll	a4,a4,0x2
20105f78:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20105f7c:	97ba                	add	a5,a5,a4
20105f7e:	439c                	lw	a5,0(a5)
20105f80:	faf42623          	sw	a5,-84(s0)
20105f84:	fac42783          	lw	a5,-84(s0)
20105f88:	c785                	beqz	a5,20105fb0 <metal_timer_interrupt_vector_handler+0x68>
20105f8a:	fac42503          	lw	a0,-84(s0)
20105f8e:	315d                	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20105f90:	faa42423          	sw	a0,-88(s0)
20105f94:	fa842783          	lw	a5,-88(s0)
20105f98:	1407a783          	lw	a5,320(a5)
20105f9c:	faf42223          	sw	a5,-92(s0)
20105fa0:	fa842783          	lw	a5,-88(s0)
20105fa4:	1387a783          	lw	a5,312(a5)
20105fa8:	fa442583          	lw	a1,-92(s0)
20105fac:	451d                	li	a0,7
20105fae:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:150
}
20105fb0:	0001                	nop
20105fb2:	40f6                	lw	ra,92(sp)
20105fb4:	42e6                	lw	t0,88(sp)
20105fb6:	4356                	lw	t1,84(sp)
20105fb8:	43c6                	lw	t2,80(sp)
20105fba:	4436                	lw	s0,76(sp)
20105fbc:	4526                	lw	a0,72(sp)
20105fbe:	4596                	lw	a1,68(sp)
20105fc0:	4606                	lw	a2,64(sp)
20105fc2:	56f2                	lw	a3,60(sp)
20105fc4:	5762                	lw	a4,56(sp)
20105fc6:	57d2                	lw	a5,52(sp)
20105fc8:	5842                	lw	a6,48(sp)
20105fca:	58b2                	lw	a7,44(sp)
20105fcc:	5e22                	lw	t3,40(sp)
20105fce:	5e92                	lw	t4,36(sp)
20105fd0:	5f02                	lw	t5,32(sp)
20105fd2:	4ff2                	lw	t6,28(sp)
20105fd4:	6125                	add	sp,sp,96
20105fd6:	30200073          	mret

20105fda <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20105fda:	1101                	add	sp,sp,-32
20105fdc:	ce22                	sw	s0,28(sp)
20105fde:	1000                	add	s0,sp,32
20105fe0:	fea42623          	sw	a0,-20(s0)
20105fe4:	feb42423          	sw	a1,-24(s0)
20105fe8:	0001                	nop
20105fea:	4472                	lw	s0,28(sp)
20105fec:	6105                	add	sp,sp,32
20105fee:	8082                	ret

20105ff0 <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20105ff0:	7179                	add	sp,sp,-48
20105ff2:	d606                	sw	ra,44(sp)
20105ff4:	d422                	sw	s0,40(sp)
20105ff6:	1800                	add	s0,sp,48
20105ff8:	fca42e23          	sw	a0,-36(s0)
20105ffc:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20106000:	394d                	jal	20105cb2 <__metal_myhart_id>
20106002:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:155 (discriminator 1)
20106004:	853e                	mv	a0,a5
20106006:	39b5                	jal	20105c82 <__metal_driver_cpu_get>
20106008:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
2010600c:	fec42503          	lw	a0,-20(s0)
20106010:	294010ef          	jal	201072a4 <__metal_driver_cpu_mtime_get>
20106014:	fea42023          	sw	a0,-32(s0)
20106018:	feb42223          	sw	a1,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
2010601c:	fe042703          	lw	a4,-32(s0)
20106020:	fe442783          	lw	a5,-28(s0)
20106024:	4529                	li	a0,10
20106026:	4581                	li	a1,0
20106028:	00a70633          	add	a2,a4,a0
2010602c:	8832                	mv	a6,a2
2010602e:	00e83833          	sltu	a6,a6,a4
20106032:	00b786b3          	add	a3,a5,a1
20106036:	00d807b3          	add	a5,a6,a3
2010603a:	86be                	mv	a3,a5
2010603c:	8732                	mv	a4,a2
2010603e:	87b6                	mv	a5,a3
20106040:	85ba                	mv	a1,a4
20106042:	863e                	mv	a2,a5
20106044:	fec42503          	lw	a0,-20(s0)
20106048:	2c2010ef          	jal	2010730a <__metal_driver_cpu_mtimecmp_set>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:160
}
2010604c:	0001                	nop
2010604e:	50b2                	lw	ra,44(sp)
20106050:	5422                	lw	s0,40(sp)
20106052:	6145                	add	sp,sp,48
20106054:	8082                	ret
	...

20106080 <__metal_exception_handler>:
__metal_exception_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20106080:	7119                	add	sp,sp,-128
20106082:	de86                	sw	ra,124(sp)
20106084:	dc96                	sw	t0,120(sp)
20106086:	da9a                	sw	t1,116(sp)
20106088:	d89e                	sw	t2,112(sp)
2010608a:	d6a2                	sw	s0,108(sp)
2010608c:	d4aa                	sw	a0,104(sp)
2010608e:	d2ae                	sw	a1,100(sp)
20106090:	d0b2                	sw	a2,96(sp)
20106092:	ceb6                	sw	a3,92(sp)
20106094:	ccba                	sw	a4,88(sp)
20106096:	cabe                	sw	a5,84(sp)
20106098:	c8c2                	sw	a6,80(sp)
2010609a:	c6c6                	sw	a7,76(sp)
2010609c:	c4f2                	sw	t3,72(sp)
2010609e:	c2f6                	sw	t4,68(sp)
201060a0:	c0fa                	sw	t5,64(sp)
201060a2:	de7e                	sw	t6,60(sp)
201060a4:	0100                	add	s0,sp,128
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
201060a6:	c0dff0ef          	jal	20105cb2 <__metal_myhart_id>
201060aa:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:174 (discriminator 1)
201060ac:	800017b7          	lui	a5,0x80001
201060b0:	070a                	sll	a4,a4,0x2
201060b2:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
201060b6:	97ba                	add	a5,a5,a4
201060b8:	439c                	lw	a5,0(a5)
201060ba:	faf42623          	sw	a5,-84(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
201060be:	342027f3          	csrr	a5,mcause
201060c2:	faf42423          	sw	a5,-88(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
201060c6:	341027f3          	csrr	a5,mepc
201060ca:	faf42223          	sw	a5,-92(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
201060ce:	343027f3          	csrr	a5,mtval
201060d2:	faf42023          	sw	a5,-96(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
201060d6:	305027f3          	csrr	a5,mtvec
201060da:	f8f42e23          	sw	a5,-100(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
201060de:	fac42783          	lw	a5,-84(s0)
201060e2:	cbfd                	beqz	a5,201061d8 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
201060e4:	fac42503          	lw	a0,-84(s0)
201060e8:	b4dff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201060ec:	f8a42c23          	sw	a0,-104(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
201060f0:	fa842783          	lw	a5,-88(s0)
201060f4:	3ff7f793          	and	a5,a5,1023
201060f8:	f8f42a23          	sw	a5,-108(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
201060fc:	fa842783          	lw	a5,-88(s0)
20106100:	0a07de63          	bgez	a5,201061bc <__metal_exception_handler+0x13c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20106104:	f9442703          	lw	a4,-108(s0)
20106108:	08000793          	li	a5,128
2010610c:	02f71263          	bne	a4,a5,20106130 <__metal_exception_handler+0xb0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20106110:	f9842783          	lw	a5,-104(s0)
20106114:	3987a783          	lw	a5,920(a5)
20106118:	f8f42623          	sw	a5,-116(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2010611c:	f9842783          	lw	a5,-104(s0)
20106120:	3907a783          	lw	a5,912(a5)
20106124:	f8c42583          	lw	a1,-116(s0)
20106128:	f9442503          	lw	a0,-108(s0)
2010612c:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
2010612e:	a06d                	j	201061d8 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20106130:	f9442703          	lw	a4,-108(s0)
20106134:	47ad                	li	a5,11
20106136:	00e7d763          	bge	a5,a4,20106144 <__metal_exception_handler+0xc4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:192
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2010613a:	f9c42783          	lw	a5,-100(s0)
2010613e:	03f7f793          	and	a5,a5,63
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20106142:	ef9d                	bnez	a5,20106180 <__metal_exception_handler+0x100>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20106144:	f9842683          	lw	a3,-104(s0)
20106148:	f9442703          	lw	a4,-108(s0)
2010614c:	87ba                	mv	a5,a4
2010614e:	0786                	sll	a5,a5,0x1
20106150:	97ba                	add	a5,a5,a4
20106152:	078e                	sll	a5,a5,0x3
20106154:	97b6                	add	a5,a5,a3
20106156:	0987a783          	lw	a5,152(a5)
2010615a:	f8f42623          	sw	a5,-116(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
2010615e:	f9842683          	lw	a3,-104(s0)
20106162:	f9442703          	lw	a4,-108(s0)
20106166:	87ba                	mv	a5,a4
20106168:	0786                	sll	a5,a5,0x1
2010616a:	97ba                	add	a5,a5,a4
2010616c:	078e                	sll	a5,a5,0x3
2010616e:	97b6                	add	a5,a5,a3
20106170:	0907a783          	lw	a5,144(a5)
20106174:	f8c42583          	lw	a1,-116(s0)
20106178:	f9442503          	lw	a0,-108(s0)
2010617c:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
2010617e:	a8a9                	j	201061d8 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20106180:	f9c42783          	lw	a5,-100(s0)
20106184:	03f7f713          	and	a4,a5,63
20106188:	4789                	li	a5,2
2010618a:	04f71763          	bne	a4,a5,201061d8 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2010618e:	307027f3          	csrr	a5,mtvt
20106192:	f8f42823          	sw	a5,-112(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20106196:	f9842783          	lw	a5,-104(s0)
2010619a:	0dc7a783          	lw	a5,220(a5)
2010619e:	f8f42623          	sw	a5,-116(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
201061a2:	f9042783          	lw	a5,-112(s0)
201061a6:	439c                	lw	a5,0(a5)
201061a8:	f8f42423          	sw	a5,-120(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
201061ac:	f8842783          	lw	a5,-120(s0)
201061b0:	f8c42583          	lw	a1,-116(s0)
201061b4:	f9442503          	lw	a0,-108(s0)
201061b8:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
201061ba:	a839                	j	201061d8 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
201061bc:	f9842703          	lw	a4,-104(s0)
201061c0:	f9442783          	lw	a5,-108(s0)
201061c4:	0e878793          	add	a5,a5,232
201061c8:	078a                	sll	a5,a5,0x2
201061ca:	97ba                	add	a5,a5,a4
201061cc:	439c                	lw	a5,0(a5)
201061ce:	f9442583          	lw	a1,-108(s0)
201061d2:	fac42503          	lw	a0,-84(s0)
201061d6:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
201061d8:	50f6                	lw	ra,124(sp)
201061da:	52e6                	lw	t0,120(sp)
201061dc:	5356                	lw	t1,116(sp)
201061de:	53c6                	lw	t2,112(sp)
201061e0:	5436                	lw	s0,108(sp)
201061e2:	5526                	lw	a0,104(sp)
201061e4:	5596                	lw	a1,100(sp)
201061e6:	5606                	lw	a2,96(sp)
201061e8:	46f6                	lw	a3,92(sp)
201061ea:	4766                	lw	a4,88(sp)
201061ec:	47d6                	lw	a5,84(sp)
201061ee:	4846                	lw	a6,80(sp)
201061f0:	48b6                	lw	a7,76(sp)
201061f2:	4e26                	lw	t3,72(sp)
201061f4:	4e96                	lw	t4,68(sp)
201061f6:	4f06                	lw	t5,64(sp)
201061f8:	5ff2                	lw	t6,60(sp)
201061fa:	6109                	add	sp,sp,128
201061fc:	30200073          	mret
	...

2010627a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
2010627a:	711d                	add	sp,sp,-96
2010627c:	ce86                	sw	ra,92(sp)
2010627e:	cc96                	sw	t0,88(sp)
20106280:	ca9a                	sw	t1,84(sp)
20106282:	c89e                	sw	t2,80(sp)
20106284:	c6a2                	sw	s0,76(sp)
20106286:	c4aa                	sw	a0,72(sp)
20106288:	c2ae                	sw	a1,68(sp)
2010628a:	c0b2                	sw	a2,64(sp)
2010628c:	de36                	sw	a3,60(sp)
2010628e:	dc3a                	sw	a4,56(sp)
20106290:	da3e                	sw	a5,52(sp)
20106292:	d842                	sw	a6,48(sp)
20106294:	d646                	sw	a7,44(sp)
20106296:	d472                	sw	t3,40(sp)
20106298:	d276                	sw	t4,36(sp)
2010629a:	d07a                	sw	t5,32(sp)
2010629c:	ce7e                	sw	t6,28(sp)
2010629e:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
201062a0:	a13ff0ef          	jal	20105cb2 <__metal_myhart_id>
201062a4:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
201062a6:	800017b7          	lui	a5,0x80001
201062aa:	070a                	sll	a4,a4,0x2
201062ac:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
201062b0:	97ba                	add	a5,a5,a4
201062b2:	439c                	lw	a5,0(a5)
201062b4:	faf42623          	sw	a5,-84(s0)
201062b8:	fac42783          	lw	a5,-84(s0)
201062bc:	c78d                	beqz	a5,201062e6 <metal_lc0_interrupt_vector_handler+0x6c>
201062be:	fac42503          	lw	a0,-84(s0)
201062c2:	973ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201062c6:	faa42423          	sw	a0,-88(s0)
201062ca:	fa842783          	lw	a5,-88(s0)
201062ce:	2187a783          	lw	a5,536(a5)
201062d2:	faf42223          	sw	a5,-92(s0)
201062d6:	fa842783          	lw	a5,-88(s0)
201062da:	2107a783          	lw	a5,528(a5)
201062de:	fa442583          	lw	a1,-92(s0)
201062e2:	4541                	li	a0,16
201062e4:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:216
}
201062e6:	0001                	nop
201062e8:	40f6                	lw	ra,92(sp)
201062ea:	42e6                	lw	t0,88(sp)
201062ec:	4356                	lw	t1,84(sp)
201062ee:	43c6                	lw	t2,80(sp)
201062f0:	4436                	lw	s0,76(sp)
201062f2:	4526                	lw	a0,72(sp)
201062f4:	4596                	lw	a1,68(sp)
201062f6:	4606                	lw	a2,64(sp)
201062f8:	56f2                	lw	a3,60(sp)
201062fa:	5762                	lw	a4,56(sp)
201062fc:	57d2                	lw	a5,52(sp)
201062fe:	5842                	lw	a6,48(sp)
20106300:	58b2                	lw	a7,44(sp)
20106302:	5e22                	lw	t3,40(sp)
20106304:	5e92                	lw	t4,36(sp)
20106306:	5f02                	lw	t5,32(sp)
20106308:	4ff2                	lw	t6,28(sp)
2010630a:	6125                	add	sp,sp,96
2010630c:	30200073          	mret

20106310 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20106310:	711d                	add	sp,sp,-96
20106312:	ce86                	sw	ra,92(sp)
20106314:	cc96                	sw	t0,88(sp)
20106316:	ca9a                	sw	t1,84(sp)
20106318:	c89e                	sw	t2,80(sp)
2010631a:	c6a2                	sw	s0,76(sp)
2010631c:	c4aa                	sw	a0,72(sp)
2010631e:	c2ae                	sw	a1,68(sp)
20106320:	c0b2                	sw	a2,64(sp)
20106322:	de36                	sw	a3,60(sp)
20106324:	dc3a                	sw	a4,56(sp)
20106326:	da3e                	sw	a5,52(sp)
20106328:	d842                	sw	a6,48(sp)
2010632a:	d646                	sw	a7,44(sp)
2010632c:	d472                	sw	t3,40(sp)
2010632e:	d276                	sw	t4,36(sp)
20106330:	d07a                	sw	t5,32(sp)
20106332:	ce7e                	sw	t6,28(sp)
20106334:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20106336:	97dff0ef          	jal	20105cb2 <__metal_myhart_id>
2010633a:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
2010633c:	800017b7          	lui	a5,0x80001
20106340:	070a                	sll	a4,a4,0x2
20106342:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106346:	97ba                	add	a5,a5,a4
20106348:	439c                	lw	a5,0(a5)
2010634a:	faf42623          	sw	a5,-84(s0)
2010634e:	fac42783          	lw	a5,-84(s0)
20106352:	c78d                	beqz	a5,2010637c <metal_lc1_interrupt_vector_handler+0x6c>
20106354:	fac42503          	lw	a0,-84(s0)
20106358:	8ddff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
2010635c:	faa42423          	sw	a0,-88(s0)
20106360:	fa842783          	lw	a5,-88(s0)
20106364:	2307a783          	lw	a5,560(a5)
20106368:	faf42223          	sw	a5,-92(s0)
2010636c:	fa842783          	lw	a5,-88(s0)
20106370:	2287a783          	lw	a5,552(a5)
20106374:	fa442583          	lw	a1,-92(s0)
20106378:	4545                	li	a0,17
2010637a:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:221
}
2010637c:	0001                	nop
2010637e:	40f6                	lw	ra,92(sp)
20106380:	42e6                	lw	t0,88(sp)
20106382:	4356                	lw	t1,84(sp)
20106384:	43c6                	lw	t2,80(sp)
20106386:	4436                	lw	s0,76(sp)
20106388:	4526                	lw	a0,72(sp)
2010638a:	4596                	lw	a1,68(sp)
2010638c:	4606                	lw	a2,64(sp)
2010638e:	56f2                	lw	a3,60(sp)
20106390:	5762                	lw	a4,56(sp)
20106392:	57d2                	lw	a5,52(sp)
20106394:	5842                	lw	a6,48(sp)
20106396:	58b2                	lw	a7,44(sp)
20106398:	5e22                	lw	t3,40(sp)
2010639a:	5e92                	lw	t4,36(sp)
2010639c:	5f02                	lw	t5,32(sp)
2010639e:	4ff2                	lw	t6,28(sp)
201063a0:	6125                	add	sp,sp,96
201063a2:	30200073          	mret

201063a6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
201063a6:	711d                	add	sp,sp,-96
201063a8:	ce86                	sw	ra,92(sp)
201063aa:	cc96                	sw	t0,88(sp)
201063ac:	ca9a                	sw	t1,84(sp)
201063ae:	c89e                	sw	t2,80(sp)
201063b0:	c6a2                	sw	s0,76(sp)
201063b2:	c4aa                	sw	a0,72(sp)
201063b4:	c2ae                	sw	a1,68(sp)
201063b6:	c0b2                	sw	a2,64(sp)
201063b8:	de36                	sw	a3,60(sp)
201063ba:	dc3a                	sw	a4,56(sp)
201063bc:	da3e                	sw	a5,52(sp)
201063be:	d842                	sw	a6,48(sp)
201063c0:	d646                	sw	a7,44(sp)
201063c2:	d472                	sw	t3,40(sp)
201063c4:	d276                	sw	t4,36(sp)
201063c6:	d07a                	sw	t5,32(sp)
201063c8:	ce7e                	sw	t6,28(sp)
201063ca:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
201063cc:	8e7ff0ef          	jal	20105cb2 <__metal_myhart_id>
201063d0:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
201063d2:	800017b7          	lui	a5,0x80001
201063d6:	070a                	sll	a4,a4,0x2
201063d8:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
201063dc:	97ba                	add	a5,a5,a4
201063de:	439c                	lw	a5,0(a5)
201063e0:	faf42623          	sw	a5,-84(s0)
201063e4:	fac42783          	lw	a5,-84(s0)
201063e8:	c78d                	beqz	a5,20106412 <metal_lc2_interrupt_vector_handler+0x6c>
201063ea:	fac42503          	lw	a0,-84(s0)
201063ee:	847ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201063f2:	faa42423          	sw	a0,-88(s0)
201063f6:	fa842783          	lw	a5,-88(s0)
201063fa:	2487a783          	lw	a5,584(a5)
201063fe:	faf42223          	sw	a5,-92(s0)
20106402:	fa842783          	lw	a5,-88(s0)
20106406:	2407a783          	lw	a5,576(a5)
2010640a:	fa442583          	lw	a1,-92(s0)
2010640e:	4549                	li	a0,18
20106410:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:226
}
20106412:	0001                	nop
20106414:	40f6                	lw	ra,92(sp)
20106416:	42e6                	lw	t0,88(sp)
20106418:	4356                	lw	t1,84(sp)
2010641a:	43c6                	lw	t2,80(sp)
2010641c:	4436                	lw	s0,76(sp)
2010641e:	4526                	lw	a0,72(sp)
20106420:	4596                	lw	a1,68(sp)
20106422:	4606                	lw	a2,64(sp)
20106424:	56f2                	lw	a3,60(sp)
20106426:	5762                	lw	a4,56(sp)
20106428:	57d2                	lw	a5,52(sp)
2010642a:	5842                	lw	a6,48(sp)
2010642c:	58b2                	lw	a7,44(sp)
2010642e:	5e22                	lw	t3,40(sp)
20106430:	5e92                	lw	t4,36(sp)
20106432:	5f02                	lw	t5,32(sp)
20106434:	4ff2                	lw	t6,28(sp)
20106436:	6125                	add	sp,sp,96
20106438:	30200073          	mret

2010643c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2010643c:	711d                	add	sp,sp,-96
2010643e:	ce86                	sw	ra,92(sp)
20106440:	cc96                	sw	t0,88(sp)
20106442:	ca9a                	sw	t1,84(sp)
20106444:	c89e                	sw	t2,80(sp)
20106446:	c6a2                	sw	s0,76(sp)
20106448:	c4aa                	sw	a0,72(sp)
2010644a:	c2ae                	sw	a1,68(sp)
2010644c:	c0b2                	sw	a2,64(sp)
2010644e:	de36                	sw	a3,60(sp)
20106450:	dc3a                	sw	a4,56(sp)
20106452:	da3e                	sw	a5,52(sp)
20106454:	d842                	sw	a6,48(sp)
20106456:	d646                	sw	a7,44(sp)
20106458:	d472                	sw	t3,40(sp)
2010645a:	d276                	sw	t4,36(sp)
2010645c:	d07a                	sw	t5,32(sp)
2010645e:	ce7e                	sw	t6,28(sp)
20106460:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20106462:	851ff0ef          	jal	20105cb2 <__metal_myhart_id>
20106466:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20106468:	800017b7          	lui	a5,0x80001
2010646c:	070a                	sll	a4,a4,0x2
2010646e:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106472:	97ba                	add	a5,a5,a4
20106474:	439c                	lw	a5,0(a5)
20106476:	faf42623          	sw	a5,-84(s0)
2010647a:	fac42783          	lw	a5,-84(s0)
2010647e:	c78d                	beqz	a5,201064a8 <metal_lc3_interrupt_vector_handler+0x6c>
20106480:	fac42503          	lw	a0,-84(s0)
20106484:	fb0ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20106488:	faa42423          	sw	a0,-88(s0)
2010648c:	fa842783          	lw	a5,-88(s0)
20106490:	2607a783          	lw	a5,608(a5)
20106494:	faf42223          	sw	a5,-92(s0)
20106498:	fa842783          	lw	a5,-88(s0)
2010649c:	2587a783          	lw	a5,600(a5)
201064a0:	fa442583          	lw	a1,-92(s0)
201064a4:	454d                	li	a0,19
201064a6:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:231
}
201064a8:	0001                	nop
201064aa:	40f6                	lw	ra,92(sp)
201064ac:	42e6                	lw	t0,88(sp)
201064ae:	4356                	lw	t1,84(sp)
201064b0:	43c6                	lw	t2,80(sp)
201064b2:	4436                	lw	s0,76(sp)
201064b4:	4526                	lw	a0,72(sp)
201064b6:	4596                	lw	a1,68(sp)
201064b8:	4606                	lw	a2,64(sp)
201064ba:	56f2                	lw	a3,60(sp)
201064bc:	5762                	lw	a4,56(sp)
201064be:	57d2                	lw	a5,52(sp)
201064c0:	5842                	lw	a6,48(sp)
201064c2:	58b2                	lw	a7,44(sp)
201064c4:	5e22                	lw	t3,40(sp)
201064c6:	5e92                	lw	t4,36(sp)
201064c8:	5f02                	lw	t5,32(sp)
201064ca:	4ff2                	lw	t6,28(sp)
201064cc:	6125                	add	sp,sp,96
201064ce:	30200073          	mret

201064d2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
201064d2:	711d                	add	sp,sp,-96
201064d4:	ce86                	sw	ra,92(sp)
201064d6:	cc96                	sw	t0,88(sp)
201064d8:	ca9a                	sw	t1,84(sp)
201064da:	c89e                	sw	t2,80(sp)
201064dc:	c6a2                	sw	s0,76(sp)
201064de:	c4aa                	sw	a0,72(sp)
201064e0:	c2ae                	sw	a1,68(sp)
201064e2:	c0b2                	sw	a2,64(sp)
201064e4:	de36                	sw	a3,60(sp)
201064e6:	dc3a                	sw	a4,56(sp)
201064e8:	da3e                	sw	a5,52(sp)
201064ea:	d842                	sw	a6,48(sp)
201064ec:	d646                	sw	a7,44(sp)
201064ee:	d472                	sw	t3,40(sp)
201064f0:	d276                	sw	t4,36(sp)
201064f2:	d07a                	sw	t5,32(sp)
201064f4:	ce7e                	sw	t6,28(sp)
201064f6:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
201064f8:	fbaff0ef          	jal	20105cb2 <__metal_myhart_id>
201064fc:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
201064fe:	800017b7          	lui	a5,0x80001
20106502:	070a                	sll	a4,a4,0x2
20106504:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106508:	97ba                	add	a5,a5,a4
2010650a:	439c                	lw	a5,0(a5)
2010650c:	faf42623          	sw	a5,-84(s0)
20106510:	fac42783          	lw	a5,-84(s0)
20106514:	c78d                	beqz	a5,2010653e <metal_lc4_interrupt_vector_handler+0x6c>
20106516:	fac42503          	lw	a0,-84(s0)
2010651a:	f1aff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
2010651e:	faa42423          	sw	a0,-88(s0)
20106522:	fa842783          	lw	a5,-88(s0)
20106526:	2787a783          	lw	a5,632(a5)
2010652a:	faf42223          	sw	a5,-92(s0)
2010652e:	fa842783          	lw	a5,-88(s0)
20106532:	2707a783          	lw	a5,624(a5)
20106536:	fa442583          	lw	a1,-92(s0)
2010653a:	4551                	li	a0,20
2010653c:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:236
}
2010653e:	0001                	nop
20106540:	40f6                	lw	ra,92(sp)
20106542:	42e6                	lw	t0,88(sp)
20106544:	4356                	lw	t1,84(sp)
20106546:	43c6                	lw	t2,80(sp)
20106548:	4436                	lw	s0,76(sp)
2010654a:	4526                	lw	a0,72(sp)
2010654c:	4596                	lw	a1,68(sp)
2010654e:	4606                	lw	a2,64(sp)
20106550:	56f2                	lw	a3,60(sp)
20106552:	5762                	lw	a4,56(sp)
20106554:	57d2                	lw	a5,52(sp)
20106556:	5842                	lw	a6,48(sp)
20106558:	58b2                	lw	a7,44(sp)
2010655a:	5e22                	lw	t3,40(sp)
2010655c:	5e92                	lw	t4,36(sp)
2010655e:	5f02                	lw	t5,32(sp)
20106560:	4ff2                	lw	t6,28(sp)
20106562:	6125                	add	sp,sp,96
20106564:	30200073          	mret

20106568 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20106568:	711d                	add	sp,sp,-96
2010656a:	ce86                	sw	ra,92(sp)
2010656c:	cc96                	sw	t0,88(sp)
2010656e:	ca9a                	sw	t1,84(sp)
20106570:	c89e                	sw	t2,80(sp)
20106572:	c6a2                	sw	s0,76(sp)
20106574:	c4aa                	sw	a0,72(sp)
20106576:	c2ae                	sw	a1,68(sp)
20106578:	c0b2                	sw	a2,64(sp)
2010657a:	de36                	sw	a3,60(sp)
2010657c:	dc3a                	sw	a4,56(sp)
2010657e:	da3e                	sw	a5,52(sp)
20106580:	d842                	sw	a6,48(sp)
20106582:	d646                	sw	a7,44(sp)
20106584:	d472                	sw	t3,40(sp)
20106586:	d276                	sw	t4,36(sp)
20106588:	d07a                	sw	t5,32(sp)
2010658a:	ce7e                	sw	t6,28(sp)
2010658c:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2010658e:	f24ff0ef          	jal	20105cb2 <__metal_myhart_id>
20106592:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20106594:	800017b7          	lui	a5,0x80001
20106598:	070a                	sll	a4,a4,0x2
2010659a:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
2010659e:	97ba                	add	a5,a5,a4
201065a0:	439c                	lw	a5,0(a5)
201065a2:	faf42623          	sw	a5,-84(s0)
201065a6:	fac42783          	lw	a5,-84(s0)
201065aa:	c78d                	beqz	a5,201065d4 <metal_lc5_interrupt_vector_handler+0x6c>
201065ac:	fac42503          	lw	a0,-84(s0)
201065b0:	e84ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201065b4:	faa42423          	sw	a0,-88(s0)
201065b8:	fa842783          	lw	a5,-88(s0)
201065bc:	2907a783          	lw	a5,656(a5)
201065c0:	faf42223          	sw	a5,-92(s0)
201065c4:	fa842783          	lw	a5,-88(s0)
201065c8:	2887a783          	lw	a5,648(a5)
201065cc:	fa442583          	lw	a1,-92(s0)
201065d0:	4555                	li	a0,21
201065d2:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:241
}
201065d4:	0001                	nop
201065d6:	40f6                	lw	ra,92(sp)
201065d8:	42e6                	lw	t0,88(sp)
201065da:	4356                	lw	t1,84(sp)
201065dc:	43c6                	lw	t2,80(sp)
201065de:	4436                	lw	s0,76(sp)
201065e0:	4526                	lw	a0,72(sp)
201065e2:	4596                	lw	a1,68(sp)
201065e4:	4606                	lw	a2,64(sp)
201065e6:	56f2                	lw	a3,60(sp)
201065e8:	5762                	lw	a4,56(sp)
201065ea:	57d2                	lw	a5,52(sp)
201065ec:	5842                	lw	a6,48(sp)
201065ee:	58b2                	lw	a7,44(sp)
201065f0:	5e22                	lw	t3,40(sp)
201065f2:	5e92                	lw	t4,36(sp)
201065f4:	5f02                	lw	t5,32(sp)
201065f6:	4ff2                	lw	t6,28(sp)
201065f8:	6125                	add	sp,sp,96
201065fa:	30200073          	mret

201065fe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
201065fe:	711d                	add	sp,sp,-96
20106600:	ce86                	sw	ra,92(sp)
20106602:	cc96                	sw	t0,88(sp)
20106604:	ca9a                	sw	t1,84(sp)
20106606:	c89e                	sw	t2,80(sp)
20106608:	c6a2                	sw	s0,76(sp)
2010660a:	c4aa                	sw	a0,72(sp)
2010660c:	c2ae                	sw	a1,68(sp)
2010660e:	c0b2                	sw	a2,64(sp)
20106610:	de36                	sw	a3,60(sp)
20106612:	dc3a                	sw	a4,56(sp)
20106614:	da3e                	sw	a5,52(sp)
20106616:	d842                	sw	a6,48(sp)
20106618:	d646                	sw	a7,44(sp)
2010661a:	d472                	sw	t3,40(sp)
2010661c:	d276                	sw	t4,36(sp)
2010661e:	d07a                	sw	t5,32(sp)
20106620:	ce7e                	sw	t6,28(sp)
20106622:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20106624:	e8eff0ef          	jal	20105cb2 <__metal_myhart_id>
20106628:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
2010662a:	800017b7          	lui	a5,0x80001
2010662e:	070a                	sll	a4,a4,0x2
20106630:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106634:	97ba                	add	a5,a5,a4
20106636:	439c                	lw	a5,0(a5)
20106638:	faf42623          	sw	a5,-84(s0)
2010663c:	fac42783          	lw	a5,-84(s0)
20106640:	c78d                	beqz	a5,2010666a <metal_lc6_interrupt_vector_handler+0x6c>
20106642:	fac42503          	lw	a0,-84(s0)
20106646:	deeff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
2010664a:	faa42423          	sw	a0,-88(s0)
2010664e:	fa842783          	lw	a5,-88(s0)
20106652:	2a87a783          	lw	a5,680(a5)
20106656:	faf42223          	sw	a5,-92(s0)
2010665a:	fa842783          	lw	a5,-88(s0)
2010665e:	2a07a783          	lw	a5,672(a5)
20106662:	fa442583          	lw	a1,-92(s0)
20106666:	4559                	li	a0,22
20106668:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:246
}
2010666a:	0001                	nop
2010666c:	40f6                	lw	ra,92(sp)
2010666e:	42e6                	lw	t0,88(sp)
20106670:	4356                	lw	t1,84(sp)
20106672:	43c6                	lw	t2,80(sp)
20106674:	4436                	lw	s0,76(sp)
20106676:	4526                	lw	a0,72(sp)
20106678:	4596                	lw	a1,68(sp)
2010667a:	4606                	lw	a2,64(sp)
2010667c:	56f2                	lw	a3,60(sp)
2010667e:	5762                	lw	a4,56(sp)
20106680:	57d2                	lw	a5,52(sp)
20106682:	5842                	lw	a6,48(sp)
20106684:	58b2                	lw	a7,44(sp)
20106686:	5e22                	lw	t3,40(sp)
20106688:	5e92                	lw	t4,36(sp)
2010668a:	5f02                	lw	t5,32(sp)
2010668c:	4ff2                	lw	t6,28(sp)
2010668e:	6125                	add	sp,sp,96
20106690:	30200073          	mret

20106694 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20106694:	711d                	add	sp,sp,-96
20106696:	ce86                	sw	ra,92(sp)
20106698:	cc96                	sw	t0,88(sp)
2010669a:	ca9a                	sw	t1,84(sp)
2010669c:	c89e                	sw	t2,80(sp)
2010669e:	c6a2                	sw	s0,76(sp)
201066a0:	c4aa                	sw	a0,72(sp)
201066a2:	c2ae                	sw	a1,68(sp)
201066a4:	c0b2                	sw	a2,64(sp)
201066a6:	de36                	sw	a3,60(sp)
201066a8:	dc3a                	sw	a4,56(sp)
201066aa:	da3e                	sw	a5,52(sp)
201066ac:	d842                	sw	a6,48(sp)
201066ae:	d646                	sw	a7,44(sp)
201066b0:	d472                	sw	t3,40(sp)
201066b2:	d276                	sw	t4,36(sp)
201066b4:	d07a                	sw	t5,32(sp)
201066b6:	ce7e                	sw	t6,28(sp)
201066b8:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
201066ba:	df8ff0ef          	jal	20105cb2 <__metal_myhart_id>
201066be:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
201066c0:	800017b7          	lui	a5,0x80001
201066c4:	070a                	sll	a4,a4,0x2
201066c6:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
201066ca:	97ba                	add	a5,a5,a4
201066cc:	439c                	lw	a5,0(a5)
201066ce:	faf42623          	sw	a5,-84(s0)
201066d2:	fac42783          	lw	a5,-84(s0)
201066d6:	c78d                	beqz	a5,20106700 <metal_lc7_interrupt_vector_handler+0x6c>
201066d8:	fac42503          	lw	a0,-84(s0)
201066dc:	d58ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201066e0:	faa42423          	sw	a0,-88(s0)
201066e4:	fa842783          	lw	a5,-88(s0)
201066e8:	2c07a783          	lw	a5,704(a5)
201066ec:	faf42223          	sw	a5,-92(s0)
201066f0:	fa842783          	lw	a5,-88(s0)
201066f4:	2b87a783          	lw	a5,696(a5)
201066f8:	fa442583          	lw	a1,-92(s0)
201066fc:	455d                	li	a0,23
201066fe:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:251
}
20106700:	0001                	nop
20106702:	40f6                	lw	ra,92(sp)
20106704:	42e6                	lw	t0,88(sp)
20106706:	4356                	lw	t1,84(sp)
20106708:	43c6                	lw	t2,80(sp)
2010670a:	4436                	lw	s0,76(sp)
2010670c:	4526                	lw	a0,72(sp)
2010670e:	4596                	lw	a1,68(sp)
20106710:	4606                	lw	a2,64(sp)
20106712:	56f2                	lw	a3,60(sp)
20106714:	5762                	lw	a4,56(sp)
20106716:	57d2                	lw	a5,52(sp)
20106718:	5842                	lw	a6,48(sp)
2010671a:	58b2                	lw	a7,44(sp)
2010671c:	5e22                	lw	t3,40(sp)
2010671e:	5e92                	lw	t4,36(sp)
20106720:	5f02                	lw	t5,32(sp)
20106722:	4ff2                	lw	t6,28(sp)
20106724:	6125                	add	sp,sp,96
20106726:	30200073          	mret

2010672a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
2010672a:	711d                	add	sp,sp,-96
2010672c:	ce86                	sw	ra,92(sp)
2010672e:	cc96                	sw	t0,88(sp)
20106730:	ca9a                	sw	t1,84(sp)
20106732:	c89e                	sw	t2,80(sp)
20106734:	c6a2                	sw	s0,76(sp)
20106736:	c4aa                	sw	a0,72(sp)
20106738:	c2ae                	sw	a1,68(sp)
2010673a:	c0b2                	sw	a2,64(sp)
2010673c:	de36                	sw	a3,60(sp)
2010673e:	dc3a                	sw	a4,56(sp)
20106740:	da3e                	sw	a5,52(sp)
20106742:	d842                	sw	a6,48(sp)
20106744:	d646                	sw	a7,44(sp)
20106746:	d472                	sw	t3,40(sp)
20106748:	d276                	sw	t4,36(sp)
2010674a:	d07a                	sw	t5,32(sp)
2010674c:	ce7e                	sw	t6,28(sp)
2010674e:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20106750:	d62ff0ef          	jal	20105cb2 <__metal_myhart_id>
20106754:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20106756:	800017b7          	lui	a5,0x80001
2010675a:	070a                	sll	a4,a4,0x2
2010675c:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106760:	97ba                	add	a5,a5,a4
20106762:	439c                	lw	a5,0(a5)
20106764:	faf42623          	sw	a5,-84(s0)
20106768:	fac42783          	lw	a5,-84(s0)
2010676c:	c78d                	beqz	a5,20106796 <metal_lc8_interrupt_vector_handler+0x6c>
2010676e:	fac42503          	lw	a0,-84(s0)
20106772:	cc2ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20106776:	faa42423          	sw	a0,-88(s0)
2010677a:	fa842783          	lw	a5,-88(s0)
2010677e:	2d87a783          	lw	a5,728(a5)
20106782:	faf42223          	sw	a5,-92(s0)
20106786:	fa842783          	lw	a5,-88(s0)
2010678a:	2d07a783          	lw	a5,720(a5)
2010678e:	fa442583          	lw	a1,-92(s0)
20106792:	4561                	li	a0,24
20106794:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:256
}
20106796:	0001                	nop
20106798:	40f6                	lw	ra,92(sp)
2010679a:	42e6                	lw	t0,88(sp)
2010679c:	4356                	lw	t1,84(sp)
2010679e:	43c6                	lw	t2,80(sp)
201067a0:	4436                	lw	s0,76(sp)
201067a2:	4526                	lw	a0,72(sp)
201067a4:	4596                	lw	a1,68(sp)
201067a6:	4606                	lw	a2,64(sp)
201067a8:	56f2                	lw	a3,60(sp)
201067aa:	5762                	lw	a4,56(sp)
201067ac:	57d2                	lw	a5,52(sp)
201067ae:	5842                	lw	a6,48(sp)
201067b0:	58b2                	lw	a7,44(sp)
201067b2:	5e22                	lw	t3,40(sp)
201067b4:	5e92                	lw	t4,36(sp)
201067b6:	5f02                	lw	t5,32(sp)
201067b8:	4ff2                	lw	t6,28(sp)
201067ba:	6125                	add	sp,sp,96
201067bc:	30200073          	mret

201067c0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
201067c0:	711d                	add	sp,sp,-96
201067c2:	ce86                	sw	ra,92(sp)
201067c4:	cc96                	sw	t0,88(sp)
201067c6:	ca9a                	sw	t1,84(sp)
201067c8:	c89e                	sw	t2,80(sp)
201067ca:	c6a2                	sw	s0,76(sp)
201067cc:	c4aa                	sw	a0,72(sp)
201067ce:	c2ae                	sw	a1,68(sp)
201067d0:	c0b2                	sw	a2,64(sp)
201067d2:	de36                	sw	a3,60(sp)
201067d4:	dc3a                	sw	a4,56(sp)
201067d6:	da3e                	sw	a5,52(sp)
201067d8:	d842                	sw	a6,48(sp)
201067da:	d646                	sw	a7,44(sp)
201067dc:	d472                	sw	t3,40(sp)
201067de:	d276                	sw	t4,36(sp)
201067e0:	d07a                	sw	t5,32(sp)
201067e2:	ce7e                	sw	t6,28(sp)
201067e4:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
201067e6:	cccff0ef          	jal	20105cb2 <__metal_myhart_id>
201067ea:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
201067ec:	800017b7          	lui	a5,0x80001
201067f0:	070a                	sll	a4,a4,0x2
201067f2:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
201067f6:	97ba                	add	a5,a5,a4
201067f8:	439c                	lw	a5,0(a5)
201067fa:	faf42623          	sw	a5,-84(s0)
201067fe:	fac42783          	lw	a5,-84(s0)
20106802:	c78d                	beqz	a5,2010682c <metal_lc9_interrupt_vector_handler+0x6c>
20106804:	fac42503          	lw	a0,-84(s0)
20106808:	c2cff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
2010680c:	faa42423          	sw	a0,-88(s0)
20106810:	fa842783          	lw	a5,-88(s0)
20106814:	2f07a783          	lw	a5,752(a5)
20106818:	faf42223          	sw	a5,-92(s0)
2010681c:	fa842783          	lw	a5,-88(s0)
20106820:	2e87a783          	lw	a5,744(a5)
20106824:	fa442583          	lw	a1,-92(s0)
20106828:	4565                	li	a0,25
2010682a:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:261
}
2010682c:	0001                	nop
2010682e:	40f6                	lw	ra,92(sp)
20106830:	42e6                	lw	t0,88(sp)
20106832:	4356                	lw	t1,84(sp)
20106834:	43c6                	lw	t2,80(sp)
20106836:	4436                	lw	s0,76(sp)
20106838:	4526                	lw	a0,72(sp)
2010683a:	4596                	lw	a1,68(sp)
2010683c:	4606                	lw	a2,64(sp)
2010683e:	56f2                	lw	a3,60(sp)
20106840:	5762                	lw	a4,56(sp)
20106842:	57d2                	lw	a5,52(sp)
20106844:	5842                	lw	a6,48(sp)
20106846:	58b2                	lw	a7,44(sp)
20106848:	5e22                	lw	t3,40(sp)
2010684a:	5e92                	lw	t4,36(sp)
2010684c:	5f02                	lw	t5,32(sp)
2010684e:	4ff2                	lw	t6,28(sp)
20106850:	6125                	add	sp,sp,96
20106852:	30200073          	mret

20106856 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20106856:	711d                	add	sp,sp,-96
20106858:	ce86                	sw	ra,92(sp)
2010685a:	cc96                	sw	t0,88(sp)
2010685c:	ca9a                	sw	t1,84(sp)
2010685e:	c89e                	sw	t2,80(sp)
20106860:	c6a2                	sw	s0,76(sp)
20106862:	c4aa                	sw	a0,72(sp)
20106864:	c2ae                	sw	a1,68(sp)
20106866:	c0b2                	sw	a2,64(sp)
20106868:	de36                	sw	a3,60(sp)
2010686a:	dc3a                	sw	a4,56(sp)
2010686c:	da3e                	sw	a5,52(sp)
2010686e:	d842                	sw	a6,48(sp)
20106870:	d646                	sw	a7,44(sp)
20106872:	d472                	sw	t3,40(sp)
20106874:	d276                	sw	t4,36(sp)
20106876:	d07a                	sw	t5,32(sp)
20106878:	ce7e                	sw	t6,28(sp)
2010687a:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
2010687c:	c36ff0ef          	jal	20105cb2 <__metal_myhart_id>
20106880:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20106882:	800017b7          	lui	a5,0x80001
20106886:	070a                	sll	a4,a4,0x2
20106888:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
2010688c:	97ba                	add	a5,a5,a4
2010688e:	439c                	lw	a5,0(a5)
20106890:	faf42623          	sw	a5,-84(s0)
20106894:	fac42783          	lw	a5,-84(s0)
20106898:	c78d                	beqz	a5,201068c2 <metal_lc10_interrupt_vector_handler+0x6c>
2010689a:	fac42503          	lw	a0,-84(s0)
2010689e:	b96ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201068a2:	faa42423          	sw	a0,-88(s0)
201068a6:	fa842783          	lw	a5,-88(s0)
201068aa:	3087a783          	lw	a5,776(a5)
201068ae:	faf42223          	sw	a5,-92(s0)
201068b2:	fa842783          	lw	a5,-88(s0)
201068b6:	3007a783          	lw	a5,768(a5)
201068ba:	fa442583          	lw	a1,-92(s0)
201068be:	4569                	li	a0,26
201068c0:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:267
}
201068c2:	0001                	nop
201068c4:	40f6                	lw	ra,92(sp)
201068c6:	42e6                	lw	t0,88(sp)
201068c8:	4356                	lw	t1,84(sp)
201068ca:	43c6                	lw	t2,80(sp)
201068cc:	4436                	lw	s0,76(sp)
201068ce:	4526                	lw	a0,72(sp)
201068d0:	4596                	lw	a1,68(sp)
201068d2:	4606                	lw	a2,64(sp)
201068d4:	56f2                	lw	a3,60(sp)
201068d6:	5762                	lw	a4,56(sp)
201068d8:	57d2                	lw	a5,52(sp)
201068da:	5842                	lw	a6,48(sp)
201068dc:	58b2                	lw	a7,44(sp)
201068de:	5e22                	lw	t3,40(sp)
201068e0:	5e92                	lw	t4,36(sp)
201068e2:	5f02                	lw	t5,32(sp)
201068e4:	4ff2                	lw	t6,28(sp)
201068e6:	6125                	add	sp,sp,96
201068e8:	30200073          	mret

201068ec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
201068ec:	711d                	add	sp,sp,-96
201068ee:	ce86                	sw	ra,92(sp)
201068f0:	cc96                	sw	t0,88(sp)
201068f2:	ca9a                	sw	t1,84(sp)
201068f4:	c89e                	sw	t2,80(sp)
201068f6:	c6a2                	sw	s0,76(sp)
201068f8:	c4aa                	sw	a0,72(sp)
201068fa:	c2ae                	sw	a1,68(sp)
201068fc:	c0b2                	sw	a2,64(sp)
201068fe:	de36                	sw	a3,60(sp)
20106900:	dc3a                	sw	a4,56(sp)
20106902:	da3e                	sw	a5,52(sp)
20106904:	d842                	sw	a6,48(sp)
20106906:	d646                	sw	a7,44(sp)
20106908:	d472                	sw	t3,40(sp)
2010690a:	d276                	sw	t4,36(sp)
2010690c:	d07a                	sw	t5,32(sp)
2010690e:	ce7e                	sw	t6,28(sp)
20106910:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20106912:	ba0ff0ef          	jal	20105cb2 <__metal_myhart_id>
20106916:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20106918:	800017b7          	lui	a5,0x80001
2010691c:	070a                	sll	a4,a4,0x2
2010691e:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106922:	97ba                	add	a5,a5,a4
20106924:	439c                	lw	a5,0(a5)
20106926:	faf42623          	sw	a5,-84(s0)
2010692a:	fac42783          	lw	a5,-84(s0)
2010692e:	c78d                	beqz	a5,20106958 <metal_lc11_interrupt_vector_handler+0x6c>
20106930:	fac42503          	lw	a0,-84(s0)
20106934:	b00ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20106938:	faa42423          	sw	a0,-88(s0)
2010693c:	fa842783          	lw	a5,-88(s0)
20106940:	3207a783          	lw	a5,800(a5)
20106944:	faf42223          	sw	a5,-92(s0)
20106948:	fa842783          	lw	a5,-88(s0)
2010694c:	3187a783          	lw	a5,792(a5)
20106950:	fa442583          	lw	a1,-92(s0)
20106954:	456d                	li	a0,27
20106956:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:273
}
20106958:	0001                	nop
2010695a:	40f6                	lw	ra,92(sp)
2010695c:	42e6                	lw	t0,88(sp)
2010695e:	4356                	lw	t1,84(sp)
20106960:	43c6                	lw	t2,80(sp)
20106962:	4436                	lw	s0,76(sp)
20106964:	4526                	lw	a0,72(sp)
20106966:	4596                	lw	a1,68(sp)
20106968:	4606                	lw	a2,64(sp)
2010696a:	56f2                	lw	a3,60(sp)
2010696c:	5762                	lw	a4,56(sp)
2010696e:	57d2                	lw	a5,52(sp)
20106970:	5842                	lw	a6,48(sp)
20106972:	58b2                	lw	a7,44(sp)
20106974:	5e22                	lw	t3,40(sp)
20106976:	5e92                	lw	t4,36(sp)
20106978:	5f02                	lw	t5,32(sp)
2010697a:	4ff2                	lw	t6,28(sp)
2010697c:	6125                	add	sp,sp,96
2010697e:	30200073          	mret

20106982 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20106982:	711d                	add	sp,sp,-96
20106984:	ce86                	sw	ra,92(sp)
20106986:	cc96                	sw	t0,88(sp)
20106988:	ca9a                	sw	t1,84(sp)
2010698a:	c89e                	sw	t2,80(sp)
2010698c:	c6a2                	sw	s0,76(sp)
2010698e:	c4aa                	sw	a0,72(sp)
20106990:	c2ae                	sw	a1,68(sp)
20106992:	c0b2                	sw	a2,64(sp)
20106994:	de36                	sw	a3,60(sp)
20106996:	dc3a                	sw	a4,56(sp)
20106998:	da3e                	sw	a5,52(sp)
2010699a:	d842                	sw	a6,48(sp)
2010699c:	d646                	sw	a7,44(sp)
2010699e:	d472                	sw	t3,40(sp)
201069a0:	d276                	sw	t4,36(sp)
201069a2:	d07a                	sw	t5,32(sp)
201069a4:	ce7e                	sw	t6,28(sp)
201069a6:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
201069a8:	b0aff0ef          	jal	20105cb2 <__metal_myhart_id>
201069ac:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
201069ae:	800017b7          	lui	a5,0x80001
201069b2:	070a                	sll	a4,a4,0x2
201069b4:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
201069b8:	97ba                	add	a5,a5,a4
201069ba:	439c                	lw	a5,0(a5)
201069bc:	faf42623          	sw	a5,-84(s0)
201069c0:	fac42783          	lw	a5,-84(s0)
201069c4:	c78d                	beqz	a5,201069ee <metal_lc12_interrupt_vector_handler+0x6c>
201069c6:	fac42503          	lw	a0,-84(s0)
201069ca:	a6aff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201069ce:	faa42423          	sw	a0,-88(s0)
201069d2:	fa842783          	lw	a5,-88(s0)
201069d6:	3387a783          	lw	a5,824(a5)
201069da:	faf42223          	sw	a5,-92(s0)
201069de:	fa842783          	lw	a5,-88(s0)
201069e2:	3307a783          	lw	a5,816(a5)
201069e6:	fa442583          	lw	a1,-92(s0)
201069ea:	4571                	li	a0,28
201069ec:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:279
}
201069ee:	0001                	nop
201069f0:	40f6                	lw	ra,92(sp)
201069f2:	42e6                	lw	t0,88(sp)
201069f4:	4356                	lw	t1,84(sp)
201069f6:	43c6                	lw	t2,80(sp)
201069f8:	4436                	lw	s0,76(sp)
201069fa:	4526                	lw	a0,72(sp)
201069fc:	4596                	lw	a1,68(sp)
201069fe:	4606                	lw	a2,64(sp)
20106a00:	56f2                	lw	a3,60(sp)
20106a02:	5762                	lw	a4,56(sp)
20106a04:	57d2                	lw	a5,52(sp)
20106a06:	5842                	lw	a6,48(sp)
20106a08:	58b2                	lw	a7,44(sp)
20106a0a:	5e22                	lw	t3,40(sp)
20106a0c:	5e92                	lw	t4,36(sp)
20106a0e:	5f02                	lw	t5,32(sp)
20106a10:	4ff2                	lw	t6,28(sp)
20106a12:	6125                	add	sp,sp,96
20106a14:	30200073          	mret

20106a18 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20106a18:	711d                	add	sp,sp,-96
20106a1a:	ce86                	sw	ra,92(sp)
20106a1c:	cc96                	sw	t0,88(sp)
20106a1e:	ca9a                	sw	t1,84(sp)
20106a20:	c89e                	sw	t2,80(sp)
20106a22:	c6a2                	sw	s0,76(sp)
20106a24:	c4aa                	sw	a0,72(sp)
20106a26:	c2ae                	sw	a1,68(sp)
20106a28:	c0b2                	sw	a2,64(sp)
20106a2a:	de36                	sw	a3,60(sp)
20106a2c:	dc3a                	sw	a4,56(sp)
20106a2e:	da3e                	sw	a5,52(sp)
20106a30:	d842                	sw	a6,48(sp)
20106a32:	d646                	sw	a7,44(sp)
20106a34:	d472                	sw	t3,40(sp)
20106a36:	d276                	sw	t4,36(sp)
20106a38:	d07a                	sw	t5,32(sp)
20106a3a:	ce7e                	sw	t6,28(sp)
20106a3c:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20106a3e:	a74ff0ef          	jal	20105cb2 <__metal_myhart_id>
20106a42:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20106a44:	800017b7          	lui	a5,0x80001
20106a48:	070a                	sll	a4,a4,0x2
20106a4a:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106a4e:	97ba                	add	a5,a5,a4
20106a50:	439c                	lw	a5,0(a5)
20106a52:	faf42623          	sw	a5,-84(s0)
20106a56:	fac42783          	lw	a5,-84(s0)
20106a5a:	c78d                	beqz	a5,20106a84 <metal_lc13_interrupt_vector_handler+0x6c>
20106a5c:	fac42503          	lw	a0,-84(s0)
20106a60:	9d4ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20106a64:	faa42423          	sw	a0,-88(s0)
20106a68:	fa842783          	lw	a5,-88(s0)
20106a6c:	3507a783          	lw	a5,848(a5)
20106a70:	faf42223          	sw	a5,-92(s0)
20106a74:	fa842783          	lw	a5,-88(s0)
20106a78:	3487a783          	lw	a5,840(a5)
20106a7c:	fa442583          	lw	a1,-92(s0)
20106a80:	4575                	li	a0,29
20106a82:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:285
}
20106a84:	0001                	nop
20106a86:	40f6                	lw	ra,92(sp)
20106a88:	42e6                	lw	t0,88(sp)
20106a8a:	4356                	lw	t1,84(sp)
20106a8c:	43c6                	lw	t2,80(sp)
20106a8e:	4436                	lw	s0,76(sp)
20106a90:	4526                	lw	a0,72(sp)
20106a92:	4596                	lw	a1,68(sp)
20106a94:	4606                	lw	a2,64(sp)
20106a96:	56f2                	lw	a3,60(sp)
20106a98:	5762                	lw	a4,56(sp)
20106a9a:	57d2                	lw	a5,52(sp)
20106a9c:	5842                	lw	a6,48(sp)
20106a9e:	58b2                	lw	a7,44(sp)
20106aa0:	5e22                	lw	t3,40(sp)
20106aa2:	5e92                	lw	t4,36(sp)
20106aa4:	5f02                	lw	t5,32(sp)
20106aa6:	4ff2                	lw	t6,28(sp)
20106aa8:	6125                	add	sp,sp,96
20106aaa:	30200073          	mret

20106aae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20106aae:	711d                	add	sp,sp,-96
20106ab0:	ce86                	sw	ra,92(sp)
20106ab2:	cc96                	sw	t0,88(sp)
20106ab4:	ca9a                	sw	t1,84(sp)
20106ab6:	c89e                	sw	t2,80(sp)
20106ab8:	c6a2                	sw	s0,76(sp)
20106aba:	c4aa                	sw	a0,72(sp)
20106abc:	c2ae                	sw	a1,68(sp)
20106abe:	c0b2                	sw	a2,64(sp)
20106ac0:	de36                	sw	a3,60(sp)
20106ac2:	dc3a                	sw	a4,56(sp)
20106ac4:	da3e                	sw	a5,52(sp)
20106ac6:	d842                	sw	a6,48(sp)
20106ac8:	d646                	sw	a7,44(sp)
20106aca:	d472                	sw	t3,40(sp)
20106acc:	d276                	sw	t4,36(sp)
20106ace:	d07a                	sw	t5,32(sp)
20106ad0:	ce7e                	sw	t6,28(sp)
20106ad2:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20106ad4:	9deff0ef          	jal	20105cb2 <__metal_myhart_id>
20106ad8:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20106ada:	800017b7          	lui	a5,0x80001
20106ade:	070a                	sll	a4,a4,0x2
20106ae0:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106ae4:	97ba                	add	a5,a5,a4
20106ae6:	439c                	lw	a5,0(a5)
20106ae8:	faf42623          	sw	a5,-84(s0)
20106aec:	fac42783          	lw	a5,-84(s0)
20106af0:	c78d                	beqz	a5,20106b1a <metal_lc14_interrupt_vector_handler+0x6c>
20106af2:	fac42503          	lw	a0,-84(s0)
20106af6:	93eff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20106afa:	faa42423          	sw	a0,-88(s0)
20106afe:	fa842783          	lw	a5,-88(s0)
20106b02:	3687a783          	lw	a5,872(a5)
20106b06:	faf42223          	sw	a5,-92(s0)
20106b0a:	fa842783          	lw	a5,-88(s0)
20106b0e:	3607a783          	lw	a5,864(a5)
20106b12:	fa442583          	lw	a1,-92(s0)
20106b16:	4579                	li	a0,30
20106b18:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:291
}
20106b1a:	0001                	nop
20106b1c:	40f6                	lw	ra,92(sp)
20106b1e:	42e6                	lw	t0,88(sp)
20106b20:	4356                	lw	t1,84(sp)
20106b22:	43c6                	lw	t2,80(sp)
20106b24:	4436                	lw	s0,76(sp)
20106b26:	4526                	lw	a0,72(sp)
20106b28:	4596                	lw	a1,68(sp)
20106b2a:	4606                	lw	a2,64(sp)
20106b2c:	56f2                	lw	a3,60(sp)
20106b2e:	5762                	lw	a4,56(sp)
20106b30:	57d2                	lw	a5,52(sp)
20106b32:	5842                	lw	a6,48(sp)
20106b34:	58b2                	lw	a7,44(sp)
20106b36:	5e22                	lw	t3,40(sp)
20106b38:	5e92                	lw	t4,36(sp)
20106b3a:	5f02                	lw	t5,32(sp)
20106b3c:	4ff2                	lw	t6,28(sp)
20106b3e:	6125                	add	sp,sp,96
20106b40:	30200073          	mret

20106b44 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20106b44:	711d                	add	sp,sp,-96
20106b46:	ce86                	sw	ra,92(sp)
20106b48:	cc96                	sw	t0,88(sp)
20106b4a:	ca9a                	sw	t1,84(sp)
20106b4c:	c89e                	sw	t2,80(sp)
20106b4e:	c6a2                	sw	s0,76(sp)
20106b50:	c4aa                	sw	a0,72(sp)
20106b52:	c2ae                	sw	a1,68(sp)
20106b54:	c0b2                	sw	a2,64(sp)
20106b56:	de36                	sw	a3,60(sp)
20106b58:	dc3a                	sw	a4,56(sp)
20106b5a:	da3e                	sw	a5,52(sp)
20106b5c:	d842                	sw	a6,48(sp)
20106b5e:	d646                	sw	a7,44(sp)
20106b60:	d472                	sw	t3,40(sp)
20106b62:	d276                	sw	t4,36(sp)
20106b64:	d07a                	sw	t5,32(sp)
20106b66:	ce7e                	sw	t6,28(sp)
20106b68:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20106b6a:	948ff0ef          	jal	20105cb2 <__metal_myhart_id>
20106b6e:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20106b70:	800017b7          	lui	a5,0x80001
20106b74:	070a                	sll	a4,a4,0x2
20106b76:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_cpu_table>
20106b7a:	97ba                	add	a5,a5,a4
20106b7c:	439c                	lw	a5,0(a5)
20106b7e:	faf42623          	sw	a5,-84(s0)
20106b82:	fac42783          	lw	a5,-84(s0)
20106b86:	c78d                	beqz	a5,20106bb0 <metal_lc15_interrupt_vector_handler+0x6c>
20106b88:	fac42503          	lw	a0,-84(s0)
20106b8c:	8a8ff0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20106b90:	faa42423          	sw	a0,-88(s0)
20106b94:	fa842783          	lw	a5,-88(s0)
20106b98:	3807a783          	lw	a5,896(a5)
20106b9c:	faf42223          	sw	a5,-92(s0)
20106ba0:	fa842783          	lw	a5,-88(s0)
20106ba4:	3787a783          	lw	a5,888(a5)
20106ba8:	fa442583          	lw	a1,-92(s0)
20106bac:	457d                	li	a0,31
20106bae:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:297
}
20106bb0:	0001                	nop
20106bb2:	40f6                	lw	ra,92(sp)
20106bb4:	42e6                	lw	t0,88(sp)
20106bb6:	4356                	lw	t1,84(sp)
20106bb8:	43c6                	lw	t2,80(sp)
20106bba:	4436                	lw	s0,76(sp)
20106bbc:	4526                	lw	a0,72(sp)
20106bbe:	4596                	lw	a1,68(sp)
20106bc0:	4606                	lw	a2,64(sp)
20106bc2:	56f2                	lw	a3,60(sp)
20106bc4:	5762                	lw	a4,56(sp)
20106bc6:	57d2                	lw	a5,52(sp)
20106bc8:	5842                	lw	a6,48(sp)
20106bca:	58b2                	lw	a7,44(sp)
20106bcc:	5e22                	lw	t3,40(sp)
20106bce:	5e92                	lw	t4,36(sp)
20106bd0:	5f02                	lw	t5,32(sp)
20106bd2:	4ff2                	lw	t6,28(sp)
20106bd4:	6125                	add	sp,sp,96
20106bd6:	30200073          	mret

20106bda <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20106bda:	1101                	add	sp,sp,-32
20106bdc:	ce22                	sw	s0,28(sp)
20106bde:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20106be0:	305027f3          	csrr	a5,mtvec
20106be4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20106be8:	fec42783          	lw	a5,-20(s0)
20106bec:	03f7f793          	and	a5,a5,63
20106bf0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20106bf4:	fec42703          	lw	a4,-20(s0)
20106bf8:	478d                	li	a5,3
20106bfa:	02f70363          	beq	a4,a5,20106c20 <__metal_controller_interrupt_vector_mode+0x46>
20106bfe:	fec42703          	lw	a4,-20(s0)
20106c02:	478d                	li	a5,3
20106c04:	02e7e263          	bltu	a5,a4,20106c28 <__metal_controller_interrupt_vector_mode+0x4e>
20106c08:	fec42703          	lw	a4,-20(s0)
20106c0c:	4785                	li	a5,1
20106c0e:	00f70b63          	beq	a4,a5,20106c24 <__metal_controller_interrupt_vector_mode+0x4a>
20106c12:	fec42703          	lw	a4,-20(s0)
20106c16:	4789                	li	a5,2
20106c18:	00f71863          	bne	a4,a5,20106c28 <__metal_controller_interrupt_vector_mode+0x4e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20106c1c:	478d                	li	a5,3
20106c1e:	a031                	j	20106c2a <__metal_controller_interrupt_vector_mode+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20106c20:	4791                	li	a5,4
20106c22:	a021                	j	20106c2a <__metal_controller_interrupt_vector_mode+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20106c24:	4785                	li	a5,1
20106c26:	a011                	j	20106c2a <__metal_controller_interrupt_vector_mode+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20106c28:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:314
}
20106c2a:	853e                	mv	a0,a5
20106c2c:	4472                	lw	s0,28(sp)
20106c2e:	6105                	add	sp,sp,32
20106c30:	8082                	ret

20106c32 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20106c32:	7179                	add	sp,sp,-48
20106c34:	d622                	sw	s0,44(sp)
20106c36:	1800                	add	s0,sp,48
20106c38:	fca42e23          	sw	a0,-36(s0)
20106c3c:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20106c40:	305027f3          	csrr	a5,mtvec
20106c44:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20106c48:	fec42783          	lw	a5,-20(s0)
20106c4c:	fc07f793          	and	a5,a5,-64
20106c50:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20106c54:	fd842783          	lw	a5,-40(s0)
20106c58:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20106c5c:	fdc42703          	lw	a4,-36(s0)
20106c60:	4791                	li	a5,4
20106c62:	04f70563          	beq	a4,a5,20106cac <__metal_controller_interrupt_vector+0x7a>
20106c66:	fdc42703          	lw	a4,-36(s0)
20106c6a:	4791                	li	a5,4
20106c6c:	06e7e863          	bltu	a5,a4,20106cdc <__metal_controller_interrupt_vector+0xaa>
20106c70:	fdc42703          	lw	a4,-36(s0)
20106c74:	478d                	li	a5,3
20106c76:	06e7e363          	bltu	a5,a4,20106cdc <__metal_controller_interrupt_vector+0xaa>
20106c7a:	fdc42703          	lw	a4,-36(s0)
20106c7e:	4789                	li	a5,2
20106c80:	00f77b63          	bgeu	a4,a5,20106c96 <__metal_controller_interrupt_vector+0x64>
20106c84:	fdc42783          	lw	a5,-36(s0)
20106c88:	c7a1                	beqz	a5,20106cd0 <__metal_controller_interrupt_vector+0x9e>
20106c8a:	fdc42703          	lw	a4,-36(s0)
20106c8e:	4785                	li	a5,1
20106c90:	02f70963          	beq	a4,a5,20106cc2 <__metal_controller_interrupt_vector+0x90>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20106c94:	a0a1                	j	20106cdc <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20106c96:	fe842783          	lw	a5,-24(s0)
20106c9a:	30779073          	csrw	mtvt,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20106c9e:	fec42783          	lw	a5,-20(s0)
20106ca2:	0027e793          	or	a5,a5,2
20106ca6:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20106caa:	a80d                	j	20106cdc <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20106cac:	fe842783          	lw	a5,-24(s0)
20106cb0:	30779073          	csrw	mtvt,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20106cb4:	fec42783          	lw	a5,-20(s0)
20106cb8:	0037e793          	or	a5,a5,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20106cbc:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20106cc0:	a831                	j	20106cdc <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20106cc2:	fe842783          	lw	a5,-24(s0)
20106cc6:	0017e793          	or	a5,a5,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20106cca:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20106cce:	a039                	j	20106cdc <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20106cd0:	fe842783          	lw	a5,-24(s0)
20106cd4:	9bf1                	and	a5,a5,-4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20106cd6:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20106cda:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:344
}
20106cdc:	0001                	nop
20106cde:	5432                	lw	s0,44(sp)
20106ce0:	6145                	add	sp,sp,48
20106ce2:	8082                	ret

20106ce4 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20106ce4:	1101                	add	sp,sp,-32
20106ce6:	ce22                	sw	s0,28(sp)
20106ce8:	1000                	add	s0,sp,32
20106cea:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20106cee:	fec42703          	lw	a4,-20(s0)
20106cf2:	47fd                	li	a5,31
20106cf4:	02e7c563          	blt	a5,a4,20106d1e <__metal_valid_interrupt_id+0x3a>
20106cf8:	fec42703          	lw	a4,-20(s0)
20106cfc:	478d                	li	a5,3
20106cfe:	02f74863          	blt	a4,a5,20106d2e <__metal_valid_interrupt_id+0x4a>
20106d02:	fec42783          	lw	a5,-20(s0)
20106d06:	7745                	lui	a4,0xffff1
20106d08:	88870713          	add	a4,a4,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffeefe8>
20106d0c:	00f757b3          	srl	a5,a4,a5
20106d10:	8b85                	and	a5,a5,1
20106d12:	00f037b3          	snez	a5,a5
20106d16:	0ff7f793          	zext.b	a5,a5
20106d1a:	eb81                	bnez	a5,20106d2a <__metal_valid_interrupt_id+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20106d1c:	a809                	j	20106d2e <__metal_valid_interrupt_id+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20106d1e:	fec42703          	lw	a4,-20(s0)
20106d22:	08000793          	li	a5,128
20106d26:	00f71463          	bne	a4,a5,20106d2e <__metal_valid_interrupt_id+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20106d2a:	4785                	li	a5,1
20106d2c:	a019                	j	20106d32 <__metal_valid_interrupt_id+0x4e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20106d2e:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20106d30:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:374
}
20106d32:	853e                	mv	a0,a5
20106d34:	4472                	lw	s0,28(sp)
20106d36:	6105                	add	sp,sp,32
20106d38:	8082                	ret

20106d3a <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20106d3a:	7179                	add	sp,sp,-48
20106d3c:	d606                	sw	ra,44(sp)
20106d3e:	d422                	sw	s0,40(sp)
20106d40:	1800                	add	s0,sp,48
20106d42:	fca42e23          	sw	a0,-36(s0)
20106d46:	fcb42c23          	sw	a1,-40(s0)
20106d4a:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20106d4e:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20106d52:	fdc42783          	lw	a5,-36(s0)
20106d56:	e399                	bnez	a5,20106d5c <__metal_local_interrupt_enable+0x22>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20106d58:	57fd                	li	a5,-1
20106d5a:	a849                	j	20106dec <__metal_local_interrupt_enable+0xb2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20106d5c:	fd842703          	lw	a4,-40(s0)
20106d60:	47fd                	li	a5,31
20106d62:	08e7e063          	bltu	a5,a4,20106de2 <__metal_local_interrupt_enable+0xa8>
20106d66:	fd842783          	lw	a5,-40(s0)
20106d6a:	00279713          	sll	a4,a5,0x2
20106d6e:	201037b7          	lui	a5,0x20103
20106d72:	ae078793          	add	a5,a5,-1312 # 20102ae0 <__metal_driver_vtable_riscv_clint0+0x64>
20106d76:	97ba                	add	a5,a5,a4
20106d78:	439c                	lw	a5,0(a5)
20106d7a:	8782                	jr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20106d7c:	fd442783          	lw	a5,-44(s0)
20106d80:	c781                	beqz	a5,20106d88 <__metal_local_interrupt_enable+0x4e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20106d82:	f4bfe0ef          	jal	20105ccc <__metal_interrupt_global_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20106d86:	a08d                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20106d88:	f5dfe0ef          	jal	20105ce4 <__metal_interrupt_global_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20106d8c:	a8b1                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20106d8e:	fd442783          	lw	a5,-44(s0)
20106d92:	c781                	beqz	a5,20106d9a <__metal_local_interrupt_enable+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20106d94:	f69fe0ef          	jal	20105cfc <__metal_interrupt_software_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20106d98:	a881                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20106d9a:	f7bfe0ef          	jal	20105d14 <__metal_interrupt_software_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20106d9e:	a0a9                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20106da0:	fd442783          	lw	a5,-44(s0)
20106da4:	c781                	beqz	a5,20106dac <__metal_local_interrupt_enable+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20106da6:	f87fe0ef          	jal	20105d2c <__metal_interrupt_timer_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20106daa:	a83d                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20106dac:	f9bfe0ef          	jal	20105d46 <__metal_interrupt_timer_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20106db0:	a825                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20106db2:	fd442783          	lw	a5,-44(s0)
20106db6:	c781                	beqz	a5,20106dbe <__metal_local_interrupt_enable+0x84>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20106db8:	fa9fe0ef          	jal	20105d60 <__metal_interrupt_external_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20106dbc:	a035                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20106dbe:	fbffe0ef          	jal	20105d7c <__metal_interrupt_external_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20106dc2:	a01d                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20106dc4:	fd442783          	lw	a5,-44(s0)
20106dc8:	c799                	beqz	a5,20106dd6 <__metal_local_interrupt_enable+0x9c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20106dca:	fd842783          	lw	a5,-40(s0)
20106dce:	853e                	mv	a0,a5
20106dd0:	fc9fe0ef          	jal	20105d98 <__metal_interrupt_local_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20106dd4:	a811                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20106dd6:	fd842783          	lw	a5,-40(s0)
20106dda:	853e                	mv	a0,a5
20106ddc:	fe9fe0ef          	jal	20105dc4 <__metal_interrupt_local_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20106de0:	a021                	j	20106de8 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20106de2:	57fd                	li	a5,-1
20106de4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20106de8:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:439
}
20106dec:	853e                	mv	a0,a5
20106dee:	50b2                	lw	ra,44(sp)
20106df0:	5422                	lw	s0,40(sp)
20106df2:	6145                	add	sp,sp,48
20106df4:	8082                	ret

20106df6 <__metal_exception_register>:
__metal_exception_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20106df6:	7179                	add	sp,sp,-48
20106df8:	d622                	sw	s0,44(sp)
20106dfa:	1800                	add	s0,sp,48
20106dfc:	fca42e23          	sw	a0,-36(s0)
20106e00:	fcb42c23          	sw	a1,-40(s0)
20106e04:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20106e08:	fdc42783          	lw	a5,-36(s0)
20106e0c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20106e10:	fd842703          	lw	a4,-40(s0)
20106e14:	47ad                	li	a5,11
20106e16:	02e7c263          	blt	a5,a4,20106e3a <__metal_exception_register+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20106e1a:	fd442783          	lw	a5,-44(s0)
20106e1e:	cf91                	beqz	a5,20106e3a <__metal_exception_register+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20106e20:	fec42703          	lw	a4,-20(s0)
20106e24:	fd842783          	lw	a5,-40(s0)
20106e28:	0e878793          	add	a5,a5,232
20106e2c:	078a                	sll	a5,a5,0x2
20106e2e:	97ba                	add	a5,a5,a4
20106e30:	fd442703          	lw	a4,-44(s0)
20106e34:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20106e36:	4781                	li	a5,0
20106e38:	a011                	j	20106e3c <__metal_exception_register+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20106e3a:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:450
}
20106e3c:	853e                	mv	a0,a5
20106e3e:	5432                	lw	s0,44(sp)
20106e40:	6145                	add	sp,sp,48
20106e42:	8082                	ret

20106e44 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20106e44:	7179                	add	sp,sp,-48
20106e46:	d606                	sw	ra,44(sp)
20106e48:	d422                	sw	s0,40(sp)
20106e4a:	1800                	add	s0,sp,48
20106e4c:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20106e50:	fdc42783          	lw	a5,-36(s0)
20106e54:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20106e58:	fe442783          	lw	a5,-28(s0)
20106e5c:	43dc                	lw	a5,4(a5)
20106e5e:	e3e1                	bnez	a5,20106f1e <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20106e60:	fe042623          	sw	zero,-20(s0)
20106e64:	a0b9                	j	20106eb2 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:460
            intc->metal_int_table[i].handler = NULL;
20106e66:	fe442683          	lw	a3,-28(s0)
20106e6a:	fec42703          	lw	a4,-20(s0)
20106e6e:	87ba                	mv	a5,a4
20106e70:	0786                	sll	a5,a5,0x1
20106e72:	97ba                	add	a5,a5,a4
20106e74:	078e                	sll	a5,a5,0x3
20106e76:	97b6                	add	a5,a5,a3
20106e78:	0807a823          	sw	zero,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:461
            intc->metal_int_table[i].sub_int = NULL;
20106e7c:	fe442683          	lw	a3,-28(s0)
20106e80:	fec42703          	lw	a4,-20(s0)
20106e84:	87ba                	mv	a5,a4
20106e86:	0786                	sll	a5,a5,0x1
20106e88:	97ba                	add	a5,a5,a4
20106e8a:	078e                	sll	a5,a5,0x3
20106e8c:	97b6                	add	a5,a5,a3
20106e8e:	0807aa23          	sw	zero,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:462
            intc->metal_int_table[i].exint_data = NULL;
20106e92:	fe442683          	lw	a3,-28(s0)
20106e96:	fec42703          	lw	a4,-20(s0)
20106e9a:	87ba                	mv	a5,a4
20106e9c:	0786                	sll	a5,a5,0x1
20106e9e:	97ba                	add	a5,a5,a4
20106ea0:	078e                	sll	a5,a5,0x3
20106ea2:	97b6                	add	a5,a5,a3
20106ea4:	0807ac23          	sw	zero,152(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20106ea8:	fec42783          	lw	a5,-20(s0)
20106eac:	0785                	add	a5,a5,1
20106eae:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20106eb2:	fec42703          	lw	a4,-20(s0)
20106eb6:	47fd                	li	a5,31
20106eb8:	fae7d7e3          	bge	a5,a4,20106e66 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20106ebc:	fe042423          	sw	zero,-24(s0)
20106ec0:	a01d                	j	20106ee6 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:466
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20106ec2:	fe442703          	lw	a4,-28(s0)
20106ec6:	fe842783          	lw	a5,-24(s0)
20106eca:	0e878793          	add	a5,a5,232
20106ece:	078a                	sll	a5,a5,0x2
20106ed0:	97ba                	add	a5,a5,a4
20106ed2:	20106737          	lui	a4,0x20106
20106ed6:	df070713          	add	a4,a4,-528 # 20105df0 <__metal_default_exception_handler>
20106eda:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20106edc:	fe842783          	lw	a5,-24(s0)
20106ee0:	0785                	add	a5,a5,1
20106ee2:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20106ee6:	fe842703          	lw	a4,-24(s0)
20106eea:	47ad                	li	a5,11
20106eec:	fce7dbe3          	bge	a5,a4,20106ec2 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20106ef0:	305027f3          	csrr	a5,mtvec
20106ef4:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20106ef8:	201007b7          	lui	a5,0x20100
20106efc:	13478793          	add	a5,a5,308 # 20100134 <early_trap_vector>
20106f00:	fe042703          	lw	a4,-32(s0)
20106f04:	00f71963          	bne	a4,a5,20106f16 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20106f08:	201067b7          	lui	a5,0x20106
20106f0c:	08078593          	add	a1,a5,128 # 20106080 <__metal_exception_handler>
20106f10:	4501                	li	a0,0
20106f12:	d21ff0ef          	jal	20106c32 <__metal_controller_interrupt_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20106f16:	fe442783          	lw	a5,-28(s0)
20106f1a:	4705                	li	a4,1
20106f1c:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20106f1e:	0001                	nop
20106f20:	50b2                	lw	ra,44(sp)
20106f22:	5422                	lw	s0,40(sp)
20106f24:	6145                	add	sp,sp,48
20106f26:	8082                	ret

20106f28 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20106f28:	7179                	add	sp,sp,-48
20106f2a:	d606                	sw	ra,44(sp)
20106f2c:	d422                	sw	s0,40(sp)
20106f2e:	1800                	add	s0,sp,48
20106f30:	fca42e23          	sw	a0,-36(s0)
20106f34:	fcb42c23          	sw	a1,-40(s0)
20106f38:	fcc42a23          	sw	a2,-44(s0)
20106f3c:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20106f40:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20106f44:	fdc42783          	lw	a5,-36(s0)
20106f48:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20106f4c:	fd842503          	lw	a0,-40(s0)
20106f50:	3b51                	jal	20106ce4 <__metal_valid_interrupt_id>
20106f52:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:491 (discriminator 1)
20106f54:	e399                	bnez	a5,20106f5a <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20106f56:	57d5                	li	a5,-11
20106f58:	a265                	j	20107100 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20106f5a:	fd842703          	lw	a4,-40(s0)
20106f5e:	08000793          	li	a5,128
20106f62:	00f71863          	bne	a4,a5,20106f72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:495
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20106f66:	c75ff0ef          	jal	20106bda <__metal_controller_interrupt_vector_mode>
20106f6a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20106f6c:	c399                	beqz	a5,20106f72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20106f6e:	57cd                	li	a5,-13
20106f70:	aa41                	j	20107100 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20106f72:	fd442783          	lw	a5,-44(s0)
20106f76:	cfb9                	beqz	a5,20106fd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20106f78:	fd842703          	lw	a4,-40(s0)
20106f7c:	08000793          	li	a5,128
20106f80:	00f71f63          	bne	a4,a5,20106f9e <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20106f84:	fe842783          	lw	a5,-24(s0)
20106f88:	fd442703          	lw	a4,-44(s0)
20106f8c:	38e7a823          	sw	a4,912(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20106f90:	fe842783          	lw	a5,-24(s0)
20106f94:	fd042703          	lw	a4,-48(s0)
20106f98:	38e7ac23          	sw	a4,920(a5)
20106f9c:	a285                	j	201070fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20106f9e:	fe842683          	lw	a3,-24(s0)
20106fa2:	fd842703          	lw	a4,-40(s0)
20106fa6:	87ba                	mv	a5,a4
20106fa8:	0786                	sll	a5,a5,0x1
20106faa:	97ba                	add	a5,a5,a4
20106fac:	078e                	sll	a5,a5,0x3
20106fae:	97b6                	add	a5,a5,a3
20106fb0:	fd442703          	lw	a4,-44(s0)
20106fb4:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20106fb8:	fe842683          	lw	a3,-24(s0)
20106fbc:	fd842703          	lw	a4,-40(s0)
20106fc0:	87ba                	mv	a5,a4
20106fc2:	0786                	sll	a5,a5,0x1
20106fc4:	97ba                	add	a5,a5,a4
20106fc6:	078e                	sll	a5,a5,0x3
20106fc8:	97b6                	add	a5,a5,a3
20106fca:	fd042703          	lw	a4,-48(s0)
20106fce:	08e7ac23          	sw	a4,152(a5)
20106fd2:	a22d                	j	201070fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20106fd4:	fd842703          	lw	a4,-40(s0)
20106fd8:	08000793          	li	a5,128
20106fdc:	0cf70163          	beq	a4,a5,2010709e <__metal_driver_riscv_cpu_controller_interrupt_register+0x176>
20106fe0:	fd842703          	lw	a4,-40(s0)
20106fe4:	08000793          	li	a5,128
20106fe8:	10e7c763          	blt	a5,a4,201070f6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20106fec:	fd842703          	lw	a4,-40(s0)
20106ff0:	47fd                	li	a5,31
20106ff2:	10e7c263          	blt	a5,a4,201070f6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20106ff6:	fd842703          	lw	a4,-40(s0)
20106ffa:	47c1                	li	a5,16
20106ffc:	0cf75063          	bge	a4,a5,201070bc <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20107000:	fd842703          	lw	a4,-40(s0)
20107004:	47ad                	li	a5,11
20107006:	0af70b63          	beq	a4,a5,201070bc <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
2010700a:	fd842703          	lw	a4,-40(s0)
2010700e:	47ad                	li	a5,11
20107010:	0ee7c363          	blt	a5,a4,201070f6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20107014:	fd842703          	lw	a4,-40(s0)
20107018:	478d                	li	a5,3
2010701a:	00f70863          	beq	a4,a5,2010702a <__metal_driver_riscv_cpu_controller_interrupt_register+0x102>
2010701e:	fd842703          	lw	a4,-40(s0)
20107022:	479d                	li	a5,7
20107024:	04f70063          	beq	a4,a5,20107064 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13c>
20107028:	a0f9                	j	201070f6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
2010702a:	fe842683          	lw	a3,-24(s0)
2010702e:	fd842703          	lw	a4,-40(s0)
20107032:	87ba                	mv	a5,a4
20107034:	0786                	sll	a5,a5,0x1
20107036:	97ba                	add	a5,a5,a4
20107038:	078e                	sll	a5,a5,0x3
2010703a:	97b6                	add	a5,a5,a3
2010703c:	20106737          	lui	a4,0x20106
20107040:	ee070713          	add	a4,a4,-288 # 20105ee0 <__metal_default_sw_handler>
20107044:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20107048:	fe842683          	lw	a3,-24(s0)
2010704c:	fd842703          	lw	a4,-40(s0)
20107050:	87ba                	mv	a5,a4
20107052:	0786                	sll	a5,a5,0x1
20107054:	97ba                	add	a5,a5,a4
20107056:	078e                	sll	a5,a5,0x3
20107058:	97b6                	add	a5,a5,a3
2010705a:	fd042703          	lw	a4,-48(s0)
2010705e:	08e7aa23          	sw	a4,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20107062:	a869                	j	201070fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20107064:	fe842683          	lw	a3,-24(s0)
20107068:	fd842703          	lw	a4,-40(s0)
2010706c:	87ba                	mv	a5,a4
2010706e:	0786                	sll	a5,a5,0x1
20107070:	97ba                	add	a5,a5,a4
20107072:	078e                	sll	a5,a5,0x3
20107074:	97b6                	add	a5,a5,a3
20107076:	20106737          	lui	a4,0x20106
2010707a:	ff070713          	add	a4,a4,-16 # 20105ff0 <__metal_default_timer_handler>
2010707e:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20107082:	fe842683          	lw	a3,-24(s0)
20107086:	fd842703          	lw	a4,-40(s0)
2010708a:	87ba                	mv	a5,a4
2010708c:	0786                	sll	a5,a5,0x1
2010708e:	97ba                	add	a5,a5,a4
20107090:	078e                	sll	a5,a5,0x3
20107092:	97b6                	add	a5,a5,a3
20107094:	fd042703          	lw	a4,-48(s0)
20107098:	08e7aa23          	sw	a4,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
2010709c:	a085                	j	201070fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
2010709e:	fe842783          	lw	a5,-24(s0)
201070a2:	20106737          	lui	a4,0x20106
201070a6:	fda70713          	add	a4,a4,-38 # 20105fda <__metal_default_beu_handler>
201070aa:	38e7a823          	sw	a4,912(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
201070ae:	fe842783          	lw	a5,-24(s0)
201070b2:	fd042703          	lw	a4,-48(s0)
201070b6:	38e7ac23          	sw	a4,920(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
201070ba:	a089                	j	201070fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
201070bc:	fe842683          	lw	a3,-24(s0)
201070c0:	fd842703          	lw	a4,-40(s0)
201070c4:	87ba                	mv	a5,a4
201070c6:	0786                	sll	a5,a5,0x1
201070c8:	97ba                	add	a5,a5,a4
201070ca:	078e                	sll	a5,a5,0x3
201070cc:	97b6                	add	a5,a5,a3
201070ce:	20106737          	lui	a4,0x20106
201070d2:	e0870713          	add	a4,a4,-504 # 20105e08 <__metal_default_interrupt_handler>
201070d6:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
201070da:	fe842683          	lw	a3,-24(s0)
201070de:	fd842703          	lw	a4,-40(s0)
201070e2:	87ba                	mv	a5,a4
201070e4:	0786                	sll	a5,a5,0x1
201070e6:	97ba                	add	a5,a5,a4
201070e8:	078e                	sll	a5,a5,0x3
201070ea:	97b6                	add	a5,a5,a3
201070ec:	fd042703          	lw	a4,-48(s0)
201070f0:	08e7aa23          	sw	a4,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
201070f4:	a021                	j	201070fc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
201070f6:	57d1                	li	a5,-12
201070f8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
201070fc:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:549
}
20107100:	853e                	mv	a0,a5
20107102:	50b2                	lw	ra,44(sp)
20107104:	5422                	lw	s0,40(sp)
20107106:	6145                	add	sp,sp,48
20107108:	8082                	ret

2010710a <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
2010710a:	1101                	add	sp,sp,-32
2010710c:	ce06                	sw	ra,28(sp)
2010710e:	cc22                	sw	s0,24(sp)
20107110:	1000                	add	s0,sp,32
20107112:	fea42623          	sw	a0,-20(s0)
20107116:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
2010711a:	fe842783          	lw	a5,-24(s0)
2010711e:	4605                	li	a2,1
20107120:	85be                	mv	a1,a5
20107122:	fec42503          	lw	a0,-20(s0)
20107126:	c15ff0ef          	jal	20106d3a <__metal_local_interrupt_enable>
2010712a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:554
}
2010712c:	853e                	mv	a0,a5
2010712e:	40f2                	lw	ra,28(sp)
20107130:	4462                	lw	s0,24(sp)
20107132:	6105                	add	sp,sp,32
20107134:	8082                	ret

20107136 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20107136:	1101                	add	sp,sp,-32
20107138:	ce06                	sw	ra,28(sp)
2010713a:	cc22                	sw	s0,24(sp)
2010713c:	1000                	add	s0,sp,32
2010713e:	fea42623          	sw	a0,-20(s0)
20107142:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20107146:	fe842783          	lw	a5,-24(s0)
2010714a:	4601                	li	a2,0
2010714c:	85be                	mv	a1,a5
2010714e:	fec42503          	lw	a0,-20(s0)
20107152:	be9ff0ef          	jal	20106d3a <__metal_local_interrupt_enable>
20107156:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:559
}
20107158:	853e                	mv	a0,a5
2010715a:	40f2                	lw	ra,28(sp)
2010715c:	4462                	lw	s0,24(sp)
2010715e:	6105                	add	sp,sp,32
20107160:	8082                	ret

20107162 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20107162:	1101                	add	sp,sp,-32
20107164:	ce06                	sw	ra,28(sp)
20107166:	cc22                	sw	s0,24(sp)
20107168:	1000                	add	s0,sp,32
2010716a:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
2010716e:	a6dff0ef          	jal	20106bda <__metal_controller_interrupt_vector_mode>
20107172:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:593
}
20107174:	853e                	mv	a0,a5
20107176:	40f2                	lw	ra,28(sp)
20107178:	4462                	lw	s0,24(sp)
2010717a:	6105                	add	sp,sp,32
2010717c:	8082                	ret

2010717e <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2010717e:	1101                	add	sp,sp,-32
20107180:	ce06                	sw	ra,28(sp)
20107182:	cc22                	sw	s0,24(sp)
20107184:	1000                	add	s0,sp,32
20107186:	fea42623          	sw	a0,-20(s0)
2010718a:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
2010718e:	fe842783          	lw	a5,-24(s0)
20107192:	eb99                	bnez	a5,201071a8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20107194:	201067b7          	lui	a5,0x20106
20107198:	08078593          	add	a1,a5,128 # 20106080 <__metal_exception_handler>
2010719c:	fe842503          	lw	a0,-24(s0)
201071a0:	a93ff0ef          	jal	20106c32 <__metal_controller_interrupt_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
201071a4:	4781                	li	a5,0
201071a6:	a00d                	j	201071c8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
201071a8:	fe842703          	lw	a4,-24(s0)
201071ac:	4785                	li	a5,1
201071ae:	00f71c63          	bne	a4,a5,201071c6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
201071b2:	2010a7b7          	lui	a5,0x2010a
201071b6:	d0078593          	add	a1,a5,-768 # 20109d00 <__metal_vector_table>
201071ba:	fe842503          	lw	a0,-24(s0)
201071be:	a75ff0ef          	jal	20106c32 <__metal_controller_interrupt_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
201071c2:	4781                	li	a5,0
201071c4:	a011                	j	201071c8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
201071c6:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:609
}
201071c8:	853e                	mv	a0,a5
201071ca:	40f2                	lw	ra,28(sp)
201071cc:	4462                	lw	s0,24(sp)
201071ce:	6105                	add	sp,sp,32
201071d0:	8082                	ret

201071d2 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
201071d2:	1101                	add	sp,sp,-32
201071d4:	ce22                	sw	s0,28(sp)
201071d6:	1000                	add	s0,sp,32
201071d8:	fea42623          	sw	a0,-20(s0)
201071dc:	feb42423          	sw	a1,-24(s0)
201071e0:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
201071e4:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:616
}
201071e6:	853e                	mv	a0,a5
201071e8:	4472                	lw	s0,28(sp)
201071ea:	6105                	add	sp,sp,32
201071ec:	8082                	ret

201071ee <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
201071ee:	7139                	add	sp,sp,-64
201071f0:	de22                	sw	s0,60(sp)
201071f2:	0080                	add	s0,sp,64
201071f4:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
201071f8:	4501                	li	a0,0
201071fa:	4581                	li	a1,0
201071fc:	fea42423          	sw	a0,-24(s0)
20107200:	feb42623          	sw	a1,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:627

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20107204:	b80025f3          	csrr	a1,mcycleh
20107208:	feb42223          	sw	a1,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:628
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
2010720c:	b00025f3          	csrr	a1,mcycle
20107210:	feb42023          	sw	a1,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:629
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20107214:	b80025f3          	csrr	a1,mcycleh
20107218:	fcb42e23          	sw	a1,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
2010721c:	fe442503          	lw	a0,-28(s0)
20107220:	fdc42583          	lw	a1,-36(s0)
20107224:	feb510e3          	bne	a0,a1,20107204 <__metal_driver_cpu_mcycle_get+0x16>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20107228:	fe442583          	lw	a1,-28(s0)
2010722c:	882e                	mv	a6,a1
2010722e:	4881                	li	a7,0
20107230:	00081793          	sll	a5,a6,0x0
20107234:	4701                	li	a4,0
20107236:	fe042583          	lw	a1,-32(s0)
2010723a:	862e                	mv	a2,a1
2010723c:	4681                	li	a3,0
2010723e:	00c765b3          	or	a1,a4,a2
20107242:	feb42423          	sw	a1,-24(s0)
20107246:	8fd5                	or	a5,a5,a3
20107248:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
2010724c:	fe842703          	lw	a4,-24(s0)
20107250:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:640
}
20107254:	853a                	mv	a0,a4
20107256:	85be                	mv	a1,a5
20107258:	5472                	lw	s0,60(sp)
2010725a:	6121                	add	sp,sp,64
2010725c:	8082                	ret

2010725e <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
2010725e:	7179                	add	sp,sp,-48
20107260:	d606                	sw	ra,44(sp)
20107262:	d422                	sw	s0,40(sp)
20107264:	d24a                	sw	s2,36(sp)
20107266:	d04e                	sw	s3,32(sp)
20107268:	1800                	add	s0,sp,48
2010726a:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
2010726e:	fdc42783          	lw	a5,-36(s0)
20107272:	e781                	bnez	a5,2010727a <__metal_driver_cpu_timebase_get+0x1c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20107274:	4901                	li	s2,0
20107276:	4981                	li	s3,0
20107278:	a821                	j	20107290 <__metal_driver_cpu_timebase_get+0x32>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
2010727a:	fdc42503          	lw	a0,-36(s0)
2010727e:	98dfe0ef          	jal	20105c0a <__metal_driver_cpu_timebase>
20107282:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20107286:	fec42783          	lw	a5,-20(s0)
2010728a:	893e                	mv	s2,a5
2010728c:	87fd                	sra	a5,a5,0x1f
2010728e:	89be                	mv	s3,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:650
}
20107290:	874a                	mv	a4,s2
20107292:	87ce                	mv	a5,s3
20107294:	853a                	mv	a0,a4
20107296:	85be                	mv	a1,a5
20107298:	50b2                	lw	ra,44(sp)
2010729a:	5422                	lw	s0,40(sp)
2010729c:	5912                	lw	s2,36(sp)
2010729e:	5982                	lw	s3,32(sp)
201072a0:	6145                	add	sp,sp,48
201072a2:	8082                	ret

201072a4 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
201072a4:	7179                	add	sp,sp,-48
201072a6:	d606                	sw	ra,44(sp)
201072a8:	d422                	sw	s0,40(sp)
201072aa:	1800                	add	s0,sp,48
201072ac:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
201072b0:	4781                	li	a5,0
201072b2:	4801                	li	a6,0
201072b4:	fef42023          	sw	a5,-32(s0)
201072b8:	ff042223          	sw	a6,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
201072bc:	fdc42503          	lw	a0,-36(s0)
201072c0:	975fe0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201072c4:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
201072c8:	fec42783          	lw	a5,-20(s0)
201072cc:	c78d                	beqz	a5,201072f6 <__metal_driver_cpu_mtime_get+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
201072ce:	fec42783          	lw	a5,-20(s0)
201072d2:	13c7a783          	lw	a5,316(a5)
201072d6:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
201072da:	fe842783          	lw	a5,-24(s0)
201072de:	cf81                	beqz	a5,201072f6 <__metal_driver_cpu_mtime_get+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
201072e0:	fe842783          	lw	a5,-24(s0)
201072e4:	439c                	lw	a5,0(a5)
201072e6:	47fc                	lw	a5,76(a5)
201072e8:	fe040713          	add	a4,s0,-32
201072ec:	863a                	mv	a2,a4
201072ee:	4585                	li	a1,1
201072f0:	fe842503          	lw	a0,-24(s0)
201072f4:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
201072f6:	fe042703          	lw	a4,-32(s0)
201072fa:	fe442783          	lw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:667
}
201072fe:	853a                	mv	a0,a4
20107300:	85be                	mv	a1,a5
20107302:	50b2                	lw	ra,44(sp)
20107304:	5422                	lw	s0,40(sp)
20107306:	6145                	add	sp,sp,48
20107308:	8082                	ret

2010730a <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
2010730a:	7179                	add	sp,sp,-48
2010730c:	d606                	sw	ra,44(sp)
2010730e:	d422                	sw	s0,40(sp)
20107310:	d226                	sw	s1,36(sp)
20107312:	1800                	add	s0,sp,48
20107314:	fca42e23          	sw	a0,-36(s0)
20107318:	fcb42823          	sw	a1,-48(s0)
2010731c:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20107320:	57fd                	li	a5,-1
20107322:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20107326:	fdc42503          	lw	a0,-36(s0)
2010732a:	90bfe0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
2010732e:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20107332:	fe842783          	lw	a5,-24(s0)
20107336:	cf8d                	beqz	a5,20107370 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20107338:	fe842783          	lw	a5,-24(s0)
2010733c:	13c7a783          	lw	a5,316(a5)
20107340:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20107344:	fe442783          	lw	a5,-28(s0)
20107348:	c785                	beqz	a5,20107370 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
2010734a:	fe442783          	lw	a5,-28(s0)
2010734e:	439c                	lw	a5,0(a5)
20107350:	4ba4                	lw	s1,80(a5)
20107352:	fdc42503          	lw	a0,-36(s0)
20107356:	891fe0ef          	jal	20105be6 <__metal_driver_cpu_hartid>
2010735a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:680 (discriminator 1)
2010735c:	fd042603          	lw	a2,-48(s0)
20107360:	fd442683          	lw	a3,-44(s0)
20107364:	85be                	mv	a1,a5
20107366:	fe442503          	lw	a0,-28(s0)
2010736a:	9482                	jalr	s1
2010736c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20107370:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:685
}
20107374:	853e                	mv	a0,a5
20107376:	50b2                	lw	ra,44(sp)
20107378:	5422                	lw	s0,40(sp)
2010737a:	5492                	lw	s1,36(sp)
2010737c:	6145                	add	sp,sp,48
2010737e:	8082                	ret

20107380 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20107380:	1101                	add	sp,sp,-32
20107382:	ce22                	sw	s0,28(sp)
20107384:	1000                	add	s0,sp,32
20107386:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2010738a:	800017b7          	lui	a5,0x80001
2010738e:	a8078793          	add	a5,a5,-1408 # 80000a80 <__metal_dt_clint_2000000>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20107392:	853e                	mv	a0,a5
20107394:	4472                	lw	s0,28(sp)
20107396:	6105                	add	sp,sp,32
20107398:	8082                	ret

2010739a <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
2010739a:	1101                	add	sp,sp,-32
2010739c:	ce22                	sw	s0,28(sp)
2010739e:	1000                	add	s0,sp,32
201073a0:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
201073a4:	479d                	li	a5,7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:703
}
201073a6:	853e                	mv	a0,a5
201073a8:	4472                	lw	s0,28(sp)
201073aa:	6105                	add	sp,sp,32
201073ac:	8082                	ret

201073ae <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
201073ae:	1101                	add	sp,sp,-32
201073b0:	ce22                	sw	s0,28(sp)
201073b2:	1000                	add	s0,sp,32
201073b4:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
201073b8:	800017b7          	lui	a5,0x80001
201073bc:	a8078793          	add	a5,a5,-1408 # 80000a80 <__metal_dt_clint_2000000>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
201073c0:	853e                	mv	a0,a5
201073c2:	4472                	lw	s0,28(sp)
201073c4:	6105                	add	sp,sp,32
201073c6:	8082                	ret

201073c8 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
201073c8:	1101                	add	sp,sp,-32
201073ca:	ce22                	sw	s0,28(sp)
201073cc:	1000                	add	s0,sp,32
201073ce:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
201073d2:	478d                	li	a5,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:721
}
201073d4:	853e                	mv	a0,a5
201073d6:	4472                	lw	s0,28(sp)
201073d8:	6105                	add	sp,sp,32
201073da:	8082                	ret

201073dc <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
201073dc:	7179                	add	sp,sp,-48
201073de:	d606                	sw	ra,44(sp)
201073e0:	d422                	sw	s0,40(sp)
201073e2:	1800                	add	s0,sp,48
201073e4:	fca42e23          	sw	a0,-36(s0)
201073e8:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
201073ec:	57fd                	li	a5,-1
201073ee:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
201073f2:	fdc42503          	lw	a0,-36(s0)
201073f6:	83ffe0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201073fa:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
201073fe:	fe842783          	lw	a5,-24(s0)
20107402:	c79d                	beqz	a5,20107430 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20107404:	fe842783          	lw	a5,-24(s0)
20107408:	0dc7a783          	lw	a5,220(a5)
2010740c:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20107410:	fe442783          	lw	a5,-28(s0)
20107414:	cf91                	beqz	a5,20107430 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20107416:	fe442783          	lw	a5,-28(s0)
2010741a:	439c                	lw	a5,0(a5)
2010741c:	47fc                	lw	a5,76(a5)
2010741e:	fd840713          	add	a4,s0,-40
20107422:	863a                	mv	a2,a4
20107424:	458d                	li	a1,3
20107426:	fe442503          	lw	a0,-28(s0)
2010742a:	9782                	jalr	a5
2010742c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20107430:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:738
}
20107434:	853e                	mv	a0,a5
20107436:	50b2                	lw	ra,44(sp)
20107438:	5422                	lw	s0,40(sp)
2010743a:	6145                	add	sp,sp,48
2010743c:	8082                	ret

2010743e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
2010743e:	7179                	add	sp,sp,-48
20107440:	d606                	sw	ra,44(sp)
20107442:	d422                	sw	s0,40(sp)
20107444:	1800                	add	s0,sp,48
20107446:	fca42e23          	sw	a0,-36(s0)
2010744a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
2010744e:	57fd                	li	a5,-1
20107450:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20107454:	fdc42503          	lw	a0,-36(s0)
20107458:	fdcfe0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
2010745c:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20107460:	fe842783          	lw	a5,-24(s0)
20107464:	c79d                	beqz	a5,20107492 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20107466:	fe842783          	lw	a5,-24(s0)
2010746a:	0dc7a783          	lw	a5,220(a5)
2010746e:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20107472:	fe442783          	lw	a5,-28(s0)
20107476:	cf91                	beqz	a5,20107492 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20107478:	fe442783          	lw	a5,-28(s0)
2010747c:	439c                	lw	a5,0(a5)
2010747e:	47fc                	lw	a5,76(a5)
20107480:	fd840713          	add	a4,s0,-40
20107484:	863a                	mv	a2,a4
20107486:	4589                	li	a1,2
20107488:	fe442503          	lw	a0,-28(s0)
2010748c:	9782                	jalr	a5
2010748e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20107492:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:755
}
20107496:	853e                	mv	a0,a5
20107498:	50b2                	lw	ra,44(sp)
2010749a:	5422                	lw	s0,40(sp)
2010749c:	6145                	add	sp,sp,48
2010749e:	8082                	ret

201074a0 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
201074a0:	7179                	add	sp,sp,-48
201074a2:	d606                	sw	ra,44(sp)
201074a4:	d422                	sw	s0,40(sp)
201074a6:	1800                	add	s0,sp,48
201074a8:	fca42e23          	sw	a0,-36(s0)
201074ac:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
201074b0:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
201074b4:	fdc42503          	lw	a0,-36(s0)
201074b8:	f7cfe0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
201074bc:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
201074c0:	fe842783          	lw	a5,-24(s0)
201074c4:	c79d                	beqz	a5,201074f2 <__metal_driver_cpu_get_msip+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
201074c6:	fe842783          	lw	a5,-24(s0)
201074ca:	0dc7a783          	lw	a5,220(a5)
201074ce:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
201074d2:	fe442783          	lw	a5,-28(s0)
201074d6:	cf91                	beqz	a5,201074f2 <__metal_driver_cpu_get_msip+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
201074d8:	fe442783          	lw	a5,-28(s0)
201074dc:	439c                	lw	a5,0(a5)
201074de:	47fc                	lw	a5,76(a5)
201074e0:	fd840713          	add	a4,s0,-40
201074e4:	863a                	mv	a2,a4
201074e6:	4591                	li	a1,4
201074e8:	fe442503          	lw	a0,-28(s0)
201074ec:	9782                	jalr	a5
201074ee:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
201074f2:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:772
}
201074f6:	853e                	mv	a0,a5
201074f8:	50b2                	lw	ra,44(sp)
201074fa:	5422                	lw	s0,40(sp)
201074fc:	6145                	add	sp,sp,48
201074fe:	8082                	ret

20107500 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20107500:	1101                	add	sp,sp,-32
20107502:	ce06                	sw	ra,28(sp)
20107504:	cc22                	sw	s0,24(sp)
20107506:	1000                	add	s0,sp,32
20107508:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2010750c:	fec42503          	lw	a0,-20(s0)
20107510:	f24fe0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
20107514:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:777
}
20107516:	853e                	mv	a0,a5
20107518:	40f2                	lw	ra,28(sp)
2010751a:	4462                	lw	s0,24(sp)
2010751c:	6105                	add	sp,sp,32
2010751e:	8082                	ret

20107520 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20107520:	7179                	add	sp,sp,-48
20107522:	d606                	sw	ra,44(sp)
20107524:	d422                	sw	s0,40(sp)
20107526:	1800                	add	s0,sp,48
20107528:	fca42e23          	sw	a0,-36(s0)
2010752c:	fcb42c23          	sw	a1,-40(s0)
20107530:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20107534:	fdc42503          	lw	a0,-36(s0)
20107538:	efcfe0ef          	jal	20105c34 <__metal_driver_cpu_interrupt_controller>
2010753c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20107540:	fec42783          	lw	a5,-20(s0)
20107544:	cb99                	beqz	a5,2010755a <__metal_driver_cpu_exception_register+0x3a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20107546:	fd442603          	lw	a2,-44(s0)
2010754a:	fd842583          	lw	a1,-40(s0)
2010754e:	fec42503          	lw	a0,-20(s0)
20107552:	8a5ff0ef          	jal	20106df6 <__metal_exception_register>
20107556:	87aa                	mv	a5,a0
20107558:	a011                	j	2010755c <__metal_driver_cpu_exception_register+0x3c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
2010755a:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:808
}
2010755c:	853e                	mv	a0,a5
2010755e:	50b2                	lw	ra,44(sp)
20107560:	5422                	lw	s0,40(sp)
20107562:	6145                	add	sp,sp,48
20107564:	8082                	ret

20107566 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20107566:	1101                	add	sp,sp,-32
20107568:	ce22                	sw	s0,28(sp)
2010756a:	1000                	add	s0,sp,32
2010756c:	fea42623          	sw	a0,-20(s0)
20107570:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20107574:	fe842783          	lw	a5,-24(s0)
20107578:	0007d783          	lhu	a5,0(a5)
2010757c:	0037f713          	and	a4,a5,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20107580:	478d                	li	a5,3
20107582:	00f71463          	bne	a4,a5,2010758a <__metal_driver_cpu_get_instruction_length+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20107586:	4791                	li	a5,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820
20107588:	a011                	j	2010758c <__metal_driver_cpu_get_instruction_length+0x26>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2010758a:	4789                	li	a5,2
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:821
}
2010758c:	853e                	mv	a0,a5
2010758e:	4472                	lw	s0,28(sp)
20107590:	6105                	add	sp,sp,32
20107592:	8082                	ret

20107594 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20107594:	7179                	add	sp,sp,-48
20107596:	d622                	sw	s0,44(sp)
20107598:	1800                	add	s0,sp,48
2010759a:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2010759e:	341027f3          	csrr	a5,mepc
201075a2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
201075a6:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:827
}
201075aa:	853e                	mv	a0,a5
201075ac:	5432                	lw	s0,44(sp)
201075ae:	6145                	add	sp,sp,48
201075b0:	8082                	ret

201075b2 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
201075b2:	1101                	add	sp,sp,-32
201075b4:	ce22                	sw	s0,28(sp)
201075b6:	1000                	add	s0,sp,32
201075b8:	fea42623          	sw	a0,-20(s0)
201075bc:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
201075c0:	fe842783          	lw	a5,-24(s0)
201075c4:	34179073          	csrw	mepc,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
201075c8:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:832
}
201075ca:	853e                	mv	a0,a5
201075cc:	4472                	lw	s0,28(sp)
201075ce:	6105                	add	sp,sp,32
201075d0:	8082                	ret

201075d2 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
201075d2:	1101                	add	sp,sp,-32
201075d4:	ce06                	sw	ra,28(sp)
201075d6:	cc22                	sw	s0,24(sp)
201075d8:	1000                	add	s0,sp,32
201075da:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
201075de:	fec42503          	lw	a0,-20(s0)
201075e2:	e7cfe0ef          	jal	20105c5e <__metal_driver_cpu_buserror>
201075e6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:836
}
201075e8:	853e                	mv	a0,a5
201075ea:	40f2                	lw	ra,28(sp)
201075ec:	4462                	lw	s0,24(sp)
201075ee:	6105                	add	sp,sp,32
201075f0:	8082                	ret

201075f2 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:320



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
201075f2:	1101                	add	sp,sp,-32
201075f4:	ce22                	sw	s0,28(sp)
201075f6:	1000                	add	s0,sp,32
201075f8:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:321
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
201075fc:	fec42703          	lw	a4,-20(s0)
20107600:	800007b7          	lui	a5,0x80000
20107604:	45878793          	add	a5,a5,1112 # 80000458 <__metal_dt_interrupt_controller_c000000>
20107608:	00f71563          	bne	a4,a5,20107612 <__metal_driver_sifive_plic0_control_base+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:322
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2010760c:	0c0007b7          	lui	a5,0xc000
20107610:	a011                	j	20107614 <__metal_driver_sifive_plic0_control_base+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:325
	}
	else {
		return 0;
20107612:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:327
	}
}
20107614:	853e                	mv	a0,a5
20107616:	4472                	lw	s0,28(sp)
20107618:	6105                	add	sp,sp,32
2010761a:	8082                	ret

2010761c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:340
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2010761c:	1101                	add	sp,sp,-32
2010761e:	ce22                	sw	s0,28(sp)
20107620:	1000                	add	s0,sp,32
20107622:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:341
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20107626:	fec42703          	lw	a4,-20(s0)
2010762a:	800007b7          	lui	a5,0x80000
2010762e:	45878793          	add	a5,a5,1112 # 80000458 <__metal_dt_interrupt_controller_c000000>
20107632:	00f71563          	bne	a4,a5,2010763c <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:342
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20107636:	03500793          	li	a5,53
2010763a:	a011                	j	2010763e <__metal_driver_sifive_plic0_num_interrupts+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:345
	}
	else {
		return 0;
2010763c:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:347
	}
}
2010763e:	853e                	mv	a0,a5
20107640:	4472                	lw	s0,28(sp)
20107642:	6105                	add	sp,sp,32
20107644:	8082                	ret

20107646 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:350

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20107646:	1101                	add	sp,sp,-32
20107648:	ce22                	sw	s0,28(sp)
2010764a:	1000                	add	s0,sp,32
2010764c:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:351
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20107650:	fec42703          	lw	a4,-20(s0)
20107654:	800007b7          	lui	a5,0x80000
20107658:	45878793          	add	a5,a5,1112 # 80000458 <__metal_dt_interrupt_controller_c000000>
2010765c:	00f71463          	bne	a4,a5,20107664 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:352
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20107660:	479d                	li	a5,7
20107662:	a011                	j	20107666 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:355
	}
	else {
		return 0;
20107664:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:357
	}
}
20107666:	853e                	mv	a0,a5
20107668:	4472                	lw	s0,28(sp)
2010766a:	6105                	add	sp,sp,32
2010766c:	8082                	ret

2010766e <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:360

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2010766e:	1101                	add	sp,sp,-32
20107670:	ce22                	sw	s0,28(sp)
20107672:	1000                	add	s0,sp,32
20107674:	fea42623          	sw	a0,-20(s0)
20107678:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:361
	if (idx == 0) {
2010767c:	fe842783          	lw	a5,-24(s0)
20107680:	e791                	bnez	a5,2010768c <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:362
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20107682:	800007b7          	lui	a5,0x80000
20107686:	08878793          	add	a5,a5,136 # 80000088 <__metal_dt_cpu_0_interrupt_controller>
2010768a:	a011                	j	2010768e <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:365
	}
	else {
		return NULL;
2010768c:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:367
	}
}
2010768e:	853e                	mv	a0,a5
20107690:	4472                	lw	s0,28(sp)
20107692:	6105                	add	sp,sp,32
20107694:	8082                	ret

20107696 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:370

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20107696:	1101                	add	sp,sp,-32
20107698:	ce22                	sw	s0,28(sp)
2010769a:	1000                	add	s0,sp,32
2010769c:	fea42623          	sw	a0,-20(s0)
201076a0:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:371
	if (idx == 0) {
201076a4:	fe842783          	lw	a5,-24(s0)
201076a8:	e399                	bnez	a5,201076ae <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:372
		return 11;
201076aa:	47ad                	li	a5,11
201076ac:	a011                	j	201076b0 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:375
	}
	else {
		return 0;
201076ae:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:377
	}
}
201076b0:	853e                	mv	a0,a5
201076b2:	4472                	lw	s0,28(sp)
201076b4:	6105                	add	sp,sp,32
201076b6:	8082                	ret

201076b8 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:380

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
201076b8:	1101                	add	sp,sp,-32
201076ba:	ce22                	sw	s0,28(sp)
201076bc:	1000                	add	s0,sp,32
201076be:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:381
	if (hartid == 0) {
201076c2:	fec42783          	lw	a5,-20(s0)
201076c6:	e399                	bnez	a5,201076cc <__metal_driver_sifive_plic0_context_ids+0x14>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:382
		return 0;
201076c8:	4781                	li	a5,0
201076ca:	a011                	j	201076ce <__metal_driver_sifive_plic0_context_ids+0x16>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:385
	}
	else {
		return -1;
201076cc:	57fd                	li	a5,-1
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:387
	}
}
201076ce:	853e                	mv	a0,a5
201076d0:	4472                	lw	s0,28(sp)
201076d2:	6105                	add	sp,sp,32
201076d4:	8082                	ret

201076d6 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
201076d6:	7179                	add	sp,sp,-48
201076d8:	d606                	sw	ra,44(sp)
201076da:	d422                	sw	s0,40(sp)
201076dc:	1800                	add	s0,sp,48
201076de:	fca42e23          	sw	a0,-36(s0)
201076e2:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
201076e6:	fdc42503          	lw	a0,-36(s0)
201076ea:	3721                	jal	201075f2 <__metal_driver_sifive_plic0_control_base>
201076ec:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
201076f0:	fd842783          	lw	a5,-40(s0)
201076f4:	00c79713          	sll	a4,a5,0xc
201076f8:	fec42783          	lw	a5,-20(s0)
201076fc:	973e                	add	a4,a4,a5
201076fe:	002007b7          	lui	a5,0x200
20107702:	0791                	add	a5,a5,4 # 200004 <__heap_size+0x1ff804>
20107704:	97ba                	add	a5,a5,a4
20107706:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20107708:	853e                	mv	a0,a5
2010770a:	50b2                	lw	ra,44(sp)
2010770c:	5422                	lw	s0,40(sp)
2010770e:	6145                	add	sp,sp,48
20107710:	8082                	ret

20107712 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20107712:	7179                	add	sp,sp,-48
20107714:	d606                	sw	ra,44(sp)
20107716:	d422                	sw	s0,40(sp)
20107718:	1800                	add	s0,sp,48
2010771a:	fca42e23          	sw	a0,-36(s0)
2010771e:	fcb42c23          	sw	a1,-40(s0)
20107722:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20107726:	fdc42503          	lw	a0,-36(s0)
2010772a:	35e1                	jal	201075f2 <__metal_driver_sifive_plic0_control_base>
2010772c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20107730:	fd842783          	lw	a5,-40(s0)
20107734:	00c79713          	sll	a4,a5,0xc
20107738:	fec42783          	lw	a5,-20(s0)
2010773c:	973e                	add	a4,a4,a5
2010773e:	002007b7          	lui	a5,0x200
20107742:	0791                	add	a5,a5,4 # 200004 <__heap_size+0x1ff804>
20107744:	97ba                	add	a5,a5,a4
20107746:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20107748:	fd442783          	lw	a5,-44(s0)
2010774c:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:35
}
2010774e:	0001                	nop
20107750:	50b2                	lw	ra,44(sp)
20107752:	5422                	lw	s0,40(sp)
20107754:	6145                	add	sp,sp,48
20107756:	8082                	ret

20107758 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20107758:	7179                	add	sp,sp,-48
2010775a:	d606                	sw	ra,44(sp)
2010775c:	d422                	sw	s0,40(sp)
2010775e:	1800                	add	s0,sp,48
20107760:	fca42e23          	sw	a0,-36(s0)
20107764:	fcb42c23          	sw	a1,-40(s0)
20107768:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2010776c:	fdc42503          	lw	a0,-36(s0)
20107770:	3549                	jal	201075f2 <__metal_driver_sifive_plic0_control_base>
20107772:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20107776:	fd842783          	lw	a5,-40(s0)
2010777a:	00c79713          	sll	a4,a5,0xc
2010777e:	fec42783          	lw	a5,-20(s0)
20107782:	973e                	add	a4,a4,a5
20107784:	002007b7          	lui	a5,0x200
20107788:	97ba                	add	a5,a5,a4
2010778a:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2010778c:	fd442783          	lw	a5,-44(s0)
20107790:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20107792:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:46
}
20107794:	853e                	mv	a0,a5
20107796:	50b2                	lw	ra,44(sp)
20107798:	5422                	lw	s0,40(sp)
2010779a:	6145                	add	sp,sp,48
2010779c:	8082                	ret

2010779e <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2010779e:	7179                	add	sp,sp,-48
201077a0:	d606                	sw	ra,44(sp)
201077a2:	d422                	sw	s0,40(sp)
201077a4:	1800                	add	s0,sp,48
201077a6:	fca42e23          	sw	a0,-36(s0)
201077aa:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
201077ae:	fdc42503          	lw	a0,-36(s0)
201077b2:	3581                	jal	201075f2 <__metal_driver_sifive_plic0_control_base>
201077b4:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
201077b8:	fd842783          	lw	a5,-40(s0)
201077bc:	00c79713          	sll	a4,a5,0xc
201077c0:	fec42783          	lw	a5,-20(s0)
201077c4:	973e                	add	a4,a4,a5
201077c6:	002007b7          	lui	a5,0x200
201077ca:	97ba                	add	a5,a5,a4
201077cc:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
201077ce:	853e                	mv	a0,a5
201077d0:	50b2                	lw	ra,44(sp)
201077d2:	5422                	lw	s0,40(sp)
201077d4:	6145                	add	sp,sp,48
201077d6:	8082                	ret

201077d8 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
201077d8:	7179                	add	sp,sp,-48
201077da:	d606                	sw	ra,44(sp)
201077dc:	d422                	sw	s0,40(sp)
201077de:	1800                	add	s0,sp,48
201077e0:	fca42e23          	sw	a0,-36(s0)
201077e4:	fcb42c23          	sw	a1,-40(s0)
201077e8:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
201077ec:	fdc42503          	lw	a0,-36(s0)
201077f0:	3509                	jal	201075f2 <__metal_driver_sifive_plic0_control_base>
201077f2:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
201077f6:	fdc42503          	lw	a0,-36(s0)
201077fa:	35b1                	jal	20107646 <__metal_driver_sifive_plic0_max_priority>
201077fc:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:62 (discriminator 1)
201077fe:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20107802:	fe842783          	lw	a5,-24(s0)
20107806:	c785                	beqz	a5,2010782e <__metal_driver_riscv_plic0_set_priority+0x56>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20107808:	fd442703          	lw	a4,-44(s0)
2010780c:	fe842783          	lw	a5,-24(s0)
20107810:	00f77f63          	bgeu	a4,a5,2010782e <__metal_driver_riscv_plic0_set_priority+0x56>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20107814:	fd842783          	lw	a5,-40(s0)
20107818:	00279713          	sll	a4,a5,0x2
2010781c:	fec42783          	lw	a5,-20(s0)
20107820:	97ba                	add	a5,a5,a4
20107822:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20107824:	fd442783          	lw	a5,-44(s0)
20107828:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
2010782a:	4781                	li	a5,0
2010782c:	a011                	j	20107830 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
2010782e:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:72
}
20107830:	853e                	mv	a0,a5
20107832:	50b2                	lw	ra,44(sp)
20107834:	5422                	lw	s0,40(sp)
20107836:	6145                	add	sp,sp,48
20107838:	8082                	ret

2010783a <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2010783a:	7179                	add	sp,sp,-48
2010783c:	d606                	sw	ra,44(sp)
2010783e:	d422                	sw	s0,40(sp)
20107840:	1800                	add	s0,sp,48
20107842:	fca42e23          	sw	a0,-36(s0)
20107846:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2010784a:	fdc42503          	lw	a0,-36(s0)
2010784e:	3355                	jal	201075f2 <__metal_driver_sifive_plic0_control_base>
20107850:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20107854:	fd842783          	lw	a5,-40(s0)
20107858:	00279713          	sll	a4,a5,0x2
2010785c:	fec42783          	lw	a5,-20(s0)
20107860:	97ba                	add	a5,a5,a4
20107862:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20107864:	853e                	mv	a0,a5
20107866:	50b2                	lw	ra,44(sp)
20107868:	5422                	lw	s0,40(sp)
2010786a:	6145                	add	sp,sp,48
2010786c:	8082                	ret

2010786e <__metal_plic0_enable>:
__metal_plic0_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2010786e:	7179                	add	sp,sp,-48
20107870:	d606                	sw	ra,44(sp)
20107872:	d422                	sw	s0,40(sp)
20107874:	1800                	add	s0,sp,48
20107876:	fca42e23          	sw	a0,-36(s0)
2010787a:	fcb42c23          	sw	a1,-40(s0)
2010787e:	fcc42a23          	sw	a2,-44(s0)
20107882:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20107886:	fdc42503          	lw	a0,-36(s0)
2010788a:	d69ff0ef          	jal	201075f2 <__metal_driver_sifive_plic0_control_base>
2010788e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20107892:	fd842783          	lw	a5,-40(s0)
20107896:	00779713          	sll	a4,a5,0x7
2010789a:	fec42783          	lw	a5,-20(s0)
2010789e:	97ba                	add	a5,a5,a4
201078a0:	fd442703          	lw	a4,-44(s0)
201078a4:	8715                	sra	a4,a4,0x5
201078a6:	070a                	sll	a4,a4,0x2
201078a8:	973e                	add	a4,a4,a5
201078aa:	6789                	lui	a5,0x2
201078ac:	97ba                	add	a5,a5,a4
201078ae:	439c                	lw	a5,0(a5)
201078b0:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
201078b4:	fd042783          	lw	a5,-48(s0)
201078b8:	cf81                	beqz	a5,201078d0 <__metal_plic0_enable+0x62>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:99
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
201078ba:	fd442783          	lw	a5,-44(s0)
201078be:	8bfd                	and	a5,a5,31
201078c0:	4705                	li	a4,1
201078c2:	00f717b3          	sll	a5,a4,a5
201078c6:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
201078c8:	fe842783          	lw	a5,-24(s0)
201078cc:	8fd9                	or	a5,a5,a4
201078ce:	a829                	j	201078e8 <__metal_plic0_enable+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
201078d0:	fd442783          	lw	a5,-44(s0)
201078d4:	8bfd                	and	a5,a5,31
201078d6:	4705                	li	a4,1
201078d8:	00f717b3          	sll	a5,a4,a5
201078dc:	fff7c793          	not	a5,a5
201078e0:	873e                	mv	a4,a5
201078e2:	fe842783          	lw	a5,-24(s0)
201078e6:	8ff9                	and	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
201078e8:	fd842703          	lw	a4,-40(s0)
201078ec:	00771693          	sll	a3,a4,0x7
201078f0:	fec42703          	lw	a4,-20(s0)
201078f4:	9736                	add	a4,a4,a3
201078f6:	fd442683          	lw	a3,-44(s0)
201078fa:	8695                	sra	a3,a3,0x5
201078fc:	068a                	sll	a3,a3,0x2
201078fe:	96ba                	add	a3,a3,a4
20107900:	6709                	lui	a4,0x2
20107902:	9736                	add	a4,a4,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20107904:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20107906:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:103
}
20107908:	853e                	mv	a0,a5
2010790a:	50b2                	lw	ra,44(sp)
2010790c:	5422                	lw	s0,40(sp)
2010790e:	6145                	add	sp,sp,48
20107910:	8082                	ret

20107912 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20107912:	1101                	add	sp,sp,-32
20107914:	ce06                	sw	ra,28(sp)
20107916:	cc22                	sw	s0,24(sp)
20107918:	1000                	add	s0,sp,32
2010791a:	fea42623          	sw	a0,-20(s0)
2010791e:	feb42423          	sw	a1,-24(s0)
20107922:	12c00513          	li	a0,300
20107926:	304020ef          	jal	20109c2a <metal_shutdown>

2010792a <__metal_plic0_handler>:
__metal_plic0_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
2010792a:	7179                	add	sp,sp,-48
2010792c:	d606                	sw	ra,44(sp)
2010792e:	d422                	sw	s0,40(sp)
20107930:	1800                	add	s0,sp,48
20107932:	fca42e23          	sw	a0,-36(s0)
20107936:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
2010793a:	fd842783          	lw	a5,-40(s0)
2010793e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20107942:	b70fe0ef          	jal	20105cb2 <__metal_myhart_id>
20107946:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:110 (discriminator 1)
20107948:	853e                	mv	a0,a5
2010794a:	d6fff0ef          	jal	201076b8 <__metal_driver_sifive_plic0_context_ids>
2010794e:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20107952:	fe842583          	lw	a1,-24(s0)
20107956:	fec42503          	lw	a0,-20(s0)
2010795a:	d7dff0ef          	jal	201076d6 <__metal_plic0_claim_interrupt>
2010795e:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20107962:	fec42503          	lw	a0,-20(s0)
20107966:	cb7ff0ef          	jal	2010761c <__metal_driver_sifive_plic0_num_interrupts>
2010796a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:112 (discriminator 1)
2010796c:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20107970:	fe442703          	lw	a4,-28(s0)
20107974:	fe042783          	lw	a5,-32(s0)
20107978:	04f77063          	bgeu	a4,a5,201079b8 <__metal_plic0_handler+0x8e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
2010797c:	fec42703          	lw	a4,-20(s0)
20107980:	fe442783          	lw	a5,-28(s0)
20107984:	078a                	sll	a5,a5,0x2
20107986:	97ba                	add	a5,a5,a4
20107988:	479c                	lw	a5,8(a5)
2010798a:	c79d                	beqz	a5,201079b8 <__metal_plic0_handler+0x8e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2010798c:	fec42703          	lw	a4,-20(s0)
20107990:	fe442783          	lw	a5,-28(s0)
20107994:	078a                	sll	a5,a5,0x2
20107996:	97ba                	add	a5,a5,a4
20107998:	4794                	lw	a3,8(a5)
2010799a:	fe442503          	lw	a0,-28(s0)
2010799e:	fec42603          	lw	a2,-20(s0)
201079a2:	fe442703          	lw	a4,-28(s0)
201079a6:	87ba                	mv	a5,a4
201079a8:	0786                	sll	a5,a5,0x1
201079aa:	97ba                	add	a5,a5,a4
201079ac:	078e                	sll	a5,a5,0x3
201079ae:	97b2                	add	a5,a5,a2
201079b0:	0f07a783          	lw	a5,240(a5) # 20f0 <__heap_size+0x18f0>
201079b4:	85be                	mv	a1,a5
201079b6:	9682                	jalr	a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
201079b8:	fe442603          	lw	a2,-28(s0)
201079bc:	fe842583          	lw	a1,-24(s0)
201079c0:	fec42503          	lw	a0,-20(s0)
201079c4:	d4fff0ef          	jal	20107712 <__metal_plic0_complete_interrupt>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:121
}
201079c8:	0001                	nop
201079ca:	50b2                	lw	ra,44(sp)
201079cc:	5422                	lw	s0,40(sp)
201079ce:	6145                	add	sp,sp,48
201079d0:	8082                	ret

201079d2 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
201079d2:	7139                	add	sp,sp,-64
201079d4:	de06                	sw	ra,60(sp)
201079d6:	dc22                	sw	s0,56(sp)
201079d8:	0080                	add	s0,sp,64
201079da:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
201079de:	fcc42783          	lw	a5,-52(s0)
201079e2:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
201079e6:	fe442783          	lw	a5,-28(s0)
201079ea:	43dc                	lw	a5,4(a5)
201079ec:	12079b63          	bnez	a5,20107b22 <__metal_driver_riscv_plic0_init+0x150>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
201079f0:	fe042623          	sw	zero,-20(s0)
201079f4:	aa39                	j	20107b12 <__metal_driver_riscv_plic0_init+0x140>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
201079f6:	fcc42503          	lw	a0,-52(s0)
201079fa:	c23ff0ef          	jal	2010761c <__metal_driver_sifive_plic0_num_interrupts>
201079fe:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20107a02:	fec42583          	lw	a1,-20(s0)
20107a06:	fcc42503          	lw	a0,-52(s0)
20107a0a:	c65ff0ef          	jal	2010766e <__metal_driver_sifive_plic0_interrupt_parents>
20107a0e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20107a12:	fec42583          	lw	a1,-20(s0)
20107a16:	fcc42503          	lw	a0,-52(s0)
20107a1a:	c7dff0ef          	jal	20107696 <__metal_driver_sifive_plic0_interrupt_lines>
20107a1e:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20107a22:	fdc42783          	lw	a5,-36(s0)
20107a26:	439c                	lw	a5,0(a5)
20107a28:	439c                	lw	a5,0(a5)
20107a2a:	fdc42503          	lw	a0,-36(s0)
20107a2e:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20107a30:	fe042423          	sw	zero,-24(s0)
20107a34:	a88d                	j	20107aa6 <__metal_driver_riscv_plic0_init+0xd4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20107a36:	4681                	li	a3,0
20107a38:	fe842603          	lw	a2,-24(s0)
20107a3c:	fec42583          	lw	a1,-20(s0)
20107a40:	fe442503          	lw	a0,-28(s0)
20107a44:	352d                	jal	2010786e <__metal_plic0_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20107a46:	fe842703          	lw	a4,-24(s0)
20107a4a:	fe042783          	lw	a5,-32(s0)
20107a4e:	04f75763          	bge	a4,a5,20107a9c <__metal_driver_riscv_plic0_init+0xca>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20107a52:	4601                	li	a2,0
20107a54:	fe842583          	lw	a1,-24(s0)
20107a58:	fcc42503          	lw	a0,-52(s0)
20107a5c:	d7dff0ef          	jal	201077d8 <__metal_driver_riscv_plic0_set_priority>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20107a60:	fe442703          	lw	a4,-28(s0)
20107a64:	fe842783          	lw	a5,-24(s0)
20107a68:	078a                	sll	a5,a5,0x2
20107a6a:	97ba                	add	a5,a5,a4
20107a6c:	0007a423          	sw	zero,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20107a70:	fe442683          	lw	a3,-28(s0)
20107a74:	fe842703          	lw	a4,-24(s0)
20107a78:	87ba                	mv	a5,a4
20107a7a:	0786                	sll	a5,a5,0x1
20107a7c:	97ba                	add	a5,a5,a4
20107a7e:	078e                	sll	a5,a5,0x3
20107a80:	97b6                	add	a5,a5,a3
20107a82:	0e07a623          	sw	zero,236(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20107a86:	fe442683          	lw	a3,-28(s0)
20107a8a:	fe842703          	lw	a4,-24(s0)
20107a8e:	87ba                	mv	a5,a4
20107a90:	0786                	sll	a5,a5,0x1
20107a92:	97ba                	add	a5,a5,a4
20107a94:	078e                	sll	a5,a5,0x3
20107a96:	97b6                	add	a5,a5,a3
20107a98:	0e07a823          	sw	zero,240(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20107a9c:	fe842783          	lw	a5,-24(s0)
20107aa0:	0785                	add	a5,a5,1
20107aa2:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20107aa6:	fe842703          	lw	a4,-24(s0)
20107aaa:	3ff00793          	li	a5,1023
20107aae:	f8e7d4e3          	bge	a5,a4,20107a36 <__metal_driver_riscv_plic0_init+0x64>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:151
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20107ab2:	4601                	li	a2,0
20107ab4:	fec42583          	lw	a1,-20(s0)
20107ab8:	fcc42503          	lw	a0,-52(s0)
20107abc:	c9dff0ef          	jal	20107758 <__metal_plic0_set_threshold>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:154

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20107ac0:	fdc42783          	lw	a5,-36(s0)
20107ac4:	439c                	lw	a5,0(a5)
20107ac6:	4fdc                	lw	a5,28(a5)
20107ac8:	fe442683          	lw	a3,-28(s0)
20107acc:	4601                	li	a2,0
20107ace:	fd842583          	lw	a1,-40(s0)
20107ad2:	fdc42503          	lw	a0,-36(s0)
20107ad6:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:156
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20107ad8:	fdc42783          	lw	a5,-36(s0)
20107adc:	439c                	lw	a5,0(a5)
20107ade:	4fdc                	lw	a5,28(a5)
20107ae0:	fe442683          	lw	a3,-28(s0)
20107ae4:	20108737          	lui	a4,0x20108
20107ae8:	92a70613          	add	a2,a4,-1750 # 2010792a <__metal_plic0_handler>
20107aec:	fd842583          	lw	a1,-40(s0)
20107af0:	fdc42503          	lw	a0,-36(s0)
20107af4:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:159
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20107af6:	fdc42783          	lw	a5,-36(s0)
20107afa:	439c                	lw	a5,0(a5)
20107afc:	53dc                	lw	a5,36(a5)
20107afe:	fd842583          	lw	a1,-40(s0)
20107b02:	fdc42503          	lw	a0,-36(s0)
20107b06:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20107b08:	fec42783          	lw	a5,-20(s0)
20107b0c:	0785                	add	a5,a5,1
20107b0e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20107b12:	fec42783          	lw	a5,-20(s0)
20107b16:	eef050e3          	blez	a5,201079f6 <__metal_driver_riscv_plic0_init+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20107b1a:	fe442783          	lw	a5,-28(s0)
20107b1e:	4705                	li	a4,1
20107b20:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20107b22:	0001                	nop
20107b24:	50f2                	lw	ra,60(sp)
20107b26:	5462                	lw	s0,56(sp)
20107b28:	6121                	add	sp,sp,64
20107b2a:	8082                	ret

20107b2c <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20107b2c:	7179                	add	sp,sp,-48
20107b2e:	d606                	sw	ra,44(sp)
20107b30:	d422                	sw	s0,40(sp)
20107b32:	1800                	add	s0,sp,48
20107b34:	fca42e23          	sw	a0,-36(s0)
20107b38:	fcb42c23          	sw	a1,-40(s0)
20107b3c:	fcc42a23          	sw	a2,-44(s0)
20107b40:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20107b44:	fdc42783          	lw	a5,-36(s0)
20107b48:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20107b4c:	fdc42503          	lw	a0,-36(s0)
20107b50:	acdff0ef          	jal	2010761c <__metal_driver_sifive_plic0_num_interrupts>
20107b54:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:170 (discriminator 1)
20107b56:	fd842783          	lw	a5,-40(s0)
20107b5a:	00e7c463          	blt	a5,a4,20107b62 <__metal_driver_riscv_plic0_register+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20107b5e:	57fd                	li	a5,-1
20107b60:	a051                	j	20107be4 <__metal_driver_riscv_plic0_register+0xb8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20107b62:	fd442783          	lw	a5,-44(s0)
20107b66:	cf9d                	beqz	a5,20107ba4 <__metal_driver_riscv_plic0_register+0x78>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20107b68:	4609                	li	a2,2
20107b6a:	fd842583          	lw	a1,-40(s0)
20107b6e:	fdc42503          	lw	a0,-36(s0)
20107b72:	c67ff0ef          	jal	201077d8 <__metal_driver_riscv_plic0_set_priority>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20107b76:	fec42703          	lw	a4,-20(s0)
20107b7a:	fd842783          	lw	a5,-40(s0)
20107b7e:	078a                	sll	a5,a5,0x2
20107b80:	97ba                	add	a5,a5,a4
20107b82:	fd442703          	lw	a4,-44(s0)
20107b86:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20107b88:	fec42683          	lw	a3,-20(s0)
20107b8c:	fd842703          	lw	a4,-40(s0)
20107b90:	87ba                	mv	a5,a4
20107b92:	0786                	sll	a5,a5,0x1
20107b94:	97ba                	add	a5,a5,a4
20107b96:	078e                	sll	a5,a5,0x3
20107b98:	97b6                	add	a5,a5,a3
20107b9a:	fd042703          	lw	a4,-48(s0)
20107b9e:	0ee7a823          	sw	a4,240(a5)
20107ba2:	a081                	j	20107be2 <__metal_driver_riscv_plic0_register+0xb6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20107ba4:	4605                	li	a2,1
20107ba6:	fd842583          	lw	a1,-40(s0)
20107baa:	fdc42503          	lw	a0,-36(s0)
20107bae:	c2bff0ef          	jal	201077d8 <__metal_driver_riscv_plic0_set_priority>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20107bb2:	fec42703          	lw	a4,-20(s0)
20107bb6:	fd842783          	lw	a5,-40(s0)
20107bba:	078a                	sll	a5,a5,0x2
20107bbc:	97ba                	add	a5,a5,a4
20107bbe:	20108737          	lui	a4,0x20108
20107bc2:	91270713          	add	a4,a4,-1774 # 20107912 <__metal_plic0_default_handler>
20107bc6:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20107bc8:	fec42683          	lw	a3,-20(s0)
20107bcc:	fd842703          	lw	a4,-40(s0)
20107bd0:	87ba                	mv	a5,a4
20107bd2:	0786                	sll	a5,a5,0x1
20107bd4:	97ba                	add	a5,a5,a4
20107bd6:	078e                	sll	a5,a5,0x3
20107bd8:	97b6                	add	a5,a5,a3
20107bda:	fd042703          	lw	a4,-48(s0)
20107bde:	0ee7a623          	sw	a4,236(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20107be2:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:185
}
20107be4:	853e                	mv	a0,a5
20107be6:	50b2                	lw	ra,44(sp)
20107be8:	5422                	lw	s0,40(sp)
20107bea:	6145                	add	sp,sp,48
20107bec:	8082                	ret

20107bee <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20107bee:	7179                	add	sp,sp,-48
20107bf0:	d606                	sw	ra,44(sp)
20107bf2:	d422                	sw	s0,40(sp)
20107bf4:	1800                	add	s0,sp,48
20107bf6:	fca42e23          	sw	a0,-36(s0)
20107bfa:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20107bfe:	fdc42783          	lw	a5,-36(s0)
20107c02:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20107c06:	fdc42503          	lw	a0,-36(s0)
20107c0a:	a13ff0ef          	jal	2010761c <__metal_driver_sifive_plic0_num_interrupts>
20107c0e:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:191 (discriminator 1)
20107c10:	fd842783          	lw	a5,-40(s0)
20107c14:	00e7c463          	blt	a5,a4,20107c1c <__metal_driver_riscv_plic0_enable+0x2e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20107c18:	57fd                	li	a5,-1
20107c1a:	a829                	j	20107c34 <__metal_driver_riscv_plic0_enable+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20107c1c:	896fe0ef          	jal	20105cb2 <__metal_myhart_id>
20107c20:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:195 (discriminator 1)
20107c22:	4685                	li	a3,1
20107c24:	fd842603          	lw	a2,-40(s0)
20107c28:	85be                	mv	a1,a5
20107c2a:	fec42503          	lw	a0,-20(s0)
20107c2e:	c41ff0ef          	jal	2010786e <__metal_plic0_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20107c32:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:197
}
20107c34:	853e                	mv	a0,a5
20107c36:	50b2                	lw	ra,44(sp)
20107c38:	5422                	lw	s0,40(sp)
20107c3a:	6145                	add	sp,sp,48
20107c3c:	8082                	ret

20107c3e <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20107c3e:	7179                	add	sp,sp,-48
20107c40:	d606                	sw	ra,44(sp)
20107c42:	d422                	sw	s0,40(sp)
20107c44:	1800                	add	s0,sp,48
20107c46:	fca42e23          	sw	a0,-36(s0)
20107c4a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20107c4e:	fdc42783          	lw	a5,-36(s0)
20107c52:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20107c56:	fdc42503          	lw	a0,-36(s0)
20107c5a:	9c3ff0ef          	jal	2010761c <__metal_driver_sifive_plic0_num_interrupts>
20107c5e:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:203 (discriminator 1)
20107c60:	fd842783          	lw	a5,-40(s0)
20107c64:	00e7c463          	blt	a5,a4,20107c6c <__metal_driver_riscv_plic0_disable+0x2e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20107c68:	57fd                	li	a5,-1
20107c6a:	a829                	j	20107c84 <__metal_driver_riscv_plic0_disable+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20107c6c:	846fe0ef          	jal	20105cb2 <__metal_myhart_id>
20107c70:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:206 (discriminator 1)
20107c72:	4681                	li	a3,0
20107c74:	fd842603          	lw	a2,-40(s0)
20107c78:	85be                	mv	a1,a5
20107c7a:	fec42503          	lw	a0,-20(s0)
20107c7e:	bf1ff0ef          	jal	2010786e <__metal_plic0_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20107c82:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:208
}
20107c84:	853e                	mv	a0,a5
20107c86:	50b2                	lw	ra,44(sp)
20107c88:	5422                	lw	s0,40(sp)
20107c8a:	6145                	add	sp,sp,48
20107c8c:	8082                	ret

20107c8e <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20107c8e:	1101                	add	sp,sp,-32
20107c90:	ce06                	sw	ra,28(sp)
20107c92:	cc22                	sw	s0,24(sp)
20107c94:	1000                	add	s0,sp,32
20107c96:	fea42623          	sw	a0,-20(s0)
20107c9a:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20107c9e:	814fe0ef          	jal	20105cb2 <__metal_myhart_id>
20107ca2:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:212 (discriminator 1)
20107ca4:	fe842603          	lw	a2,-24(s0)
20107ca8:	85be                	mv	a1,a5
20107caa:	fec42503          	lw	a0,-20(s0)
20107cae:	aabff0ef          	jal	20107758 <__metal_plic0_set_threshold>
20107cb2:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20107cb4:	853e                	mv	a0,a5
20107cb6:	40f2                	lw	ra,28(sp)
20107cb8:	4462                	lw	s0,24(sp)
20107cba:	6105                	add	sp,sp,32
20107cbc:	8082                	ret

20107cbe <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20107cbe:	1101                	add	sp,sp,-32
20107cc0:	ce06                	sw	ra,28(sp)
20107cc2:	cc22                	sw	s0,24(sp)
20107cc4:	1000                	add	s0,sp,32
20107cc6:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20107cca:	fe9fd0ef          	jal	20105cb2 <__metal_myhart_id>
20107cce:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:218 (discriminator 1)
20107cd0:	85be                	mv	a1,a5
20107cd2:	fec42503          	lw	a0,-20(s0)
20107cd6:	ac9ff0ef          	jal	2010779e <__metal_plic0_get_threshold>
20107cda:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:219
}
20107cdc:	853e                	mv	a0,a5
20107cde:	40f2                	lw	ra,28(sp)
20107ce0:	4462                	lw	s0,24(sp)
20107ce2:	6105                	add	sp,sp,32
20107ce4:	8082                	ret

20107ce6 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20107ce6:	7179                	add	sp,sp,-48
20107ce8:	d606                	sw	ra,44(sp)
20107cea:	d422                	sw	s0,40(sp)
20107cec:	1800                	add	s0,sp,48
20107cee:	fca42e23          	sw	a0,-36(s0)
20107cf2:	fcb42c23          	sw	a1,-40(s0)
20107cf6:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20107cfa:	fe042223          	sw	zero,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20107cfe:	fdc42783          	lw	a5,-36(s0)
20107d02:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20107d06:	fdc42503          	lw	a0,-36(s0)
20107d0a:	913ff0ef          	jal	2010761c <__metal_driver_sifive_plic0_num_interrupts>
20107d0e:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:229 (discriminator 1)
20107d10:	fd442783          	lw	a5,-44(s0)
20107d14:	00e7c863          	blt	a5,a4,20107d24 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20107d18:	57fd                	li	a5,-1
20107d1a:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20107d1e:	fe442783          	lw	a5,-28(s0)
20107d22:	a899                	j	20107d78 <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20107d24:	fe042623          	sw	zero,-20(s0)
20107d28:	a099                	j	20107d6e <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20107d2a:	fec42783          	lw	a5,-20(s0)
20107d2e:	c795                	beqz	a5,20107d5a <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20107d30:	4685                	li	a3,1
20107d32:	fd442603          	lw	a2,-44(s0)
20107d36:	fec42583          	lw	a1,-20(s0)
20107d3a:	fe842503          	lw	a0,-24(s0)
20107d3e:	b31ff0ef          	jal	2010786e <__metal_plic0_enable>
20107d42:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:236 (discriminator 1)
20107d44:	0017f713          	and	a4,a5,1
20107d48:	fec42783          	lw	a5,-20(s0)
20107d4c:	00f71733          	sll	a4,a4,a5
20107d50:	fe442783          	lw	a5,-28(s0)
20107d54:	8fd9                	or	a5,a5,a4
20107d56:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20107d5a:	fec42783          	lw	a5,-20(s0)
20107d5e:	0785                	add	a5,a5,1
20107d60:	fef42623          	sw	a5,-20(s0)
20107d64:	fd842783          	lw	a5,-40(s0)
20107d68:	8385                	srl	a5,a5,0x1
20107d6a:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20107d6e:	fd842783          	lw	a5,-40(s0)
20107d72:	ffc5                	bnez	a5,20107d2a <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20107d74:	fe442783          	lw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:242
}
20107d78:	853e                	mv	a0,a5
20107d7a:	50b2                	lw	ra,44(sp)
20107d7c:	5422                	lw	s0,40(sp)
20107d7e:	6145                	add	sp,sp,48
20107d80:	8082                	ret

20107d82 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20107d82:	7179                	add	sp,sp,-48
20107d84:	d606                	sw	ra,44(sp)
20107d86:	d422                	sw	s0,40(sp)
20107d88:	1800                	add	s0,sp,48
20107d8a:	fca42e23          	sw	a0,-36(s0)
20107d8e:	fcb42c23          	sw	a1,-40(s0)
20107d92:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20107d96:	fe042223          	sw	zero,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20107d9a:	fdc42783          	lw	a5,-36(s0)
20107d9e:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20107da2:	fdc42503          	lw	a0,-36(s0)
20107da6:	877ff0ef          	jal	2010761c <__metal_driver_sifive_plic0_num_interrupts>
20107daa:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:252 (discriminator 1)
20107dac:	fd442783          	lw	a5,-44(s0)
20107db0:	00e7c863          	blt	a5,a4,20107dc0 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20107db4:	57fd                	li	a5,-1
20107db6:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20107dba:	fe442783          	lw	a5,-28(s0)
20107dbe:	a899                	j	20107e14 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20107dc0:	fe042623          	sw	zero,-20(s0)
20107dc4:	a099                	j	20107e0a <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20107dc6:	fec42783          	lw	a5,-20(s0)
20107dca:	c795                	beqz	a5,20107df6 <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20107dcc:	4681                	li	a3,0
20107dce:	fd442603          	lw	a2,-44(s0)
20107dd2:	fec42583          	lw	a1,-20(s0)
20107dd6:	fe842503          	lw	a0,-24(s0)
20107dda:	a95ff0ef          	jal	2010786e <__metal_plic0_enable>
20107dde:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:259 (discriminator 1)
20107de0:	0017f713          	and	a4,a5,1
20107de4:	fec42783          	lw	a5,-20(s0)
20107de8:	00f71733          	sll	a4,a4,a5
20107dec:	fe442783          	lw	a5,-28(s0)
20107df0:	8fd9                	or	a5,a5,a4
20107df2:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20107df6:	fec42783          	lw	a5,-20(s0)
20107dfa:	0785                	add	a5,a5,1
20107dfc:	fef42623          	sw	a5,-20(s0)
20107e00:	fd842783          	lw	a5,-40(s0)
20107e04:	8385                	srl	a5,a5,0x1
20107e06:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20107e0a:	fd842783          	lw	a5,-40(s0)
20107e0e:	ffc5                	bnez	a5,20107dc6 <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20107e10:	fe442783          	lw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:265
}
20107e14:	853e                	mv	a0,a5
20107e16:	50b2                	lw	ra,44(sp)
20107e18:	5422                	lw	s0,40(sp)
20107e1a:	6145                	add	sp,sp,48
20107e1c:	8082                	ret

20107e1e <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20107e1e:	7179                	add	sp,sp,-48
20107e20:	d606                	sw	ra,44(sp)
20107e22:	d422                	sw	s0,40(sp)
20107e24:	1800                	add	s0,sp,48
20107e26:	fca42e23          	sw	a0,-36(s0)
20107e2a:	fcb42c23          	sw	a1,-40(s0)
20107e2e:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20107e32:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20107e36:	fe042623          	sw	zero,-20(s0)
20107e3a:	a091                	j	20107e7e <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20107e3c:	fec42783          	lw	a5,-20(s0)
20107e40:	c78d                	beqz	a5,20107e6a <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20107e42:	fd442603          	lw	a2,-44(s0)
20107e46:	fec42583          	lw	a1,-20(s0)
20107e4a:	fdc42503          	lw	a0,-36(s0)
20107e4e:	90bff0ef          	jal	20107758 <__metal_plic0_set_threshold>
20107e52:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:275 (discriminator 1)
20107e54:	0017f713          	and	a4,a5,1
20107e58:	fec42783          	lw	a5,-20(s0)
20107e5c:	00f71733          	sll	a4,a4,a5
20107e60:	fe842783          	lw	a5,-24(s0)
20107e64:	8fd9                	or	a5,a5,a4
20107e66:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20107e6a:	fec42783          	lw	a5,-20(s0)
20107e6e:	0785                	add	a5,a5,1
20107e70:	fef42623          	sw	a5,-20(s0)
20107e74:	fd842783          	lw	a5,-40(s0)
20107e78:	8385                	srl	a5,a5,0x1
20107e7a:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20107e7e:	fd842783          	lw	a5,-40(s0)
20107e82:	ffcd                	bnez	a5,20107e3c <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20107e84:	fe842783          	lw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:281
}
20107e88:	853e                	mv	a0,a5
20107e8a:	50b2                	lw	ra,44(sp)
20107e8c:	5422                	lw	s0,40(sp)
20107e8e:	6145                	add	sp,sp,48
20107e90:	8082                	ret

20107e92 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20107e92:	1101                	add	sp,sp,-32
20107e94:	ce06                	sw	ra,28(sp)
20107e96:	cc22                	sw	s0,24(sp)
20107e98:	1000                	add	s0,sp,32
20107e9a:	fea42623          	sw	a0,-20(s0)
20107e9e:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20107ea2:	fe842583          	lw	a1,-24(s0)
20107ea6:	fec42503          	lw	a0,-20(s0)
20107eaa:	8f5ff0ef          	jal	2010779e <__metal_plic0_get_threshold>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20107eae:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:287
}
20107eb0:	853e                	mv	a0,a5
20107eb2:	40f2                	lw	ra,28(sp)
20107eb4:	4462                	lw	s0,24(sp)
20107eb6:	6105                	add	sp,sp,32
20107eb8:	8082                	ret

20107eba <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1107



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20107eba:	1101                	add	sp,sp,-32
20107ebc:	ce22                	sw	s0,28(sp)
20107ebe:	1000                	add	s0,sp,32
20107ec0:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1108
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20107ec4:	800007b7          	lui	a5,0x80000
20107ec8:	07078793          	add	a5,a5,112 # 80000070 <__metal_dt_clock_2>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1109
}
20107ecc:	853e                	mv	a0,a5
20107ece:	4472                	lw	s0,28(sp)
20107ed0:	6105                	add	sp,sp,32
20107ed2:	8082                	ret

20107ed4 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1112

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20107ed4:	1101                	add	sp,sp,-32
20107ed6:	ce22                	sw	s0,28(sp)
20107ed8:	1000                	add	s0,sp,32
20107eda:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1113
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20107ede:	82818793          	add	a5,gp,-2008 # 80000aa0 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1114
}
20107ee2:	853e                	mv	a0,a5
20107ee4:	4472                	lw	s0,28(sp)
20107ee6:	6105                	add	sp,sp,32
20107ee8:	8082                	ret

20107eea <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1122
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20107eea:	1101                	add	sp,sp,-32
20107eec:	ce22                	sw	s0,28(sp)
20107eee:	1000                	add	s0,sp,32
20107ef0:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1123
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20107ef4:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1124
}
20107ef6:	853e                	mv	a0,a5
20107ef8:	4472                	lw	s0,28(sp)
20107efa:	6105                	add	sp,sp,32
20107efc:	8082                	ret

20107efe <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1239
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20107efe:	1141                	add	sp,sp,-16
20107f00:	c622                	sw	s0,12(sp)
20107f02:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20107f04:	201037b7          	lui	a5,0x20103
20107f08:	62c78793          	add	a5,a5,1580 # 2010362c <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1241
}
20107f0c:	853e                	mv	a0,a5
20107f0e:	4432                	lw	s0,12(sp)
20107f10:	0141                	add	sp,sp,16
20107f12:	8082                	ret

20107f14 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20107f14:	7139                	add	sp,sp,-64
20107f16:	de06                	sw	ra,60(sp)
20107f18:	dc22                	sw	s0,56(sp)
20107f1a:	0080                	add	s0,sp,64
20107f1c:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20107f20:	fcc42503          	lw	a0,-52(s0)
20107f24:	3f59                	jal	20107eba <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20107f26:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20107f2a:	fcc42503          	lw	a0,-52(s0)
20107f2e:	3f75                	jal	20107eea <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20107f30:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20107f34:	fcc42503          	lw	a0,-52(s0)
20107f38:	3f71                	jal	20107ed4 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20107f3a:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20107f3e:	37c1                	jal	20107efe <__metal_driver_sifive_fe310_g000_prci_vtable>
20107f40:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20107f44:	fe042783          	lw	a5,-32(s0)
20107f48:	439c                	lw	a5,0(a5)
20107f4a:	fe842583          	lw	a1,-24(s0)
20107f4e:	fe442503          	lw	a0,-28(s0)
20107f52:	9782                	jalr	a5
20107f54:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20107f58:	fdc42703          	lw	a4,-36(s0)
20107f5c:	400007b7          	lui	a5,0x40000
20107f60:	8ff9                	and	a5,a5,a4
20107f62:	e399                	bnez	a5,20107f68 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20107f64:	57fd                	li	a5,-1
20107f66:	a025                	j	20107f8e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20107f68:	fdc42783          	lw	a5,-36(s0)
20107f6c:	0007c463          	bltz	a5,20107f74 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20107f70:	57fd                	li	a5,-1
20107f72:	a831                	j	20107f8e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20107f74:	fec42503          	lw	a0,-20(s0)
20107f78:	2b5010ef          	jal	20109a2c <metal_clock_get_rate_hz>
20107f7c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32 (discriminator 1)
20107f7e:	873e                	mv	a4,a5
20107f80:	fdc42783          	lw	a5,-36(s0)
20107f84:	03f7f793          	and	a5,a5,63
20107f88:	0785                	add	a5,a5,1 # 40000001 <metal_segment_data_source_start+0x1fef5b91>
20107f8a:	02f757b3          	divu	a5,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20107f8e:	853e                	mv	a0,a5
20107f90:	50f2                	lw	ra,60(sp)
20107f92:	5462                	lw	s0,56(sp)
20107f94:	6121                	add	sp,sp,64
20107f96:	8082                	ret

20107f98 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20107f98:	1101                	add	sp,sp,-32
20107f9a:	ce06                	sw	ra,28(sp)
20107f9c:	cc22                	sw	s0,24(sp)
20107f9e:	1000                	add	s0,sp,32
20107fa0:	fea42623          	sw	a0,-20(s0)
20107fa4:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20107fa8:	fec42503          	lw	a0,-20(s0)
20107fac:	37a5                	jal	20107f14 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20107fae:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20107fb0:	853e                	mv	a0,a5
20107fb2:	40f2                	lw	ra,28(sp)
20107fb4:	4462                	lw	s0,24(sp)
20107fb6:	6105                	add	sp,sp,32
20107fb8:	8082                	ret

20107fba <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1130
{
20107fba:	1101                	add	sp,sp,-32
20107fbc:	ce22                	sw	s0,28(sp)
20107fbe:	1000                	add	s0,sp,32
20107fc0:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1131
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20107fc4:	800007b7          	lui	a5,0x80000
20107fc8:	06478793          	add	a5,a5,100 # 80000064 <__metal_dt_clock_0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1132
}
20107fcc:	853e                	mv	a0,a5
20107fce:	4472                	lw	s0,28(sp)
20107fd0:	6105                	add	sp,sp,32
20107fd2:	8082                	ret

20107fd4 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1135
{
20107fd4:	1101                	add	sp,sp,-32
20107fd6:	ce22                	sw	s0,28(sp)
20107fd8:	1000                	add	s0,sp,32
20107fda:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1136
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20107fde:	82818793          	add	a5,gp,-2008 # 80000aa0 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1137
}
20107fe2:	853e                	mv	a0,a5
20107fe4:	4472                	lw	s0,28(sp)
20107fe6:	6105                	add	sp,sp,32
20107fe8:	8082                	ret

20107fea <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1140
{
20107fea:	1101                	add	sp,sp,-32
20107fec:	ce22                	sw	s0,28(sp)
20107fee:	1000                	add	s0,sp,32
20107ff0:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1141
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20107ff4:	4791                	li	a5,4
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1142
}
20107ff6:	853e                	mv	a0,a5
20107ff8:	4472                	lw	s0,28(sp)
20107ffa:	6105                	add	sp,sp,32
20107ffc:	8082                	ret

20107ffe <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1239
{
20107ffe:	1141                	add	sp,sp,-16
20108000:	c622                	sw	s0,12(sp)
20108002:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20108004:	201037b7          	lui	a5,0x20103
20108008:	62c78793          	add	a5,a5,1580 # 2010362c <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1241
}
2010800c:	853e                	mv	a0,a5
2010800e:	4432                	lw	s0,12(sp)
20108010:	0141                	add	sp,sp,16
20108012:	8082                	ret

20108014 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20108014:	7139                	add	sp,sp,-64
20108016:	de06                	sw	ra,60(sp)
20108018:	dc22                	sw	s0,56(sp)
2010801a:	0080                	add	s0,sp,64
2010801c:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20108020:	fcc42503          	lw	a0,-52(s0)
20108024:	3f59                	jal	20107fba <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20108026:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
2010802a:	fcc42503          	lw	a0,-52(s0)
2010802e:	3f75                	jal	20107fea <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20108030:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20108034:	fcc42503          	lw	a0,-52(s0)
20108038:	3f71                	jal	20107fd4 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
2010803a:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2010803e:	37c1                	jal	20107ffe <__metal_driver_sifive_fe310_g000_prci_vtable>
20108040:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20108044:	fe042783          	lw	a5,-32(s0)
20108048:	439c                	lw	a5,0(a5)
2010804a:	fe842583          	lw	a1,-24(s0)
2010804e:	fe442503          	lw	a0,-28(s0)
20108052:	9782                	jalr	a5
20108054:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20108058:	fdc42703          	lw	a4,-36(s0)
2010805c:	400007b7          	lui	a5,0x40000
20108060:	8ff9                	and	a5,a5,a4
20108062:	e399                	bnez	a5,20108068 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20108064:	57fd                	li	a5,-1
20108066:	a821                	j	2010807e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20108068:	fdc42783          	lw	a5,-36(s0)
2010806c:	0007c463          	bltz	a5,20108074 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20108070:	57fd                	li	a5,-1
20108072:	a031                	j	2010807e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20108074:	fec42503          	lw	a0,-20(s0)
20108078:	1b5010ef          	jal	20109a2c <metal_clock_get_rate_hz>
2010807c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
2010807e:	853e                	mv	a0,a5
20108080:	50f2                	lw	ra,60(sp)
20108082:	5462                	lw	s0,56(sp)
20108084:	6121                	add	sp,sp,64
20108086:	8082                	ret

20108088 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20108088:	1101                	add	sp,sp,-32
2010808a:	ce06                	sw	ra,28(sp)
2010808c:	cc22                	sw	s0,24(sp)
2010808e:	1000                	add	s0,sp,32
20108090:	fea42623          	sw	a0,-20(s0)
20108094:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20108098:	fec42503          	lw	a0,-20(s0)
2010809c:	3fa5                	jal	20108014 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
2010809e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
201080a0:	853e                	mv	a0,a5
201080a2:	40f2                	lw	ra,28(sp)
201080a4:	4462                	lw	s0,24(sp)
201080a6:	6105                	add	sp,sp,32
201080a8:	8082                	ret

201080aa <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1191
{
201080aa:	1101                	add	sp,sp,-32
201080ac:	ce22                	sw	s0,28(sp)
201080ae:	1000                	add	s0,sp,32
201080b0:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1192
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
201080b4:	800017b7          	lui	a5,0x80001
201080b8:	a5078793          	add	a5,a5,-1456 # 80000a50 <__metal_dt_clock_3>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1193
}
201080bc:	853e                	mv	a0,a5
201080be:	4472                	lw	s0,28(sp)
201080c0:	6105                	add	sp,sp,32
201080c2:	8082                	ret

201080c4 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1196
{
201080c4:	1101                	add	sp,sp,-32
201080c6:	ce22                	sw	s0,28(sp)
201080c8:	1000                	add	s0,sp,32
201080ca:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1197
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
201080ce:	800017b7          	lui	a5,0x80001
201080d2:	a5c78793          	add	a5,a5,-1444 # 80000a5c <__metal_dt_clock_1>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1198
}
201080d6:	853e                	mv	a0,a5
201080d8:	4472                	lw	s0,28(sp)
201080da:	6105                	add	sp,sp,32
201080dc:	8082                	ret

201080de <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1201
{
201080de:	1101                	add	sp,sp,-32
201080e0:	ce22                	sw	s0,28(sp)
201080e2:	1000                	add	s0,sp,32
201080e4:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1202
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
201080e8:	82818793          	add	a5,gp,-2008 # 80000aa0 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1203
}
201080ec:	853e                	mv	a0,a5
201080ee:	4472                	lw	s0,28(sp)
201080f0:	6105                	add	sp,sp,32
201080f2:	8082                	ret

201080f4 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1206
{
201080f4:	1101                	add	sp,sp,-32
201080f6:	ce22                	sw	s0,28(sp)
201080f8:	1000                	add	s0,sp,32
201080fa:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1207
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
201080fe:	47b1                	li	a5,12
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1208
}
20108100:	853e                	mv	a0,a5
20108102:	4472                	lw	s0,28(sp)
20108104:	6105                	add	sp,sp,32
20108106:	8082                	ret

20108108 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1211
{
20108108:	1141                	add	sp,sp,-16
2010810a:	c622                	sw	s0,12(sp)
2010810c:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1212
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2010810e:	82818793          	add	a5,gp,-2008 # 80000aa0 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1213
}
20108112:	853e                	mv	a0,a5
20108114:	4432                	lw	s0,12(sp)
20108116:	0141                	add	sp,sp,16
20108118:	8082                	ret

2010811a <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1216
{
2010811a:	1141                	add	sp,sp,-16
2010811c:	c622                	sw	s0,12(sp)
2010811e:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1217
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20108120:	47a1                	li	a5,8
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1218
}
20108122:	853e                	mv	a0,a5
20108124:	4432                	lw	s0,12(sp)
20108126:	0141                	add	sp,sp,16
20108128:	8082                	ret

2010812a <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1221
{
2010812a:	1141                	add	sp,sp,-16
2010812c:	c622                	sw	s0,12(sp)
2010812e:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1222
		return 16000000;
20108130:	00f427b7          	lui	a5,0xf42
20108134:	40078793          	add	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1223
}
20108138:	853e                	mv	a0,a5
2010813a:	4432                	lw	s0,12(sp)
2010813c:	0141                	add	sp,sp,16
2010813e:	8082                	ret

20108140 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1229
{
20108140:	1141                	add	sp,sp,-16
20108142:	c622                	sw	s0,12(sp)
20108144:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1230
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20108146:	100087b7          	lui	a5,0x10008
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1231
}
2010814a:	853e                	mv	a0,a5
2010814c:	4432                	lw	s0,12(sp)
2010814e:	0141                	add	sp,sp,16
20108150:	8082                	ret

20108152 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1239
{
20108152:	1141                	add	sp,sp,-16
20108154:	c622                	sw	s0,12(sp)
20108156:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20108158:	201037b7          	lui	a5,0x20103
2010815c:	62c78793          	add	a5,a5,1580 # 2010362c <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1241
}
20108160:	853e                	mv	a0,a5
20108162:	4432                	lw	s0,12(sp)
20108164:	0141                	add	sp,sp,16
20108166:	8082                	ret

20108168 <get_pll_config_freq>:
get_pll_config_freq():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20108168:	1101                	add	sp,sp,-32
2010816a:	ce22                	sw	s0,28(sp)
2010816c:	1000                	add	s0,sp,32
2010816e:	fea42623          	sw	a0,-20(s0)
20108172:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20108176:	fe842783          	lw	a5,-24(s0)
2010817a:	479c                	lw	a5,8(a5)
2010817c:	fec42703          	lw	a4,-20(s0)
20108180:	00f76963          	bltu	a4,a5,20108192 <get_pll_config_freq+0x2a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143
        pll_input_rate > config->max_input_rate)
20108184:	fe842783          	lw	a5,-24(s0)
20108188:	47dc                	lw	a5,12(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
2010818a:	fec42703          	lw	a4,-20(s0)
2010818e:	00e7f463          	bgeu	a5,a4,20108196 <get_pll_config_freq+0x2e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20108192:	57fd                	li	a5,-1
20108194:	a829                	j	201081ae <get_pll_config_freq+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20108196:	fe842783          	lw	a5,-24(s0)
2010819a:	4398                	lw	a4,0(a5)
2010819c:	fec42783          	lw	a5,-20(s0)
201081a0:	02f70733          	mul	a4,a4,a5
201081a4:	fe842783          	lw	a5,-24(s0)
201081a8:	43dc                	lw	a5,4(a5)
201081aa:	02f757b3          	divu	a5,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
201081ae:	853e                	mv	a0,a5
201081b0:	4472                	lw	s0,28(sp)
201081b2:	6105                	add	sp,sp,32
201081b4:	8082                	ret

201081b6 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
201081b6:	7139                	add	sp,sp,-64
201081b8:	de06                	sw	ra,60(sp)
201081ba:	dc22                	sw	s0,56(sp)
201081bc:	0080                	add	s0,sp,64
201081be:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
201081c2:	fcc42783          	lw	a5,-52(s0)
201081c6:	853e                	mv	a0,a5
201081c8:	3df5                	jal	201080c4 <__metal_driver_sifive_fe310_g000_pll_pllref>
201081ca:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
201081ce:	3fb1                	jal	2010812a <__metal_driver_sifive_fe310_g000_pll_init_rate>
201081d0:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
201081d4:	3799                	jal	2010811a <__metal_driver_sifive_fe310_g000_pll_config_offset>
201081d6:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
201081da:	379d                	jal	20108140 <__metal_driver_sifive_fe310_g000_prci_base>
201081dc:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
201081e0:	fe042703          	lw	a4,-32(s0)
201081e4:	fe442783          	lw	a5,-28(s0)
201081e8:	97ba                	add	a5,a5,a4
201081ea:	fcf42e23          	sw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
201081ee:	fcc42783          	lw	a5,-52(s0)
201081f2:	43dc                	lw	a5,4(a5)
201081f4:	853e                	mv	a0,a5
201081f6:	7a0010ef          	jal	20109996 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
201081fa:	fdc42783          	lw	a5,-36(s0)
201081fe:	4398                	lw	a4,0(a5)
20108200:	67c1                	lui	a5,0x10
20108202:	8ff9                	and	a5,a5,a4
20108204:	cb91                	beqz	a5,20108218 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20108206:	fdc42783          	lw	a5,-36(s0)
2010820a:	4398                	lw	a4,0(a5)
2010820c:	77c1                	lui	a5,0xffff0
2010820e:	17fd                	add	a5,a5,-1 # fffeffff <metal_segment_heap_target_end+0x7ffee75f>
20108210:	8f7d                	and	a4,a4,a5
20108212:	fdc42783          	lw	a5,-36(s0)
20108216:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20108218:	fec42783          	lw	a5,-20(s0)
2010821c:	cb91                	beqz	a5,20108230 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
2010821e:	fdc42783          	lw	a5,-36(s0)
20108222:	4398                	lw	a4,0(a5)
20108224:	000207b7          	lui	a5,0x20
20108228:	8f5d                	or	a4,a4,a5
2010822a:	fdc42783          	lw	a5,-36(s0)
2010822e:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20108230:	fcc42783          	lw	a5,-52(s0)
20108234:	439c                	lw	a5,0(a5)
20108236:	43dc                	lw	a5,4(a5)
20108238:	fcc42703          	lw	a4,-52(s0)
2010823c:	fe842583          	lw	a1,-24(s0)
20108240:	853a                	mv	a0,a4
20108242:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20108244:	fcc42783          	lw	a5,-52(s0)
20108248:	479c                	lw	a5,8(a5)
2010824a:	853e                	mv	a0,a5
2010824c:	74a010ef          	jal	20109996 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20108250:	0001                	nop
20108252:	50f2                	lw	ra,60(sp)
20108254:	5462                	lw	s0,56(sp)
20108256:	6121                	add	sp,sp,64
20108258:	8082                	ret

2010825a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
2010825a:	711d                	add	sp,sp,-96
2010825c:	ce86                	sw	ra,92(sp)
2010825e:	cca2                	sw	s0,88(sp)
20108260:	1080                	add	s0,sp,96
20108262:	faa42623          	sw	a0,-84(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20108266:	fac42503          	lw	a0,-84(s0)
2010826a:	e5bff0ef          	jal	201080c4 <__metal_driver_sifive_fe310_g000_pll_pllref>
2010826e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20108272:	fac42503          	lw	a0,-84(s0)
20108276:	e35ff0ef          	jal	201080aa <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2010827a:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2010827e:	fac42503          	lw	a0,-84(s0)
20108282:	e99ff0ef          	jal	2010811a <__metal_driver_sifive_fe310_g000_pll_config_offset>
20108286:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
2010828a:	fac42503          	lw	a0,-84(s0)
2010828e:	e7bff0ef          	jal	20108108 <__metal_driver_sifive_fe310_g000_pll_config_base>
20108292:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20108296:	fac42503          	lw	a0,-84(s0)
2010829a:	e5bff0ef          	jal	201080f4 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2010829e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
201082a2:	fac42503          	lw	a0,-84(s0)
201082a6:	e39ff0ef          	jal	201080de <__metal_driver_sifive_fe310_g000_pll_divider_base>
201082aa:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
201082ae:	ea5ff0ef          	jal	20108152 <__metal_driver_sifive_fe310_g000_prci_vtable>
201082b2:	fca42a23          	sw	a0,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
201082b6:	fd442783          	lw	a5,-44(s0)
201082ba:	439c                	lw	a5,0(a5)
201082bc:	fe442583          	lw	a1,-28(s0)
201082c0:	fe042503          	lw	a0,-32(s0)
201082c4:	9782                	jalr	a5
201082c6:	fca42823          	sw	a0,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
201082ca:	fd442783          	lw	a5,-44(s0)
201082ce:	439c                	lw	a5,0(a5)
201082d0:	fdc42583          	lw	a1,-36(s0)
201082d4:	fd842503          	lw	a0,-40(s0)
201082d8:	9782                	jalr	a5
201082da:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
201082de:	fd042703          	lw	a4,-48(s0)
201082e2:	67c1                	lui	a5,0x10
201082e4:	8f7d                	and	a4,a4,a5
201082e6:	67c1                	lui	a5,0x10
201082e8:	00f77863          	bgeu	a4,a5,201082f8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
201082ec:	fe842503          	lw	a0,-24(s0)
201082f0:	73c010ef          	jal	20109a2c <metal_clock_get_rate_hz>
201082f4:	87aa                	mv	a5,a0
201082f6:	a8e1                	j	201083ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
201082f8:	fd042703          	lw	a4,-48(s0)
201082fc:	000207b7          	lui	a5,0x20
20108300:	8f7d                	and	a4,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20108302:	000207b7          	lui	a5,0x20
20108306:	00f76563          	bltu	a4,a5,20108310 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
2010830a:	fec42783          	lw	a5,-20(s0)
2010830e:	a019                	j	20108314 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xba>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20108310:	fe842783          	lw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20108314:	853e                	mv	a0,a5
20108316:	716010ef          	jal	20109a2c <metal_clock_get_rate_hz>
2010831a:	fca42423          	sw	a0,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
2010831e:	fd042703          	lw	a4,-48(s0)
20108322:	000407b7          	lui	a5,0x40
20108326:	8f7d                	and	a4,a4,a5
20108328:	000407b7          	lui	a5,0x40
2010832c:	00f76563          	bltu	a4,a5,20108336 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xdc>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20108330:	fc842783          	lw	a5,-56(s0)
20108334:	a869                	j	201083ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20108336:	fd042783          	lw	a5,-48(s0)
2010833a:	8b9d                	and	a5,a5,7
2010833c:	0785                	add	a5,a5,1 # 40001 <__heap_size+0x3f801>
2010833e:	fcf42223          	sw	a5,-60(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20108342:	fd042783          	lw	a5,-48(s0)
20108346:	3f07f793          	and	a5,a5,1008
2010834a:	8391                	srl	a5,a5,0x4
2010834c:	0785                	add	a5,a5,1
2010834e:	0786                	sll	a5,a5,0x1
20108350:	fcf42023          	sw	a5,-64(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20108354:	fd042703          	lw	a4,-48(s0)
20108358:	6785                	lui	a5,0x1
2010835a:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
2010835e:	8f7d                	and	a4,a4,a5
20108360:	3ff00793          	li	a5,1023
20108364:	00e7e463          	bltu	a5,a4,2010836c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x112>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20108368:	57fd                	li	a5,-1
2010836a:	a095                	j	201083ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
2010836c:	fd042703          	lw	a4,-48(s0)
20108370:	6785                	lui	a5,0x1
20108372:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
20108376:	8ff9                	and	a5,a5,a4
20108378:	83a9                	srl	a5,a5,0xa
2010837a:	4705                	li	a4,1
2010837c:	00f717b3          	sll	a5,a4,a5
20108380:	faf42e23          	sw	a5,-68(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20108384:	fc842703          	lw	a4,-56(s0)
20108388:	fc442783          	lw	a5,-60(s0)
2010838c:	02f74733          	div	a4,a4,a5
20108390:	fc042783          	lw	a5,-64(s0)
20108394:	02f70733          	mul	a4,a4,a5
20108398:	fbc42783          	lw	a5,-68(s0)
2010839c:	02f747b3          	div	a5,a4,a5
201083a0:	faf42c23          	sw	a5,-72(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
201083a4:	fcc42783          	lw	a5,-52(s0)
201083a8:	1007f713          	and	a4,a5,256
201083ac:	0ff00793          	li	a5,255
201083b0:	00e7f563          	bgeu	a5,a4,201083ba <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x160>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
201083b4:	fb842783          	lw	a5,-72(s0)
201083b8:	a819                	j	201083ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
201083ba:	fb842703          	lw	a4,-72(s0)
201083be:	fcc42783          	lw	a5,-52(s0)
201083c2:	03f7f793          	and	a5,a5,63
201083c6:	0785                	add	a5,a5,1
201083c8:	0786                	sll	a5,a5,0x1
201083ca:	02f757b3          	divu	a5,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
201083ce:	853e                	mv	a0,a5
201083d0:	40f6                	lw	ra,92(sp)
201083d2:	4466                	lw	s0,88(sp)
201083d4:	6125                	add	sp,sp,96
201083d6:	8082                	ret

201083d8 <find_closest_config>:
find_closest_config():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
201083d8:	7139                	add	sp,sp,-64
201083da:	de06                	sw	ra,60(sp)
201083dc:	dc22                	sw	s0,56(sp)
201083de:	0080                	add	s0,sp,64
201083e0:	fca42623          	sw	a0,-52(s0)
201083e4:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
201083e8:	57fd                	li	a5,-1
201083ea:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
201083ee:	800007b7          	lui	a5,0x80000
201083f2:	17fd                	add	a5,a5,-1 # 7fffffff <metal_segment_data_source_start+0x5fef5b8f>
201083f4:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
201083f8:	04300793          	li	a5,67
201083fc:	fef42223          	sw	a5,-28(s0)
20108400:	a0b5                	j	2010846c <find_closest_config+0x94>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20108402:	fcc42683          	lw	a3,-52(s0)
20108406:	fe442783          	lw	a5,-28(s0)
2010840a:	00579713          	sll	a4,a5,0x5
2010840e:	201037b7          	lui	a5,0x20103
20108412:	c6c78793          	add	a5,a5,-916 # 20102c6c <pll_configs>
20108416:	97ba                	add	a5,a5,a4
20108418:	85be                	mv	a1,a5
2010841a:	8536                	mv	a0,a3
2010841c:	d4dff0ef          	jal	20108168 <get_pll_config_freq>
20108420:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20108424:	fe042703          	lw	a4,-32(s0)
20108428:	57fd                	li	a5,-1
2010842a:	02f70c63          	beq	a4,a5,20108462 <find_closest_config+0x8a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
2010842e:	fe042703          	lw	a4,-32(s0)
20108432:	fc842783          	lw	a5,-56(s0)
20108436:	8f1d                	sub	a4,a4,a5
20108438:	41f75793          	sra	a5,a4,0x1f
2010843c:	8f3d                	xor	a4,a4,a5
2010843e:	40f707b3          	sub	a5,a4,a5
20108442:	fcf42e23          	sw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20108446:	fdc42703          	lw	a4,-36(s0)
2010844a:	fe842783          	lw	a5,-24(s0)
2010844e:	00f75a63          	bge	a4,a5,20108462 <find_closest_config+0x8a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20108452:	fe442783          	lw	a5,-28(s0)
20108456:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
2010845a:	fdc42783          	lw	a5,-36(s0)
2010845e:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20108462:	fe442783          	lw	a5,-28(s0)
20108466:	17fd                	add	a5,a5,-1
20108468:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2010846c:	fe442783          	lw	a5,-28(s0)
20108470:	f807d9e3          	bgez	a5,20108402 <find_closest_config+0x2a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20108474:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20108478:	853e                	mv	a0,a5
2010847a:	50f2                	lw	ra,60(sp)
2010847c:	5462                	lw	s0,56(sp)
2010847e:	6121                	add	sp,sp,64
20108480:	8082                	ret

20108482 <configure_pll>:
configure_pll():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20108482:	7179                	add	sp,sp,-48
20108484:	d606                	sw	ra,44(sp)
20108486:	d422                	sw	s0,40(sp)
20108488:	1800                	add	s0,sp,48
2010848a:	fca42e23          	sw	a0,-36(s0)
2010848e:	fcb42c23          	sw	a1,-40(s0)
20108492:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20108496:	fdc42783          	lw	a5,-36(s0)
2010849a:	439c                	lw	a5,0(a5)
2010849c:	ff87f713          	and	a4,a5,-8
201084a0:	fdc42783          	lw	a5,-36(s0)
201084a4:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
201084a6:	fdc42783          	lw	a5,-36(s0)
201084aa:	4398                	lw	a4,0(a5)
201084ac:	fd442783          	lw	a5,-44(s0)
201084b0:	4b9c                	lw	a5,16(a5)
201084b2:	8b9d                	and	a5,a5,7
201084b4:	8f5d                	or	a4,a4,a5
201084b6:	fdc42783          	lw	a5,-36(s0)
201084ba:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
201084bc:	fdc42783          	lw	a5,-36(s0)
201084c0:	439c                	lw	a5,0(a5)
201084c2:	c0f7f713          	and	a4,a5,-1009
201084c6:	fdc42783          	lw	a5,-36(s0)
201084ca:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
201084cc:	fdc42783          	lw	a5,-36(s0)
201084d0:	4398                	lw	a4,0(a5)
201084d2:	fd442783          	lw	a5,-44(s0)
201084d6:	4bdc                	lw	a5,20(a5)
201084d8:	0792                	sll	a5,a5,0x4
201084da:	3f07f793          	and	a5,a5,1008
201084de:	8f5d                	or	a4,a4,a5
201084e0:	fdc42783          	lw	a5,-36(s0)
201084e4:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
201084e6:	fdc42783          	lw	a5,-36(s0)
201084ea:	4398                	lw	a4,0(a5)
201084ec:	77fd                	lui	a5,0xfffff
201084ee:	3ff78793          	add	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdb5f>
201084f2:	8f7d                	and	a4,a4,a5
201084f4:	fdc42783          	lw	a5,-36(s0)
201084f8:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
201084fa:	fdc42783          	lw	a5,-36(s0)
201084fe:	4398                	lw	a4,0(a5)
20108500:	fd442783          	lw	a5,-44(s0)
20108504:	4f9c                	lw	a5,24(a5)
20108506:	00a79693          	sll	a3,a5,0xa
2010850a:	6785                	lui	a5,0x1
2010850c:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
20108510:	8ff5                	and	a5,a5,a3
20108512:	8f5d                	or	a4,a4,a5
20108514:	fdc42783          	lw	a5,-36(s0)
20108518:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
2010851a:	fd442783          	lw	a5,-44(s0)
2010851e:	4fdc                	lw	a5,28(a5)
20108520:	0207db63          	bgez	a5,20108556 <configure_pll+0xd4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20108524:	fd842783          	lw	a5,-40(s0)
20108528:	439c                	lw	a5,0(a5)
2010852a:	1007e713          	or	a4,a5,256
2010852e:	fd842783          	lw	a5,-40(s0)
20108532:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20108534:	fd842783          	lw	a5,-40(s0)
20108538:	439c                	lw	a5,0(a5)
2010853a:	fc07f713          	and	a4,a5,-64
2010853e:	fd842783          	lw	a5,-40(s0)
20108542:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20108544:	fd842783          	lw	a5,-40(s0)
20108548:	439c                	lw	a5,0(a5)
2010854a:	0017e713          	or	a4,a5,1
2010854e:	fd842783          	lw	a5,-40(s0)
20108552:	c398                	sw	a4,0(a5)
20108554:	a82d                	j	2010858e <configure_pll+0x10c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20108556:	fd842783          	lw	a5,-40(s0)
2010855a:	439c                	lw	a5,0(a5)
2010855c:	eff7f713          	and	a4,a5,-257
20108560:	fd842783          	lw	a5,-40(s0)
20108564:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20108566:	fd842783          	lw	a5,-40(s0)
2010856a:	439c                	lw	a5,0(a5)
2010856c:	fc07f713          	and	a4,a5,-64
20108570:	fd842783          	lw	a5,-40(s0)
20108574:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20108576:	fd842783          	lw	a5,-40(s0)
2010857a:	4398                	lw	a4,0(a5)
2010857c:	fd442783          	lw	a5,-44(s0)
20108580:	4fdc                	lw	a5,28(a5)
20108582:	03f7f793          	and	a5,a5,63
20108586:	8f5d                	or	a4,a4,a5
20108588:	fd842783          	lw	a5,-40(s0)
2010858c:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2010858e:	fdc42783          	lw	a5,-36(s0)
20108592:	4398                	lw	a4,0(a5)
20108594:	fffc07b7          	lui	a5,0xfffc0
20108598:	17fd                	add	a5,a5,-1 # fffbffff <metal_segment_heap_target_end+0x7ffbe75f>
2010859a:	8f7d                	and	a4,a4,a5
2010859c:	fdc42783          	lw	a5,-36(s0)
201085a0:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
201085a2:	fe040793          	add	a5,s0,-32
201085a6:	863e                	mv	a2,a5
201085a8:	4585                	li	a1,1
201085aa:	800017b7          	lui	a5,0x80001
201085ae:	a8078513          	add	a0,a5,-1408 # 80000a80 <__metal_dt_clint_2000000>
201085b2:	c8cfd0ef          	jal	20105a3e <__metal_driver_riscv_clint0_command_request>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
201085b6:	fe042603          	lw	a2,-32(s0)
201085ba:	fe442683          	lw	a3,-28(s0)
201085be:	4511                	li	a0,4
201085c0:	4581                	li	a1,0
201085c2:	00a60733          	add	a4,a2,a0
201085c6:	883a                	mv	a6,a4
201085c8:	00c83833          	sltu	a6,a6,a2
201085cc:	00b687b3          	add	a5,a3,a1
201085d0:	00f806b3          	add	a3,a6,a5
201085d4:	87b6                	mv	a5,a3
201085d6:	fee42423          	sw	a4,-24(s0)
201085da:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
201085de:	a819                	j	201085f4 <configure_pll+0x172>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
201085e0:	fe040793          	add	a5,s0,-32
201085e4:	863e                	mv	a2,a5
201085e6:	4585                	li	a1,1
201085e8:	800017b7          	lui	a5,0x80001
201085ec:	a8078513          	add	a0,a5,-1408 # 80000a80 <__metal_dt_clint_2000000>
201085f0:	c4efd0ef          	jal	20105a3e <__metal_driver_riscv_clint0_command_request>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
201085f4:	fe042703          	lw	a4,-32(s0)
201085f8:	fe442783          	lw	a5,-28(s0)
201085fc:	fec42683          	lw	a3,-20(s0)
20108600:	863e                	mv	a2,a5
20108602:	00c6ec63          	bltu	a3,a2,2010861a <configure_pll+0x198>
20108606:	fec42683          	lw	a3,-20(s0)
2010860a:	863e                	mv	a2,a5
2010860c:	fcc69ae3          	bne	a3,a2,201085e0 <configure_pll+0x15e>
20108610:	fe842683          	lw	a3,-24(s0)
20108614:	87ba                	mv	a5,a4
20108616:	fcf6f5e3          	bgeu	a3,a5,201085e0 <configure_pll+0x15e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
2010861a:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
2010861c:	fdc42783          	lw	a5,-36(s0)
20108620:	439c                	lw	a5,0(a5)
20108622:	fe07dde3          	bgez	a5,2010861c <configure_pll+0x19a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20108626:	0001                	nop
20108628:	0001                	nop
2010862a:	50b2                	lw	ra,44(sp)
2010862c:	5422                	lw	s0,40(sp)
2010862e:	6145                	add	sp,sp,48
20108630:	8082                	ret

20108632 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20108632:	715d                	add	sp,sp,-80
20108634:	c686                	sw	ra,76(sp)
20108636:	c4a2                	sw	s0,72(sp)
20108638:	0880                	add	s0,sp,80
2010863a:	faa42e23          	sw	a0,-68(s0)
2010863e:	fab42c23          	sw	a1,-72(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20108642:	fbc42503          	lw	a0,-68(s0)
20108646:	a7fff0ef          	jal	201080c4 <__metal_driver_sifive_fe310_g000_pll_pllref>
2010864a:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2010864e:	fbc42503          	lw	a0,-68(s0)
20108652:	a59ff0ef          	jal	201080aa <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20108656:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2010865a:	fbc42503          	lw	a0,-68(s0)
2010865e:	abdff0ef          	jal	2010811a <__metal_driver_sifive_fe310_g000_pll_config_offset>
20108662:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20108666:	fbc42503          	lw	a0,-68(s0)
2010866a:	a8bff0ef          	jal	201080f4 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2010866e:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20108672:	acfff0ef          	jal	20108140 <__metal_driver_sifive_fe310_g000_prci_base>
20108676:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2010867a:	fdc42703          	lw	a4,-36(s0)
2010867e:	fe442783          	lw	a5,-28(s0)
20108682:	97ba                	add	a5,a5,a4
20108684:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20108688:	fdc42703          	lw	a4,-36(s0)
2010868c:	fe042783          	lw	a5,-32(s0)
20108690:	97ba                	add	a5,a5,a4
20108692:	fcf42a23          	sw	a5,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20108696:	fd842783          	lw	a5,-40(s0)
2010869a:	4398                	lw	a4,0(a5)
2010869c:	67c1                	lui	a5,0x10
2010869e:	8ff9                	and	a5,a5,a4
201086a0:	cb91                	beqz	a5,201086b4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
201086a2:	fd842783          	lw	a5,-40(s0)
201086a6:	4398                	lw	a4,0(a5)
201086a8:	77c1                	lui	a5,0xffff0
201086aa:	17fd                	add	a5,a5,-1 # fffeffff <metal_segment_heap_target_end+0x7ffee75f>
201086ac:	8f7d                	and	a4,a4,a5
201086ae:	fd842783          	lw	a5,-40(s0)
201086b2:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
201086b4:	fd842783          	lw	a5,-40(s0)
201086b8:	4398                	lw	a4,0(a5)
201086ba:	000207b7          	lui	a5,0x20
201086be:	8ff9                	and	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
201086c0:	c781                	beqz	a5,201086c8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
201086c2:	fec42783          	lw	a5,-20(s0)
201086c6:	a019                	j	201086cc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
201086c8:	fe842783          	lw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
201086cc:	853e                	mv	a0,a5
201086ce:	35e010ef          	jal	20109a2c <metal_clock_get_rate_hz>
201086d2:	fca42823          	sw	a0,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
201086d6:	fd042703          	lw	a4,-48(s0)
201086da:	87ba                	mv	a5,a4
201086dc:	0786                	sll	a5,a5,0x1
201086de:	97ba                	add	a5,a5,a4
201086e0:	41f7d713          	sra	a4,a5,0x1f
201086e4:	8b0d                	and	a4,a4,3
201086e6:	97ba                	add	a5,a5,a4
201086e8:	8789                	sra	a5,a5,0x2
201086ea:	873e                	mv	a4,a5
201086ec:	fb842783          	lw	a5,-72(s0)
201086f0:	02e7cb63          	blt	a5,a4,20108726 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
201086f4:	fd042703          	lw	a4,-48(s0)
201086f8:	87ba                	mv	a5,a4
201086fa:	078a                	sll	a5,a5,0x2
201086fc:	97ba                	add	a5,a5,a4
201086fe:	41f7d713          	sra	a4,a5,0x1f
20108702:	8b0d                	and	a4,a4,3
20108704:	97ba                	add	a5,a5,a4
20108706:	8789                	sra	a5,a5,0x2
20108708:	873e                	mv	a4,a5
2010870a:	fb842783          	lw	a5,-72(s0)
2010870e:	00f74c63          	blt	a4,a5,20108726 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20108712:	fd842783          	lw	a5,-40(s0)
20108716:	4398                	lw	a4,0(a5)
20108718:	000407b7          	lui	a5,0x40
2010871c:	8f5d                	or	a4,a4,a5
2010871e:	fd842783          	lw	a5,-40(s0)
20108722:	c398                	sw	a4,0(a5)
20108724:	a881                	j	20108774 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20108726:	fb842583          	lw	a1,-72(s0)
2010872a:	fd042503          	lw	a0,-48(s0)
2010872e:	cabff0ef          	jal	201083d8 <find_closest_config>
20108732:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20108736:	fcc42703          	lw	a4,-52(s0)
2010873a:	57fd                	li	a5,-1
2010873c:	02f70363          	beq	a4,a5,20108762 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20108740:	fcc42783          	lw	a5,-52(s0)
20108744:	00579713          	sll	a4,a5,0x5
20108748:	201037b7          	lui	a5,0x20103
2010874c:	c6c78793          	add	a5,a5,-916 # 20102c6c <pll_configs>
20108750:	97ba                	add	a5,a5,a4
20108752:	863e                	mv	a2,a5
20108754:	fd442583          	lw	a1,-44(s0)
20108758:	fd842503          	lw	a0,-40(s0)
2010875c:	d27ff0ef          	jal	20108482 <configure_pll>
20108760:	a811                	j	20108774 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20108762:	fd842783          	lw	a5,-40(s0)
20108766:	4398                	lw	a4,0(a5)
20108768:	000407b7          	lui	a5,0x40
2010876c:	8f5d                	or	a4,a4,a5
2010876e:	fd842783          	lw	a5,-40(s0)
20108772:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20108774:	fd842783          	lw	a5,-40(s0)
20108778:	4398                	lw	a4,0(a5)
2010877a:	67c1                	lui	a5,0x10
2010877c:	8f5d                	or	a4,a4,a5
2010877e:	fd842783          	lw	a5,-40(s0)
20108782:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20108784:	fbc42503          	lw	a0,-68(s0)
20108788:	ad3ff0ef          	jal	2010825a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
2010878c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2010878e:	853e                	mv	a0,a5
20108790:	40b6                	lw	ra,76(sp)
20108792:	4426                	lw	s0,72(sp)
20108794:	6161                	add	sp,sp,80
20108796:	8082                	ret

20108798 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1229
{
20108798:	1141                	add	sp,sp,-16
2010879a:	c622                	sw	s0,12(sp)
2010879c:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1230
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2010879e:	100087b7          	lui	a5,0x10008
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1231
}
201087a2:	853e                	mv	a0,a5
201087a4:	4432                	lw	s0,12(sp)
201087a6:	0141                	add	sp,sp,16
201087a8:	8082                	ret

201087aa <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
201087aa:	7179                	add	sp,sp,-48
201087ac:	d606                	sw	ra,44(sp)
201087ae:	d422                	sw	s0,40(sp)
201087b0:	1800                	add	s0,sp,48
201087b2:	fca42e23          	sw	a0,-36(s0)
201087b6:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
201087ba:	3ff9                	jal	20108798 <__metal_driver_sifive_fe310_g000_prci_base>
201087bc:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13 (discriminator 1)
201087be:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
201087c2:	fd842703          	lw	a4,-40(s0)
201087c6:	fec42783          	lw	a5,-20(s0)
201087ca:	97ba                	add	a5,a5,a4
201087cc:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
201087ce:	853e                	mv	a0,a5
201087d0:	50b2                	lw	ra,44(sp)
201087d2:	5422                	lw	s0,40(sp)
201087d4:	6145                	add	sp,sp,48
201087d6:	8082                	ret

201087d8 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
201087d8:	7179                	add	sp,sp,-48
201087da:	d606                	sw	ra,44(sp)
201087dc:	d422                	sw	s0,40(sp)
201087de:	1800                	add	s0,sp,48
201087e0:	fca42e23          	sw	a0,-36(s0)
201087e4:	fcb42c23          	sw	a1,-40(s0)
201087e8:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
201087ec:	3775                	jal	20108798 <__metal_driver_sifive_fe310_g000_prci_base>
201087ee:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20 (discriminator 1)
201087f0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
201087f4:	fd842703          	lw	a4,-40(s0)
201087f8:	fec42783          	lw	a5,-20(s0)
201087fc:	97ba                	add	a5,a5,a4
201087fe:	873e                	mv	a4,a5
20108800:	fd442783          	lw	a5,-44(s0)
20108804:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20108806:	853e                	mv	a0,a5
20108808:	50b2                	lw	ra,44(sp)
2010880a:	5422                	lw	s0,40(sp)
2010880c:	6145                	add	sp,sp,48
2010880e:	8082                	ret

20108810 <__metal_driver_sifive_gpio_led_gpio>:
__metal_driver_sifive_gpio_led_gpio():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:581
{
20108810:	1101                	add	sp,sp,-32
20108812:	ce22                	sw	s0,28(sp)
20108814:	1000                	add	s0,sp,32
20108816:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:582
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
2010881a:	fec42703          	lw	a4,-20(s0)
2010881e:	81c18793          	add	a5,gp,-2020 # 80000a94 <__metal_dt_led_0>
20108822:	00f71563          	bne	a4,a5,2010882c <__metal_driver_sifive_gpio_led_gpio+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:583
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
20108826:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
2010882a:	a025                	j	20108852 <__metal_driver_sifive_gpio_led_gpio+0x42>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:585
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
2010882c:	fec42703          	lw	a4,-20(s0)
20108830:	82018793          	add	a5,gp,-2016 # 80000a98 <__metal_dt_led_1>
20108834:	00f71563          	bne	a4,a5,2010883e <__metal_driver_sifive_gpio_led_gpio+0x2e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:586
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
20108838:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
2010883c:	a819                	j	20108852 <__metal_driver_sifive_gpio_led_gpio+0x42>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:588
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
2010883e:	fec42703          	lw	a4,-20(s0)
20108842:	82418793          	add	a5,gp,-2012 # 80000a9c <__metal_dt_led_2>
20108846:	00f71563          	bne	a4,a5,20108850 <__metal_driver_sifive_gpio_led_gpio+0x40>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:589
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
2010884a:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
2010884e:	a011                	j	20108852 <__metal_driver_sifive_gpio_led_gpio+0x42>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:592
		return NULL;
20108850:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:594
}
20108852:	853e                	mv	a0,a5
20108854:	4472                	lw	s0,28(sp)
20108856:	6105                	add	sp,sp,32
20108858:	8082                	ret

2010885a <__metal_driver_sifive_gpio_led_pin>:
__metal_driver_sifive_gpio_led_pin():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:597
{
2010885a:	1101                	add	sp,sp,-32
2010885c:	ce22                	sw	s0,28(sp)
2010885e:	1000                	add	s0,sp,32
20108860:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:598
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
20108864:	fec42703          	lw	a4,-20(s0)
20108868:	81c18793          	add	a5,gp,-2020 # 80000a94 <__metal_dt_led_0>
2010886c:	00f71463          	bne	a4,a5,20108874 <__metal_driver_sifive_gpio_led_pin+0x1a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:599
		return 22;
20108870:	47d9                	li	a5,22
20108872:	a015                	j	20108896 <__metal_driver_sifive_gpio_led_pin+0x3c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:601
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
20108874:	fec42703          	lw	a4,-20(s0)
20108878:	82018793          	add	a5,gp,-2016 # 80000a98 <__metal_dt_led_1>
2010887c:	00f71463          	bne	a4,a5,20108884 <__metal_driver_sifive_gpio_led_pin+0x2a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:602
		return 19;
20108880:	47cd                	li	a5,19
20108882:	a811                	j	20108896 <__metal_driver_sifive_gpio_led_pin+0x3c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:604
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
20108884:	fec42703          	lw	a4,-20(s0)
20108888:	82418793          	add	a5,gp,-2012 # 80000a9c <__metal_dt_led_2>
2010888c:	00f71463          	bne	a4,a5,20108894 <__metal_driver_sifive_gpio_led_pin+0x3a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:605
		return 21;
20108890:	47d5                	li	a5,21
20108892:	a011                	j	20108896 <__metal_driver_sifive_gpio_led_pin+0x3c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:608
		return 0;
20108894:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:610
}
20108896:	853e                	mv	a0,a5
20108898:	4472                	lw	s0,28(sp)
2010889a:	6105                	add	sp,sp,32
2010889c:	8082                	ret

2010889e <__metal_driver_sifive_gpio_led_label>:
__metal_driver_sifive_gpio_led_label():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:613
{
2010889e:	1101                	add	sp,sp,-32
201088a0:	ce22                	sw	s0,28(sp)
201088a2:	1000                	add	s0,sp,32
201088a4:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:614
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
201088a8:	fec42703          	lw	a4,-20(s0)
201088ac:	81c18793          	add	a5,gp,-2020 # 80000a94 <__metal_dt_led_0>
201088b0:	00f71763          	bne	a4,a5,201088be <__metal_driver_sifive_gpio_led_label+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:615
		return "LD0red";
201088b4:	201037b7          	lui	a5,0x20103
201088b8:	4f878793          	add	a5,a5,1272 # 201034f8 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
201088bc:	a81d                	j	201088f2 <__metal_driver_sifive_gpio_led_label+0x54>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:617
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
201088be:	fec42703          	lw	a4,-20(s0)
201088c2:	82018793          	add	a5,gp,-2016 # 80000a98 <__metal_dt_led_1>
201088c6:	00f71763          	bne	a4,a5,201088d4 <__metal_driver_sifive_gpio_led_label+0x36>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:618
		return "LD0green";
201088ca:	201037b7          	lui	a5,0x20103
201088ce:	50078793          	add	a5,a5,1280 # 20103500 <__metal_driver_vtable_sifive_fe310_g000_pll+0x14>
201088d2:	a005                	j	201088f2 <__metal_driver_sifive_gpio_led_label+0x54>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:620
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
201088d4:	fec42703          	lw	a4,-20(s0)
201088d8:	82418793          	add	a5,gp,-2012 # 80000a9c <__metal_dt_led_2>
201088dc:	00f71763          	bne	a4,a5,201088ea <__metal_driver_sifive_gpio_led_label+0x4c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:621
		return "LD0blue";
201088e0:	201037b7          	lui	a5,0x20103
201088e4:	50c78793          	add	a5,a5,1292 # 2010350c <__metal_driver_vtable_sifive_fe310_g000_pll+0x20>
201088e8:	a029                	j	201088f2 <__metal_driver_sifive_gpio_led_label+0x54>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:624
		return "";
201088ea:	201037b7          	lui	a5,0x20103
201088ee:	51478793          	add	a5,a5,1300 # 20103514 <__metal_driver_vtable_sifive_fe310_g000_pll+0x28>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:626
}
201088f2:	853e                	mv	a0,a5
201088f4:	4472                	lw	s0,28(sp)
201088f6:	6105                	add	sp,sp,32
201088f8:	8082                	ret

201088fa <__metal_driver_led_exist>:
__metal_driver_led_exist():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:13
#include <metal/drivers/sifive_gpio-leds.h>
#include <metal/gpio.h>
#include <metal/machine.h>
#include <string.h>

int __metal_driver_led_exist(struct metal_led *led, char *label) {
201088fa:	1101                	add	sp,sp,-32
201088fc:	ce06                	sw	ra,28(sp)
201088fe:	cc22                	sw	s0,24(sp)
20108900:	1000                	add	s0,sp,32
20108902:	fea42623          	sw	a0,-20(s0)
20108906:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:14
    if (strcmp(__metal_driver_sifive_gpio_led_label(led), label) == 0) {
2010890a:	fec42503          	lw	a0,-20(s0)
2010890e:	3f41                	jal	2010889e <__metal_driver_sifive_gpio_led_label>
20108910:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:14 (discriminator 1)
20108912:	fe842583          	lw	a1,-24(s0)
20108916:	853e                	mv	a0,a5
20108918:	79e010ef          	jal	2010a0b6 <strcmp>
2010891c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:14 (discriminator 2)
2010891e:	e399                	bnez	a5,20108924 <__metal_driver_led_exist+0x2a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:15
        return 1;
20108920:	4785                	li	a5,1
20108922:	a011                	j	20108926 <__metal_driver_led_exist+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:17
    }
    return 0;
20108924:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:18
}
20108926:	853e                	mv	a0,a5
20108928:	40f2                	lw	ra,28(sp)
2010892a:	4462                	lw	s0,24(sp)
2010892c:	6105                	add	sp,sp,32
2010892e:	8082                	ret

20108930 <__metal_driver_led_enable>:
__metal_driver_led_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:20

void __metal_driver_led_enable(struct metal_led *led) {
20108930:	7179                	add	sp,sp,-48
20108932:	d606                	sw	ra,44(sp)
20108934:	d422                	sw	s0,40(sp)
20108936:	1800                	add	s0,sp,48
20108938:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:24
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
2010893c:	fdc42503          	lw	a0,-36(s0)
20108940:	f1bff0ef          	jal	2010885a <__metal_driver_sifive_gpio_led_pin>
20108944:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:25
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20108948:	fdc42503          	lw	a0,-36(s0)
2010894c:	ec5ff0ef          	jal	20108810 <__metal_driver_sifive_gpio_led_gpio>
20108950:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:27

    if (gpio != NULL) {
20108954:	fe842783          	lw	a5,-24(s0)
20108958:	cf89                	beqz	a5,20108972 <__metal_driver_led_enable+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:29
        /* Configure LED as output */
        metal_gpio_disable_input((struct metal_gpio *)gpio, pin);
2010895a:	fec42583          	lw	a1,-20(s0)
2010895e:	fe842503          	lw	a0,-24(s0)
20108962:	1a0010ef          	jal	20109b02 <metal_gpio_disable_input>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:30
        metal_gpio_enable_output((struct metal_gpio *)gpio, pin);
20108966:	fec42583          	lw	a1,-20(s0)
2010896a:	fe842503          	lw	a0,-24(s0)
2010896e:	1d4010ef          	jal	20109b42 <metal_gpio_enable_output>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:32
    }
}
20108972:	0001                	nop
20108974:	50b2                	lw	ra,44(sp)
20108976:	5422                	lw	s0,40(sp)
20108978:	6145                	add	sp,sp,48
2010897a:	8082                	ret

2010897c <__metal_driver_led_on>:
__metal_driver_led_on():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:34

void __metal_driver_led_on(struct metal_led *led) {
2010897c:	7179                	add	sp,sp,-48
2010897e:	d606                	sw	ra,44(sp)
20108980:	d422                	sw	s0,40(sp)
20108982:	1800                	add	s0,sp,48
20108984:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:38
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20108988:	fdc42503          	lw	a0,-36(s0)
2010898c:	ecfff0ef          	jal	2010885a <__metal_driver_sifive_gpio_led_pin>
20108990:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:39
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20108994:	fdc42503          	lw	a0,-36(s0)
20108998:	e79ff0ef          	jal	20108810 <__metal_driver_sifive_gpio_led_gpio>
2010899c:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:41

    if (gpio != NULL) {
201089a0:	fe842783          	lw	a5,-24(s0)
201089a4:	cb81                	beqz	a5,201089b4 <__metal_driver_led_on+0x38>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:42
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 1);
201089a6:	4605                	li	a2,1
201089a8:	fec42583          	lw	a1,-20(s0)
201089ac:	fe842503          	lw	a0,-24(s0)
201089b0:	1d2010ef          	jal	20109b82 <metal_gpio_set_pin>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:44
    }
}
201089b4:	0001                	nop
201089b6:	50b2                	lw	ra,44(sp)
201089b8:	5422                	lw	s0,40(sp)
201089ba:	6145                	add	sp,sp,48
201089bc:	8082                	ret

201089be <__metal_driver_led_off>:
__metal_driver_led_off():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:46

void __metal_driver_led_off(struct metal_led *led) {
201089be:	7179                	add	sp,sp,-48
201089c0:	d606                	sw	ra,44(sp)
201089c2:	d422                	sw	s0,40(sp)
201089c4:	1800                	add	s0,sp,48
201089c6:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:50
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
201089ca:	fdc42503          	lw	a0,-36(s0)
201089ce:	e8dff0ef          	jal	2010885a <__metal_driver_sifive_gpio_led_pin>
201089d2:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:51
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
201089d6:	fdc42503          	lw	a0,-36(s0)
201089da:	e37ff0ef          	jal	20108810 <__metal_driver_sifive_gpio_led_gpio>
201089de:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:53

    if (gpio != NULL) {
201089e2:	fe842783          	lw	a5,-24(s0)
201089e6:	cb81                	beqz	a5,201089f6 <__metal_driver_led_off+0x38>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:54
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 0);
201089e8:	4601                	li	a2,0
201089ea:	fec42583          	lw	a1,-20(s0)
201089ee:	fe842503          	lw	a0,-24(s0)
201089f2:	190010ef          	jal	20109b82 <metal_gpio_set_pin>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:56
    }
}
201089f6:	0001                	nop
201089f8:	50b2                	lw	ra,44(sp)
201089fa:	5422                	lw	s0,40(sp)
201089fc:	6145                	add	sp,sp,48
201089fe:	8082                	ret

20108a00 <__metal_driver_led_toggle>:
__metal_driver_led_toggle():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:58

void __metal_driver_led_toggle(struct metal_led *led) {
20108a00:	7179                	add	sp,sp,-48
20108a02:	d606                	sw	ra,44(sp)
20108a04:	d422                	sw	s0,40(sp)
20108a06:	1800                	add	s0,sp,48
20108a08:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:62
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20108a0c:	fdc42503          	lw	a0,-36(s0)
20108a10:	e4bff0ef          	jal	2010885a <__metal_driver_sifive_gpio_led_pin>
20108a14:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:63
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20108a18:	fdc42503          	lw	a0,-36(s0)
20108a1c:	df5ff0ef          	jal	20108810 <__metal_driver_sifive_gpio_led_gpio>
20108a20:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:65

    if (gpio != NULL) {
20108a24:	fe842783          	lw	a5,-24(s0)
20108a28:	c799                	beqz	a5,20108a36 <__metal_driver_led_toggle+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:66
        metal_gpio_toggle_pin((struct metal_gpio *)gpio, pin);
20108a2a:	fec42583          	lw	a1,-20(s0)
20108a2e:	fe842503          	lw	a0,-24(s0)
20108a32:	1b8010ef          	jal	20109bea <metal_gpio_toggle_pin>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio-leds.c:68
    }
}
20108a36:	0001                	nop
20108a38:	50b2                	lw	ra,44(sp)
20108a3a:	5422                	lw	s0,40(sp)
20108a3c:	6145                	add	sp,sp,48
20108a3e:	8082                	ret

20108a40 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:480
{
20108a40:	1101                	add	sp,sp,-32
20108a42:	ce22                	sw	s0,28(sp)
20108a44:	1000                	add	s0,sp,32
20108a46:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:481
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20108a4a:	fec42703          	lw	a4,-20(s0)
20108a4e:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108a52:	00f71563          	bne	a4,a5,20108a5c <__metal_driver_sifive_gpio0_base+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:482
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20108a56:	100127b7          	lui	a5,0x10012
20108a5a:	a011                	j	20108a5e <__metal_driver_sifive_gpio0_base+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:485
		return 0;
20108a5c:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:487
}
20108a5e:	853e                	mv	a0,a5
20108a60:	4472                	lw	s0,28(sp)
20108a62:	6105                	add	sp,sp,32
20108a64:	8082                	ret

20108a66 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:510
{
20108a66:	1101                	add	sp,sp,-32
20108a68:	ce22                	sw	s0,28(sp)
20108a6a:	1000                	add	s0,sp,32
20108a6c:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:511
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20108a70:	fec42703          	lw	a4,-20(s0)
20108a74:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108a78:	00f71763          	bne	a4,a5,20108a86 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:512
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20108a7c:	800007b7          	lui	a5,0x80000
20108a80:	45878793          	add	a5,a5,1112 # 80000458 <__metal_dt_interrupt_controller_c000000>
20108a84:	a011                	j	20108a88 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:515
		return 0;
20108a86:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:517
}
20108a88:	853e                	mv	a0,a5
20108a8a:	4472                	lw	s0,28(sp)
20108a8c:	6105                	add	sp,sp,32
20108a8e:	8082                	ret

20108a90 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:520
{
20108a90:	1101                	add	sp,sp,-32
20108a92:	ce22                	sw	s0,28(sp)
20108a94:	1000                	add	s0,sp,32
20108a96:	fea42623          	sw	a0,-20(s0)
20108a9a:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:521
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20108a9e:	fec42703          	lw	a4,-20(s0)
20108aa2:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108aa6:	00f71763          	bne	a4,a5,20108ab4 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
20108aaa:	fe842783          	lw	a5,-24(s0)
20108aae:	e399                	bnez	a5,20108ab4 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:522
		return 7;
20108ab0:	479d                	li	a5,7
20108ab2:	a269                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20108ab4:	fec42703          	lw	a4,-20(s0)
20108ab8:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108abc:	00f71963          	bne	a4,a5,20108ace <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
20108ac0:	fe842703          	lw	a4,-24(s0)
20108ac4:	4785                	li	a5,1
20108ac6:	00f71463          	bne	a4,a5,20108ace <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:525
		return 8;
20108aca:	47a1                	li	a5,8
20108acc:	aa85                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20108ace:	fec42703          	lw	a4,-20(s0)
20108ad2:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108ad6:	00f71963          	bne	a4,a5,20108ae8 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
20108ada:	fe842703          	lw	a4,-24(s0)
20108ade:	4789                	li	a5,2
20108ae0:	00f71463          	bne	a4,a5,20108ae8 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:528
		return 9;
20108ae4:	47a5                	li	a5,9
20108ae6:	aa99                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20108ae8:	fec42703          	lw	a4,-20(s0)
20108aec:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108af0:	00f71963          	bne	a4,a5,20108b02 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
20108af4:	fe842703          	lw	a4,-24(s0)
20108af8:	478d                	li	a5,3
20108afa:	00f71463          	bne	a4,a5,20108b02 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:531
		return 10;
20108afe:	47a9                	li	a5,10
20108b00:	aa35                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20108b02:	fec42703          	lw	a4,-20(s0)
20108b06:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108b0a:	00f71963          	bne	a4,a5,20108b1c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
20108b0e:	fe842703          	lw	a4,-24(s0)
20108b12:	4791                	li	a5,4
20108b14:	00f71463          	bne	a4,a5,20108b1c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:534
		return 11;
20108b18:	47ad                	li	a5,11
20108b1a:	a20d                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20108b1c:	fec42703          	lw	a4,-20(s0)
20108b20:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108b24:	00f71963          	bne	a4,a5,20108b36 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
20108b28:	fe842703          	lw	a4,-24(s0)
20108b2c:	4795                	li	a5,5
20108b2e:	00f71463          	bne	a4,a5,20108b36 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:537
		return 12;
20108b32:	47b1                	li	a5,12
20108b34:	a221                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20108b36:	fec42703          	lw	a4,-20(s0)
20108b3a:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108b3e:	00f71963          	bne	a4,a5,20108b50 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
20108b42:	fe842703          	lw	a4,-24(s0)
20108b46:	4799                	li	a5,6
20108b48:	00f71463          	bne	a4,a5,20108b50 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:540
		return 13;
20108b4c:	47b5                	li	a5,13
20108b4e:	a0fd                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20108b50:	fec42703          	lw	a4,-20(s0)
20108b54:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108b58:	00f71963          	bne	a4,a5,20108b6a <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
20108b5c:	fe842703          	lw	a4,-24(s0)
20108b60:	479d                	li	a5,7
20108b62:	00f71463          	bne	a4,a5,20108b6a <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:543
		return 14;
20108b66:	47b9                	li	a5,14
20108b68:	a8d1                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20108b6a:	fec42703          	lw	a4,-20(s0)
20108b6e:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108b72:	00f71963          	bne	a4,a5,20108b84 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
20108b76:	fe842703          	lw	a4,-24(s0)
20108b7a:	47a1                	li	a5,8
20108b7c:	00f71463          	bne	a4,a5,20108b84 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:546
		return 15;
20108b80:	47bd                	li	a5,15
20108b82:	a86d                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20108b84:	fec42703          	lw	a4,-20(s0)
20108b88:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108b8c:	00f71963          	bne	a4,a5,20108b9e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
20108b90:	fe842703          	lw	a4,-24(s0)
20108b94:	47a5                	li	a5,9
20108b96:	00f71463          	bne	a4,a5,20108b9e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:549
		return 16;
20108b9a:	47c1                	li	a5,16
20108b9c:	a045                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20108b9e:	fec42703          	lw	a4,-20(s0)
20108ba2:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108ba6:	00f71963          	bne	a4,a5,20108bb8 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
20108baa:	fe842703          	lw	a4,-24(s0)
20108bae:	47a9                	li	a5,10
20108bb0:	00f71463          	bne	a4,a5,20108bb8 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:552
		return 17;
20108bb4:	47c5                	li	a5,17
20108bb6:	a059                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20108bb8:	fec42703          	lw	a4,-20(s0)
20108bbc:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108bc0:	00f71963          	bne	a4,a5,20108bd2 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
20108bc4:	fe842703          	lw	a4,-24(s0)
20108bc8:	47ad                	li	a5,11
20108bca:	00f71463          	bne	a4,a5,20108bd2 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:555
		return 18;
20108bce:	47c9                	li	a5,18
20108bd0:	a0b5                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20108bd2:	fec42703          	lw	a4,-20(s0)
20108bd6:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108bda:	00f71963          	bne	a4,a5,20108bec <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
20108bde:	fe842703          	lw	a4,-24(s0)
20108be2:	47b1                	li	a5,12
20108be4:	00f71463          	bne	a4,a5,20108bec <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:558
		return 19;
20108be8:	47cd                	li	a5,19
20108bea:	a889                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20108bec:	fec42703          	lw	a4,-20(s0)
20108bf0:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108bf4:	00f71963          	bne	a4,a5,20108c06 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
20108bf8:	fe842703          	lw	a4,-24(s0)
20108bfc:	47b5                	li	a5,13
20108bfe:	00f71463          	bne	a4,a5,20108c06 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:561
		return 20;
20108c02:	47d1                	li	a5,20
20108c04:	a825                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:563
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20108c06:	fec42703          	lw	a4,-20(s0)
20108c0a:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108c0e:	00f71963          	bne	a4,a5,20108c20 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:563 (discriminator 1)
20108c12:	fe842703          	lw	a4,-24(s0)
20108c16:	47b9                	li	a5,14
20108c18:	00f71463          	bne	a4,a5,20108c20 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:564
		return 21;
20108c1c:	47d5                	li	a5,21
20108c1e:	a839                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:566
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20108c20:	fec42703          	lw	a4,-20(s0)
20108c24:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
20108c28:	00f71963          	bne	a4,a5,20108c3a <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:566 (discriminator 1)
20108c2c:	fe842703          	lw	a4,-24(s0)
20108c30:	47bd                	li	a5,15
20108c32:	00f71463          	bne	a4,a5,20108c3a <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:567
		return 22;
20108c36:	47d9                	li	a5,22
20108c38:	a011                	j	20108c3c <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:570
		return 0;
20108c3a:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:572
}
20108c3c:	853e                	mv	a0,a5
20108c3e:	4472                	lw	s0,28(sp)
20108c40:	6105                	add	sp,sp,32
20108c42:	8082                	ret

20108c44 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20108c44:	7179                	add	sp,sp,-48
20108c46:	d606                	sw	ra,44(sp)
20108c48:	d422                	sw	s0,40(sp)
20108c4a:	1800                	add	s0,sp,48
20108c4c:	fca42e23          	sw	a0,-36(s0)
20108c50:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108c54:	fdc42503          	lw	a0,-36(s0)
20108c58:	de9ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108c5c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:14 (discriminator 1)
20108c5e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE(
20108c62:	fec42783          	lw	a5,-20(s0)
20108c66:	0791                	add	a5,a5,4
20108c68:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:17
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20108c6a:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:16
    __METAL_ACCESS_ONCE(
20108c6e:	fec42683          	lw	a3,-20(s0)
20108c72:	0691                	add	a3,a3,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:17
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20108c74:	8fd9                	or	a5,a5,a4
20108c76:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20108c78:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20108c7a:	853e                	mv	a0,a5
20108c7c:	50b2                	lw	ra,44(sp)
20108c7e:	5422                	lw	s0,40(sp)
20108c80:	6145                	add	sp,sp,48
20108c82:	8082                	ret

20108c84 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20108c84:	7179                	add	sp,sp,-48
20108c86:	d606                	sw	ra,44(sp)
20108c88:	d422                	sw	s0,40(sp)
20108c8a:	1800                	add	s0,sp,48
20108c8c:	fca42e23          	sw	a0,-36(s0)
20108c90:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108c94:	fdc42503          	lw	a0,-36(s0)
20108c98:	da9ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108c9c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:24 (discriminator 1)
20108c9e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:26

    __METAL_ACCESS_ONCE(
20108ca2:	fec42783          	lw	a5,-20(s0)
20108ca6:	0791                	add	a5,a5,4
20108ca8:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:27
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20108caa:	fd842703          	lw	a4,-40(s0)
20108cae:	fff74713          	not	a4,a4
20108cb2:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:26
    __METAL_ACCESS_ONCE(
20108cb4:	fec42703          	lw	a4,-20(s0)
20108cb8:	0711                	add	a4,a4,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:27
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20108cba:	8ff5                	and	a5,a5,a3
20108cbc:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20108cbe:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20108cc0:	853e                	mv	a0,a5
20108cc2:	50b2                	lw	ra,44(sp)
20108cc4:	5422                	lw	s0,40(sp)
20108cc6:	6145                	add	sp,sp,48
20108cc8:	8082                	ret

20108cca <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20108cca:	7179                	add	sp,sp,-48
20108ccc:	d606                	sw	ra,44(sp)
20108cce:	d422                	sw	s0,40(sp)
20108cd0:	1800                	add	s0,sp,48
20108cd2:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108cd6:	fdc42503          	lw	a0,-36(s0)
20108cda:	d67ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108cde:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:33 (discriminator 1)
20108ce0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20108ce4:	fec42783          	lw	a5,-20(s0)
20108ce8:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20108cea:	853e                	mv	a0,a5
20108cec:	50b2                	lw	ra,44(sp)
20108cee:	5422                	lw	s0,40(sp)
20108cf0:	6145                	add	sp,sp,48
20108cf2:	8082                	ret

20108cf4 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20108cf4:	7179                	add	sp,sp,-48
20108cf6:	d606                	sw	ra,44(sp)
20108cf8:	d422                	sw	s0,40(sp)
20108cfa:	1800                	add	s0,sp,48
20108cfc:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108d00:	fdc42503          	lw	a0,-36(s0)
20108d04:	d3dff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108d08:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:40 (discriminator 1)
20108d0a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20108d0e:	fec42783          	lw	a5,-20(s0)
20108d12:	07b1                	add	a5,a5,12
20108d14:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20108d16:	853e                	mv	a0,a5
20108d18:	50b2                	lw	ra,44(sp)
20108d1a:	5422                	lw	s0,40(sp)
20108d1c:	6145                	add	sp,sp,48
20108d1e:	8082                	ret

20108d20 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20108d20:	7179                	add	sp,sp,-48
20108d22:	d606                	sw	ra,44(sp)
20108d24:	d422                	sw	s0,40(sp)
20108d26:	1800                	add	s0,sp,48
20108d28:	fca42e23          	sw	a0,-36(s0)
20108d2c:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108d30:	fdc42503          	lw	a0,-36(s0)
20108d34:	d0dff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108d38:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:48 (discriminator 1)
20108d3a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:50

    __METAL_ACCESS_ONCE(
20108d3e:	fec42783          	lw	a5,-20(s0)
20108d42:	07a1                	add	a5,a5,8
20108d44:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:51
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20108d46:	fd842703          	lw	a4,-40(s0)
20108d4a:	fff74713          	not	a4,a4
20108d4e:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:50
    __METAL_ACCESS_ONCE(
20108d50:	fec42703          	lw	a4,-20(s0)
20108d54:	0721                	add	a4,a4,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:51
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20108d56:	8ff5                	and	a5,a5,a3
20108d58:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20108d5a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20108d5c:	853e                	mv	a0,a5
20108d5e:	50b2                	lw	ra,44(sp)
20108d60:	5422                	lw	s0,40(sp)
20108d62:	6145                	add	sp,sp,48
20108d64:	8082                	ret

20108d66 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20108d66:	7179                	add	sp,sp,-48
20108d68:	d606                	sw	ra,44(sp)
20108d6a:	d422                	sw	s0,40(sp)
20108d6c:	1800                	add	s0,sp,48
20108d6e:	fca42e23          	sw	a0,-36(s0)
20108d72:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108d76:	fdc42503          	lw	a0,-36(s0)
20108d7a:	cc7ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108d7e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:58 (discriminator 1)
20108d80:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:60

    __METAL_ACCESS_ONCE(
20108d84:	fec42783          	lw	a5,-20(s0)
20108d88:	07a1                	add	a5,a5,8
20108d8a:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:61
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20108d8c:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:60
    __METAL_ACCESS_ONCE(
20108d90:	fec42683          	lw	a3,-20(s0)
20108d94:	06a1                	add	a3,a3,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:61
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20108d96:	8fd9                	or	a5,a5,a4
20108d98:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20108d9a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20108d9c:	853e                	mv	a0,a5
20108d9e:	50b2                	lw	ra,44(sp)
20108da0:	5422                	lw	s0,40(sp)
20108da2:	6145                	add	sp,sp,48
20108da4:	8082                	ret

20108da6 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20108da6:	7179                	add	sp,sp,-48
20108da8:	d606                	sw	ra,44(sp)
20108daa:	d422                	sw	s0,40(sp)
20108dac:	1800                	add	s0,sp,48
20108dae:	fca42e23          	sw	a0,-36(s0)
20108db2:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108db6:	fdc42503          	lw	a0,-36(s0)
20108dba:	c87ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108dbe:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:68 (discriminator 1)
20108dc0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20108dc4:	fec42783          	lw	a5,-20(s0)
20108dc8:	07b1                	add	a5,a5,12
20108dca:	4398                	lw	a4,0(a5)
20108dcc:	fd842783          	lw	a5,-40(s0)
20108dd0:	fec42683          	lw	a3,-20(s0)
20108dd4:	06b1                	add	a3,a3,12
20108dd6:	8fd9                	or	a5,a5,a4
20108dd8:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20108dda:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20108ddc:	853e                	mv	a0,a5
20108dde:	50b2                	lw	ra,44(sp)
20108de0:	5422                	lw	s0,40(sp)
20108de2:	6145                	add	sp,sp,48
20108de4:	8082                	ret

20108de6 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20108de6:	7179                	add	sp,sp,-48
20108de8:	d606                	sw	ra,44(sp)
20108dea:	d422                	sw	s0,40(sp)
20108dec:	1800                	add	s0,sp,48
20108dee:	fca42e23          	sw	a0,-36(s0)
20108df2:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108df6:	fdc42503          	lw	a0,-36(s0)
20108dfa:	c47ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108dfe:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:78 (discriminator 1)
20108e00:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20108e04:	fec42783          	lw	a5,-20(s0)
20108e08:	07b1                	add	a5,a5,12
20108e0a:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20108e0c:	fd842703          	lw	a4,-40(s0)
20108e10:	fff74713          	not	a4,a4
20108e14:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20108e16:	fec42703          	lw	a4,-20(s0)
20108e1a:	0731                	add	a4,a4,12
20108e1c:	8ff5                	and	a5,a5,a3
20108e1e:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20108e20:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20108e22:	853e                	mv	a0,a5
20108e24:	50b2                	lw	ra,44(sp)
20108e26:	5422                	lw	s0,40(sp)
20108e28:	6145                	add	sp,sp,48
20108e2a:	8082                	ret

20108e2c <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20108e2c:	7179                	add	sp,sp,-48
20108e2e:	d606                	sw	ra,44(sp)
20108e30:	d422                	sw	s0,40(sp)
20108e32:	1800                	add	s0,sp,48
20108e34:	fca42e23          	sw	a0,-36(s0)
20108e38:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108e3c:	fdc42503          	lw	a0,-36(s0)
20108e40:	c01ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108e44:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:88 (discriminator 1)
20108e46:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20108e4a:	fec42783          	lw	a5,-20(s0)
20108e4e:	07b1                	add	a5,a5,12
20108e50:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20108e52:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20108e56:	fec42683          	lw	a3,-20(s0)
20108e5a:	06b1                	add	a3,a3,12
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20108e5c:	8fb9                	xor	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20108e5e:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20108e60:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20108e62:	853e                	mv	a0,a5
20108e64:	50b2                	lw	ra,44(sp)
20108e66:	5422                	lw	s0,40(sp)
20108e68:	6145                	add	sp,sp,48
20108e6a:	8082                	ret

20108e6c <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20108e6c:	7179                	add	sp,sp,-48
20108e6e:	d606                	sw	ra,44(sp)
20108e70:	d422                	sw	s0,40(sp)
20108e72:	1800                	add	s0,sp,48
20108e74:	fca42e23          	sw	a0,-36(s0)
20108e78:	fcb42c23          	sw	a1,-40(s0)
20108e7c:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108e80:	fdc42503          	lw	a0,-36(s0)
20108e84:	bbdff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108e88:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:100 (discriminator 1)
20108e8a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:102

    __METAL_ACCESS_ONCE(
20108e8e:	fec42783          	lw	a5,-20(s0)
20108e92:	03c78793          	add	a5,a5,60
20108e96:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:103
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20108e98:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:102
    __METAL_ACCESS_ONCE(
20108e9c:	fec42683          	lw	a3,-20(s0)
20108ea0:	03c68693          	add	a3,a3,60
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:103
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20108ea4:	8fd9                	or	a5,a5,a4
20108ea6:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20108ea8:	fec42783          	lw	a5,-20(s0)
20108eac:	03878793          	add	a5,a5,56
20108eb0:	4398                	lw	a4,0(a5)
20108eb2:	fd442783          	lw	a5,-44(s0)
20108eb6:	fec42683          	lw	a3,-20(s0)
20108eba:	03868693          	add	a3,a3,56
20108ebe:	8fd9                	or	a5,a5,a4
20108ec0:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20108ec2:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20108ec4:	853e                	mv	a0,a5
20108ec6:	50b2                	lw	ra,44(sp)
20108ec8:	5422                	lw	s0,40(sp)
20108eca:	6145                	add	sp,sp,48
20108ecc:	8082                	ret

20108ece <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20108ece:	7179                	add	sp,sp,-48
20108ed0:	d606                	sw	ra,44(sp)
20108ed2:	d422                	sw	s0,40(sp)
20108ed4:	1800                	add	s0,sp,48
20108ed6:	fca42e23          	sw	a0,-36(s0)
20108eda:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108ede:	fdc42503          	lw	a0,-36(s0)
20108ee2:	b5fff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108ee6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:112 (discriminator 1)
20108ee8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20108eec:	fec42783          	lw	a5,-20(s0)
20108ef0:	03878793          	add	a5,a5,56
20108ef4:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20108ef6:	fd842703          	lw	a4,-40(s0)
20108efa:	fff74713          	not	a4,a4
20108efe:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20108f00:	fec42703          	lw	a4,-20(s0)
20108f04:	03870713          	add	a4,a4,56
20108f08:	8ff5                	and	a5,a5,a3
20108f0a:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20108f0c:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20108f0e:	853e                	mv	a0,a5
20108f10:	50b2                	lw	ra,44(sp)
20108f12:	5422                	lw	s0,40(sp)
20108f14:	6145                	add	sp,sp,48
20108f16:	8082                	ret

20108f18 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20108f18:	7179                	add	sp,sp,-48
20108f1a:	d606                	sw	ra,44(sp)
20108f1c:	d422                	sw	s0,40(sp)
20108f1e:	1800                	add	s0,sp,48
20108f20:	fca42e23          	sw	a0,-36(s0)
20108f24:	fcb42c23          	sw	a1,-40(s0)
20108f28:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20108f2c:	fdc42503          	lw	a0,-36(s0)
20108f30:	b11ff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
20108f34:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:122 (discriminator 1)
20108f36:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20108f3a:	fd442703          	lw	a4,-44(s0)
20108f3e:	479d                	li	a5,7
20108f40:	1ce7e963          	bltu	a5,a4,20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20108f44:	fd442783          	lw	a5,-44(s0)
20108f48:	00279713          	sll	a4,a5,0x2
20108f4c:	201037b7          	lui	a5,0x20103
20108f50:	52c78793          	add	a5,a5,1324 # 2010352c <__metal_driver_vtable_sifive_led+0x14>
20108f54:	97ba                	add	a5,a5,a4
20108f56:	439c                	lw	a5,0(a5)
20108f58:	8782                	jr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:126
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
20108f5a:	fec42783          	lw	a5,-20(s0)
20108f5e:	07e1                	add	a5,a5,24
20108f60:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:127
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20108f62:	fd842703          	lw	a4,-40(s0)
20108f66:	fff74713          	not	a4,a4
20108f6a:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:126
        __METAL_ACCESS_ONCE(
20108f6c:	fec42703          	lw	a4,-20(s0)
20108f70:	0761                	add	a4,a4,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:127
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20108f72:	8ff5                	and	a5,a5,a3
20108f74:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:128
        __METAL_ACCESS_ONCE(
20108f76:	fec42783          	lw	a5,-20(s0)
20108f7a:	02078793          	add	a5,a5,32
20108f7e:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:129
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20108f80:	fd842703          	lw	a4,-40(s0)
20108f84:	fff74713          	not	a4,a4
20108f88:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:128
        __METAL_ACCESS_ONCE(
20108f8a:	fec42703          	lw	a4,-20(s0)
20108f8e:	02070713          	add	a4,a4,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:129
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20108f92:	8ff5                	and	a5,a5,a3
20108f94:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:130
        __METAL_ACCESS_ONCE(
20108f96:	fec42783          	lw	a5,-20(s0)
20108f9a:	02878793          	add	a5,a5,40
20108f9e:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:131
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20108fa0:	fd842703          	lw	a4,-40(s0)
20108fa4:	fff74713          	not	a4,a4
20108fa8:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:130
        __METAL_ACCESS_ONCE(
20108faa:	fec42703          	lw	a4,-20(s0)
20108fae:	02870713          	add	a4,a4,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:131
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20108fb2:	8ff5                	and	a5,a5,a3
20108fb4:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:132
        __METAL_ACCESS_ONCE(
20108fb6:	fec42783          	lw	a5,-20(s0)
20108fba:	03078793          	add	a5,a5,48
20108fbe:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:133
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20108fc0:	fd842703          	lw	a4,-40(s0)
20108fc4:	fff74713          	not	a4,a4
20108fc8:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:132
        __METAL_ACCESS_ONCE(
20108fca:	fec42703          	lw	a4,-20(s0)
20108fce:	03070713          	add	a4,a4,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:133
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20108fd2:	8ff5                	and	a5,a5,a3
20108fd4:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20108fd6:	aa35                	j	20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:136
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
20108fd8:	fec42783          	lw	a5,-20(s0)
20108fdc:	07e1                	add	a5,a5,24
20108fde:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:137
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20108fe0:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:136
        __METAL_ACCESS_ONCE(
20108fe4:	fec42683          	lw	a3,-20(s0)
20108fe8:	06e1                	add	a3,a3,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:137
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20108fea:	8fd9                	or	a5,a5,a4
20108fec:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20108fee:	a215                	j	20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:140
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
20108ff0:	fec42783          	lw	a5,-20(s0)
20108ff4:	02078793          	add	a5,a5,32
20108ff8:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:141
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20108ffa:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:140
        __METAL_ACCESS_ONCE(
20108ffe:	fec42683          	lw	a3,-20(s0)
20109002:	02068693          	add	a3,a3,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:141
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20109006:	8fd9                	or	a5,a5,a4
20109008:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
2010900a:	a221                	j	20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:144
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
2010900c:	fec42783          	lw	a5,-20(s0)
20109010:	07e1                	add	a5,a5,24
20109012:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:145
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20109014:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:144
        __METAL_ACCESS_ONCE(
20109018:	fec42683          	lw	a3,-20(s0)
2010901c:	06e1                	add	a3,a3,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:145
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010901e:	8fd9                	or	a5,a5,a4
20109020:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:146
        __METAL_ACCESS_ONCE(
20109022:	fec42783          	lw	a5,-20(s0)
20109026:	02078793          	add	a5,a5,32
2010902a:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:147
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010902c:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:146
        __METAL_ACCESS_ONCE(
20109030:	fec42683          	lw	a3,-20(s0)
20109034:	02068693          	add	a3,a3,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:147
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20109038:	8fd9                	or	a5,a5,a4
2010903a:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
2010903c:	a8d9                	j	20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:150
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
2010903e:	fec42783          	lw	a5,-20(s0)
20109042:	02878793          	add	a5,a5,40
20109046:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:151
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20109048:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:150
        __METAL_ACCESS_ONCE(
2010904c:	fec42683          	lw	a3,-20(s0)
20109050:	02868693          	add	a3,a3,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:151
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20109054:	8fd9                	or	a5,a5,a4
20109056:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20109058:	a86d                	j	20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:154
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
2010905a:	fec42783          	lw	a5,-20(s0)
2010905e:	03078793          	add	a5,a5,48
20109062:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:155
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20109064:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:154
        __METAL_ACCESS_ONCE(
20109068:	fec42683          	lw	a3,-20(s0)
2010906c:	03068693          	add	a3,a3,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:155
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20109070:	8fd9                	or	a5,a5,a4
20109072:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20109074:	a879                	j	20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:158
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
20109076:	fec42783          	lw	a5,-20(s0)
2010907a:	02878793          	add	a5,a5,40
2010907e:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:159
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20109080:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:158
        __METAL_ACCESS_ONCE(
20109084:	fec42683          	lw	a3,-20(s0)
20109088:	02868693          	add	a3,a3,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:159
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010908c:	8fd9                	or	a5,a5,a4
2010908e:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:160
        __METAL_ACCESS_ONCE(
20109090:	fec42783          	lw	a5,-20(s0)
20109094:	03078793          	add	a5,a5,48
20109098:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:161
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010909a:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:160
        __METAL_ACCESS_ONCE(
2010909e:	fec42683          	lw	a3,-20(s0)
201090a2:	03068693          	add	a3,a3,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:161
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
201090a6:	8fd9                	or	a5,a5,a4
201090a8:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
201090aa:	a0a5                	j	20109112 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:164
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
201090ac:	fec42783          	lw	a5,-20(s0)
201090b0:	07e1                	add	a5,a5,24
201090b2:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:165
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
201090b4:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:164
        __METAL_ACCESS_ONCE(
201090b8:	fec42683          	lw	a3,-20(s0)
201090bc:	06e1                	add	a3,a3,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:165
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
201090be:	8fd9                	or	a5,a5,a4
201090c0:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:166
        __METAL_ACCESS_ONCE(
201090c2:	fec42783          	lw	a5,-20(s0)
201090c6:	02078793          	add	a5,a5,32
201090ca:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:167
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
201090cc:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:166
        __METAL_ACCESS_ONCE(
201090d0:	fec42683          	lw	a3,-20(s0)
201090d4:	02068693          	add	a3,a3,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:167
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
201090d8:	8fd9                	or	a5,a5,a4
201090da:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:168
        __METAL_ACCESS_ONCE(
201090dc:	fec42783          	lw	a5,-20(s0)
201090e0:	02878793          	add	a5,a5,40
201090e4:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:169
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
201090e6:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:168
        __METAL_ACCESS_ONCE(
201090ea:	fec42683          	lw	a3,-20(s0)
201090ee:	02868693          	add	a3,a3,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:169
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
201090f2:	8fd9                	or	a5,a5,a4
201090f4:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:170
        __METAL_ACCESS_ONCE(
201090f6:	fec42783          	lw	a5,-20(s0)
201090fa:	03078793          	add	a5,a5,48
201090fe:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:171
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20109100:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:170
        __METAL_ACCESS_ONCE(
20109104:	fec42683          	lw	a3,-20(s0)
20109108:	03068693          	add	a3,a3,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:171
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010910c:	8fd9                	or	a5,a5,a4
2010910e:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20109110:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20109112:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20109114:	853e                	mv	a0,a5
20109116:	50b2                	lw	ra,44(sp)
20109118:	5422                	lw	s0,40(sp)
2010911a:	6145                	add	sp,sp,48
2010911c:	8082                	ret

2010911e <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
2010911e:	7179                	add	sp,sp,-48
20109120:	d606                	sw	ra,44(sp)
20109122:	d422                	sw	s0,40(sp)
20109124:	1800                	add	s0,sp,48
20109126:	fca42e23          	sw	a0,-36(s0)
2010912a:	fcb42c23          	sw	a1,-40(s0)
2010912e:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20109132:	fdc42503          	lw	a0,-36(s0)
20109136:	90bff0ef          	jal	20108a40 <__metal_driver_sifive_gpio0_base>
2010913a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:179 (discriminator 1)
2010913c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
20109140:	fd442703          	lw	a4,-44(s0)
20109144:	479d                	li	a5,7
20109146:	14e7ea63          	bltu	a5,a4,2010929a <__metal_driver_sifive_gpio0_clear_int+0x17c>
2010914a:	fd442783          	lw	a5,-44(s0)
2010914e:	00279713          	sll	a4,a5,0x2
20109152:	201037b7          	lui	a5,0x20103
20109156:	54c78793          	add	a5,a5,1356 # 2010354c <__metal_driver_vtable_sifive_led+0x34>
2010915a:	97ba                	add	a5,a5,a4
2010915c:	439c                	lw	a5,0(a5)
2010915e:	8782                	jr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:183
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
20109160:	fec42783          	lw	a5,-20(s0)
20109164:	07f1                	add	a5,a5,28
20109166:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:184
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20109168:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:183
        __METAL_ACCESS_ONCE(
2010916c:	fec42683          	lw	a3,-20(s0)
20109170:	06f1                	add	a3,a3,28
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:184
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20109172:	8fd9                	or	a5,a5,a4
20109174:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20109176:	a215                	j	2010929a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:187
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
20109178:	fec42783          	lw	a5,-20(s0)
2010917c:	02478793          	add	a5,a5,36
20109180:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:188
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20109182:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:187
        __METAL_ACCESS_ONCE(
20109186:	fec42683          	lw	a3,-20(s0)
2010918a:	02468693          	add	a3,a3,36
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:188
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010918e:	8fd9                	or	a5,a5,a4
20109190:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20109192:	a221                	j	2010929a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:191
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
20109194:	fec42783          	lw	a5,-20(s0)
20109198:	07f1                	add	a5,a5,28
2010919a:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:192
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010919c:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:191
        __METAL_ACCESS_ONCE(
201091a0:	fec42683          	lw	a3,-20(s0)
201091a4:	06f1                	add	a3,a3,28
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:192
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
201091a6:	8fd9                	or	a5,a5,a4
201091a8:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:193
        __METAL_ACCESS_ONCE(
201091aa:	fec42783          	lw	a5,-20(s0)
201091ae:	02478793          	add	a5,a5,36
201091b2:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:194
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
201091b4:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:193
        __METAL_ACCESS_ONCE(
201091b8:	fec42683          	lw	a3,-20(s0)
201091bc:	02468693          	add	a3,a3,36
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:194
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
201091c0:	8fd9                	or	a5,a5,a4
201091c2:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
201091c4:	a8d9                	j	2010929a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:197
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
201091c6:	fec42783          	lw	a5,-20(s0)
201091ca:	02c78793          	add	a5,a5,44
201091ce:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:198
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
201091d0:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:197
        __METAL_ACCESS_ONCE(
201091d4:	fec42683          	lw	a3,-20(s0)
201091d8:	02c68693          	add	a3,a3,44
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:198
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
201091dc:	8fd9                	or	a5,a5,a4
201091de:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
201091e0:	a86d                	j	2010929a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:201
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
201091e2:	fec42783          	lw	a5,-20(s0)
201091e6:	03478793          	add	a5,a5,52
201091ea:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:202
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
201091ec:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:201
        __METAL_ACCESS_ONCE(
201091f0:	fec42683          	lw	a3,-20(s0)
201091f4:	03468693          	add	a3,a3,52
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:202
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
201091f8:	8fd9                	or	a5,a5,a4
201091fa:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
201091fc:	a879                	j	2010929a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:205
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
201091fe:	fec42783          	lw	a5,-20(s0)
20109202:	02c78793          	add	a5,a5,44
20109206:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:206
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20109208:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:205
        __METAL_ACCESS_ONCE(
2010920c:	fec42683          	lw	a3,-20(s0)
20109210:	02c68693          	add	a3,a3,44
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:206
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20109214:	8fd9                	or	a5,a5,a4
20109216:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:207
        __METAL_ACCESS_ONCE(
20109218:	fec42783          	lw	a5,-20(s0)
2010921c:	03478793          	add	a5,a5,52
20109220:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:208
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20109222:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:207
        __METAL_ACCESS_ONCE(
20109226:	fec42683          	lw	a3,-20(s0)
2010922a:	03468693          	add	a3,a3,52
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:208
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010922e:	8fd9                	or	a5,a5,a4
20109230:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20109232:	a0a5                	j	2010929a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:211
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
20109234:	fec42783          	lw	a5,-20(s0)
20109238:	07f1                	add	a5,a5,28
2010923a:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:212
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010923c:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:211
        __METAL_ACCESS_ONCE(
20109240:	fec42683          	lw	a3,-20(s0)
20109244:	06f1                	add	a3,a3,28
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:212
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20109246:	8fd9                	or	a5,a5,a4
20109248:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:213
        __METAL_ACCESS_ONCE(
2010924a:	fec42783          	lw	a5,-20(s0)
2010924e:	02478793          	add	a5,a5,36
20109252:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:214
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20109254:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:213
        __METAL_ACCESS_ONCE(
20109258:	fec42683          	lw	a3,-20(s0)
2010925c:	02468693          	add	a3,a3,36
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:214
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20109260:	8fd9                	or	a5,a5,a4
20109262:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:215
        __METAL_ACCESS_ONCE(
20109264:	fec42783          	lw	a5,-20(s0)
20109268:	02c78793          	add	a5,a5,44
2010926c:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:216
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010926e:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:215
        __METAL_ACCESS_ONCE(
20109272:	fec42683          	lw	a3,-20(s0)
20109276:	02c68693          	add	a3,a3,44
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:216
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010927a:	8fd9                	or	a5,a5,a4
2010927c:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:217
        __METAL_ACCESS_ONCE(
2010927e:	fec42783          	lw	a5,-20(s0)
20109282:	03478793          	add	a5,a5,52
20109286:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:218
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20109288:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:217
        __METAL_ACCESS_ONCE(
2010928c:	fec42683          	lw	a3,-20(s0)
20109290:	03468693          	add	a3,a3,52
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:218
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20109294:	8fd9                	or	a5,a5,a4
20109296:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20109298:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
2010929a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:222
}
2010929c:	853e                	mv	a0,a5
2010929e:	50b2                	lw	ra,44(sp)
201092a0:	5422                	lw	s0,40(sp)
201092a2:	6145                	add	sp,sp,48
201092a4:	8082                	ret

201092a6 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
201092a6:	1101                	add	sp,sp,-32
201092a8:	ce06                	sw	ra,28(sp)
201092aa:	cc22                	sw	s0,24(sp)
201092ac:	1000                	add	s0,sp,32
201092ae:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
201092b2:	fec42503          	lw	a0,-20(s0)
201092b6:	fb0ff0ef          	jal	20108a66 <__metal_driver_sifive_gpio0_interrupt_parent>
201092ba:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:227
}
201092bc:	853e                	mv	a0,a5
201092be:	40f2                	lw	ra,28(sp)
201092c0:	4462                	lw	s0,24(sp)
201092c2:	6105                	add	sp,sp,32
201092c4:	8082                	ret

201092c6 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
201092c6:	7179                	add	sp,sp,-48
201092c8:	d606                	sw	ra,44(sp)
201092ca:	d422                	sw	s0,40(sp)
201092cc:	1800                	add	s0,sp,48
201092ce:	fca42e23          	sw	a0,-36(s0)
201092d2:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
201092d6:	fd842583          	lw	a1,-40(s0)
201092da:	fdc42503          	lw	a0,-36(s0)
201092de:	fb2ff0ef          	jal	20108a90 <__metal_driver_sifive_gpio0_interrupt_lines>
201092e2:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
201092e6:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:233
}
201092ea:	853e                	mv	a0,a5
201092ec:	50b2                	lw	ra,44(sp)
201092ee:	5422                	lw	s0,40(sp)
201092f0:	6145                	add	sp,sp,48
201092f2:	8082                	ret

201092f4 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:958
{
201092f4:	1101                	add	sp,sp,-32
201092f6:	ce22                	sw	s0,28(sp)
201092f8:	1000                	add	s0,sp,32
201092fa:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
201092fe:	fec42703          	lw	a4,-20(s0)
20109302:	800017b7          	lui	a5,0x80001
20109306:	a3078793          	add	a5,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
2010930a:	00f71563          	bne	a4,a5,20109314 <__metal_driver_sifive_uart0_control_base+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:960
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
2010930e:	100137b7          	lui	a5,0x10013
20109312:	a011                	j	20109316 <__metal_driver_sifive_uart0_control_base+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:963
		return 0;
20109314:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:965
}
20109316:	853e                	mv	a0,a5
20109318:	4472                	lw	s0,28(sp)
2010931a:	6105                	add	sp,sp,32
2010931c:	8082                	ret

2010931e <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:988
{
2010931e:	1101                	add	sp,sp,-32
20109320:	ce22                	sw	s0,28(sp)
20109322:	1000                	add	s0,sp,32
20109324:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:989
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20109328:	fec42703          	lw	a4,-20(s0)
2010932c:	800017b7          	lui	a5,0x80001
20109330:	a3078793          	add	a5,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
20109334:	00f71763          	bne	a4,a5,20109342 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:990
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20109338:	800007b7          	lui	a5,0x80000
2010933c:	45878793          	add	a5,a5,1112 # 80000458 <__metal_dt_interrupt_controller_c000000>
20109340:	a011                	j	20109344 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:993
		return 0;
20109342:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:995
}
20109344:	853e                	mv	a0,a5
20109346:	4472                	lw	s0,28(sp)
20109348:	6105                	add	sp,sp,32
2010934a:	8082                	ret

2010934c <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:998
{
2010934c:	1101                	add	sp,sp,-32
2010934e:	ce22                	sw	s0,28(sp)
20109350:	1000                	add	s0,sp,32
20109352:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:999
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20109356:	fec42703          	lw	a4,-20(s0)
2010935a:	800017b7          	lui	a5,0x80001
2010935e:	a3078793          	add	a5,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
20109362:	00f71463          	bne	a4,a5,2010936a <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1000
		return 5;
20109366:	4795                	li	a5,5
20109368:	a011                	j	2010936c <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1003
		return 0;
2010936a:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1005
}
2010936c:	853e                	mv	a0,a5
2010936e:	4472                	lw	s0,28(sp)
20109370:	6105                	add	sp,sp,32
20109372:	8082                	ret

20109374 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1008
{
20109374:	1101                	add	sp,sp,-32
20109376:	ce22                	sw	s0,28(sp)
20109378:	1000                	add	s0,sp,32
2010937a:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1009
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010937e:	fec42703          	lw	a4,-20(s0)
20109382:	800017b7          	lui	a5,0x80001
20109386:	a3078793          	add	a5,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
2010938a:	00f71763          	bne	a4,a5,20109398 <__metal_driver_sifive_uart0_clock+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1010
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
2010938e:	800017b7          	lui	a5,0x80001
20109392:	a6878793          	add	a5,a5,-1432 # 80000a68 <__metal_dt_clock_4>
20109396:	a011                	j	2010939a <__metal_driver_sifive_uart0_clock+0x26>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1013
		return 0;
20109398:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1015
}
2010939a:	853e                	mv	a0,a5
2010939c:	4472                	lw	s0,28(sp)
2010939e:	6105                	add	sp,sp,32
201093a0:	8082                	ret

201093a2 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1018
{
201093a2:	1101                	add	sp,sp,-32
201093a4:	ce22                	sw	s0,28(sp)
201093a6:	1000                	add	s0,sp,32
201093a8:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1019
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
201093ac:	fec42703          	lw	a4,-20(s0)
201093b0:	800017b7          	lui	a5,0x80001
201093b4:	a3078793          	add	a5,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
201093b8:	00f71563          	bne	a4,a5,201093c2 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1020
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
201093bc:	81818793          	add	a5,gp,-2024 # 80000a90 <__metal_dt_gpio_10012000>
201093c0:	a011                	j	201093c4 <__metal_driver_sifive_uart0_pinmux+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1023
		return 0;
201093c2:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1025
}
201093c4:	853e                	mv	a0,a5
201093c6:	4472                	lw	s0,28(sp)
201093c8:	6105                	add	sp,sp,32
201093ca:	8082                	ret

201093cc <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1028
{
201093cc:	1101                	add	sp,sp,-32
201093ce:	ce22                	sw	s0,28(sp)
201093d0:	1000                	add	s0,sp,32
201093d2:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1029
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
201093d6:	fec42703          	lw	a4,-20(s0)
201093da:	800017b7          	lui	a5,0x80001
201093de:	a3078793          	add	a5,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
201093e2:	00f71463          	bne	a4,a5,201093ea <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1030
		return 0;
201093e6:	4781                	li	a5,0
201093e8:	a011                	j	201093ec <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1033
		return 0;
201093ea:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1035
}
201093ec:	853e                	mv	a0,a5
201093ee:	4472                	lw	s0,28(sp)
201093f0:	6105                	add	sp,sp,32
201093f2:	8082                	ret

201093f4 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1038
{
201093f4:	1101                	add	sp,sp,-32
201093f6:	ce22                	sw	s0,28(sp)
201093f8:	1000                	add	s0,sp,32
201093fa:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1039
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
201093fe:	fec42703          	lw	a4,-20(s0)
20109402:	800017b7          	lui	a5,0x80001
20109406:	a3078793          	add	a5,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
2010940a:	00f71563          	bne	a4,a5,20109414 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1040
		return 196608;
2010940e:	000307b7          	lui	a5,0x30
20109412:	a011                	j	20109416 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1043
		return 0;
20109414:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1045
}
20109416:	853e                	mv	a0,a5
20109418:	4472                	lw	s0,28(sp)
2010941a:	6105                	add	sp,sp,32
2010941c:	8082                	ret

2010941e <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
2010941e:	1101                	add	sp,sp,-32
20109420:	ce06                	sw	ra,28(sp)
20109422:	cc22                	sw	s0,24(sp)
20109424:	1000                	add	s0,sp,32
20109426:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
2010942a:	fec42503          	lw	a0,-20(s0)
2010942e:	ef1ff0ef          	jal	2010931e <__metal_driver_sifive_uart0_interrupt_parent>
20109432:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:39
}
20109434:	853e                	mv	a0,a5
20109436:	40f2                	lw	ra,28(sp)
20109438:	4462                	lw	s0,24(sp)
2010943a:	6105                	add	sp,sp,32
2010943c:	8082                	ret

2010943e <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
2010943e:	1101                	add	sp,sp,-32
20109440:	ce06                	sw	ra,28(sp)
20109442:	cc22                	sw	s0,24(sp)
20109444:	1000                	add	s0,sp,32
20109446:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
2010944a:	fec42503          	lw	a0,-20(s0)
2010944e:	effff0ef          	jal	2010934c <__metal_driver_sifive_uart0_interrupt_line>
20109452:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:43
}
20109454:	853e                	mv	a0,a5
20109456:	40f2                	lw	ra,28(sp)
20109458:	4462                	lw	s0,24(sp)
2010945a:	6105                	add	sp,sp,32
2010945c:	8082                	ret

2010945e <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
2010945e:	7179                	add	sp,sp,-48
20109460:	d606                	sw	ra,44(sp)
20109462:	d422                	sw	s0,40(sp)
20109464:	1800                	add	s0,sp,48
20109466:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010946a:	fdc42503          	lw	a0,-36(s0)
2010946e:	e87ff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
20109472:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:46 (discriminator 1)
20109474:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20109478:	fec42783          	lw	a5,-20(s0)
2010947c:	07c1                	add	a5,a5,16 # 30010 <__heap_size+0x2f810>
2010947e:	439c                	lw	a5,0(a5)
20109480:	fec42703          	lw	a4,-20(s0)
20109484:	0741                	add	a4,a4,16
20109486:	0017e793          	or	a5,a5,1
2010948a:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
2010948c:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:50
}
2010948e:	853e                	mv	a0,a5
20109490:	50b2                	lw	ra,44(sp)
20109492:	5422                	lw	s0,40(sp)
20109494:	6145                	add	sp,sp,48
20109496:	8082                	ret

20109498 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20109498:	7179                	add	sp,sp,-48
2010949a:	d606                	sw	ra,44(sp)
2010949c:	d422                	sw	s0,40(sp)
2010949e:	1800                	add	s0,sp,48
201094a0:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
201094a4:	fdc42503          	lw	a0,-36(s0)
201094a8:	e4dff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
201094ac:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:53 (discriminator 1)
201094ae:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
201094b2:	fec42783          	lw	a5,-20(s0)
201094b6:	07c1                	add	a5,a5,16
201094b8:	439c                	lw	a5,0(a5)
201094ba:	fec42703          	lw	a4,-20(s0)
201094be:	0741                	add	a4,a4,16
201094c0:	9bf9                	and	a5,a5,-2
201094c2:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
201094c4:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:57
}
201094c6:	853e                	mv	a0,a5
201094c8:	50b2                	lw	ra,44(sp)
201094ca:	5422                	lw	s0,40(sp)
201094cc:	6145                	add	sp,sp,48
201094ce:	8082                	ret

201094d0 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
201094d0:	7179                	add	sp,sp,-48
201094d2:	d606                	sw	ra,44(sp)
201094d4:	d422                	sw	s0,40(sp)
201094d6:	1800                	add	s0,sp,48
201094d8:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
201094dc:	fdc42503          	lw	a0,-36(s0)
201094e0:	e15ff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
201094e4:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:60 (discriminator 1)
201094e6:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
201094ea:	fec42783          	lw	a5,-20(s0)
201094ee:	07c1                	add	a5,a5,16
201094f0:	439c                	lw	a5,0(a5)
201094f2:	fec42703          	lw	a4,-20(s0)
201094f6:	0741                	add	a4,a4,16
201094f8:	0027e793          	or	a5,a5,2
201094fc:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
201094fe:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:64
}
20109500:	853e                	mv	a0,a5
20109502:	50b2                	lw	ra,44(sp)
20109504:	5422                	lw	s0,40(sp)
20109506:	6145                	add	sp,sp,48
20109508:	8082                	ret

2010950a <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
2010950a:	7179                	add	sp,sp,-48
2010950c:	d606                	sw	ra,44(sp)
2010950e:	d422                	sw	s0,40(sp)
20109510:	1800                	add	s0,sp,48
20109512:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20109516:	fdc42503          	lw	a0,-36(s0)
2010951a:	ddbff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
2010951e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:67 (discriminator 1)
20109520:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20109524:	fec42783          	lw	a5,-20(s0)
20109528:	07c1                	add	a5,a5,16
2010952a:	439c                	lw	a5,0(a5)
2010952c:	fec42703          	lw	a4,-20(s0)
20109530:	0741                	add	a4,a4,16
20109532:	9bf5                	and	a5,a5,-3
20109534:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20109536:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:71
}
20109538:	853e                	mv	a0,a5
2010953a:	50b2                	lw	ra,44(sp)
2010953c:	5422                	lw	s0,40(sp)
2010953e:	6145                	add	sp,sp,48
20109540:	8082                	ret

20109542 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20109542:	7179                	add	sp,sp,-48
20109544:	d606                	sw	ra,44(sp)
20109546:	d422                	sw	s0,40(sp)
20109548:	1800                	add	s0,sp,48
2010954a:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010954e:	fdc42503          	lw	a0,-36(s0)
20109552:	da3ff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
20109556:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:74 (discriminator 1)
20109558:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2010955c:	fec42783          	lw	a5,-20(s0)
20109560:	439c                	lw	a5,0(a5)
20109562:	83fd                	srl	a5,a5,0x1f
20109564:	0ff7f793          	zext.b	a5,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:77
}
20109568:	853e                	mv	a0,a5
2010956a:	50b2                	lw	ra,44(sp)
2010956c:	5422                	lw	s0,40(sp)
2010956e:	6145                	add	sp,sp,48
20109570:	8082                	ret

20109572 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20109572:	7179                	add	sp,sp,-48
20109574:	d606                	sw	ra,44(sp)
20109576:	d422                	sw	s0,40(sp)
20109578:	1800                	add	s0,sp,48
2010957a:	fca42e23          	sw	a0,-36(s0)
2010957e:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20109582:	fdc42503          	lw	a0,-36(s0)
20109586:	d6fff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
2010958a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:81 (discriminator 1)
2010958c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20109590:	fec42783          	lw	a5,-20(s0)
20109594:	07a1                	add	a5,a5,8
20109596:	4398                	lw	a4,0(a5)
20109598:	fd842783          	lw	a5,-40(s0)
2010959c:	01079693          	sll	a3,a5,0x10
201095a0:	000707b7          	lui	a5,0x70
201095a4:	8ff5                	and	a5,a5,a3
201095a6:	fec42683          	lw	a3,-20(s0)
201095aa:	06a1                	add	a3,a3,8
201095ac:	8fd9                	or	a5,a5,a4
201095ae:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
201095b0:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:85
}
201095b2:	853e                	mv	a0,a5
201095b4:	50b2                	lw	ra,44(sp)
201095b6:	5422                	lw	s0,40(sp)
201095b8:	6145                	add	sp,sp,48
201095ba:	8082                	ret

201095bc <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
201095bc:	7179                	add	sp,sp,-48
201095be:	d606                	sw	ra,44(sp)
201095c0:	d422                	sw	s0,40(sp)
201095c2:	1800                	add	s0,sp,48
201095c4:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
201095c8:	fdc42503          	lw	a0,-36(s0)
201095cc:	d29ff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
201095d0:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:88 (discriminator 1)
201095d2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
201095d6:	fec42783          	lw	a5,-20(s0)
201095da:	07a1                	add	a5,a5,8 # 70008 <__heap_size+0x6f808>
201095dc:	439c                	lw	a5,0(a5)
201095de:	83c1                	srl	a5,a5,0x10
201095e0:	8b9d                	and	a5,a5,7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:91
}
201095e2:	853e                	mv	a0,a5
201095e4:	50b2                	lw	ra,44(sp)
201095e6:	5422                	lw	s0,40(sp)
201095e8:	6145                	add	sp,sp,48
201095ea:	8082                	ret

201095ec <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
201095ec:	7179                	add	sp,sp,-48
201095ee:	d606                	sw	ra,44(sp)
201095f0:	d422                	sw	s0,40(sp)
201095f2:	1800                	add	s0,sp,48
201095f4:	fca42e23          	sw	a0,-36(s0)
201095f8:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
201095fc:	fdc42503          	lw	a0,-36(s0)
20109600:	cf5ff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
20109604:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:95 (discriminator 1)
20109606:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
2010960a:	fec42783          	lw	a5,-20(s0)
2010960e:	07b1                	add	a5,a5,12
20109610:	4398                	lw	a4,0(a5)
20109612:	fd842783          	lw	a5,-40(s0)
20109616:	01079693          	sll	a3,a5,0x10
2010961a:	000707b7          	lui	a5,0x70
2010961e:	8ff5                	and	a5,a5,a3
20109620:	fec42683          	lw	a3,-20(s0)
20109624:	06b1                	add	a3,a3,12
20109626:	8fd9                	or	a5,a5,a4
20109628:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
2010962a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:99
}
2010962c:	853e                	mv	a0,a5
2010962e:	50b2                	lw	ra,44(sp)
20109630:	5422                	lw	s0,40(sp)
20109632:	6145                	add	sp,sp,48
20109634:	8082                	ret

20109636 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20109636:	7179                	add	sp,sp,-48
20109638:	d606                	sw	ra,44(sp)
2010963a:	d422                	sw	s0,40(sp)
2010963c:	1800                	add	s0,sp,48
2010963e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20109642:	fdc42503          	lw	a0,-36(s0)
20109646:	cafff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
2010964a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:102 (discriminator 1)
2010964c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20109650:	fec42783          	lw	a5,-20(s0)
20109654:	07b1                	add	a5,a5,12 # 7000c <__heap_size+0x6f80c>
20109656:	439c                	lw	a5,0(a5)
20109658:	83c1                	srl	a5,a5,0x10
2010965a:	8b9d                	and	a5,a5,7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:105
}
2010965c:	853e                	mv	a0,a5
2010965e:	50b2                	lw	ra,44(sp)
20109660:	5422                	lw	s0,40(sp)
20109662:	6145                	add	sp,sp,48
20109664:	8082                	ret

20109666 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20109666:	7179                	add	sp,sp,-48
20109668:	d606                	sw	ra,44(sp)
2010966a:	d422                	sw	s0,40(sp)
2010966c:	1800                	add	s0,sp,48
2010966e:	fca42e23          	sw	a0,-36(s0)
20109672:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20109676:	fdc42503          	lw	a0,-36(s0)
2010967a:	c7bff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
2010967e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:108 (discriminator 1)
20109680:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20109684:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20109686:	fdc42503          	lw	a0,-36(s0)
2010968a:	eb9ff0ef          	jal	20109542 <__metal_driver_sifive_uart0_txready>
2010968e:	87aa                	mv	a5,a0
20109690:	fbfd                	bnez	a5,20109686 <__metal_driver_sifive_uart0_putc+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20109692:	fec42783          	lw	a5,-20(s0)
20109696:	fd842703          	lw	a4,-40(s0)
2010969a:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2010969c:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:115
}
2010969e:	853e                	mv	a0,a5
201096a0:	50b2                	lw	ra,44(sp)
201096a2:	5422                	lw	s0,40(sp)
201096a4:	6145                	add	sp,sp,48
201096a6:	8082                	ret

201096a8 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
201096a8:	7179                	add	sp,sp,-48
201096aa:	d606                	sw	ra,44(sp)
201096ac:	d422                	sw	s0,40(sp)
201096ae:	1800                	add	s0,sp,48
201096b0:	fca42e23          	sw	a0,-36(s0)
201096b4:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
201096b8:	fdc42503          	lw	a0,-36(s0)
201096bc:	c39ff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
201096c0:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 1)
201096c2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
201096c6:	fec42783          	lw	a5,-20(s0)
201096ca:	0791                	add	a5,a5,4
201096cc:	439c                	lw	a5,0(a5)
201096ce:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
201096d2:	fe842783          	lw	a5,-24(s0)
201096d6:	0007d763          	bgez	a5,201096e4 <__metal_driver_sifive_uart0_getc+0x3c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
201096da:	fd842783          	lw	a5,-40(s0)
201096de:	577d                	li	a4,-1
201096e0:	c398                	sw	a4,0(a5)
201096e2:	a801                	j	201096f2 <__metal_driver_sifive_uart0_getc+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
201096e4:	fe842783          	lw	a5,-24(s0)
201096e8:	0ff7f713          	zext.b	a4,a5
201096ec:	fd842783          	lw	a5,-40(s0)
201096f0:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
201096f2:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:129
}
201096f4:	853e                	mv	a0,a5
201096f6:	50b2                	lw	ra,44(sp)
201096f8:	5422                	lw	s0,40(sp)
201096fa:	6145                	add	sp,sp,48
201096fc:	8082                	ret

201096fe <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
201096fe:	7179                	add	sp,sp,-48
20109700:	d622                	sw	s0,44(sp)
20109702:	1800                	add	s0,sp,48
20109704:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20109708:	fdc42783          	lw	a5,-36(s0)
2010970c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20109710:	fec42783          	lw	a5,-20(s0)
20109714:	43dc                	lw	a5,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:134
}
20109716:	853e                	mv	a0,a5
20109718:	5432                	lw	s0,44(sp)
2010971a:	6145                	add	sp,sp,48
2010971c:	8082                	ret

2010971e <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
2010971e:	7179                	add	sp,sp,-48
20109720:	d606                	sw	ra,44(sp)
20109722:	d422                	sw	s0,40(sp)
20109724:	1800                	add	s0,sp,48
20109726:	fca42e23          	sw	a0,-36(s0)
2010972a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2010972e:	fdc42783          	lw	a5,-36(s0)
20109732:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20109736:	fdc42503          	lw	a0,-36(s0)
2010973a:	bbbff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
2010973e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:139 (discriminator 1)
20109740:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20109744:	fdc42503          	lw	a0,-36(s0)
20109748:	c2dff0ef          	jal	20109374 <__metal_driver_sifive_uart0_clock>
2010974c:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20109750:	fd842703          	lw	a4,-40(s0)
20109754:	fec42783          	lw	a5,-20(s0)
20109758:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
2010975a:	fe442783          	lw	a5,-28(s0)
2010975e:	cbb1                	beqz	a5,201097b2 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20109760:	fe442783          	lw	a5,-28(s0)
20109764:	439c                	lw	a5,0(a5)
20109766:	439c                	lw	a5,0(a5)
20109768:	fe442503          	lw	a0,-28(s0)
2010976c:	9782                	jalr	a5
2010976e:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20109772:	fe042703          	lw	a4,-32(s0)
20109776:	fd842783          	lw	a5,-40(s0)
2010977a:	02f747b3          	div	a5,a4,a5
2010977e:	fff78713          	add	a4,a5,-1
20109782:	fe842783          	lw	a5,-24(s0)
20109786:	07e1                	add	a5,a5,24
20109788:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2010978a:	fe842783          	lw	a5,-24(s0)
2010978e:	07a1                	add	a5,a5,8
20109790:	439c                	lw	a5,0(a5)
20109792:	fe842703          	lw	a4,-24(s0)
20109796:	0721                	add	a4,a4,8
20109798:	0017e793          	or	a5,a5,1
2010979c:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
2010979e:	fe842783          	lw	a5,-24(s0)
201097a2:	07b1                	add	a5,a5,12
201097a4:	439c                	lw	a5,0(a5)
201097a6:	fe842703          	lw	a4,-24(s0)
201097aa:	0731                	add	a4,a4,12
201097ac:	0017e793          	or	a5,a5,1
201097b0:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
201097b2:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:151
}
201097b4:	853e                	mv	a0,a5
201097b6:	50b2                	lw	ra,44(sp)
201097b8:	5422                	lw	s0,40(sp)
201097ba:	6145                	add	sp,sp,48
201097bc:	8082                	ret

201097be <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
201097be:	7139                	add	sp,sp,-64
201097c0:	de06                	sw	ra,60(sp)
201097c2:	dc22                	sw	s0,56(sp)
201097c4:	0080                	add	s0,sp,64
201097c6:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
201097ca:	fcc42783          	lw	a5,-52(s0)
201097ce:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
201097d2:	fcc42503          	lw	a0,-52(s0)
201097d6:	b1fff0ef          	jal	201092f4 <__metal_driver_sifive_uart0_control_base>
201097da:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
201097dc:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
201097e0:	fcc42503          	lw	a0,-52(s0)
201097e4:	b91ff0ef          	jal	20109374 <__metal_driver_sifive_uart0_clock>
201097e8:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
201097ec:	fe842783          	lw	a5,-24(s0)
201097f0:	07a1                	add	a5,a5,8
201097f2:	4398                	lw	a4,0(a5)
201097f4:	fe842783          	lw	a5,-24(s0)
201097f8:	07a1                	add	a5,a5,8
201097fa:	86be                	mv	a3,a5
201097fc:	fff907b7          	lui	a5,0xfff90
20109800:	17fd                	add	a5,a5,-1 # fff8ffff <metal_segment_heap_target_end+0x7ff8e75f>
20109802:	8ff9                	and	a5,a5,a4
20109804:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20109806:	fe842783          	lw	a5,-24(s0)
2010980a:	07a1                	add	a5,a5,8
2010980c:	4398                	lw	a4,0(a5)
2010980e:	fe842783          	lw	a5,-24(s0)
20109812:	07a1                	add	a5,a5,8
20109814:	86be                	mv	a3,a5
20109816:	67c1                	lui	a5,0x10
20109818:	8fd9                	or	a5,a5,a4
2010981a:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
2010981c:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
2010981e:	fe842783          	lw	a5,-24(s0)
20109822:	07d1                	add	a5,a5,20 # 10014 <__heap_size+0xf814>
20109824:	439c                	lw	a5,0(a5)
20109826:	8b85                	and	a5,a5,1
20109828:	dbfd                	beqz	a5,2010981e <pre_rate_change_callback_func+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2010982a:	fe842783          	lw	a5,-24(s0)
2010982e:	07a1                	add	a5,a5,8
20109830:	439c                	lw	a5,0(a5)
20109832:	8b89                	and	a5,a5,2
20109834:	c399                	beqz	a5,2010983a <pre_rate_change_callback_func+0x7c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20109836:	47a5                	li	a5,9
20109838:	a011                	j	2010983c <pre_rate_change_callback_func+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
2010983a:	47a9                	li	a5,10
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2010983c:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20109840:	fe442783          	lw	a5,-28(s0)
20109844:	439c                	lw	a5,0(a5)
20109846:	439c                	lw	a5,0(a5)
20109848:	fe442503          	lw	a0,-28(s0)
2010984c:	9782                	jalr	a5
2010984e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20109852:	fe042703          	lw	a4,-32(s0)
20109856:	fdc42783          	lw	a5,-36(s0)
2010985a:	02f707b3          	mul	a5,a4,a5
2010985e:	873e                	mv	a4,a5
20109860:	fec42783          	lw	a5,-20(s0)
20109864:	43dc                	lw	a5,4(a5)
20109866:	02f757b3          	divu	a5,a4,a5
2010986a:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2010986e:	fc042a23          	sw	zero,-44(s0)
20109872:	a039                	j	20109880 <pre_rate_change_callback_func+0xc2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:179
        __asm__("nop");
20109874:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20109876:	fd442783          	lw	a5,-44(s0)
2010987a:	0785                	add	a5,a5,1
2010987c:	fcf42a23          	sw	a5,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20109880:	fd442783          	lw	a5,-44(s0)
20109884:	fd842703          	lw	a4,-40(s0)
20109888:	fee7c6e3          	blt	a5,a4,20109874 <pre_rate_change_callback_func+0xb6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:180
}
2010988c:	0001                	nop
2010988e:	0001                	nop
20109890:	50f2                	lw	ra,60(sp)
20109892:	5462                	lw	s0,56(sp)
20109894:	6121                	add	sp,sp,64
20109896:	8082                	ret

20109898 <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20109898:	7179                	add	sp,sp,-48
2010989a:	d606                	sw	ra,44(sp)
2010989c:	d422                	sw	s0,40(sp)
2010989e:	1800                	add	s0,sp,48
201098a0:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
201098a4:	fdc42783          	lw	a5,-36(s0)
201098a8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
201098ac:	fec42703          	lw	a4,-20(s0)
201098b0:	fec42783          	lw	a5,-20(s0)
201098b4:	43dc                	lw	a5,4(a5)
201098b6:	85be                	mv	a1,a5
201098b8:	853a                	mv	a0,a4
201098ba:	2ee1                	jal	20109c92 <metal_uart_set_baud_rate>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:185
}
201098bc:	0001                	nop
201098be:	50b2                	lw	ra,44(sp)
201098c0:	5422                	lw	s0,40(sp)
201098c2:	6145                	add	sp,sp,48
201098c4:	8082                	ret

201098c6 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
201098c6:	7139                	add	sp,sp,-64
201098c8:	de06                	sw	ra,60(sp)
201098ca:	dc22                	sw	s0,56(sp)
201098cc:	0080                	add	s0,sp,64
201098ce:	fca42623          	sw	a0,-52(s0)
201098d2:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
201098d6:	fcc42783          	lw	a5,-52(s0)
201098da:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
201098de:	fcc42503          	lw	a0,-52(s0)
201098e2:	a93ff0ef          	jal	20109374 <__metal_driver_sifive_uart0_clock>
201098e6:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
201098ea:	fcc42503          	lw	a0,-52(s0)
201098ee:	ab5ff0ef          	jal	201093a2 <__metal_driver_sifive_uart0_pinmux>
201098f2:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
201098f6:	fe842783          	lw	a5,-24(s0)
201098fa:	c7b9                	beqz	a5,20109948 <__metal_driver_sifive_uart0_init+0x82>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
201098fc:	fec42783          	lw	a5,-20(s0)
20109900:	20109737          	lui	a4,0x20109
20109904:	7be70713          	add	a4,a4,1982 # 201097be <pre_rate_change_callback_func>
20109908:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
2010990a:	fec42783          	lw	a5,-20(s0)
2010990e:	fcc42703          	lw	a4,-52(s0)
20109912:	c7d8                	sw	a4,12(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20109914:	fec42783          	lw	a5,-20(s0)
20109918:	07a1                	add	a5,a5,8
2010991a:	85be                	mv	a1,a5
2010991c:	fe842503          	lw	a0,-24(s0)
20109920:	2abd                	jal	20109a9e <metal_clock_register_pre_rate_change_callback>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20109922:	fec42783          	lw	a5,-20(s0)
20109926:	2010a737          	lui	a4,0x2010a
2010992a:	89870713          	add	a4,a4,-1896 # 20109898 <post_rate_change_callback_func>
2010992e:	cbd8                	sw	a4,20(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20109930:	fec42783          	lw	a5,-20(s0)
20109934:	fcc42703          	lw	a4,-52(s0)
20109938:	cf98                	sw	a4,24(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
2010993a:	fec42783          	lw	a5,-20(s0)
2010993e:	07d1                	add	a5,a5,20
20109940:	85be                	mv	a1,a5
20109942:	fe842503          	lw	a0,-24(s0)
20109946:	2269                	jal	20109ad0 <metal_clock_register_post_rate_change_callback>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20109948:	fec42783          	lw	a5,-20(s0)
2010994c:	fc842583          	lw	a1,-56(s0)
20109950:	853e                	mv	a0,a5
20109952:	2681                	jal	20109c92 <metal_uart_set_baud_rate>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20109954:	fe442783          	lw	a5,-28(s0)
20109958:	cb95                	beqz	a5,2010998c <__metal_driver_sifive_uart0_init+0xc6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
2010995a:	fcc42503          	lw	a0,-52(s0)
2010995e:	a6fff0ef          	jal	201093cc <__metal_driver_sifive_uart0_pinmux_output_selector>
20109962:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20109964:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20109968:	fcc42503          	lw	a0,-52(s0)
2010996c:	a89ff0ef          	jal	201093f4 <__metal_driver_sifive_uart0_pinmux_source_selector>
20109970:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20109972:	fcf42e23          	sw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20109976:	fe442783          	lw	a5,-28(s0)
2010997a:	439c                	lw	a5,0(a5)
2010997c:	53dc                	lw	a5,36(a5)
2010997e:	fdc42603          	lw	a2,-36(s0)
20109982:	fe042583          	lw	a1,-32(s0)
20109986:	fe442503          	lw	a0,-28(s0)
2010998a:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
2010998c:	0001                	nop
2010998e:	50f2                	lw	ra,60(sp)
20109990:	5462                	lw	s0,56(sp)
20109992:	6121                	add	sp,sp,64
20109994:	8082                	ret

20109996 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20109996:	7179                	add	sp,sp,-48
20109998:	d606                	sw	ra,44(sp)
2010999a:	d422                	sw	s0,40(sp)
2010999c:	1800                	add	s0,sp,48
2010999e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
201099a2:	fdc42783          	lw	a5,-36(s0)
201099a6:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:52
    while (current) {
201099aa:	a831                	j	201099c6 <_metal_clock_call_all_callbacks+0x30>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
201099ac:	fec42783          	lw	a5,-20(s0)
201099b0:	439c                	lw	a5,0(a5)
201099b2:	fec42703          	lw	a4,-20(s0)
201099b6:	4358                	lw	a4,4(a4)
201099b8:	853a                	mv	a0,a4
201099ba:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:54
        current = current->_next;
201099bc:	fec42783          	lw	a5,-20(s0)
201099c0:	479c                	lw	a5,8(a5)
201099c2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:52
    while (current) {
201099c6:	fec42783          	lw	a5,-20(s0)
201099ca:	f3ed                	bnez	a5,201099ac <_metal_clock_call_all_callbacks+0x16>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:56
    }
}
201099cc:	0001                	nop
201099ce:	0001                	nop
201099d0:	50b2                	lw	ra,44(sp)
201099d2:	5422                	lw	s0,40(sp)
201099d4:	6145                	add	sp,sp,48
201099d6:	8082                	ret

201099d8 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
201099d8:	7179                	add	sp,sp,-48
201099da:	d622                	sw	s0,44(sp)
201099dc:	1800                	add	s0,sp,48
201099de:	fca42e23          	sw	a0,-36(s0)
201099e2:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
201099e6:	fd842783          	lw	a5,-40(s0)
201099ea:	0007a423          	sw	zero,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:66

    if (!list) {
201099ee:	fdc42783          	lw	a5,-36(s0)
201099f2:	e781                	bnez	a5,201099fa <_metal_clock_append_to_callbacks+0x22>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:67
        return cb;
201099f4:	fd842783          	lw	a5,-40(s0)
201099f8:	a035                	j	20109a24 <_metal_clock_append_to_callbacks+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
201099fa:	fdc42783          	lw	a5,-36(s0)
201099fe:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20109a02:	a031                	j	20109a0e <_metal_clock_append_to_callbacks+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:73
        current = current->_next;
20109a04:	fec42783          	lw	a5,-20(s0)
20109a08:	479c                	lw	a5,8(a5)
20109a0a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20109a0e:	fec42783          	lw	a5,-20(s0)
20109a12:	479c                	lw	a5,8(a5)
20109a14:	fbe5                	bnez	a5,20109a04 <_metal_clock_append_to_callbacks+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20109a16:	fec42783          	lw	a5,-20(s0)
20109a1a:	fd842703          	lw	a4,-40(s0)
20109a1e:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:78

    return list;
20109a20:	fdc42783          	lw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:79
}
20109a24:	853e                	mv	a0,a5
20109a26:	5432                	lw	s0,44(sp)
20109a28:	6145                	add	sp,sp,48
20109a2a:	8082                	ret

20109a2c <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20109a2c:	1101                	add	sp,sp,-32
20109a2e:	ce06                	sw	ra,28(sp)
20109a30:	cc22                	sw	s0,24(sp)
20109a32:	1000                	add	s0,sp,32
20109a34:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20109a38:	fec42783          	lw	a5,-20(s0)
20109a3c:	439c                	lw	a5,0(a5)
20109a3e:	439c                	lw	a5,0(a5)
20109a40:	fec42503          	lw	a0,-20(s0)
20109a44:	9782                	jalr	a5
20109a46:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:112
}
20109a48:	853e                	mv	a0,a5
20109a4a:	40f2                	lw	ra,28(sp)
20109a4c:	4462                	lw	s0,24(sp)
20109a4e:	6105                	add	sp,sp,32
20109a50:	8082                	ret

20109a52 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20109a52:	7179                	add	sp,sp,-48
20109a54:	d606                	sw	ra,44(sp)
20109a56:	d422                	sw	s0,40(sp)
20109a58:	1800                	add	s0,sp,48
20109a5a:	fca42e23          	sw	a0,-36(s0)
20109a5e:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20109a62:	fdc42783          	lw	a5,-36(s0)
20109a66:	43dc                	lw	a5,4(a5)
20109a68:	853e                	mv	a0,a5
20109a6a:	f2dff0ef          	jal	20109996 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20109a6e:	fdc42783          	lw	a5,-36(s0)
20109a72:	439c                	lw	a5,0(a5)
20109a74:	43dc                	lw	a5,4(a5)
20109a76:	fd842583          	lw	a1,-40(s0)
20109a7a:	fdc42503          	lw	a0,-36(s0)
20109a7e:	9782                	jalr	a5
20109a80:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20109a84:	fdc42783          	lw	a5,-36(s0)
20109a88:	479c                	lw	a5,8(a5)
20109a8a:	853e                	mv	a0,a5
20109a8c:	f0bff0ef          	jal	20109996 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:135

    return out;
20109a90:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:136
}
20109a94:	853e                	mv	a0,a5
20109a96:	50b2                	lw	ra,44(sp)
20109a98:	5422                	lw	s0,40(sp)
20109a9a:	6145                	add	sp,sp,48
20109a9c:	8082                	ret

20109a9e <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20109a9e:	1101                	add	sp,sp,-32
20109aa0:	ce06                	sw	ra,28(sp)
20109aa2:	cc22                	sw	s0,24(sp)
20109aa4:	1000                	add	s0,sp,32
20109aa6:	fea42623          	sw	a0,-20(s0)
20109aaa:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20109aae:	fec42783          	lw	a5,-20(s0)
20109ab2:	43dc                	lw	a5,4(a5)
20109ab4:	fe842583          	lw	a1,-24(s0)
20109ab8:	853e                	mv	a0,a5
20109aba:	f1fff0ef          	jal	201099d8 <_metal_clock_append_to_callbacks>
20109abe:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20109ac0:	fec42783          	lw	a5,-20(s0)
20109ac4:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:149
}
20109ac6:	0001                	nop
20109ac8:	40f2                	lw	ra,28(sp)
20109aca:	4462                	lw	s0,24(sp)
20109acc:	6105                	add	sp,sp,32
20109ace:	8082                	ret

20109ad0 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20109ad0:	1101                	add	sp,sp,-32
20109ad2:	ce06                	sw	ra,28(sp)
20109ad4:	cc22                	sw	s0,24(sp)
20109ad6:	1000                	add	s0,sp,32
20109ad8:	fea42623          	sw	a0,-20(s0)
20109adc:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20109ae0:	fec42783          	lw	a5,-20(s0)
20109ae4:	479c                	lw	a5,8(a5)
20109ae6:	fe842583          	lw	a1,-24(s0)
20109aea:	853e                	mv	a0,a5
20109aec:	eedff0ef          	jal	201099d8 <_metal_clock_append_to_callbacks>
20109af0:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20109af2:	fec42783          	lw	a5,-20(s0)
20109af6:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:162
}
20109af8:	0001                	nop
20109afa:	40f2                	lw	ra,28(sp)
20109afc:	4462                	lw	s0,24(sp)
20109afe:	6105                	add	sp,sp,32
20109b00:	8082                	ret

20109b02 <metal_gpio_disable_input>:
metal_gpio_disable_input():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:79
 * @brief Disable input on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the input is successfully disabled
 */
__inline__ int metal_gpio_disable_input(struct metal_gpio *gpio, int pin) {
20109b02:	1101                	add	sp,sp,-32
20109b04:	ce06                	sw	ra,28(sp)
20109b06:	cc22                	sw	s0,24(sp)
20109b08:	1000                	add	s0,sp,32
20109b0a:	fea42623          	sw	a0,-20(s0)
20109b0e:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:80
    if (!gpio) {
20109b12:	fec42783          	lw	a5,-20(s0)
20109b16:	e399                	bnez	a5,20109b1c <metal_gpio_disable_input+0x1a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:81
        return 1;
20109b18:	4785                	li	a5,1
20109b1a:	a839                	j	20109b38 <metal_gpio_disable_input+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:84
    }

    return gpio->vtable->disable_input(gpio, (1 << pin));
20109b1c:	fec42783          	lw	a5,-20(s0)
20109b20:	439c                	lw	a5,0(a5)
20109b22:	439c                	lw	a5,0(a5)
20109b24:	fe842703          	lw	a4,-24(s0)
20109b28:	4685                	li	a3,1
20109b2a:	00e69733          	sll	a4,a3,a4
20109b2e:	85ba                	mv	a1,a4
20109b30:	fec42503          	lw	a0,-20(s0)
20109b34:	9782                	jalr	a5
20109b36:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:85
}
20109b38:	853e                	mv	a0,a5
20109b3a:	40f2                	lw	ra,28(sp)
20109b3c:	4462                	lw	s0,24(sp)
20109b3e:	6105                	add	sp,sp,32
20109b40:	8082                	ret

20109b42 <metal_gpio_enable_output>:
metal_gpio_enable_output():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:93
 * @brief Enable output on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the output is successfully enabled
 */
__inline__ int metal_gpio_enable_output(struct metal_gpio *gpio, int pin) {
20109b42:	1101                	add	sp,sp,-32
20109b44:	ce06                	sw	ra,28(sp)
20109b46:	cc22                	sw	s0,24(sp)
20109b48:	1000                	add	s0,sp,32
20109b4a:	fea42623          	sw	a0,-20(s0)
20109b4e:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:94
    if (!gpio) {
20109b52:	fec42783          	lw	a5,-20(s0)
20109b56:	e399                	bnez	a5,20109b5c <metal_gpio_enable_output+0x1a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:95
        return 1;
20109b58:	4785                	li	a5,1
20109b5a:	a839                	j	20109b78 <metal_gpio_enable_output+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:98
    }

    return gpio->vtable->enable_output(gpio, (1 << pin));
20109b5c:	fec42783          	lw	a5,-20(s0)
20109b60:	439c                	lw	a5,0(a5)
20109b62:	4bdc                	lw	a5,20(a5)
20109b64:	fe842703          	lw	a4,-24(s0)
20109b68:	4685                	li	a3,1
20109b6a:	00e69733          	sll	a4,a3,a4
20109b6e:	85ba                	mv	a1,a4
20109b70:	fec42503          	lw	a0,-20(s0)
20109b74:	9782                	jalr	a5
20109b76:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:99
}
20109b78:	853e                	mv	a0,a5
20109b7a:	40f2                	lw	ra,28(sp)
20109b7c:	4462                	lw	s0,24(sp)
20109b7e:	6105                	add	sp,sp,32
20109b80:	8082                	ret

20109b82 <metal_gpio_set_pin>:
metal_gpio_set_pin():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:122
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @param value The value to set the pin to
 * @return 0 if the output is successfully set
 */
__inline__ int metal_gpio_set_pin(struct metal_gpio *gpio, int pin, int value) {
20109b82:	1101                	add	sp,sp,-32
20109b84:	ce06                	sw	ra,28(sp)
20109b86:	cc22                	sw	s0,24(sp)
20109b88:	1000                	add	s0,sp,32
20109b8a:	fea42623          	sw	a0,-20(s0)
20109b8e:	feb42423          	sw	a1,-24(s0)
20109b92:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:123
    if (!gpio) {
20109b96:	fec42783          	lw	a5,-20(s0)
20109b9a:	e399                	bnez	a5,20109ba0 <metal_gpio_set_pin+0x1e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:124
        return 1;
20109b9c:	4785                	li	a5,1
20109b9e:	a089                	j	20109be0 <metal_gpio_set_pin+0x5e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:127
    }

    if (value == 0) {
20109ba0:	fe442783          	lw	a5,-28(s0)
20109ba4:	e385                	bnez	a5,20109bc4 <metal_gpio_set_pin+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:128
        return gpio->vtable->output_clear(gpio, (1 << pin));
20109ba6:	fec42783          	lw	a5,-20(s0)
20109baa:	439c                	lw	a5,0(a5)
20109bac:	4fdc                	lw	a5,28(a5)
20109bae:	fe842703          	lw	a4,-24(s0)
20109bb2:	4685                	li	a3,1
20109bb4:	00e69733          	sll	a4,a3,a4
20109bb8:	85ba                	mv	a1,a4
20109bba:	fec42503          	lw	a0,-20(s0)
20109bbe:	9782                	jalr	a5
20109bc0:	87aa                	mv	a5,a0
20109bc2:	a839                	j	20109be0 <metal_gpio_set_pin+0x5e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:130
    } else {
        return gpio->vtable->output_set(gpio, (1 << pin));
20109bc4:	fec42783          	lw	a5,-20(s0)
20109bc8:	439c                	lw	a5,0(a5)
20109bca:	4f9c                	lw	a5,24(a5)
20109bcc:	fe842703          	lw	a4,-24(s0)
20109bd0:	4685                	li	a3,1
20109bd2:	00e69733          	sll	a4,a3,a4
20109bd6:	85ba                	mv	a1,a4
20109bd8:	fec42503          	lw	a0,-20(s0)
20109bdc:	9782                	jalr	a5
20109bde:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:132
    }
}
20109be0:	853e                	mv	a0,a5
20109be2:	40f2                	lw	ra,28(sp)
20109be4:	4462                	lw	s0,24(sp)
20109be6:	6105                	add	sp,sp,32
20109be8:	8082                	ret

20109bea <metal_gpio_toggle_pin>:
metal_gpio_toggle_pin():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:194
 * @brief Toggles the value of the GPIO pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the pin is successfully toggled
 */
__inline__ int metal_gpio_toggle_pin(struct metal_gpio *gpio, int pin) {
20109bea:	1101                	add	sp,sp,-32
20109bec:	ce06                	sw	ra,28(sp)
20109bee:	cc22                	sw	s0,24(sp)
20109bf0:	1000                	add	s0,sp,32
20109bf2:	fea42623          	sw	a0,-20(s0)
20109bf6:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:195
    if (!gpio) {
20109bfa:	fec42783          	lw	a5,-20(s0)
20109bfe:	e399                	bnez	a5,20109c04 <metal_gpio_toggle_pin+0x1a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:196
        return 1;
20109c00:	4785                	li	a5,1
20109c02:	a839                	j	20109c20 <metal_gpio_toggle_pin+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:199
    }

    return gpio->vtable->output_toggle(gpio, (1 << pin));
20109c04:	fec42783          	lw	a5,-20(s0)
20109c08:	439c                	lw	a5,0(a5)
20109c0a:	539c                	lw	a5,32(a5)
20109c0c:	fe842703          	lw	a4,-24(s0)
20109c10:	4685                	li	a3,1
20109c12:	00e69733          	sll	a4,a3,a4
20109c16:	85ba                	mv	a1,a4
20109c18:	fec42503          	lw	a0,-20(s0)
20109c1c:	9782                	jalr	a5
20109c1e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/gpio.h:200
}
20109c20:	853e                	mv	a0,a5
20109c22:	40f2                	lw	ra,28(sp)
20109c24:	4462                	lw	s0,24(sp)
20109c26:	6105                	add	sp,sp,32
20109c28:	8082                	ret

20109c2a <metal_shutdown>:
metal_shutdown():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20109c2a:	1101                	add	sp,sp,-32
20109c2c:	ce22                	sw	s0,28(sp)
20109c2e:	1000                	add	s0,sp,32
20109c30:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20109c34:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/shutdown.c:19
20109c36:	bffd                	j	20109c34 <metal_shutdown+0xa>

20109c38 <metal_uart_init>:
metal_uart_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20109c38:	1101                	add	sp,sp,-32
20109c3a:	ce06                	sw	ra,28(sp)
20109c3c:	cc22                	sw	s0,24(sp)
20109c3e:	1000                	add	s0,sp,32
20109c40:	fea42623          	sw	a0,-20(s0)
20109c44:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20109c48:	fec42783          	lw	a5,-20(s0)
20109c4c:	439c                	lw	a5,0(a5)
20109c4e:	439c                	lw	a5,0(a5)
20109c50:	fe842583          	lw	a1,-24(s0)
20109c54:	fec42503          	lw	a0,-20(s0)
20109c58:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:61
}
20109c5a:	0001                	nop
20109c5c:	40f2                	lw	ra,28(sp)
20109c5e:	4462                	lw	s0,24(sp)
20109c60:	6105                	add	sp,sp,32
20109c62:	8082                	ret

20109c64 <metal_uart_putc>:
metal_uart_putc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20109c64:	1101                	add	sp,sp,-32
20109c66:	ce06                	sw	ra,28(sp)
20109c68:	cc22                	sw	s0,24(sp)
20109c6a:	1000                	add	s0,sp,32
20109c6c:	fea42623          	sw	a0,-20(s0)
20109c70:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20109c74:	fec42783          	lw	a5,-20(s0)
20109c78:	439c                	lw	a5,0(a5)
20109c7a:	43dc                	lw	a5,4(a5)
20109c7c:	fe842583          	lw	a1,-24(s0)
20109c80:	fec42503          	lw	a0,-20(s0)
20109c84:	9782                	jalr	a5
20109c86:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:71
}
20109c88:	853e                	mv	a0,a5
20109c8a:	40f2                	lw	ra,28(sp)
20109c8c:	4462                	lw	s0,24(sp)
20109c8e:	6105                	add	sp,sp,32
20109c90:	8082                	ret

20109c92 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20109c92:	1101                	add	sp,sp,-32
20109c94:	ce06                	sw	ra,28(sp)
20109c96:	cc22                	sw	s0,24(sp)
20109c98:	1000                	add	s0,sp,32
20109c9a:	fea42623          	sw	a0,-20(s0)
20109c9e:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20109ca2:	fec42783          	lw	a5,-20(s0)
20109ca6:	439c                	lw	a5,0(a5)
20109ca8:	4bdc                	lw	a5,20(a5)
20109caa:	fe842583          	lw	a1,-24(s0)
20109cae:	fec42503          	lw	a0,-20(s0)
20109cb2:	9782                	jalr	a5
20109cb4:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:113
}
20109cb6:	853e                	mv	a0,a5
20109cb8:	40f2                	lw	ra,28(sp)
20109cba:	4462                	lw	s0,24(sp)
20109cbc:	6105                	add	sp,sp,32
20109cbe:	8082                	ret
	...

20109d00 <__metal_vector_table>:
IRQ_0():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:76
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20109d00:	920fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d04 <IRQ_1>:
IRQ_1():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:78
IRQ_1:
        j metal_interrupt_vector_handler
20109d04:	91cfc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d08 <IRQ_2>:
IRQ_2():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:80
IRQ_2:
        j metal_interrupt_vector_handler
20109d08:	918fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d0c <IRQ_3>:
IRQ_3():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:82
IRQ_3:
        j metal_software_interrupt_vector_handler
20109d0c:	942fc06f          	j	20105e4e <metal_software_interrupt_vector_handler>

20109d10 <IRQ_4>:
IRQ_4():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:84
IRQ_4:
        j metal_interrupt_vector_handler
20109d10:	910fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d14 <IRQ_5>:
IRQ_5():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:86
IRQ_5:
        j metal_interrupt_vector_handler
20109d14:	90cfc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d18 <IRQ_6>:
IRQ_6():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:88
IRQ_6:
        j metal_interrupt_vector_handler
20109d18:	908fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d1c <IRQ_7>:
IRQ_7():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:90
IRQ_7:
        j metal_timer_interrupt_vector_handler
20109d1c:	a2cfc06f          	j	20105f48 <metal_timer_interrupt_vector_handler>

20109d20 <IRQ_8>:
IRQ_8():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:92
IRQ_8:
        j metal_interrupt_vector_handler
20109d20:	900fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d24 <IRQ_9>:
IRQ_9():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:94
IRQ_9:
        j metal_interrupt_vector_handler
20109d24:	8fcfc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d28 <IRQ_10>:
IRQ_10():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:96
IRQ_10:
        j metal_interrupt_vector_handler
20109d28:	8f8fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d2c <IRQ_11>:
IRQ_11():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:98
IRQ_11:
        j metal_interrupt_vector_handler
20109d2c:	8f4fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d30 <IRQ_12>:
IRQ_12():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:100
IRQ_12:
        j metal_interrupt_vector_handler
20109d30:	8f0fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d34 <IRQ_13>:
IRQ_13():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:102
IRQ_13:
        j metal_interrupt_vector_handler
20109d34:	8ecfc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d38 <IRQ_14>:
IRQ_14():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:104
IRQ_14:
        j metal_interrupt_vector_handler
20109d38:	8e8fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d3c <IRQ_15>:
IRQ_15():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:106
IRQ_15:
        j metal_interrupt_vector_handler
20109d3c:	8e4fc06f          	j	20105e20 <metal_interrupt_vector_handler>

20109d40 <IRQ_LC0>:
IRQ_LC0():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:108
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20109d40:	d3afc06f          	j	2010627a <metal_lc0_interrupt_vector_handler>

20109d44 <IRQ_LC1>:
IRQ_LC1():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:110
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20109d44:	dccfc06f          	j	20106310 <metal_lc1_interrupt_vector_handler>

20109d48 <IRQ_LC2>:
IRQ_LC2():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:112
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20109d48:	e5efc06f          	j	201063a6 <metal_lc2_interrupt_vector_handler>

20109d4c <IRQ_LC3>:
IRQ_LC3():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:114
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20109d4c:	ef0fc06f          	j	2010643c <metal_lc3_interrupt_vector_handler>

20109d50 <IRQ_LC4>:
IRQ_LC4():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:116
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20109d50:	f82fc06f          	j	201064d2 <metal_lc4_interrupt_vector_handler>

20109d54 <IRQ_LC5>:
IRQ_LC5():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:118
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20109d54:	815fc06f          	j	20106568 <metal_lc5_interrupt_vector_handler>

20109d58 <IRQ_LC6>:
IRQ_LC6():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:120
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20109d58:	8a7fc06f          	j	201065fe <metal_lc6_interrupt_vector_handler>

20109d5c <IRQ_LC7>:
IRQ_LC7():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:122
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20109d5c:	939fc06f          	j	20106694 <metal_lc7_interrupt_vector_handler>

20109d60 <IRQ_LC8>:
IRQ_LC8():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:124
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20109d60:	9cbfc06f          	j	2010672a <metal_lc8_interrupt_vector_handler>

20109d64 <IRQ_LC9>:
IRQ_LC9():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:126
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20109d64:	a5dfc06f          	j	201067c0 <metal_lc9_interrupt_vector_handler>

20109d68 <IRQ_LC10>:
IRQ_LC10():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:128
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20109d68:	aeffc06f          	j	20106856 <metal_lc10_interrupt_vector_handler>

20109d6c <IRQ_LC11>:
IRQ_LC11():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:130
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20109d6c:	b81fc06f          	j	201068ec <metal_lc11_interrupt_vector_handler>

20109d70 <IRQ_LC12>:
IRQ_LC12():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:132
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20109d70:	c13fc06f          	j	20106982 <metal_lc12_interrupt_vector_handler>

20109d74 <IRQ_LC13>:
IRQ_LC13():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:134
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20109d74:	ca5fc06f          	j	20106a18 <metal_lc13_interrupt_vector_handler>

20109d78 <IRQ_LC14>:
IRQ_LC14():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:136
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20109d78:	d37fc06f          	j	20106aae <metal_lc14_interrupt_vector_handler>

20109d7c <IRQ_LC15>:
IRQ_LC15():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:138
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20109d7c:	dc9fc06f          	j	20106b44 <metal_lc15_interrupt_vector_handler>

20109d80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:186
{
20109d80:	1101                	add	sp,sp,-32
20109d82:	ce22                	sw	s0,28(sp)
20109d84:	1000                	add	s0,sp,32
20109d86:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:187
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20109d8a:	fec42703          	lw	a4,-20(s0)
20109d8e:	800007b7          	lui	a5,0x80000
20109d92:	06478793          	add	a5,a5,100 # 80000064 <__metal_dt_clock_0>
20109d96:	00f71763          	bne	a4,a5,20109da4 <__metal_driver_fixed_clock_rate+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_0_CLOCK_0_CLOCK_FREQUENCY;
20109d9a:	00f427b7          	lui	a5,0xf42
20109d9e:	40078793          	add	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20109da2:	a825                	j	20109dda <__metal_driver_fixed_clock_rate+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:190
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20109da4:	fec42703          	lw	a4,-20(s0)
20109da8:	800007b7          	lui	a5,0x80000
20109dac:	07078793          	add	a5,a5,112 # 80000070 <__metal_dt_clock_2>
20109db0:	00f71763          	bne	a4,a5,20109dbe <__metal_driver_fixed_clock_rate+0x3e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:191
		return METAL_FIXED_CLOCK_2_CLOCK_2_CLOCK_FREQUENCY;
20109db4:	044aa7b7          	lui	a5,0x44aa
20109db8:	20078793          	add	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20109dbc:	a839                	j	20109dda <__metal_driver_fixed_clock_rate+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:193
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20109dbe:	fec42703          	lw	a4,-20(s0)
20109dc2:	800007b7          	lui	a5,0x80000
20109dc6:	07c78793          	add	a5,a5,124 # 8000007c <__metal_dt_clock_5>
20109dca:	00f71763          	bne	a4,a5,20109dd8 <__metal_driver_fixed_clock_rate+0x58>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:194
		return METAL_FIXED_CLOCK_5_CLOCK_5_CLOCK_FREQUENCY;
20109dce:	01e857b7          	lui	a5,0x1e85
20109dd2:	80078793          	add	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20109dd6:	a011                	j	20109dda <__metal_driver_fixed_clock_rate+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:197
		return 0;
20109dd8:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:199
}
20109dda:	853e                	mv	a0,a5
20109ddc:	4472                	lw	s0,28(sp)
20109dde:	6105                	add	sp,sp,32
20109de0:	8082                	ret

20109de2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20109de2:	1101                	add	sp,sp,-32
20109de4:	ce06                	sw	ra,28(sp)
20109de6:	cc22                	sw	s0,24(sp)
20109de8:	1000                	add	s0,sp,32
20109dea:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20109dee:	fec42503          	lw	a0,-20(s0)
20109df2:	f8fff0ef          	jal	20109d80 <__metal_driver_fixed_clock_rate>
20109df6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:14
}
20109df8:	853e                	mv	a0,a5
20109dfa:	40f2                	lw	ra,28(sp)
20109dfc:	4462                	lw	s0,24(sp)
20109dfe:	6105                	add	sp,sp,32
20109e00:	8082                	ret

20109e02 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20109e02:	1101                	add	sp,sp,-32
20109e04:	ce06                	sw	ra,28(sp)
20109e06:	cc22                	sw	s0,24(sp)
20109e08:	1000                	add	s0,sp,32
20109e0a:	fea42623          	sw	a0,-20(s0)
20109e0e:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20109e12:	fec42503          	lw	a0,-20(s0)
20109e16:	fcdff0ef          	jal	20109de2 <__metal_driver_fixed_clock_get_rate_hz>
20109e1a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:19
}
20109e1c:	853e                	mv	a0,a5
20109e1e:	40f2                	lw	ra,28(sp)
20109e20:	4462                	lw	s0,24(sp)
20109e22:	6105                	add	sp,sp,32
20109e24:	8082                	ret

20109e26 <_close>:
_close():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20109e26:	1101                	add	sp,sp,-32
20109e28:	ce06                	sw	ra,28(sp)
20109e2a:	cc22                	sw	s0,24(sp)
20109e2c:	1000                	add	s0,sp,32
20109e2e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20109e32:	2ad1                	jal	2010a006 <__errno>
20109e34:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:4 (discriminator 1)
20109e36:	05800793          	li	a5,88
20109e3a:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:5
    return -1;
20109e3c:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:6
}
20109e3e:	853e                	mv	a0,a5
20109e40:	40f2                	lw	ra,28(sp)
20109e42:	4462                	lw	s0,24(sp)
20109e44:	6105                	add	sp,sp,32
20109e46:	8082                	ret

20109e48 <_fstat>:
_fstat():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20109e48:	1101                	add	sp,sp,-32
20109e4a:	ce06                	sw	ra,28(sp)
20109e4c:	cc22                	sw	s0,24(sp)
20109e4e:	1000                	add	s0,sp,32
20109e50:	fea42623          	sw	a0,-20(s0)
20109e54:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20109e58:	227d                	jal	2010a006 <__errno>
20109e5a:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:5 (discriminator 1)
20109e5c:	fa800793          	li	a5,-88
20109e60:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20109e62:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:7
}
20109e64:	853e                	mv	a0,a5
20109e66:	40f2                	lw	ra,28(sp)
20109e68:	4462                	lw	s0,24(sp)
20109e6a:	6105                	add	sp,sp,32
20109e6c:	8082                	ret

20109e6e <_isatty>:
_isatty():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20109e6e:	1101                	add	sp,sp,-32
20109e70:	ce22                	sw	s0,28(sp)
20109e72:	1000                	add	s0,sp,32
20109e74:	fea42623          	sw	a0,-20(s0)
20109e78:	fec42783          	lw	a5,-20(s0)
20109e7c:	17fd                	add	a5,a5,-1
20109e7e:	0017b793          	seqz	a5,a5
20109e82:	0ff7f793          	zext.b	a5,a5
20109e86:	853e                	mv	a0,a5
20109e88:	4472                	lw	s0,28(sp)
20109e8a:	6105                	add	sp,sp,32
20109e8c:	8082                	ret

20109e8e <_lseek>:
_lseek():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20109e8e:	1101                	add	sp,sp,-32
20109e90:	ce06                	sw	ra,28(sp)
20109e92:	cc22                	sw	s0,24(sp)
20109e94:	1000                	add	s0,sp,32
20109e96:	fea42623          	sw	a0,-20(s0)
20109e9a:	feb42423          	sw	a1,-24(s0)
20109e9e:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20109ea2:	2295                	jal	2010a006 <__errno>
20109ea4:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:5 (discriminator 1)
20109ea6:	05800793          	li	a5,88
20109eaa:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20109eac:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:7
}
20109eae:	853e                	mv	a0,a5
20109eb0:	40f2                	lw	ra,28(sp)
20109eb2:	4462                	lw	s0,24(sp)
20109eb4:	6105                	add	sp,sp,32
20109eb6:	8082                	ret

20109eb8 <_read>:
_read():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20109eb8:	1101                	add	sp,sp,-32
20109eba:	ce06                	sw	ra,28(sp)
20109ebc:	cc22                	sw	s0,24(sp)
20109ebe:	1000                	add	s0,sp,32
20109ec0:	fea42623          	sw	a0,-20(s0)
20109ec4:	feb42423          	sw	a1,-24(s0)
20109ec8:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20109ecc:	2a2d                	jal	2010a006 <__errno>
20109ece:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:5 (discriminator 1)
20109ed0:	05800793          	li	a5,88
20109ed4:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:6
    return -1;
20109ed6:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:7
}
20109ed8:	853e                	mv	a0,a5
20109eda:	40f2                	lw	ra,28(sp)
20109edc:	4462                	lw	s0,24(sp)
20109ede:	6105                	add	sp,sp,32
20109ee0:	8082                	ret

20109ee2 <_sbrk>:
_sbrk():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20109ee2:	7179                	add	sp,sp,-48
20109ee4:	d606                	sw	ra,44(sp)
20109ee6:	d422                	sw	s0,40(sp)
20109ee8:	1800                	add	s0,sp,48
20109eea:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20109eee:	82c1a783          	lw	a5,-2004(gp) # 80000aa4 <__brk>
20109ef2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20109ef6:	e2818713          	add	a4,gp,-472 # 800010a0 <_sp>
20109efa:	62818793          	add	a5,gp,1576 # 800018a0 <metal_segment_heap_target_end>
20109efe:	00f71463          	bne	a4,a5,20109f06 <_sbrk+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20109f02:	57fd                	li	a5,-1
20109f04:	a83d                	j	20109f42 <_sbrk+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20109f06:	82c1a703          	lw	a4,-2004(gp) # 80000aa4 <__brk>
20109f0a:	fdc42783          	lw	a5,-36(s0)
20109f0e:	973e                	add	a4,a4,a5
20109f10:	62818793          	add	a5,gp,1576 # 800018a0 <metal_segment_heap_target_end>
20109f14:	02f77263          	bgeu	a4,a5,20109f38 <_sbrk+0x56>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20109f18:	82c1a703          	lw	a4,-2004(gp) # 80000aa4 <__brk>
20109f1c:	fdc42783          	lw	a5,-36(s0)
20109f20:	973e                	add	a4,a4,a5
20109f22:	82e1a623          	sw	a4,-2004(gp) # 80000aa4 <__brk>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20109f26:	fdc42583          	lw	a1,-36(s0)
20109f2a:	fec42503          	lw	a0,-20(s0)
20109f2e:	95cf60ef          	jal	2010008a <metal_mem_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20109f32:	fec42783          	lw	a5,-20(s0)
20109f36:	a031                	j	20109f42 <_sbrk+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20109f38:	62818713          	add	a4,gp,1576 # 800018a0 <metal_segment_heap_target_end>
20109f3c:	82e1a623          	sw	a4,-2004(gp) # 80000aa4 <__brk>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20109f40:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:43
}
20109f42:	853e                	mv	a0,a5
20109f44:	50b2                	lw	ra,44(sp)
20109f46:	5422                	lw	s0,40(sp)
20109f48:	6145                	add	sp,sp,48
20109f4a:	8082                	ret

20109f4c <_write>:
_write():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20109f4c:	7179                	add	sp,sp,-48
20109f4e:	d606                	sw	ra,44(sp)
20109f50:	d422                	sw	s0,40(sp)
20109f52:	1800                	add	s0,sp,48
20109f54:	fca42e23          	sw	a0,-36(s0)
20109f58:	fcb42c23          	sw	a1,-40(s0)
20109f5c:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20109f60:	fdc42703          	lw	a4,-36(s0)
20109f64:	4785                	li	a5,1
20109f66:	00f70963          	beq	a4,a5,20109f78 <_write+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20109f6a:	2871                	jal	2010a006 <__errno>
20109f6c:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:9 (discriminator 1)
20109f6e:	05800793          	li	a5,88
20109f72:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:10
        return -1;
20109f74:	57fd                	li	a5,-1
20109f76:	a82d                	j	20109fb0 <_write+0x64>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20109f78:	fd842783          	lw	a5,-40(s0)
20109f7c:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20109f80:	fe042623          	sw	zero,-20(s0)
20109f84:	a839                	j	20109fa2 <_write+0x56>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:15
        metal_tty_putc(bptr[i]);
20109f86:	fe842703          	lw	a4,-24(s0)
20109f8a:	fec42783          	lw	a5,-20(s0)
20109f8e:	97ba                	add	a5,a5,a4
20109f90:	0007c783          	lbu	a5,0(a5)
20109f94:	853e                	mv	a0,a5
20109f96:	2969                	jal	2010a430 <metal_tty_putc>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20109f98:	fec42783          	lw	a5,-20(s0)
20109f9c:	0785                	add	a5,a5,1
20109f9e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20109fa2:	fec42703          	lw	a4,-20(s0)
20109fa6:	fd442783          	lw	a5,-44(s0)
20109faa:	fcf76ee3          	bltu	a4,a5,20109f86 <_write+0x3a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:16
    return 0;
20109fae:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:17
}
20109fb0:	853e                	mv	a0,a5
20109fb2:	50b2                	lw	ra,44(sp)
20109fb4:	5422                	lw	s0,40(sp)
20109fb6:	6145                	add	sp,sp,48
20109fb8:	8082                	ret

20109fba <atexit>:
atexit():
20109fba:	85aa                	mv	a1,a0
20109fbc:	4681                	li	a3,0
20109fbe:	4601                	li	a2,0
20109fc0:	4501                	li	a0,0
20109fc2:	ac09                	j	2010a1d4 <__register_exitproc>

20109fc4 <exit>:
exit():
20109fc4:	1141                	add	sp,sp,-16
20109fc6:	c422                	sw	s0,8(sp)
20109fc8:	c606                	sw	ra,12(sp)
20109fca:	00000797          	auipc	a5,0x0
20109fce:	28278793          	add	a5,a5,642 # 2010a24c <__call_exitprocs>
20109fd2:	842a                	mv	s0,a0
20109fd4:	c399                	beqz	a5,20109fda <exit+0x16>
20109fd6:	4581                	li	a1,0
20109fd8:	2c95                	jal	2010a24c <__call_exitprocs>
20109fda:	5fef7797          	auipc	a5,0x5fef7
20109fde:	ad67a783          	lw	a5,-1322(a5) # 80000ab0 <__stdio_exit_handler>
20109fe2:	c391                	beqz	a5,20109fe6 <exit+0x22>
20109fe4:	9782                	jalr	a5
20109fe6:	8522                	mv	a0,s0
20109fe8:	2985                	jal	2010a458 <_exit>

20109fea <strcat>:
strcat():
20109fea:	87aa                	mv	a5,a0
20109fec:	0007c683          	lbu	a3,0(a5)
20109ff0:	873e                	mv	a4,a5
20109ff2:	0785                	add	a5,a5,1
20109ff4:	fee5                	bnez	a3,20109fec <strcat+0x2>
20109ff6:	0005c783          	lbu	a5,0(a1)
20109ffa:	0585                	add	a1,a1,1
20109ffc:	0705                	add	a4,a4,1
20109ffe:	fef70fa3          	sb	a5,-1(a4)
2010a002:	fbf5                	bnez	a5,20109ff6 <strcat+0xc>
2010a004:	8082                	ret

2010a006 <__errno>:
__errno():
2010a006:	5fef7517          	auipc	a0,0x5fef7
2010a00a:	a7252503          	lw	a0,-1422(a0) # 80000a78 <_impure_ptr>
2010a00e:	8082                	ret

2010a010 <__libc_init_array>:
__libc_init_array():
2010a010:	1141                	add	sp,sp,-16
2010a012:	c422                	sw	s0,8(sp)
2010a014:	c226                	sw	s1,4(sp)
2010a016:	ffff6417          	auipc	s0,0xffff6
2010a01a:	2b240413          	add	s0,s0,690 # 201002c8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010a01e:	ffff6497          	auipc	s1,0xffff6
2010a022:	2aa48493          	add	s1,s1,682 # 201002c8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010a026:	8c81                	sub	s1,s1,s0
2010a028:	c04a                	sw	s2,0(sp)
2010a02a:	c606                	sw	ra,12(sp)
2010a02c:	8489                	sra	s1,s1,0x2
2010a02e:	4901                	li	s2,0
2010a030:	02991563          	bne	s2,s1,2010a05a <__libc_init_array+0x4a>
2010a034:	ffff6417          	auipc	s0,0xffff6
2010a038:	29440413          	add	s0,s0,660 # 201002c8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010a03c:	ffff6497          	auipc	s1,0xffff6
2010a040:	28c48493          	add	s1,s1,652 # 201002c8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010a044:	8c81                	sub	s1,s1,s0
2010a046:	8489                	sra	s1,s1,0x2
2010a048:	4901                	li	s2,0
2010a04a:	00991d63          	bne	s2,s1,2010a064 <__libc_init_array+0x54>
2010a04e:	40b2                	lw	ra,12(sp)
2010a050:	4422                	lw	s0,8(sp)
2010a052:	4492                	lw	s1,4(sp)
2010a054:	4902                	lw	s2,0(sp)
2010a056:	0141                	add	sp,sp,16
2010a058:	8082                	ret
2010a05a:	401c                	lw	a5,0(s0)
2010a05c:	0905                	add	s2,s2,1
2010a05e:	0411                	add	s0,s0,4
2010a060:	9782                	jalr	a5
2010a062:	b7f9                	j	2010a030 <__libc_init_array+0x20>
2010a064:	401c                	lw	a5,0(s0)
2010a066:	0905                	add	s2,s2,1
2010a068:	0411                	add	s0,s0,4
2010a06a:	9782                	jalr	a5
2010a06c:	bff9                	j	2010a04a <__libc_init_array+0x3a>

2010a06e <__libc_fini_array>:
__libc_fini_array():
2010a06e:	1141                	add	sp,sp,-16
2010a070:	c422                	sw	s0,8(sp)
2010a072:	c226                	sw	s1,4(sp)
2010a074:	ffff6417          	auipc	s0,0xffff6
2010a078:	26440413          	add	s0,s0,612 # 201002d8 <__fini_array_end>
2010a07c:	ffff6497          	auipc	s1,0xffff6
2010a080:	25c48493          	add	s1,s1,604 # 201002d8 <__fini_array_end>
2010a084:	8c05                	sub	s0,s0,s1
2010a086:	c606                	sw	ra,12(sp)
2010a088:	8409                	sra	s0,s0,0x2
2010a08a:	e411                	bnez	s0,2010a096 <__libc_fini_array+0x28>
2010a08c:	40b2                	lw	ra,12(sp)
2010a08e:	4422                	lw	s0,8(sp)
2010a090:	4492                	lw	s1,4(sp)
2010a092:	0141                	add	sp,sp,16
2010a094:	8082                	ret
2010a096:	147d                	add	s0,s0,-1
2010a098:	00241793          	sll	a5,s0,0x2
2010a09c:	97a6                	add	a5,a5,s1
2010a09e:	439c                	lw	a5,0(a5)
2010a0a0:	9782                	jalr	a5
2010a0a2:	b7e5                	j	2010a08a <__libc_fini_array+0x1c>

2010a0a4 <strcpy>:
strcpy():
2010a0a4:	87aa                	mv	a5,a0
2010a0a6:	0005c703          	lbu	a4,0(a1)
2010a0aa:	0785                	add	a5,a5,1
2010a0ac:	0585                	add	a1,a1,1
2010a0ae:	fee78fa3          	sb	a4,-1(a5)
2010a0b2:	fb75                	bnez	a4,2010a0a6 <strcpy+0x2>
2010a0b4:	8082                	ret

2010a0b6 <strcmp>:
strcmp():
2010a0b6:	00b56733          	or	a4,a0,a1
2010a0ba:	53fd                	li	t2,-1
2010a0bc:	8b0d                	and	a4,a4,3
2010a0be:	e779                	bnez	a4,2010a18c <strcmp+0xd6>
2010a0c0:	7f7f87b7          	lui	a5,0x7f7f8
2010a0c4:	f7f78793          	add	a5,a5,-129 # 7f7f7f7f <metal_segment_data_source_start+0x5f6edb0f>
2010a0c8:	4110                	lw	a2,0(a0)
2010a0ca:	4194                	lw	a3,0(a1)
2010a0cc:	00f672b3          	and	t0,a2,a5
2010a0d0:	00f66333          	or	t1,a2,a5
2010a0d4:	92be                	add	t0,t0,a5
2010a0d6:	0062e2b3          	or	t0,t0,t1
2010a0da:	0c729763          	bne	t0,t2,2010a1a8 <strcmp+0xf2>
2010a0de:	06d61863          	bne	a2,a3,2010a14e <strcmp+0x98>
2010a0e2:	4150                	lw	a2,4(a0)
2010a0e4:	41d4                	lw	a3,4(a1)
2010a0e6:	00f672b3          	and	t0,a2,a5
2010a0ea:	00f66333          	or	t1,a2,a5
2010a0ee:	92be                	add	t0,t0,a5
2010a0f0:	0062e2b3          	or	t0,t0,t1
2010a0f4:	0a729863          	bne	t0,t2,2010a1a4 <strcmp+0xee>
2010a0f8:	04d61b63          	bne	a2,a3,2010a14e <strcmp+0x98>
2010a0fc:	4510                	lw	a2,8(a0)
2010a0fe:	4594                	lw	a3,8(a1)
2010a100:	00f672b3          	and	t0,a2,a5
2010a104:	00f66333          	or	t1,a2,a5
2010a108:	92be                	add	t0,t0,a5
2010a10a:	0062e2b3          	or	t0,t0,t1
2010a10e:	0a729163          	bne	t0,t2,2010a1b0 <strcmp+0xfa>
2010a112:	02d61e63          	bne	a2,a3,2010a14e <strcmp+0x98>
2010a116:	4550                	lw	a2,12(a0)
2010a118:	45d4                	lw	a3,12(a1)
2010a11a:	00f672b3          	and	t0,a2,a5
2010a11e:	00f66333          	or	t1,a2,a5
2010a122:	92be                	add	t0,t0,a5
2010a124:	0062e2b3          	or	t0,t0,t1
2010a128:	08729a63          	bne	t0,t2,2010a1bc <strcmp+0x106>
2010a12c:	02d61163          	bne	a2,a3,2010a14e <strcmp+0x98>
2010a130:	4910                	lw	a2,16(a0)
2010a132:	4994                	lw	a3,16(a1)
2010a134:	00f672b3          	and	t0,a2,a5
2010a138:	00f66333          	or	t1,a2,a5
2010a13c:	92be                	add	t0,t0,a5
2010a13e:	0062e2b3          	or	t0,t0,t1
2010a142:	08729363          	bne	t0,t2,2010a1c8 <strcmp+0x112>
2010a146:	0551                	add	a0,a0,20
2010a148:	05d1                	add	a1,a1,20
2010a14a:	f6d60fe3          	beq	a2,a3,2010a0c8 <strcmp+0x12>
2010a14e:	01061713          	sll	a4,a2,0x10
2010a152:	01069793          	sll	a5,a3,0x10
2010a156:	00f71c63          	bne	a4,a5,2010a16e <strcmp+0xb8>
2010a15a:	01065713          	srl	a4,a2,0x10
2010a15e:	0106d793          	srl	a5,a3,0x10
2010a162:	40f70533          	sub	a0,a4,a5
2010a166:	0ff57593          	zext.b	a1,a0
2010a16a:	e991                	bnez	a1,2010a17e <strcmp+0xc8>
2010a16c:	8082                	ret
2010a16e:	8341                	srl	a4,a4,0x10
2010a170:	83c1                	srl	a5,a5,0x10
2010a172:	40f70533          	sub	a0,a4,a5
2010a176:	0ff57593          	zext.b	a1,a0
2010a17a:	e191                	bnez	a1,2010a17e <strcmp+0xc8>
2010a17c:	8082                	ret
2010a17e:	0ff77713          	zext.b	a4,a4
2010a182:	0ff7f793          	zext.b	a5,a5
2010a186:	40f70533          	sub	a0,a4,a5
2010a18a:	8082                	ret
2010a18c:	00054603          	lbu	a2,0(a0)
2010a190:	0005c683          	lbu	a3,0(a1)
2010a194:	0505                	add	a0,a0,1
2010a196:	0585                	add	a1,a1,1
2010a198:	00d61363          	bne	a2,a3,2010a19e <strcmp+0xe8>
2010a19c:	fa65                	bnez	a2,2010a18c <strcmp+0xd6>
2010a19e:	40d60533          	sub	a0,a2,a3
2010a1a2:	8082                	ret
2010a1a4:	0511                	add	a0,a0,4
2010a1a6:	0591                	add	a1,a1,4
2010a1a8:	fed612e3          	bne	a2,a3,2010a18c <strcmp+0xd6>
2010a1ac:	4501                	li	a0,0
2010a1ae:	8082                	ret
2010a1b0:	0521                	add	a0,a0,8
2010a1b2:	05a1                	add	a1,a1,8
2010a1b4:	fcd61ce3          	bne	a2,a3,2010a18c <strcmp+0xd6>
2010a1b8:	4501                	li	a0,0
2010a1ba:	8082                	ret
2010a1bc:	0531                	add	a0,a0,12
2010a1be:	05b1                	add	a1,a1,12
2010a1c0:	fcd616e3          	bne	a2,a3,2010a18c <strcmp+0xd6>
2010a1c4:	4501                	li	a0,0
2010a1c6:	8082                	ret
2010a1c8:	0541                	add	a0,a0,16
2010a1ca:	05c1                	add	a1,a1,16
2010a1cc:	fcd610e3          	bne	a2,a3,2010a18c <strcmp+0xd6>
2010a1d0:	4501                	li	a0,0
2010a1d2:	8082                	ret

2010a1d4 <__register_exitproc>:
__register_exitproc():
2010a1d4:	5fef7717          	auipc	a4,0x5fef7
2010a1d8:	8e470713          	add	a4,a4,-1820 # 80000ab8 <__atexit>
2010a1dc:	431c                	lw	a5,0(a4)
2010a1de:	88aa                	mv	a7,a0
2010a1e0:	ef81                	bnez	a5,2010a1f8 <__register_exitproc+0x24>
2010a1e2:	98418793          	add	a5,gp,-1660 # 80000bfc <__atexit0>
2010a1e6:	c31c                	sw	a5,0(a4)
2010a1e8:	00000713          	li	a4,0
2010a1ec:	c701                	beqz	a4,2010a1f4 <__register_exitproc+0x20>
2010a1ee:	4318                	lw	a4,0(a4)
2010a1f0:	08e7a423          	sw	a4,136(a5)
2010a1f4:	98418793          	add	a5,gp,-1660 # 80000bfc <__atexit0>
2010a1f8:	43d8                	lw	a4,4(a5)
2010a1fa:	487d                	li	a6,31
2010a1fc:	557d                	li	a0,-1
2010a1fe:	04e84663          	blt	a6,a4,2010a24a <__register_exitproc+0x76>
2010a202:	02088d63          	beqz	a7,2010a23c <__register_exitproc+0x68>
2010a206:	0887a803          	lw	a6,136(a5)
2010a20a:	04080063          	beqz	a6,2010a24a <__register_exitproc+0x76>
2010a20e:	00271513          	sll	a0,a4,0x2
2010a212:	9542                	add	a0,a0,a6
2010a214:	c110                	sw	a2,0(a0)
2010a216:	10082303          	lw	t1,256(a6)
2010a21a:	4605                	li	a2,1
2010a21c:	00e61633          	sll	a2,a2,a4
2010a220:	00c36333          	or	t1,t1,a2
2010a224:	10682023          	sw	t1,256(a6)
2010a228:	08d52023          	sw	a3,128(a0)
2010a22c:	4689                	li	a3,2
2010a22e:	00d89763          	bne	a7,a3,2010a23c <__register_exitproc+0x68>
2010a232:	10482683          	lw	a3,260(a6)
2010a236:	8ed1                	or	a3,a3,a2
2010a238:	10d82223          	sw	a3,260(a6)
2010a23c:	00170693          	add	a3,a4,1
2010a240:	070a                	sll	a4,a4,0x2
2010a242:	c3d4                	sw	a3,4(a5)
2010a244:	97ba                	add	a5,a5,a4
2010a246:	c78c                	sw	a1,8(a5)
2010a248:	4501                	li	a0,0
2010a24a:	8082                	ret

2010a24c <__call_exitprocs>:
__call_exitprocs():
2010a24c:	7179                	add	sp,sp,-48
2010a24e:	ca56                	sw	s5,20(sp)
2010a250:	c85a                	sw	s6,16(sp)
2010a252:	c65e                	sw	s7,12(sp)
2010a254:	c462                	sw	s8,8(sp)
2010a256:	d606                	sw	ra,44(sp)
2010a258:	d422                	sw	s0,40(sp)
2010a25a:	d226                	sw	s1,36(sp)
2010a25c:	d04a                	sw	s2,32(sp)
2010a25e:	ce4e                	sw	s3,28(sp)
2010a260:	cc52                	sw	s4,24(sp)
2010a262:	c266                	sw	s9,4(sp)
2010a264:	8b2a                	mv	s6,a0
2010a266:	8aae                	mv	s5,a1
2010a268:	5fef7b97          	auipc	s7,0x5fef7
2010a26c:	850b8b93          	add	s7,s7,-1968 # 80000ab8 <__atexit>
2010a270:	4c05                	li	s8,1
2010a272:	000ba483          	lw	s1,0(s7)
2010a276:	cc81                	beqz	s1,2010a28e <__call_exitprocs+0x42>
2010a278:	40c0                	lw	s0,4(s1)
2010a27a:	0884a983          	lw	s3,136(s1)
2010a27e:	fff40913          	add	s2,s0,-1
2010a282:	040a                	sll	s0,s0,0x2
2010a284:	00898a33          	add	s4,s3,s0
2010a288:	9426                	add	s0,s0,s1
2010a28a:	00095f63          	bgez	s2,2010a2a8 <__call_exitprocs+0x5c>
2010a28e:	50b2                	lw	ra,44(sp)
2010a290:	5422                	lw	s0,40(sp)
2010a292:	5492                	lw	s1,36(sp)
2010a294:	5902                	lw	s2,32(sp)
2010a296:	49f2                	lw	s3,28(sp)
2010a298:	4a62                	lw	s4,24(sp)
2010a29a:	4ad2                	lw	s5,20(sp)
2010a29c:	4b42                	lw	s6,16(sp)
2010a29e:	4bb2                	lw	s7,12(sp)
2010a2a0:	4c22                	lw	s8,8(sp)
2010a2a2:	4c92                	lw	s9,4(sp)
2010a2a4:	6145                	add	sp,sp,48
2010a2a6:	8082                	ret
2010a2a8:	000a8c63          	beqz	s5,2010a2c0 <__call_exitprocs+0x74>
2010a2ac:	00099663          	bnez	s3,2010a2b8 <__call_exitprocs+0x6c>
2010a2b0:	197d                	add	s2,s2,-1
2010a2b2:	1a71                	add	s4,s4,-4
2010a2b4:	1471                	add	s0,s0,-4
2010a2b6:	bfd1                	j	2010a28a <__call_exitprocs+0x3e>
2010a2b8:	07ca2783          	lw	a5,124(s4)
2010a2bc:	ff579ae3          	bne	a5,s5,2010a2b0 <__call_exitprocs+0x64>
2010a2c0:	40d8                	lw	a4,4(s1)
2010a2c2:	405c                	lw	a5,4(s0)
2010a2c4:	177d                	add	a4,a4,-1
2010a2c6:	03271863          	bne	a4,s2,2010a2f6 <__call_exitprocs+0xaa>
2010a2ca:	0124a223          	sw	s2,4(s1)
2010a2ce:	d3ed                	beqz	a5,2010a2b0 <__call_exitprocs+0x64>
2010a2d0:	0044ac83          	lw	s9,4(s1)
2010a2d4:	00098863          	beqz	s3,2010a2e4 <__call_exitprocs+0x98>
2010a2d8:	1009a683          	lw	a3,256(s3)
2010a2dc:	012c1733          	sll	a4,s8,s2
2010a2e0:	8ef9                	and	a3,a3,a4
2010a2e2:	ee89                	bnez	a3,2010a2fc <__call_exitprocs+0xb0>
2010a2e4:	9782                	jalr	a5
2010a2e6:	40d8                	lw	a4,4(s1)
2010a2e8:	000ba783          	lw	a5,0(s7)
2010a2ec:	f99713e3          	bne	a4,s9,2010a272 <__call_exitprocs+0x26>
2010a2f0:	fcf480e3          	beq	s1,a5,2010a2b0 <__call_exitprocs+0x64>
2010a2f4:	bfbd                	j	2010a272 <__call_exitprocs+0x26>
2010a2f6:	00042223          	sw	zero,4(s0)
2010a2fa:	bfd1                	j	2010a2ce <__call_exitprocs+0x82>
2010a2fc:	1049a683          	lw	a3,260(s3)
2010a300:	ffca2583          	lw	a1,-4(s4)
2010a304:	8f75                	and	a4,a4,a3
2010a306:	e701                	bnez	a4,2010a30e <__call_exitprocs+0xc2>
2010a308:	855a                	mv	a0,s6
2010a30a:	9782                	jalr	a5
2010a30c:	bfe9                	j	2010a2e6 <__call_exitprocs+0x9a>
2010a30e:	852e                	mv	a0,a1
2010a310:	9782                	jalr	a5
2010a312:	bfd1                	j	2010a2e6 <__call_exitprocs+0x9a>

2010a314 <metal_init>:
metal_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:21
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2010a314:	1101                	add	sp,sp,-32
2010a316:	ce06                	sw	ra,28(sp)
2010a318:	cc22                	sw	s0,24(sp)
2010a31a:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:24
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
2010a31c:	800017b7          	lui	a5,0x80001
2010a320:	abc7a783          	lw	a5,-1348(a5) # 80000abc <init_done.1>
2010a324:	efa9                	bnez	a5,2010a37e <metal_init+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:27
        return;
    }
    init_done = 1;
2010a326:	800017b7          	lui	a5,0x80001
2010a32a:	4705                	li	a4,1
2010a32c:	aae7ae23          	sw	a4,-1348(a5) # 80000abc <init_done.1>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:42
#ifdef METAL_SIFIVE_L2PF1
    /* Do L2 Stride Prefetcher initialization. */
    sifive_l2pf1_init();
#endif /* METAL_SIFIVE_L2PF1 */

    if (&metal_constructors_end <= &metal_constructors_start) {
2010a330:	201007b7          	lui	a5,0x20100
2010a334:	2d478713          	add	a4,a5,724 # 201002d4 <metal_sifive_fe310_g000_pll_init>
2010a338:	201007b7          	lui	a5,0x20100
2010a33c:	2c878793          	add	a5,a5,712 # 201002c8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010a340:	04e7f163          	bgeu	a5,a4,2010a382 <metal_init+0x6e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:46
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
2010a344:	201007b7          	lui	a5,0x20100
2010a348:	2c878793          	add	a5,a5,712 # 201002c8 <_metal_sifive_fe310_g000_pll_init_ptr>
2010a34c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
2010a350:	a831                	j	2010a36c <metal_init+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:48
        metal_constructor_t func = *funcptr;
2010a352:	fec42783          	lw	a5,-20(s0)
2010a356:	439c                	lw	a5,0(a5)
2010a358:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:50

        func();
2010a35c:	fe842783          	lw	a5,-24(s0)
2010a360:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:52

        funcptr += 1;
2010a362:	fec42783          	lw	a5,-20(s0)
2010a366:	0791                	add	a5,a5,4
2010a368:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
2010a36c:	fec42703          	lw	a4,-20(s0)
2010a370:	201007b7          	lui	a5,0x20100
2010a374:	2d478793          	add	a5,a5,724 # 201002d4 <metal_sifive_fe310_g000_pll_init>
2010a378:	fcf71de3          	bne	a4,a5,2010a352 <metal_init+0x3e>
2010a37c:	a021                	j	2010a384 <metal_init+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:25
        return;
2010a37e:	0001                	nop
2010a380:	a011                	j	2010a384 <metal_init+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:43
        return;
2010a382:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:54
    }
}
2010a384:	40f2                	lw	ra,28(sp)
2010a386:	4462                	lw	s0,24(sp)
2010a388:	6105                	add	sp,sp,32
2010a38a:	8082                	ret

2010a38c <metal_fini>:
metal_fini():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:56

void metal_fini(void) {
2010a38c:	1101                	add	sp,sp,-32
2010a38e:	ce06                	sw	ra,28(sp)
2010a390:	cc22                	sw	s0,24(sp)
2010a392:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:59
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
2010a394:	800017b7          	lui	a5,0x80001
2010a398:	ac07a783          	lw	a5,-1344(a5) # 80000ac0 <fini_done.0>
2010a39c:	efa9                	bnez	a5,2010a3f6 <metal_fini+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:62
        return;
    }
    fini_done = 1;
2010a39e:	800017b7          	lui	a5,0x80001
2010a3a2:	4705                	li	a4,1
2010a3a4:	ace7a023          	sw	a4,-1344(a5) # 80000ac0 <fini_done.0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:64

    if (&metal_destructors_end <= &metal_destructors_start) {
2010a3a8:	201007b7          	lui	a5,0x20100
2010a3ac:	2d878713          	add	a4,a5,728 # 201002d8 <__fini_array_end>
2010a3b0:	201007b7          	lui	a5,0x20100
2010a3b4:	2d878793          	add	a5,a5,728 # 201002d8 <__fini_array_end>
2010a3b8:	04e7f163          	bgeu	a5,a4,2010a3fa <metal_fini+0x6e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:68
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
2010a3bc:	201007b7          	lui	a5,0x20100
2010a3c0:	2d878793          	add	a5,a5,728 # 201002d8 <__fini_array_end>
2010a3c4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
2010a3c8:	a831                	j	2010a3e4 <metal_fini+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:70
        metal_destructor_t func = *funcptr;
2010a3ca:	fec42783          	lw	a5,-20(s0)
2010a3ce:	439c                	lw	a5,0(a5)
2010a3d0:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:72

        func();
2010a3d4:	fe842783          	lw	a5,-24(s0)
2010a3d8:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:74

        funcptr += 1;
2010a3da:	fec42783          	lw	a5,-20(s0)
2010a3de:	0791                	add	a5,a5,4
2010a3e0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
2010a3e4:	fec42703          	lw	a4,-20(s0)
2010a3e8:	201007b7          	lui	a5,0x20100
2010a3ec:	2d878793          	add	a5,a5,728 # 201002d8 <__fini_array_end>
2010a3f0:	fcf71de3          	bne	a4,a5,2010a3ca <metal_fini+0x3e>
2010a3f4:	a021                	j	2010a3fc <metal_fini+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:60
        return;
2010a3f6:	0001                	nop
2010a3f8:	a011                	j	2010a3fc <metal_fini+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:65
        return;
2010a3fa:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:76
    }
}
2010a3fc:	40f2                	lw	ra,28(sp)
2010a3fe:	4462                	lw	s0,24(sp)
2010a400:	6105                	add	sp,sp,32
2010a402:	8082                	ret

2010a404 <metal_init_run>:
metal_init_run():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:86
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2010a404:	1141                	add	sp,sp,-16
2010a406:	c606                	sw	ra,12(sp)
2010a408:	c422                	sw	s0,8(sp)
2010a40a:	0800                	add	s0,sp,16
2010a40c:	f09ff0ef          	jal	2010a314 <metal_init>
2010a410:	0001                	nop
2010a412:	40b2                	lw	ra,12(sp)
2010a414:	4422                	lw	s0,8(sp)
2010a416:	0141                	add	sp,sp,16
2010a418:	8082                	ret

2010a41a <metal_fini_run>:
metal_fini_run():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:89

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2010a41a:	1141                	add	sp,sp,-16
2010a41c:	c606                	sw	ra,12(sp)
2010a41e:	c422                	sw	s0,8(sp)
2010a420:	0800                	add	s0,sp,16
2010a422:	f6bff0ef          	jal	2010a38c <metal_fini>
2010a426:	0001                	nop
2010a428:	40b2                	lw	ra,12(sp)
2010a42a:	4422                	lw	s0,8(sp)
2010a42c:	0141                	add	sp,sp,16
2010a42e:	8082                	ret

2010a430 <metal_tty_putc>:
metal_tty_putc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
2010a430:	1101                	add	sp,sp,-32
2010a432:	ce06                	sw	ra,28(sp)
2010a434:	cc22                	sw	s0,24(sp)
2010a436:	1000                	add	s0,sp,32
2010a438:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2010a43c:	fec42583          	lw	a1,-20(s0)
2010a440:	800017b7          	lui	a5,0x80001
2010a444:	a3078513          	add	a0,a5,-1488 # 80000a30 <__metal_dt_serial_10013000>
2010a448:	81dff0ef          	jal	20109c64 <metal_uart_putc>
2010a44c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:14
}
2010a44e:	853e                	mv	a0,a5
2010a450:	40f2                	lw	ra,28(sp)
2010a452:	4462                	lw	s0,24(sp)
2010a454:	6105                	add	sp,sp,32
2010a456:	8082                	ret

2010a458 <_exit>:
_exit():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
2010a458:	1101                	add	sp,sp,-32
2010a45a:	ce06                	sw	ra,28(sp)
2010a45c:	cc22                	sw	s0,24(sp)
2010a45e:	1000                	add	s0,sp,32
2010a460:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2010a464:	fec42503          	lw	a0,-20(s0)
2010a468:	fc2ff0ef          	jal	20109c2a <metal_shutdown>
