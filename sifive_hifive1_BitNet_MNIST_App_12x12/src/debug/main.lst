
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/src/debug/main.elf:     file format elf32-littleriscv
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/src/debug/main.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20100000

Program Header:
0x70000003 off    0x00046c57 vaddr 0x00000000 paddr 0x00000000 align 2**0
         filesz 0x0000004d memsz 0x00000000 flags r--
    LOAD off    0x00001000 vaddr 0x20100000 paddr 0x20100000 align 2**12
         filesz 0x00005184 memsz 0x00005184 flags rwx
    LOAD off    0x0000e000 vaddr 0x80000000 paddr 0x2010c440 align 2**12
         filesz 0x00000a94 memsz 0x00000a94 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00000a98 vaddr 0x80000a98 paddr 0x80000a98 align 2**12
         filesz 0x00000000 memsz 0x00001088 flags rw-
    LOAD off    0x00000134 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00006200 vaddr 0x20105200 paddr 0x20105200 align 2**12
         filesz 0x0000723a memsz 0x0000723a flags r-x
    LOAD off    0x00000134 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002c4  20100000  20100000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  201002c8  201002c8  000012c8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  201002d4  201002d4  000012d4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00004e34  20100350  20100350  00001350  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             0000723a  20105200  20105200  00006200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000a94  80000000  2010c440  0000e000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000488  80000a98  80000a98  0000ea98  2**3  ALLOC
  7 .stack            00000400  80000f20  80000f20  0000ea98  2**4  ALLOC
  8 .heap             00000800  80001320  80001320  0000ea98  2**3  ALLOC
  9 .debug_info       0001fbea  00000000  00000000  0000ea94  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     000035d8  00000000  00000000  0002e67e  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000c88  00000000  00000000  00031c58  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000e18  00000000  00000000  000328e0  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000dfb8  00000000  00000000  000336f8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00005582  00000000  00000000  000416b0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000025  00000000  00000000  00046c32  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000004d  00000000  00000000  00046c57  2**0  CONTENTS, READONLY
 17 .debug_frame      00002fd8  00000000  00000000  00046ca4  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_loc        000023dd  00000000  00000000  00049c7c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20100000 l    d  .init	00000000 .init
201002c8 l    d  .init_array	00000000 .init_array
201002d4 l    d  .ctors	00000000 .ctors
20100350 l    d  .rodata	00000000 .rodata
20105200 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000a98 l    d  .bss	00000000 .bss
80000f20 l    d  .stack	00000000 .stack
80001320 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 entry.o
00000000 l    df *ABS*	00000000 scrub.o
201000c0 l     F .init	00000000 __metal_memory_scrub
2010012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 trap.o
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20100240 l       .init	00000000 _skip_init
201045e0 l       .rodata	00000000 argv
201045e4 l       .rodata	00000000 envp
201045e8 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
2010aa32 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
2010aa4c l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
2010aa66 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
2010aa7c l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2010aa90 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2010aaa2 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
2010aab2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
2010aac8 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
2010aada l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
201047e4 l     O .rodata	00000880 pll_configs
2010aaf0 l     F .text	0000004e get_pll_config_freq
2010ad60 l     F .text	000000aa find_closest_config
2010ae0a l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
80000ab4 l     O .bss	00000100 layer1_sum.4
80000bb4 l     O .bss	00000040 layer1_out.3
80000bf4 l     O .bss	00000100 layer2_sum.2
80000cf4 l     O .bss	00000040 layer2_out.1
80000d34 l     O .bss	00000028 layer3_sum.0
00000000 l    df *ABS*	00000000 mnist_model_params.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20105ee0 l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20107e24 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20107e4e l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20107e76 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20107eb2 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20108012 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
2010855a l     F .text	00000024 __metal_driver_cpu_hartid
2010857e l     F .text	0000002a __metal_driver_cpu_timebase
201085a8 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
201085d2 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20109f74 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20109f9e l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20109fc8 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20109ff0 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
2010a018 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2010a03a l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
2010b198 l     F .text	00000026 __metal_driver_sifive_gpio0_base
2010b1be l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
2010b1e8 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
2010ba4c l     F .text	0000002a __metal_driver_sifive_uart0_control_base
2010ba76 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
2010baa4 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
2010bacc l     F .text	0000002e __metal_driver_sifive_uart0_clock
2010bafa l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
2010bb24 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
2010bb4c l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
2010bf16 l     F .text	000000da pre_rate_change_callback_func
2010bff0 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
2010a842 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
2010a85c l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
2010a872 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
2010a886 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
2010a942 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
2010a95c l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
2010a972 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
2010a986 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2010b120 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
2010c380 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 freer.c
00000000 l    df *ABS*	00000000 mallocr.c
20105d5a l     F .text	0000005e sbrk_aligned
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
20106694 l     F .text	0000006a std
201066fe l     F .text	0000001a stdio_exit_handler
20106718 l     F .text	0000003e cleanup_stdio
20106756 l     F .text	00000036 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 s_round.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000a74 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 init.c
80000aac l     O .bss	00000004 init_done.1
80000ab0 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
2010c300 l       .text	00000000 IRQ_0
2010c304 l       .text	00000000 IRQ_1
2010c308 l       .text	00000000 IRQ_2
2010c30c l       .text	00000000 IRQ_3
2010c310 l       .text	00000000 IRQ_4
2010c314 l       .text	00000000 IRQ_5
2010c318 l       .text	00000000 IRQ_6
2010c31c l       .text	00000000 IRQ_7
2010c320 l       .text	00000000 IRQ_8
2010c324 l       .text	00000000 IRQ_9
2010c328 l       .text	00000000 IRQ_10
2010c32c l       .text	00000000 IRQ_11
2010c330 l       .text	00000000 IRQ_12
2010c334 l       .text	00000000 IRQ_13
2010c338 l       .text	00000000 IRQ_14
2010c33c l       .text	00000000 IRQ_15
2010c340 l       .text	00000000 IRQ_LC0
2010c344 l       .text	00000000 IRQ_LC1
2010c348 l       .text	00000000 IRQ_LC2
2010c34c l       .text	00000000 IRQ_LC3
2010c350 l       .text	00000000 IRQ_LC4
2010c354 l       .text	00000000 IRQ_LC5
2010c358 l       .text	00000000 IRQ_LC6
2010c35c l       .text	00000000 IRQ_LC7
2010c360 l       .text	00000000 IRQ_LC8
2010c364 l       .text	00000000 IRQ_LC9
2010c368 l       .text	00000000 IRQ_LC10
2010c36c l       .text	00000000 IRQ_LC11
2010c370 l       .text	00000000 IRQ_LC12
2010c374 l       .text	00000000 IRQ_LC13
2010c378 l       .text	00000000 IRQ_LC14
2010c37c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
00000000 l    df *ABS*	00000000 inline.c
201002d4 l       .init_array	00000000 metal_constructors_end
201002d8 l       .init_array	00000000 __fini_array_end
201002d8 l       .init_array	00000000 metal_destructors_end
201002d8 l       .init_array	00000000 metal_destructors_start
201002d8 l       .init_array	00000000 __fini_array_start
201002c8 l       .init_array	00000000 __init_array_end
201002c8 l       .init_array	00000000 __preinit_array_end
201002c8 l       .init_array	00000000 __init_array_start
201002c8 l       .init_array	00000000 metal_constructors_start
201002c8 l       .init_array	00000000 __preinit_array_start
2010514c g     O .rodata	00000004 L3_input_scale
201059e8 g     F .text	00000010 putchar
201050ec g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20103f8c g     O .rodata	00000090 input_data_2
20106a90 g     F .text	00000030 _isatty_r
20108e52  w    F .text	00000096 metal_lc4_interrupt_vector_handler
201059f8 g     F .text	000000a4 _puts_r
20106ac0 g     F .text	00000034 _lseek_r
20105134 g     O .rodata	00000004 L1_output_scale
2010c188 g     F .text	00000026 metal_clock_get_rate_hz
2010be76 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
201081ee g     F .text	00000054 __metal_driver_riscv_clint0_set_vector_mode
2010bcca g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
20108dbc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20109664 g     F .text	00000056 __metal_valid_interrupt_id
201059bc g     F .text	0000002c printf
201002d0 g     O .init_array	00000004 _use_hfxosc_ptr
20109ae4 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80001270 g       .data	00000000 __global_pointer$
201002d4 g     F .ctors	00000024 metal_tty_init
2010c134 g     F .text	00000054 _metal_clock_append_to_callbacks
2010a094 g     F .text	00000046 __metal_plic0_complete_interrupt
201098a8 g     F .text	000001e4 __metal_driver_riscv_cpu_controller_interrupt_register
2010515f g     O .rodata	00000001 label_7
201002cc g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
201069d8 g     F .text	00000036 __sseek
2010678c g     F .text	0000001c __sinit
20105aa8 g     F .text	0000009c __swbuf_r
80000a98 g       .data	00000000 __tls_base
20105ede g     F .text	00000002 __malloc_unlock
201071f8 g     F .text	000000ae round
2010c284 g     F .text	0000002e metal_cpu_get
80000a28 g     O .data	00000020 __metal_dt_serial_10013000
20106bf0 g     F .text	0000024a .hidden __divsf3
2010b626 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
201045f4 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000f20 g       .bss	00000000 metal_segment_bss_target_end
20107ee2 g     F .text	0000009a __metal_clint0_mtime_get
20109ee8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
2010515a g     O .rodata	00000001 label_2
00000001 g       *ABS*	00000000 __metal_chicken_bit
2010bd8e g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
2010b3dc g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
2010748e g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
2010bc9a g     F .text	00000030 __metal_driver_sifive_uart0_txready
2010bc28 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
80000aa0 g     O .bss	00000004 __stdio_exit_handler
20100142 g     F .init	0000000e __metal_synchronize_harts
80000a98 g       .data	00000000 metal_segment_bss_target_start
20107f7c g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20106a5e g     F .text	00000032 _fstat_r
2010b876 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000aa4 g     O .bss	00000004 errno
2010abe2 g     F .text	0000017e __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
2010c1fa g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20109140  w    F .text	00000096 metal_lc9_interrupt_vector_handler
201000cc  w    F .init	00000000 __metal_before_start
20107d4e  w    F .text	00000014 metal_init_run
20105138 g     O .rodata	00000004 L1_weights_zero_point
20104780 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
2010473c g     O .rodata	00000044 __metal_driver_vtable_cpu
20107df6 g     F .text	0000002e metal_uart_set_baud_rate
2010c020 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20109b70 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20105064 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80001320 g       .heap	00000000 metal_segment_heap_target_start
80000a84 g     O .data	00000008 __metal_dt_cpu_0
201090aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
2010afba g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
2010a7a6 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20105a9c g     F .text	0000000c puts
20105130 g     O .rodata	00000004 L1_input_zero_point
20109398  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20108764 g     F .text	00000018 __metal_default_exception_handler
201072c8 g     F .text	00000026 _fstat
20108526 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20109b00 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
201085f6 g     F .text	00000030 __metal_driver_cpu_get
201046d8 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20108658 g     F .text	00000018 __metal_interrupt_global_disable
2010515e g     O .rodata	00000001 label_6
2010a81a g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20109014  w    F .text	00000096 metal_lc7_interrupt_vector_handler
201091d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20106b28 g     F .text	00000030 _sbrk_r
2010a5c6 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20109776 g     F .text	0000004e __metal_exception_register
20107c5e g     F .text	00000078 metal_init
20106af4 g     F .text	00000034 _read_r
20109d02 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2010b4be g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20105148 g     O .rodata	00000004 L2_weights_zero_point
20107126 g     F .text	00000096 .hidden __extendsfdf2
20108854 g     F .text	00000068 __metal_default_sw_handler
2010766c g     F .text	000005f2 .hidden __adddf3
2010c22c g     F .text	00000032 metal_clock_register_post_rate_change_callback
80000064 g     O .data	0000000c __metal_dt_clock_2
2010bb76 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
201072ee g     F .text	00000020 _isatty
2010b584 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
201041cc g     O .rodata	00000090 input_data_6
2010401c g     O .rodata	00000090 input_data_3
2010bbb6 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
2010517c g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
201088bc  w    F .text	00000094 metal_timer_interrupt_vector_handler
20107498 g     F .text	0000005e __libc_init_array
2010b4fe g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2010926c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
2010aa10 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20109a8c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20107362 g     F .text	0000008a _sbrk
2010b478 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2010c0f2 g     F .text	00000042 _metal_clock_call_all_callbacks
201002a2 g     F .init	00000002 _init
201086ba g     F .text	0000001a __metal_interrupt_timer_disable
2010b670 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
2010425c g     O .rodata	00000090 input_data_7
20109dc0 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
201050b0 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
2010bbf0 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
2010b5c4 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
201074f6 g     F .text	00000036 __libc_fini_array
80000a60 g     O .data	0000000c __metal_dt_clock_4
20102ac4 g     O .rodata	00001000 L2_weights
2010b9fe g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20107cd6 g     F .text	00000078 metal_fini
20109d4a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20109f54 g     F .text	00000020 __metal_driver_cpu_get_buserror
20106b8c g     F .text	00000064 .hidden __fixdfsi
80000000 g       .data	00000000 metal_segment_data_target_start
2010513c g     O .rodata	00000004 L2_input_scale
2010870c g     F .text	0000002c __metal_interrupt_local_enable
201084f2 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20107d76 g     F .text	00000026 metal_tty_putc
2010a298 g     F .text	00000018 __metal_plic0_default_handler
80000d5c g     O .bss	00000138 __sf
201073ec  w    F .text	00000070 write
20106904 g     F .text	00000056 _putc_r
00000000 g       *ABS*	00000000 __tbss_size
20105154 g     O .rodata	00000004 L3_weights_zero_point
80000058 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20105160 g     O .rodata	00000001 label_8
2010a616 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20108950 g     F .text	00000016 __metal_default_beu_handler
201086f0 g     F .text	0000001c __metal_interrupt_external_disable
2010bb96 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
2010530e g     F .text	00000100 processfclayer
20109b54 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
201097c4 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
201071bc g     F .text	0000003c .hidden __clzsi2
20105f08 g     F .text	00000042 __sfputs_r
20109ea2 g     F .text	00000046 __metal_driver_cpu_exception_register
20108670 g     F .text	00000018 __metal_interrupt_software_enable
20108c90  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20106a14 g     F .text	0000001a memchr
20105cb8 g     F .text	000000a2 _free_r
2010a15a g     F .text	00000064 __metal_driver_riscv_plic0_set_priority
2010955a g     F .text	00000058 __metal_controller_interrupt_vector_mode
201075a4 g     F .text	000000c8 __call_exitprocs
80000e94 g     O .bss	0000008c __atexit0
80001320 g       .stack	00000000 _sp
201002c8 g     O .init_array	00000004 _metal_tty_init_ptr
20100150 g     F .init	00000000 _start
2010a89c g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
2010730e g     F .text	0000002a _lseek
20109e82 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20105150 g     O .rodata	00000004 L3_input_zero_point
20109f16 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20105144 g     O .rodata	00000004 L2_output_scale
20107070 g     F .text	000000b6 .hidden __floatsisf
201086d4 g     F .text	0000001c __metal_interrupt_external_enable
2010752c g     F .text	00000078 __register_exitproc
2010bdbe g     F .text	00000042 __metal_driver_sifive_uart0_putc
20103ac4 g     O .rodata	00000100 L2_biases
2010a358 g     F .text	0000015c __metal_driver_riscv_plic0_init
2010a576 g     F .text	00000050 __metal_driver_riscv_plic0_enable
2010b44c g     F .text	0000002c __metal_driver_sifive_gpio0_output
201029c4 g     O .rodata	00000100 L1_biases
20108f7e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20108626 g     F .text	0000001a __metal_myhart_id
2010ba1e g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
201087c2  w    F .text	00000092 metal_software_interrupt_vector_handler
2010515d g     O .rodata	00000001 label_5
20109ab8 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20106a2e g     F .text	00000030 _close_r
2010be56 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
201080d0 g     F .text	000000da __metal_driver_riscv_clint0_register
80000a7c g     O .data	00000008 __metal_dt_clint_2000000
20105159 g     O .rodata	00000001 label_1
20105b44 g     F .text	000000cc __swsetup_r
80000aa8 g     O .bss	00000004 __atexit
2010c1ae g     F .text	0000004c metal_clock_set_rate_hz
2010540e g     F .text	0000003a software_delay
2010695a g     F .text	00000030 __sread
2010b39c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
201002a4  w    F .init	00000000 secondary_main
20108794  w    F .text	0000002e metal_interrupt_vector_handler
20105edc g     F .text	00000002 __malloc_lock
2010bc62 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
2010665e g     F .text	00000036 _fflush_r
2010a120 g     F .text	0000003a __metal_plic0_get_threshold
2010b132 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
2010437c g     O .rodata	00000090 input_data_9
201096ba g     F .text	000000bc __metal_local_interrupt_enable
201083b2 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20105c10 g     F .text	000000a8 memset
20108ee8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
201058c0 g     F .text	000000fc main
80000a98 g       .data	00000000 metal_segment_data_target_end
2010bd44 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20105164 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20109d5e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20109e22 g     F .text	00000060 __metal_driver_cpu_get_msip
2010c2cc g     F .text	0000000e metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20109f34 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
2010a058 g     F .text	0000003c __metal_plic0_claim_interrupt
201040ac g     O .rodata	00000090 input_data_4
2010bd14 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20106a0e g     F .text	00000006 __sclose
20109302  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2010008a g     F .init	00000000 metal_mem_scrub
20105db8 g     F .text	00000124 _malloc_r
201081d2 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
201005c4 g     O .rodata	00002400 L1_weights
20103efc g     O .rodata	00000090 input_data_1
80000a90 g     O .data	00000004 __metal_dt_prci_10008000
20109be0 g     F .text	00000046 __metal_driver_cpu_timebase_get
2010a70a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20106e3a g     F .text	00000236 .hidden __mulsf3
20100000 g       .init	00000000 _enter
2010c2b2 g     F .text	0000001a metal_cpu_get_current_hartid
2010a99c g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
2010c300 g       .text	00000000 __metal_vector_table
201042ec g     O .rodata	00000090 input_data_8
20105188 g       *ABS*	00000000 metal_segment_itim_source_start
80000a78  w    O .data	00000004 __metal_cpu_table
80000080 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
201002a2 g     F .init	00000002 _fini
201059bc g     F .text	0000002c iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20105158 g     O .rodata	00000001 label_0
201044dc g     O .rodata	00000100 .hidden __clz_tab
20105161 g     O .rodata	00000001 label_9
2010a1be g     F .text	00000036 __metal_driver_riscv_plic0_get_priority
20105448 g     F .text	0000003e display_banner
20103e44 g     O .rodata	00000028 L3_biases
20100324 g     F .ctors	0000002a use_hfxosc
20108640 g     F .text	00000018 __metal_interrupt_global_enable
2010745c g     F .text	0000000a atexit
20106b58 g     F .text	00000034 _write_r
201086a0 g     F .text	0000001a __metal_interrupt_timer_enable
2010be00 g     F .text	00000056 __metal_driver_sifive_uart0_getc
201082fa g     F .text	000000b8 __metal_driver_riscv_clint0_disable
201061b0 g     F .text	00000110 _printf_common
80000a70 g     O .data	00000004 _impure_ptr
20109c8c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20106522 g     F .text	0000013c __sflush_r
201067a8 g     F .text	00000068 _fwalk_sglue
2010a646 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
2010ab3e g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000070 g     O .data	0000000c __metal_dt_clock_5
2010515c g     O .rodata	00000001 label_4
20105140 g     O .rodata	00000004 L2_input_zero_point
2010b160 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
2010c3e2 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20103e6c g     O .rodata	00000090 input_data_0
20108242 g     F .text	000000b8 __metal_driver_riscv_clint0_enable
2010515b g     O .rodata	00000001 label_3
2010c440 g       *ABS*	00000000 metal_segment_data_source_start
20100134 g       .init	00000000 early_trap_vector
80001b20 g       .heap	00000000 metal_segment_heap_target_end
20105486 g     F .text	0000043a QInt8Inference
201095b2 g     F .text	000000b2 __metal_controller_interrupt_vector
80000a54 g     O .data	0000000c __metal_dt_clock_1
80000450 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20106810 g     F .text	0000005a __swhatbuf_r
2010b53e g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
8000004c g     O .data	0000000c __sglue
20108966 g     F .text	0000006a __metal_default_timer_handler
201073ec g     F .text	00000070 _write
2010a2b0 g     F .text	000000a8 __metal_plic0_handler
20108d26  w    F .text	00000096 metal_lc2_interrupt_vector_handler
201094c4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
2010c25e g     F .text	00000026 metal_cpu_interrupt_controller
2010698a g     F .text	0000004e __swrite
20107466 g     F .text	00000028 exit
20105f4a g     F .text	00000266 _vfiprintf_r
20103bc4 g     O .rodata	00000280 L3_weights
20105200 g     F .text	0000010e quantized_relu_requantize
80000000 g     O .data	0000004c _impure_data
2010c402 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20105188 g       *ABS*	00000000 metal_segment_lim_source_start
80000a8c g     O .data	00000004 __metal_dt_gpio_10012000
2010877c g     F .text	00000018 __metal_default_interrupt_handler
20107dc8 g     F .text	0000002e metal_uart_putc
20107338 g     F .text	0000002a _read
20107d62  w    F .text	00000014 metal_fini_run
2010b422 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20108a00 g     F .text	00000180 __metal_exception_handler
20108bfa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
2010c426 g     F .text	00000014 _exit
20109c26 g     F .text	00000066 __metal_driver_cpu_mtime_get
2010686a g     F .text	0000009a __smakebuf_r
201081aa g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
201062c0 g     F .text	00000262 _printf_i
80000a98 g     O .bss	00000004 __malloc_sbrk_start
2010942e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
2010516c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20108048 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000a9c g     O .bss	00000004 __malloc_free_list
201002f8 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20105f4a g     F .text	00000266 _vfprintf_r
20109d1c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2010a1f4 g     F .text	000000a4 __metal_plic0_enable
20100088  w      .init	00000000 __register_frame_info
2010a920 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20109d30 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20108738 g     F .text	0000002c __metal_interrupt_local_disable
20108688 g     F .text	00000018 __metal_interrupt_software_disable
20107d9c g     F .text	0000002c metal_uart_init
80000a48 g     O .data	0000000c __metal_dt_clock_3
2010413c g     O .rodata	00000090 input_data_5
2010a0da g     F .text	00000046 __metal_plic0_set_threshold
2010a66e g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
201072a6 g     F .text	00000022 _close
20105174 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
2010a4b4 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20100000 <_enter>:
_enter():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:31
    auipc a0, %pcrel_hi(__global_pointer__)
    addi a0, a0, %pcrel_lo(1b)
    ld   gp, 0(a0)
    add  gp, gp, a0
#else
    la gp, __global_pointer$
20100000:	5ff01197          	auipc	gp,0x5ff01
20100004:	27018193          	add	gp,gp,624 # 80001270 <__global_pointer$>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:36
#endif
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20100008:	00000297          	auipc	t0,0x0
2010000c:	01828293          	add	t0,t0,24 # 20100020 <_enter+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:37
    csrw mtvec, t0
20100010:	30529073          	csrw	mtvec,t0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:39
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20100014:	00100293          	li	t0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:40
    beqz t0, 1f
20100018:	00028463          	beqz	t0,20100020 <_enter+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:42
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2010001c:	7c105073          	csrw	0x7c1,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:47
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20100020:	00000297          	auipc	t0,0x0
20100024:	11428293          	add	t0,t0,276 # 20100134 <early_trap_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:48
    csrw mtvec, t0
20100028:	30529073          	csrw	mtvec,t0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:56
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2010002c:	00000113          	li	sp,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:63
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20100030:	00011463          	bnez	sp,20100038 <_enter+0x38>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:67
#ifdef __riscv_cmodel_compact
    lla.gprel sp, _sp
#else
    la sp, _sp
20100034:	0b018113          	add	sp,gp,176 # 80001320 <_sp>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:71
#endif
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20100038:	f1402573          	csrr	a0,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:72
    li t0, 0
2010003c:	4281                	li	t0,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:73
    la t1, __stack_size
2010003e:	40000313          	li	t1,1024
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:75
1:
    andi sp, sp, -16
20100042:	ff017113          	and	sp,sp,-16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:76
    beq t0, a0, 1f
20100046:	00a28563          	beq	t0,a0,20100050 <_enter+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:77
    add sp, sp, t1
2010004a:	911a                	add	sp,sp,t1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:78
    addi t0, t0, 1
2010004c:	0285                	add	t0,t0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:79
    j 1b
2010004e:	bfd5                	j	20100042 <_enter+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:88
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20100050:	00000097          	auipc	ra,0x0
20100054:	07c08093          	add	ra,ra,124 # 201000cc <__metal_before_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:89
    beqz ra, 1f
20100058:	00008363          	beqz	ra,2010005e <_enter+0x5e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:90
    jalr ra
2010005c:	9082                	jalr	ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:96
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2010005e:	f1402573          	csrr	a0,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:97
    li a1, 0
20100062:	4581                	li	a1,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:98
    li a2, 0
20100064:	4601                	li	a2,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:99
    call _start
20100066:	20ed                	jal	20100150 <_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:104

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20100068:	00000093          	li	ra,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:105
    beqz ra, 1f
2010006c:	00008363          	beqz	ra,20100072 <_enter+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:106
    jalr ra
20100070:	9082                	jalr	ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:111
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20100072:	00000297          	auipc	t0,0x0
20100076:	00c28293          	add	t0,t0,12 # 2010007e <_enter+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:112
     csrw mtvec, t0
2010007a:	30529073          	csrw	mtvec,t0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:114
1:
     lw t1, 0(x0)
2010007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:115
     j 1b
20100082:	bff5                	j	2010007e <_enter+0x7e>
20100084:	0000                	unimp
	...

20100088 <__register_frame_info>:
__register_frame_info():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/entry.S:128
 * going to leave this in for now.  At least it's fairly cheap :) */
.weak __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20100088:	8082                	ret

2010008a <metal_mem_scrub>:
metal_mem_scrub():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2010008a:	46a1                	li	a3,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2010008c:	3006b373          	csrrc	t1,mstatus,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20100090:	4291                	li	t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20100092:	0055c563          	blt	a1,t0,2010009c <metal_mem_scrub+0x12>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20100096:	00357613          	and	a2,a0,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2010009a:	ca11                	beqz	a2,201000ae <metal_mem_scrub+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2010009c:	00050023          	sb	zero,0(a0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
201000a0:	0505                	add	a0,a0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
201000a2:	15fd                	add	a1,a1,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
201000a4:	feb047e3          	bgtz	a1,20100092 <metal_mem_scrub+0x8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
201000a8:	30031073          	csrw	mstatus,t1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:39
    ret
201000ac:	8082                	ret
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
201000ae:	00052023          	sw	zero,0(a0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
201000b2:	0511                	add	a0,a0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
201000b4:	15f1                	add	a1,a1,-4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
201000b6:	fcb04ee3          	bgtz	a1,20100092 <metal_mem_scrub+0x8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
201000ba:	30031073          	csrw	mstatus,t1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:46
    ret
201000be:	8082                	ret

201000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
201000c0:	00032023          	sw	zero,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
201000c4:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
201000c6:	fe734de3          	blt	t1,t2,201000c0 <__metal_memory_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
201000ca:	8082                	ret

201000cc <__metal_before_start>:
__metal_before_start():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:93
.weak __metal_eccscrub_bit
.weak __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
201000cc:	8406                	mv	s0,ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:95

    la      t0, __metal_eccscrub_bit
201000ce:	dff00297          	auipc	t0,0xdff00
201000d2:	f3228293          	add	t0,t0,-206 # 0 <__metal_boot_hart>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:96
    beqz    t0, skip_scrub
201000d6:	04028c63          	beqz	t0,2010012e <skip_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:98

    la      t0, __metal_boot_hart
201000da:	dff00297          	auipc	t0,0xdff00
201000de:	f2628293          	add	t0,t0,-218 # 0 <__metal_boot_hart>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:99
    csrr    a5, mhartid
201000e2:	f14027f3          	csrr	a5,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:102

    /* Disable machine interrupts to be safe */
    li      a3, 8
201000e6:	46a1                	li	a3,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:103
    csrc    mstatus, a3
201000e8:	3006b073          	csrc	mstatus,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:106

    /* Zero out per hart stack */
    mv      t1, sp
201000ec:	830a                	mv	t1,sp
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:107
    la      t2, __stack_size
201000ee:	dff00397          	auipc	t2,0xdff00
201000f2:	31238393          	add	t2,t2,786 # 400 <__stack_size>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:108
    add     t2, t2, sp
201000f6:	938a                	add	t2,t2,sp
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:109
    beq     t1, t2, 1f
201000f8:	00730363          	beq	t1,t2,201000fe <__metal_before_start+0x32>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:110
    jal     __metal_memory_scrub
201000fc:	37d1                	jal	201000c0 <__metal_memory_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:112
1:
    bne     a5, t0, skip_scrub
201000fe:	02579863          	bne	a5,t0,2010012e <skip_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:119
    /* Zero out data segment */
#ifdef __riscv_cmodel_compact
    lla.gprel t1, metal_segment_data_target_start
    lla.gprel t2, metal_segment_data_target_end
#else
    la      t1, metal_segment_data_target_start
20100102:	5ff00317          	auipc	t1,0x5ff00
20100106:	efe30313          	add	t1,t1,-258 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:120
    la      t2, metal_segment_data_target_end
2010010a:	5ff01397          	auipc	t2,0x5ff01
2010010e:	98e38393          	add	t2,t2,-1650 # 80000a98 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:122
#endif
    beq     t1, t2, 1f
20100112:	00730363          	beq	t1,t2,20100118 <__metal_before_start+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:123
    jal     __metal_memory_scrub
20100116:	376d                	jal	201000c0 <__metal_memory_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:130
    /* Zero out itim memory */
#ifdef __riscv_cmodel_compact
    la.got.gprel t1, metal_segment_itim_target_start
    la.got.gprel t2, metal_segment_itim_target_end
#else
    la      t1, metal_segment_itim_target_start
20100118:	5ff00317          	auipc	t1,0x5ff00
2010011c:	ee830313          	add	t1,t1,-280 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:131
    la      t2, metal_segment_itim_target_end
20100120:	5ff00397          	auipc	t2,0x5ff00
20100124:	ee038393          	add	t2,t2,-288 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:133
#endif
    beq     t1, t2, skip_scrub
20100128:	00730363          	beq	t1,t2,2010012e <skip_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:134
    jal     __metal_memory_scrub
2010012c:	3f51                	jal	201000c0 <__metal_memory_scrub>

2010012e <skip_scrub>:
skip_scrub():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:138

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2010012e:	80a2                	mv	ra,s0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/scrub.S:139
    ret
20100130:	8082                	ret
	...

20100134 <early_trap_vector>:
early_trap_vector():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20100134:	342022f3          	csrr	t0,mcause
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:65
    csrr t1, mepc
20100138:	34102373          	csrr	t1,mepc
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:66
    csrr t2, mtval
2010013c:	343023f3          	csrr	t2,mtval
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/trap.S:67
    j early_trap_vector
20100140:	bfd5                	j	20100134 <early_trap_vector>

20100142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20100142:	1141                	add	sp,sp,-16
20100144:	c622                	sw	s0,12(sp)
20100146:	0800                	add	s0,sp,16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20100148:	0001                	nop
2010014a:	4432                	lw	s0,12(sp)
2010014c:	0141                	add	sp,sp,16
2010014e:	8082                	ret

20100150 <_start>:
_start():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20100150:	8406                	mv	s0,ra
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:51
  auipc a0, %pcrel_hi(__global_pointer__)
  addi a0, a0, %pcrel_lo(1b)
  ld   gp, 0(a0)
  add  gp, gp, a0
#else
  la gp, __global_pointer$
20100152:	5ff01197          	auipc	gp,0x5ff01
20100156:	11e18193          	add	gp,gp,286 # 80001270 <__global_pointer$>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:58
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2010015a:	00000293          	li	t0,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:59
  bne a0, t0, _skip_init
2010015e:	0e551163          	bne	a0,t0,20100240 <_skip_init>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:73
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_data_source_start
  lla.gprel t1, metal_segment_data_target_start
  lla.gprel t2, metal_segment_data_target_end
#else
  la t0, metal_segment_data_source_start
20100162:	0000c297          	auipc	t0,0xc
20100166:	2de28293          	add	t0,t0,734 # 2010c440 <metal_segment_data_source_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:74
  la t1, metal_segment_data_target_start
2010016a:	5ff00317          	auipc	t1,0x5ff00
2010016e:	e9630313          	add	t1,t1,-362 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:75
  la t2, metal_segment_data_target_end
20100172:	5ff01397          	auipc	t2,0x5ff01
20100176:	92638393          	add	t2,t2,-1754 # 80000a98 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:78
#endif

  beq t0, t1, 2f
2010017a:	00628c63          	beq	t0,t1,20100192 <_start+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:79
  bge t1, t2, 2f
2010017e:	00735a63          	bge	t1,t2,20100192 <_start+0x42>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:83

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20100182:	0002a503          	lw	a0,0(t0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:84
  addi t0, t0, 4
20100186:	0291                	add	t0,t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:85
  sw   a0, 0(t1)
20100188:	00a32023          	sw	a0,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:86
  addi t1, t1, 4
2010018c:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:87
  blt  t1, t2, 1b
2010018e:	fe734ae3          	blt	t1,t2,20100182 <_start+0x32>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:103
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_itim_source_start
  la.got.gprel t1, metal_segment_itim_target_start
  la.got.gprel t2, metal_segment_itim_target_end
#else
  la t0, metal_segment_itim_source_start
20100192:	00005297          	auipc	t0,0x5
20100196:	ff628293          	add	t0,t0,-10 # 20105188 <metal_segment_itim_source_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:104
  la t1, metal_segment_itim_target_start
2010019a:	5ff00317          	auipc	t1,0x5ff00
2010019e:	e6630313          	add	t1,t1,-410 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:105
  la t2, metal_segment_itim_target_end
201001a2:	5ff00397          	auipc	t2,0x5ff00
201001a6:	e5e38393          	add	t2,t2,-418 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:108
#endif

  beq t0, t1, 2f
201001aa:	00628c63          	beq	t0,t1,201001c2 <_start+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:109
  bge t1, t2, 2f
201001ae:	00735a63          	bge	t1,t2,201001c2 <_start+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:113

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
201001b2:	0002a503          	lw	a0,0(t0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:114
  addi t0, t0, 4
201001b6:	0291                	add	t0,t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:115
  sw   a0, 0(t1)
201001b8:	00a32023          	sw	a0,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:116
  addi t1, t1, 4
201001bc:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:117
  blt  t1, t2, 1b
201001be:	fe734ae3          	blt	t1,t2,201001b2 <_start+0x62>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:129
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
201001c2:	0000100f          	fence.i
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:139
#ifdef __riscv_cmodel_compact
  la.got.gprel t0, metal_segment_lim_source_start
  lla.gprel t1, metal_segment_lim_target_start
  lla.gprel t2, metal_segment_lim_target_end
#else
  la t0, metal_segment_lim_source_start
201001c6:	00005297          	auipc	t0,0x5
201001ca:	fc228293          	add	t0,t0,-62 # 20105188 <metal_segment_itim_source_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:140
  la t1, metal_segment_lim_target_start
201001ce:	5ff00317          	auipc	t1,0x5ff00
201001d2:	e3230313          	add	t1,t1,-462 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:141
  la t2, metal_segment_lim_target_end
201001d6:	5ff00397          	auipc	t2,0x5ff00
201001da:	e2a38393          	add	t2,t2,-470 # 80000000 <_impure_data>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:144
#endif

  beq t0, t1, 2f
201001de:	00628c63          	beq	t0,t1,201001f6 <_start+0xa6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:145
  bge t1, t2, 2f
201001e2:	00735a63          	bge	t1,t2,201001f6 <_start+0xa6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
201001e6:	0002a503          	lw	a0,0(t0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:150
  addi t0, t0, 4
201001ea:	0291                	add	t0,t0,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:151
  sw   a0, 0(t1)
201001ec:	00a32023          	sw	a0,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:152
  addi t1, t1, 4
201001f0:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:153
  blt  t1, t2, 1b
201001f2:	fe734ae3          	blt	t1,t2,201001e6 <_start+0x96>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:165
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
201001f6:	0000100f          	fence.i
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:172
  /* Zero the BSS segment. */
#ifdef __riscv_cmodel_compact
  lla.gprel t1, metal_segment_bss_target_start
  lla.gprel t2, metal_segment_bss_target_end
#else
  la t1, metal_segment_bss_target_start
201001fa:	5ff01317          	auipc	t1,0x5ff01
201001fe:	89e30313          	add	t1,t1,-1890 # 80000a98 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:173
  la t2, metal_segment_bss_target_end
20100202:	cb018393          	add	t2,gp,-848 # 80000f20 <metal_segment_bss_target_end>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:176
#endif

  bge t1, t2, 2f
20100206:	00735763          	bge	t1,t2,20100214 <_start+0xc4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:180

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2010020a:	00032023          	sw	zero,0(t1)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:181
  addi t1, t1, 4
2010020e:	0311                	add	t1,t1,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:182
  blt  t1, t2, 1b
20100210:	fe734de3          	blt	t1,t2,2010020a <_start+0xba>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:195
  /* Set TLS pointer */
  .weak __tls_base	
#ifdef __riscv_cmodel_compact
  lla.gprel tp, __tls_base
#else
  la tp, __tls_base
20100214:	5ff01217          	auipc	tp,0x5ff01
20100218:	88420213          	add	tp,tp,-1916 # 80000a98 <__malloc_sbrk_start>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:201
#endif

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2010021c:	c211                	beqz	a2,20100220 <_start+0xd0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:202
  jalr a2
2010021e:	9602                	jalr	a2
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:206
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20100220:	00007517          	auipc	a0,0x7
20100224:	2d650513          	add	a0,a0,726 # 201074f6 <__libc_fini_array>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:207
  call atexit
20100228:	234070ef          	jal	2010745c <atexit>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:208
  call __libc_init_array
2010022c:	26c070ef          	jal	20107498 <__libc_init_array>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:212

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20100230:	00008517          	auipc	a0,0x8
20100234:	b3250513          	add	a0,a0,-1230 # 20107d62 <metal_fini_run>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:213
  call atexit
20100238:	224070ef          	jal	2010745c <atexit>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:214
  call metal_init_run
2010023c:	313070ef          	jal	20107d4e <metal_init_run>

20100240 <_skip_init>:
_skip_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:220

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20100240:	3709                	jal	20100142 <__metal_synchronize_harts>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:223

  /* Disable and clear all interrupt sources */
  li   a3, -1
20100242:	56fd                	li	a3,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:224
  csrc mie, a3
20100244:	3046b073          	csrc	mie,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:225
  csrc mip, a3
20100248:	3446b073          	csrc	mip,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:229

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2010024c:	301027f3          	csrr	a5,misa
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:230
  lui  a4, 0x42
20100250:	00042737          	lui	a4,0x42
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:231
  and  a4, a4, a5
20100254:	8f7d                	and	a4,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:232
  beqz a4, 1f
20100256:	c709                	beqz	a4,20100260 <_skip_init+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:233
  csrc mideleg, a3
20100258:	3036b073          	csrc	mideleg,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:234
  csrc medeleg, a3
2010025c:	3026b073          	csrc	medeleg,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:238
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20100260:	00040737          	lui	a4,0x40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:239
  and  a4, a4, a5
20100264:	8f7d                	and	a4,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:240
  beqz a4, 1f
20100266:	c319                	beqz	a4,2010026c <_skip_init+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:241
  csrc satp, a3
20100268:	1806b073          	csrc	satp,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:245
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2010026c:	6741                	lui	a4,0x10
2010026e:	02870713          	add	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:246
  and  a5, a5, a4
20100272:	8ff9                	and	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:247
  beqz a5, 1f
20100274:	cb89                	beqz	a5,20100286 <_skip_init+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:248
  csrr a5, mstatus
20100276:	300027f3          	csrr	a5,mstatus
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:249
  lui  a4, 0x2
2010027a:	6709                	lui	a4,0x2
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:250
  or   a5, a5, a4
2010027c:	8fd9                	or	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:251
  csrw mstatus, a5
2010027e:	30079073          	csrw	mstatus,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:252
  csrwi fcsr, 0
20100282:	00305073          	csrw	fcsr,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:273
#endif

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
20100286:	4505                	li	a0,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:274
  la a1, argv  /* argv = {"libgloss", NULL} */
20100288:	00004597          	auipc	a1,0x4
2010028c:	35858593          	add	a1,a1,856 # 201045e0 <argv>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:275
  la a2, envp  /* envp = {NULL} */
20100290:	00004617          	auipc	a2,0x4
20100294:	35460613          	add	a2,a2,852 # 201045e4 <envp>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:276
  call secondary_main
20100298:	2031                	jal	201002a4 <secondary_main>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:282

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
2010029a:	1cc070ef          	jal	20107466 <exit>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:287

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
2010029e:	80a2                	mv	ra,s0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:288
  ret
201002a0:	8082                	ret

201002a2 <_fini>:
_fini():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:300
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
201002a2:	8082                	ret

201002a4 <secondary_main>:
secondary_main():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:310
 * Users can redefine secondary_main themselves to run code on secondary harts */
.weak   secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
201002a4:	1141                	add	sp,sp,-16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:312
#if __riscv_xlen == 32
  sw ra, 4(sp)
201002a6:	c206                	sw	ra,4(sp)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:316
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
201002a8:	f14022f3          	csrr	t0,mhartid
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:317
  la t1, __metal_boot_hart
201002ac:	00000313          	li	t1,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:318
  beq t0, t1, 2f
201002b0:	00628563          	beq	t0,t1,201002ba <secondary_main+0x16>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:320
1:
  wfi
201002b4:	10500073          	wfi
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:321
  j 1b
201002b8:	bff5                	j	201002b4 <secondary_main+0x10>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:323
2:
  call main
201002ba:	606050ef          	jal	201058c0 <main>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:325
#if __riscv_xlen == 32
  lw ra, 4(sp)
201002be:	4092                	lw	ra,4(sp)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:329
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
201002c0:	0141                	add	sp,sp,16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/crt0.S:330
  ret
201002c2:	8082                	ret

Disassembly of section .ctors:

201002d4 <metal_tty_init>:
metal_tty_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
201002d4:	1141                	add	sp,sp,-16
201002d6:	c606                	sw	ra,12(sp)
201002d8:	c422                	sw	s0,8(sp)
201002da:	0800                	add	s0,sp,16
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
201002dc:	67f1                	lui	a5,0x1c
201002de:	20078593          	add	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
201002e2:	800017b7          	lui	a5,0x80001
201002e6:	a2878513          	add	a0,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
201002ea:	2b3070ef          	jal	20107d9c <metal_uart_init>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:30
}
201002ee:	0001                	nop
201002f0:	40b2                	lw	ra,12(sp)
201002f2:	4422                	lw	s0,8(sp)
201002f4:	0141                	add	sp,sp,16
201002f6:	8082                	ret

201002f8 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
201002f8:	1101                	add	sp,sp,-32
201002fa:	ce06                	sw	ra,28(sp)
201002fc:	cc22                	sw	s0,24(sp)
201002fe:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20100300:	7b20a0ef          	jal	2010aab2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20100304:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20100308:	fec42783          	lw	a5,-20(s0)
2010030c:	c799                	beqz	a5,2010031a <metal_sifive_fe310_g000_pll_init+0x22>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2010030e:	800017b7          	lui	a5,0x80001
20100312:	a6078513          	add	a0,a5,-1440 # 80000a60 <__metal_dt_clock_4>
20100316:	0290a0ef          	jal	2010ab3e <__metal_driver_sifive_fe310_g000_pll_init>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
2010031a:	0001                	nop
2010031c:	40f2                	lw	ra,28(sp)
2010031e:	4462                	lw	s0,24(sp)
20100320:	6105                	add	sp,sp,32
20100322:	8082                	ret

20100324 <use_hfxosc>:
use_hfxosc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20100324:	1101                	add	sp,sp,-32
20100326:	ce06                	sw	ra,28(sp)
20100328:	cc22                	sw	s0,24(sp)
2010032a:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2010032c:	7860a0ef          	jal	2010aab2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20100330:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20100334:	fec42583          	lw	a1,-20(s0)
20100338:	800017b7          	lui	a5,0x80001
2010033c:	a6078513          	add	a0,a5,-1440 # 80000a60 <__metal_dt_clock_4>
20100340:	66f0b0ef          	jal	2010c1ae <metal_clock_set_rate_hz>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20100344:	0001                	nop
20100346:	40f2                	lw	ra,28(sp)
20100348:	4462                	lw	s0,24(sp)
2010034a:	6105                	add	sp,sp,32
2010034c:	8082                	ret

Disassembly of section .text:

20105200 <quantized_relu_requantize>:
quantized_relu_requantize():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:41
 * @param input_zero_point_int32 The zero point of the input tensor.
 * @param output_scale_float The scale of the output tensor.
 * @param output_zero_point_int32 The zero point of the output tensor.
 */
void quantized_relu_requantize(const int32_t* input_sum, int8_t* output_q, uint32_t n_output,
                                float input_scale_float, float output_scale_float, int32_t output_zero_point_int32) {
20105200:	715d                	add	sp,sp,-80
20105202:	c686                	sw	ra,76(sp)
20105204:	c4a2                	sw	s0,72(sp)
20105206:	0880                	add	s0,sp,80
20105208:	fca42623          	sw	a0,-52(s0)
2010520c:	fcb42423          	sw	a1,-56(s0)
20105210:	fcc42223          	sw	a2,-60(s0)
20105214:	fcd42023          	sw	a3,-64(s0)
20105218:	fae42e23          	sw	a4,-68(s0)
2010521c:	faf42c23          	sw	a5,-72(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:42
    float requantization_scale = input_scale_float / output_scale_float;
20105220:	fbc42583          	lw	a1,-68(s0)
20105224:	fc042503          	lw	a0,-64(s0)
20105228:	1c9010ef          	jal	20106bf0 <__divsf3>
2010522c:	87aa                	mv	a5,a0
2010522e:	fef42423          	sw	a5,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:44
    
    for (uint32_t i = 0; i < n_output; i++) {
20105232:	fe042623          	sw	zero,-20(s0)
20105236:	a0c1                	j	201052f6 <quantized_relu_requantize+0xf6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:46
        // Apply ReLU: clip negative values to 0
        int32_t relu_val = input_sum[i] > 0 ? input_sum[i] : 0;
20105238:	fec42783          	lw	a5,-20(s0)
2010523c:	078a                	sll	a5,a5,0x2
2010523e:	fcc42703          	lw	a4,-52(s0)
20105242:	97ba                	add	a5,a5,a4
20105244:	439c                	lw	a5,0(a5)
20105246:	0007d363          	bgez	a5,2010524c <quantized_relu_requantize+0x4c>
2010524a:	4781                	li	a5,0
2010524c:	fef42223          	sw	a5,-28(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:49
        
        // Requantize the value
        float scaled_val = (float)relu_val * requantization_scale;
20105250:	fe442503          	lw	a0,-28(s0)
20105254:	61d010ef          	jal	20107070 <__floatsisf>
20105258:	87aa                	mv	a5,a0
2010525a:	85be                	mv	a1,a5
2010525c:	fe842503          	lw	a0,-24(s0)
20105260:	3db010ef          	jal	20106e3a <__mulsf3>
20105264:	87aa                	mv	a5,a0
20105266:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:50
        int32_t quantized_val = (int32_t)round(scaled_val) + output_zero_point_int32;
2010526a:	fe042503          	lw	a0,-32(s0)
2010526e:	6b9010ef          	jal	20107126 <__extendsfdf2>
20105272:	872a                	mv	a4,a0
20105274:	87ae                	mv	a5,a1
20105276:	853a                	mv	a0,a4
20105278:	85be                	mv	a1,a5
2010527a:	77f010ef          	jal	201071f8 <round>
2010527e:	872a                	mv	a4,a0
20105280:	87ae                	mv	a5,a1
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:50 (discriminator 1)
20105282:	853a                	mv	a0,a4
20105284:	85be                	mv	a1,a5
20105286:	107010ef          	jal	20106b8c <__fixdfsi>
2010528a:	872a                	mv	a4,a0
2010528c:	fb842783          	lw	a5,-72(s0)
20105290:	97ba                	add	a5,a5,a4
20105292:	fcf42e23          	sw	a5,-36(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:53
        
        // Clamp the final value to the 8-bit range
        if (quantized_val > 127) {
20105296:	fdc42703          	lw	a4,-36(s0)
2010529a:	07f00793          	li	a5,127
2010529e:	00e7dc63          	bge	a5,a4,201052b6 <quantized_relu_requantize+0xb6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:54
            output_q[i] = 127;
201052a2:	fc842703          	lw	a4,-56(s0)
201052a6:	fec42783          	lw	a5,-20(s0)
201052aa:	97ba                	add	a5,a5,a4
201052ac:	07f00713          	li	a4,127
201052b0:	00e78023          	sb	a4,0(a5)
201052b4:	a825                	j	201052ec <quantized_relu_requantize+0xec>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:55
        } else if (quantized_val < -128) {
201052b6:	fdc42703          	lw	a4,-36(s0)
201052ba:	f8000793          	li	a5,-128
201052be:	00f75c63          	bge	a4,a5,201052d6 <quantized_relu_requantize+0xd6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:56
            output_q[i] = -128;
201052c2:	fc842703          	lw	a4,-56(s0)
201052c6:	fec42783          	lw	a5,-20(s0)
201052ca:	97ba                	add	a5,a5,a4
201052cc:	f8000713          	li	a4,-128
201052d0:	00e78023          	sb	a4,0(a5)
201052d4:	a821                	j	201052ec <quantized_relu_requantize+0xec>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:58
        } else {
            output_q[i] = (int8_t)quantized_val;
201052d6:	fc842703          	lw	a4,-56(s0)
201052da:	fec42783          	lw	a5,-20(s0)
201052de:	97ba                	add	a5,a5,a4
201052e0:	fdc42703          	lw	a4,-36(s0)
201052e4:	0762                	sll	a4,a4,0x18
201052e6:	8761                	sra	a4,a4,0x18
201052e8:	00e78023          	sb	a4,0(a5)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:44 (discriminator 2)
    for (uint32_t i = 0; i < n_output; i++) {
201052ec:	fec42783          	lw	a5,-20(s0)
201052f0:	0785                	add	a5,a5,1
201052f2:	fef42623          	sw	a5,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:44 (discriminator 1)
201052f6:	fec42703          	lw	a4,-20(s0)
201052fa:	fc442783          	lw	a5,-60(s0)
201052fe:	f2f76de3          	bltu	a4,a5,20105238 <quantized_relu_requantize+0x38>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:61
        }
    }
}
20105302:	0001                	nop
20105304:	0001                	nop
20105306:	40b6                	lw	ra,76(sp)
20105308:	4426                	lw	s0,72(sp)
2010530a:	6161                	add	sp,sp,80
2010530c:	8082                	ret

2010530e <processfclayer>:
processfclayer():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:77
 * @param input_zero_point The zero point of the input tensor.
 * @param weights_zero_point The zero point of the weights tensor.
 */
void processfclayer(const int8_t* activations, const int8_t* weights, const int32_t* biases,
                    uint32_t n_input, uint32_t n_output, int32_t* output,
                    int32_t input_zero_point, int32_t weights_zero_point) {
2010530e:	715d                	add	sp,sp,-80
20105310:	c686                	sw	ra,76(sp)
20105312:	c4a2                	sw	s0,72(sp)
20105314:	0880                	add	s0,sp,80
20105316:	fca42623          	sw	a0,-52(s0)
2010531a:	fcb42423          	sw	a1,-56(s0)
2010531e:	fcc42223          	sw	a2,-60(s0)
20105322:	fcd42023          	sw	a3,-64(s0)
20105326:	fae42e23          	sw	a4,-68(s0)
2010532a:	faf42c23          	sw	a5,-72(s0)
2010532e:	fb042a23          	sw	a6,-76(s0)
20105332:	fb142823          	sw	a7,-80(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:78
    printf("Processing layer: in=%d, out=%d\n", n_input, n_output);
20105336:	fbc42603          	lw	a2,-68(s0)
2010533a:	fc042583          	lw	a1,-64(s0)
2010533e:	201007b7          	lui	a5,0x20100
20105342:	35078513          	add	a0,a5,848 # 20100350 <use_hfxosc+0x2c>
20105346:	676000ef          	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:80

    for (uint32_t o = 0; o < n_output; o++) {
2010534a:	fe042623          	sw	zero,-20(s0)
2010534e:	a065                	j	201053f6 <processfclayer+0xe8>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:81
        int32_t sum = biases[o];
20105350:	fec42783          	lw	a5,-20(s0)
20105354:	078a                	sll	a5,a5,0x2
20105356:	fc442703          	lw	a4,-60(s0)
2010535a:	97ba                	add	a5,a5,a4
2010535c:	439c                	lw	a5,0(a5)
2010535e:	fef42423          	sw	a5,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:82
        for (uint32_t i = 0; i < n_input; i++) {
20105362:	fe042223          	sw	zero,-28(s0)
20105366:	a0a5                	j	201053ce <processfclayer+0xc0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:83
            int32_t a = (int32_t)activations[i] - input_zero_point;
20105368:	fcc42703          	lw	a4,-52(s0)
2010536c:	fe442783          	lw	a5,-28(s0)
20105370:	97ba                	add	a5,a5,a4
20105372:	00078783          	lb	a5,0(a5)
20105376:	873e                	mv	a4,a5
20105378:	fb442783          	lw	a5,-76(s0)
2010537c:	40f707b3          	sub	a5,a4,a5
20105380:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:84
            int32_t w = (int32_t)weights[o * n_input + i] - weights_zero_point;
20105384:	fec42703          	lw	a4,-20(s0)
20105388:	fc042783          	lw	a5,-64(s0)
2010538c:	02f70733          	mul	a4,a4,a5
20105390:	fe442783          	lw	a5,-28(s0)
20105394:	97ba                	add	a5,a5,a4
20105396:	fc842703          	lw	a4,-56(s0)
2010539a:	97ba                	add	a5,a5,a4
2010539c:	00078783          	lb	a5,0(a5)
201053a0:	873e                	mv	a4,a5
201053a2:	fb042783          	lw	a5,-80(s0)
201053a6:	40f707b3          	sub	a5,a4,a5
201053aa:	fcf42e23          	sw	a5,-36(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:85
            sum += a * w;
201053ae:	fe042703          	lw	a4,-32(s0)
201053b2:	fdc42783          	lw	a5,-36(s0)
201053b6:	02f707b3          	mul	a5,a4,a5
201053ba:	fe842703          	lw	a4,-24(s0)
201053be:	97ba                	add	a5,a5,a4
201053c0:	fef42423          	sw	a5,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:82 (discriminator 3)
        for (uint32_t i = 0; i < n_input; i++) {
201053c4:	fe442783          	lw	a5,-28(s0)
201053c8:	0785                	add	a5,a5,1
201053ca:	fef42223          	sw	a5,-28(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:82 (discriminator 1)
201053ce:	fe442703          	lw	a4,-28(s0)
201053d2:	fc042783          	lw	a5,-64(s0)
201053d6:	f8f769e3          	bltu	a4,a5,20105368 <processfclayer+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:87
        }
        output[o] = sum;
201053da:	fec42783          	lw	a5,-20(s0)
201053de:	078a                	sll	a5,a5,0x2
201053e0:	fb842703          	lw	a4,-72(s0)
201053e4:	97ba                	add	a5,a5,a4
201053e6:	fe842703          	lw	a4,-24(s0)
201053ea:	c398                	sw	a4,0(a5)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:80 (discriminator 2)
    for (uint32_t o = 0; o < n_output; o++) {
201053ec:	fec42783          	lw	a5,-20(s0)
201053f0:	0785                	add	a5,a5,1
201053f2:	fef42623          	sw	a5,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:80 (discriminator 1)
201053f6:	fec42703          	lw	a4,-20(s0)
201053fa:	fbc42783          	lw	a5,-68(s0)
201053fe:	f4f769e3          	bltu	a4,a5,20105350 <processfclayer+0x42>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/app_inference.h:89
    }
}
20105402:	0001                	nop
20105404:	0001                	nop
20105406:	40b6                	lw	ra,76(sp)
20105408:	4426                	lw	s0,72(sp)
2010540a:	6161                	add	sp,sp,80
2010540c:	8082                	ret

2010540e <software_delay>:
software_delay():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:20
#define L2_incoming_weights 64
#define L2_outgoing_weights 64
#define L3_incoming_weights 64
#define L3_outgoing_weights 10

void software_delay(volatile int cycles) {
2010540e:	7179                	add	sp,sp,-48
20105410:	d622                	sw	s0,44(sp)
20105412:	1800                	add	s0,sp,48
20105414:	fca42e23          	sw	a0,-36(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:21
    for (volatile int i = 0; i < cycles * 100; i++) {
20105418:	fe042623          	sw	zero,-20(s0)
2010541c:	a039                	j	2010542a <software_delay+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:22
        __asm__("nop");
2010541e:	0001                	nop
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:21 (discriminator 3)
    for (volatile int i = 0; i < cycles * 100; i++) {
20105420:	fec42783          	lw	a5,-20(s0)
20105424:	0785                	add	a5,a5,1
20105426:	fef42623          	sw	a5,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:21 (discriminator 1)
2010542a:	fdc42703          	lw	a4,-36(s0)
2010542e:	06400793          	li	a5,100
20105432:	02f70733          	mul	a4,a4,a5
20105436:	fec42783          	lw	a5,-20(s0)
2010543a:	fee7c2e3          	blt	a5,a4,2010541e <software_delay+0x10>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:24
    }
}
2010543e:	0001                	nop
20105440:	0001                	nop
20105442:	5432                	lw	s0,44(sp)
20105444:	6145                	add	sp,sp,48
20105446:	8082                	ret

20105448 <display_banner>:
display_banner():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:26

void display_banner(void) {
20105448:	1141                	add	sp,sp,-16
2010544a:	c606                	sw	ra,12(sp)
2010544c:	c422                	sw	s0,8(sp)
2010544e:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:27
    printf("\n");
20105450:	4529                	li	a0,10
20105452:	2b59                	jal	201059e8 <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:28
    printf("\n");
20105454:	4529                	li	a0,10
20105456:	2b49                	jal	201059e8 <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:29
    printf("8-bit Quantized TFLite MNIST on SiFive HiFive1.\n");
20105458:	201007b7          	lui	a5,0x20100
2010545c:	37478513          	add	a0,a5,884 # 20100374 <use_hfxosc+0x50>
20105460:	63c000ef          	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:30
    printf("\n");
20105464:	4529                	li	a0,10
20105466:	2349                	jal	201059e8 <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:31
    printf("\n");
20105468:	4529                	li	a0,10
2010546a:	2bbd                	jal	201059e8 <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:32
    printf("\n");
2010546c:	4529                	li	a0,10
2010546e:	2bad                	jal	201059e8 <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:33
    printf("By Shwetank Shekhar\n");
20105470:	201007b7          	lui	a5,0x20100
20105474:	3a478513          	add	a0,a5,932 # 201003a4 <use_hfxosc+0x80>
20105478:	624000ef          	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:34
}
2010547c:	0001                	nop
2010547e:	40b2                	lw	ra,12(sp)
20105480:	4422                	lw	s0,8(sp)
20105482:	0141                	add	sp,sp,16
20105484:	8082                	ret

20105486 <QInt8Inference>:
QInt8Inference():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:36

void QInt8Inference(const int8_t *input, const uint8_t label, const uint8_t sample) {
20105486:	715d                	add	sp,sp,-80
20105488:	c686                	sw	ra,76(sp)
2010548a:	c4a2                	sw	s0,72(sp)
2010548c:	0880                	add	s0,sp,80
2010548e:	faa42e23          	sw	a0,-68(s0)
20105492:	87ae                	mv	a5,a1
20105494:	8732                	mv	a4,a2
20105496:	faf40da3          	sb	a5,-69(s0)
2010549a:	87ba                	mv	a5,a4
2010549c:	faf40d23          	sb	a5,-70(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:44
    static int32_t layer2_sum[L2_outgoing_weights];
    static int8_t layer2_out[L2_outgoing_weights];
    static int32_t layer3_sum[L3_outgoing_weights];
    uint32_t pred_digit;

    printf("Clearing arrays...\n");
201054a0:	201007b7          	lui	a5,0x20100
201054a4:	3b878513          	add	a0,a5,952 # 201003b8 <use_hfxosc+0x94>
201054a8:	5f4000ef          	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:45
    memset(layer1_sum, 0, sizeof(layer1_sum));
201054ac:	10000613          	li	a2,256
201054b0:	4581                	li	a1,0
201054b2:	800017b7          	lui	a5,0x80001
201054b6:	ab478513          	add	a0,a5,-1356 # 80000ab4 <layer1_sum.4>
201054ba:	756000ef          	jal	20105c10 <memset>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:46
    memset(layer1_out, 0, sizeof(layer1_out));
201054be:	04000613          	li	a2,64
201054c2:	4581                	li	a1,0
201054c4:	94418513          	add	a0,gp,-1724 # 80000bb4 <layer1_out.3>
201054c8:	748000ef          	jal	20105c10 <memset>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:47
    memset(layer2_sum, 0, sizeof(layer2_sum));
201054cc:	10000613          	li	a2,256
201054d0:	4581                	li	a1,0
201054d2:	98418513          	add	a0,gp,-1660 # 80000bf4 <layer2_sum.2>
201054d6:	73a000ef          	jal	20105c10 <memset>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:48
    memset(layer2_out, 0, sizeof(layer2_out));
201054da:	04000613          	li	a2,64
201054de:	4581                	li	a1,0
201054e0:	a8418513          	add	a0,gp,-1404 # 80000cf4 <layer2_out.1>
201054e4:	72c000ef          	jal	20105c10 <memset>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:49
    memset(layer3_sum, 0, sizeof(layer3_sum));
201054e8:	02800613          	li	a2,40
201054ec:	4581                	li	a1,0
201054ee:	ac418513          	add	a0,gp,-1340 # 80000d34 <layer3_sum.0>
201054f2:	71e000ef          	jal	20105c10 <memset>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:51

    printf("Processing input for sample %d\n", sample);
201054f6:	fba44783          	lbu	a5,-70(s0)
201054fa:	85be                	mv	a1,a5
201054fc:	201007b7          	lui	a5,0x20100
20105500:	3cc78513          	add	a0,a5,972 # 201003cc <use_hfxosc+0xa8>
20105504:	2965                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:52
    software_delay(1000);
20105506:	3e800513          	li	a0,1000
2010550a:	3711                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:55

    // --- Layer 1 Processing ---
    printf("Starting first layer...\n");
2010550c:	201007b7          	lui	a5,0x20100
20105510:	3ec78513          	add	a0,a5,1004 # 201003ec <use_hfxosc+0xc8>
20105514:	2361                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:56
    processfclayer(input, L1_weights, L1_biases, L1_incoming_weights, L1_outgoing_weights, layer1_sum,
20105516:	201057b7          	lui	a5,0x20105
2010551a:	1307a703          	lw	a4,304(a5) # 20105130 <L1_input_zero_point>
2010551e:	201057b7          	lui	a5,0x20105
20105522:	1387a783          	lw	a5,312(a5) # 20105138 <L1_weights_zero_point>
20105526:	88be                	mv	a7,a5
20105528:	883a                	mv	a6,a4
2010552a:	800017b7          	lui	a5,0x80001
2010552e:	ab478793          	add	a5,a5,-1356 # 80000ab4 <layer1_sum.4>
20105532:	04000713          	li	a4,64
20105536:	09000693          	li	a3,144
2010553a:	20103637          	lui	a2,0x20103
2010553e:	9c460613          	add	a2,a2,-1596 # 201029c4 <L1_biases>
20105542:	201005b7          	lui	a1,0x20100
20105546:	5c458593          	add	a1,a1,1476 # 201005c4 <L1_weights>
2010554a:	fbc42503          	lw	a0,-68(s0)
2010554e:	33c1                	jal	2010530e <processfclayer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:58
                   L1_input_zero_point, L1_weights_zero_point);
    software_delay(1000);
20105550:	3e800513          	li	a0,1000
20105554:	3d6d                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:60

    printf("Applying ReLU and Requantizing first layer...\n");
20105556:	201007b7          	lui	a5,0x20100
2010555a:	40478513          	add	a0,a5,1028 # 20100404 <use_hfxosc+0xe0>
2010555e:	2b3d                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:61
    quantized_relu_requantize(layer1_sum, layer1_out, L1_outgoing_weights, 
20105560:	201057b7          	lui	a5,0x20105
20105564:	1347a683          	lw	a3,308(a5) # 20105134 <L1_output_scale>
20105568:	201057b7          	lui	a5,0x20105
2010556c:	13c7a703          	lw	a4,316(a5) # 2010513c <L2_input_scale>
20105570:	201057b7          	lui	a5,0x20105
20105574:	1407a783          	lw	a5,320(a5) # 20105140 <L2_input_zero_point>
20105578:	04000613          	li	a2,64
2010557c:	94418593          	add	a1,gp,-1724 # 80000bb4 <layer1_out.3>
20105580:	80001537          	lui	a0,0x80001
20105584:	ab450513          	add	a0,a0,-1356 # 80000ab4 <layer1_sum.4>
20105588:	39a5                	jal	20105200 <quantized_relu_requantize>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:63
                             L1_output_scale, L2_input_scale, L2_input_zero_point);
    software_delay(1000);
2010558a:	3e800513          	li	a0,1000
2010558e:	3541                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:66

    // Debug prints
    int min1 = 0, max1 = 0;
20105590:	fe042423          	sw	zero,-24(s0)
20105594:	fe042223          	sw	zero,-28(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:67
    for(int i=0; i<L1_outgoing_weights; i++) {
20105598:	fe042023          	sw	zero,-32(s0)
2010559c:	a085                	j	201055fc <QInt8Inference+0x176>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:68
        if(layer1_out[i]<min1) min1=layer1_out[i];
2010559e:	94418713          	add	a4,gp,-1724 # 80000bb4 <layer1_out.3>
201055a2:	fe042783          	lw	a5,-32(s0)
201055a6:	97ba                	add	a5,a5,a4
201055a8:	00078783          	lb	a5,0(a5)
201055ac:	873e                	mv	a4,a5
201055ae:	fe842783          	lw	a5,-24(s0)
201055b2:	00f75b63          	bge	a4,a5,201055c8 <QInt8Inference+0x142>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:68 (discriminator 1)
201055b6:	94418713          	add	a4,gp,-1724 # 80000bb4 <layer1_out.3>
201055ba:	fe042783          	lw	a5,-32(s0)
201055be:	97ba                	add	a5,a5,a4
201055c0:	00078783          	lb	a5,0(a5)
201055c4:	fef42423          	sw	a5,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:69
        if(layer1_out[i]>max1) max1=layer1_out[i];
201055c8:	94418713          	add	a4,gp,-1724 # 80000bb4 <layer1_out.3>
201055cc:	fe042783          	lw	a5,-32(s0)
201055d0:	97ba                	add	a5,a5,a4
201055d2:	00078783          	lb	a5,0(a5)
201055d6:	873e                	mv	a4,a5
201055d8:	fe442783          	lw	a5,-28(s0)
201055dc:	00e7db63          	bge	a5,a4,201055f2 <QInt8Inference+0x16c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:69 (discriminator 1)
201055e0:	94418713          	add	a4,gp,-1724 # 80000bb4 <layer1_out.3>
201055e4:	fe042783          	lw	a5,-32(s0)
201055e8:	97ba                	add	a5,a5,a4
201055ea:	00078783          	lb	a5,0(a5)
201055ee:	fef42223          	sw	a5,-28(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:67 (discriminator 2)
    for(int i=0; i<L1_outgoing_weights; i++) {
201055f2:	fe042783          	lw	a5,-32(s0)
201055f6:	0785                	add	a5,a5,1
201055f8:	fef42023          	sw	a5,-32(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:67 (discriminator 1)
201055fc:	fe042703          	lw	a4,-32(s0)
20105600:	03f00793          	li	a5,63
20105604:	f8e7dde3          	bge	a5,a4,2010559e <QInt8Inference+0x118>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:71
    }
    printf("Layer1 ReLU range: %d to %d\n", min1, max1);
20105608:	fe442603          	lw	a2,-28(s0)
2010560c:	fe842583          	lw	a1,-24(s0)
20105610:	201007b7          	lui	a5,0x20100
20105614:	43478513          	add	a0,a5,1076 # 20100434 <use_hfxosc+0x110>
20105618:	2655                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:72
    printf("Layer1 sample activations: %d %d %d %d\n", layer1_out[0], layer1_out[1], layer1_out[2], layer1_out[3]);
2010561a:	94418793          	add	a5,gp,-1724 # 80000bb4 <layer1_out.3>
2010561e:	00078783          	lb	a5,0(a5)
20105622:	85be                	mv	a1,a5
20105624:	94418793          	add	a5,gp,-1724 # 80000bb4 <layer1_out.3>
20105628:	00178783          	lb	a5,1(a5)
2010562c:	863e                	mv	a2,a5
2010562e:	94418793          	add	a5,gp,-1724 # 80000bb4 <layer1_out.3>
20105632:	00278783          	lb	a5,2(a5)
20105636:	86be                	mv	a3,a5
20105638:	94418793          	add	a5,gp,-1724 # 80000bb4 <layer1_out.3>
2010563c:	00378783          	lb	a5,3(a5)
20105640:	873e                	mv	a4,a5
20105642:	201007b7          	lui	a5,0x20100
20105646:	45478513          	add	a0,a5,1108 # 20100454 <use_hfxosc+0x130>
2010564a:	2e8d                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:75

    // --- Layer 2 Processing ---
    printf("Starting second layer...\n");
2010564c:	201007b7          	lui	a5,0x20100
20105650:	47c78513          	add	a0,a5,1148 # 2010047c <use_hfxosc+0x158>
20105654:	21a1                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:76
    processfclayer(layer1_out, L2_weights, L2_biases, L2_incoming_weights, L2_outgoing_weights, layer2_sum,
20105656:	201057b7          	lui	a5,0x20105
2010565a:	1407a703          	lw	a4,320(a5) # 20105140 <L2_input_zero_point>
2010565e:	201057b7          	lui	a5,0x20105
20105662:	1487a783          	lw	a5,328(a5) # 20105148 <L2_weights_zero_point>
20105666:	88be                	mv	a7,a5
20105668:	883a                	mv	a6,a4
2010566a:	98418793          	add	a5,gp,-1660 # 80000bf4 <layer2_sum.2>
2010566e:	04000713          	li	a4,64
20105672:	04000693          	li	a3,64
20105676:	20104637          	lui	a2,0x20104
2010567a:	ac460613          	add	a2,a2,-1340 # 20103ac4 <L2_biases>
2010567e:	201035b7          	lui	a1,0x20103
20105682:	ac458593          	add	a1,a1,-1340 # 20102ac4 <L2_weights>
20105686:	94418513          	add	a0,gp,-1724 # 80000bb4 <layer1_out.3>
2010568a:	3151                	jal	2010530e <processfclayer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:78
                   L2_input_zero_point, L2_weights_zero_point);
    software_delay(1000);
2010568c:	3e800513          	li	a0,1000
20105690:	3bbd                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:80

    printf("Applying ReLU and Requantizing second layer...\n");
20105692:	201007b7          	lui	a5,0x20100
20105696:	49878513          	add	a0,a5,1176 # 20100498 <use_hfxosc+0x174>
2010569a:	2109                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:81
    quantized_relu_requantize(layer2_sum, layer2_out, L2_outgoing_weights, 
2010569c:	201057b7          	lui	a5,0x20105
201056a0:	1447a683          	lw	a3,324(a5) # 20105144 <L2_output_scale>
201056a4:	201057b7          	lui	a5,0x20105
201056a8:	14c7a703          	lw	a4,332(a5) # 2010514c <L3_input_scale>
201056ac:	201057b7          	lui	a5,0x20105
201056b0:	1507a783          	lw	a5,336(a5) # 20105150 <L3_input_zero_point>
201056b4:	04000613          	li	a2,64
201056b8:	a8418593          	add	a1,gp,-1404 # 80000cf4 <layer2_out.1>
201056bc:	98418513          	add	a0,gp,-1660 # 80000bf4 <layer2_sum.2>
201056c0:	3681                	jal	20105200 <quantized_relu_requantize>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:83
                             L2_output_scale, L3_input_scale, L3_input_zero_point);
    software_delay(1000);
201056c2:	3e800513          	li	a0,1000
201056c6:	33a1                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:86

    // Debug prints
    int min2 = 0, max2 = 0;
201056c8:	fc042e23          	sw	zero,-36(s0)
201056cc:	fc042c23          	sw	zero,-40(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:87
    for(int i=0; i<L2_outgoing_weights; i++) {
201056d0:	fc042a23          	sw	zero,-44(s0)
201056d4:	a085                	j	20105734 <QInt8Inference+0x2ae>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:88
        if(layer2_out[i]<min2) min2=layer2_out[i];
201056d6:	a8418713          	add	a4,gp,-1404 # 80000cf4 <layer2_out.1>
201056da:	fd442783          	lw	a5,-44(s0)
201056de:	97ba                	add	a5,a5,a4
201056e0:	00078783          	lb	a5,0(a5)
201056e4:	873e                	mv	a4,a5
201056e6:	fdc42783          	lw	a5,-36(s0)
201056ea:	00f75b63          	bge	a4,a5,20105700 <QInt8Inference+0x27a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:88 (discriminator 1)
201056ee:	a8418713          	add	a4,gp,-1404 # 80000cf4 <layer2_out.1>
201056f2:	fd442783          	lw	a5,-44(s0)
201056f6:	97ba                	add	a5,a5,a4
201056f8:	00078783          	lb	a5,0(a5)
201056fc:	fcf42e23          	sw	a5,-36(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:89
        if(layer2_out[i]>max2) max2=layer2_out[i];
20105700:	a8418713          	add	a4,gp,-1404 # 80000cf4 <layer2_out.1>
20105704:	fd442783          	lw	a5,-44(s0)
20105708:	97ba                	add	a5,a5,a4
2010570a:	00078783          	lb	a5,0(a5)
2010570e:	873e                	mv	a4,a5
20105710:	fd842783          	lw	a5,-40(s0)
20105714:	00e7db63          	bge	a5,a4,2010572a <QInt8Inference+0x2a4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:89 (discriminator 1)
20105718:	a8418713          	add	a4,gp,-1404 # 80000cf4 <layer2_out.1>
2010571c:	fd442783          	lw	a5,-44(s0)
20105720:	97ba                	add	a5,a5,a4
20105722:	00078783          	lb	a5,0(a5)
20105726:	fcf42c23          	sw	a5,-40(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:87 (discriminator 2)
    for(int i=0; i<L2_outgoing_weights; i++) {
2010572a:	fd442783          	lw	a5,-44(s0)
2010572e:	0785                	add	a5,a5,1
20105730:	fcf42a23          	sw	a5,-44(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:87 (discriminator 1)
20105734:	fd442703          	lw	a4,-44(s0)
20105738:	03f00793          	li	a5,63
2010573c:	f8e7dde3          	bge	a5,a4,201056d6 <QInt8Inference+0x250>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:91
    }
    printf("Layer2 ReLU range: %d to %d\n", min2, max2);
20105740:	fd842603          	lw	a2,-40(s0)
20105744:	fdc42583          	lw	a1,-36(s0)
20105748:	201007b7          	lui	a5,0x20100
2010574c:	4c878513          	add	a0,a5,1224 # 201004c8 <use_hfxosc+0x1a4>
20105750:	24b5                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:92
    printf("Layer2 sample activations: %d %d %d %d\n", layer2_out[0], layer2_out[1], layer2_out[2], layer2_out[3]);
20105752:	a8418793          	add	a5,gp,-1404 # 80000cf4 <layer2_out.1>
20105756:	00078783          	lb	a5,0(a5)
2010575a:	85be                	mv	a1,a5
2010575c:	a8418793          	add	a5,gp,-1404 # 80000cf4 <layer2_out.1>
20105760:	00178783          	lb	a5,1(a5)
20105764:	863e                	mv	a2,a5
20105766:	a8418793          	add	a5,gp,-1404 # 80000cf4 <layer2_out.1>
2010576a:	00278783          	lb	a5,2(a5)
2010576e:	86be                	mv	a3,a5
20105770:	a8418793          	add	a5,gp,-1404 # 80000cf4 <layer2_out.1>
20105774:	00378783          	lb	a5,3(a5)
20105778:	873e                	mv	a4,a5
2010577a:	201007b7          	lui	a5,0x20100
2010577e:	4e878513          	add	a0,a5,1256 # 201004e8 <use_hfxosc+0x1c4>
20105782:	2c2d                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:95

    // --- Layer 3 Processing (Output Layer) ---
    printf("Starting final layer...\n");
20105784:	201007b7          	lui	a5,0x20100
20105788:	51078513          	add	a0,a5,1296 # 20100510 <use_hfxosc+0x1ec>
2010578c:	2e01                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:96
    processfclayer(layer2_out, L3_weights, L3_biases, L3_incoming_weights, L3_outgoing_weights, layer3_sum,
2010578e:	201057b7          	lui	a5,0x20105
20105792:	1507a703          	lw	a4,336(a5) # 20105150 <L3_input_zero_point>
20105796:	201057b7          	lui	a5,0x20105
2010579a:	1547a783          	lw	a5,340(a5) # 20105154 <L3_weights_zero_point>
2010579e:	88be                	mv	a7,a5
201057a0:	883a                	mv	a6,a4
201057a2:	ac418793          	add	a5,gp,-1340 # 80000d34 <layer3_sum.0>
201057a6:	4729                	li	a4,10
201057a8:	04000693          	li	a3,64
201057ac:	20104637          	lui	a2,0x20104
201057b0:	e4460613          	add	a2,a2,-444 # 20103e44 <L3_biases>
201057b4:	201045b7          	lui	a1,0x20104
201057b8:	bc458593          	add	a1,a1,-1084 # 20103bc4 <L3_weights>
201057bc:	a8418513          	add	a0,gp,-1404 # 80000cf4 <layer2_out.1>
201057c0:	36b9                	jal	2010530e <processfclayer>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:98
                   L3_input_zero_point, L3_weights_zero_point);
    software_delay(1000);
201057c2:	3e800513          	li	a0,1000
201057c6:	31a1                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:101

    // Before prediction, print all output values
    printf("Output layer values: ");
201057c8:	201007b7          	lui	a5,0x20100
201057cc:	52878513          	add	a0,a5,1320 # 20100528 <use_hfxosc+0x204>
201057d0:	22f5                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:102
    for(int i=0; i<L3_outgoing_weights; i++) {
201057d2:	fc042823          	sw	zero,-48(s0)
201057d6:	a01d                	j	201057fc <QInt8Inference+0x376>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:103
        printf("%ld ", layer3_sum[i]);
201057d8:	ac418713          	add	a4,gp,-1340 # 80000d34 <layer3_sum.0>
201057dc:	fd042783          	lw	a5,-48(s0)
201057e0:	078a                	sll	a5,a5,0x2
201057e2:	97ba                	add	a5,a5,a4
201057e4:	439c                	lw	a5,0(a5)
201057e6:	85be                	mv	a1,a5
201057e8:	201007b7          	lui	a5,0x20100
201057ec:	54078513          	add	a0,a5,1344 # 20100540 <use_hfxosc+0x21c>
201057f0:	22f1                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:102 (discriminator 3)
    for(int i=0; i<L3_outgoing_weights; i++) {
201057f2:	fd042783          	lw	a5,-48(s0)
201057f6:	0785                	add	a5,a5,1
201057f8:	fcf42823          	sw	a5,-48(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:102 (discriminator 1)
201057fc:	fd042703          	lw	a4,-48(s0)
20105800:	47a5                	li	a5,9
20105802:	fce7dbe3          	bge	a5,a4,201057d8 <QInt8Inference+0x352>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:105
    }
    printf("\n");
20105806:	4529                	li	a0,10
20105808:	22c5                	jal	201059e8 <putchar>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:108

    // Find prediction
    printf("Finding prediction...\n");
2010580a:	201007b7          	lui	a5,0x20100
2010580e:	54878513          	add	a0,a5,1352 # 20100548 <use_hfxosc+0x224>
20105812:	2469                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:109
    int32_t max_val = layer3_sum[0];
20105814:	ac418793          	add	a5,gp,-1340 # 80000d34 <layer3_sum.0>
20105818:	439c                	lw	a5,0(a5)
2010581a:	fcf42623          	sw	a5,-52(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:110
    pred_digit = 0;
2010581e:	fe042623          	sw	zero,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:112
    
    for (int i = 1; i < L3_outgoing_weights; i++) {
20105822:	4785                	li	a5,1
20105824:	fcf42423          	sw	a5,-56(s0)
20105828:	a089                	j	2010586a <QInt8Inference+0x3e4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:113
        if (layer3_sum[i] > max_val) {
2010582a:	ac418713          	add	a4,gp,-1340 # 80000d34 <layer3_sum.0>
2010582e:	fc842783          	lw	a5,-56(s0)
20105832:	078a                	sll	a5,a5,0x2
20105834:	97ba                	add	a5,a5,a4
20105836:	439c                	lw	a5,0(a5)
20105838:	fcc42703          	lw	a4,-52(s0)
2010583c:	00f75f63          	bge	a4,a5,2010585a <QInt8Inference+0x3d4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:114
            max_val = layer3_sum[i];
20105840:	ac418713          	add	a4,gp,-1340 # 80000d34 <layer3_sum.0>
20105844:	fc842783          	lw	a5,-56(s0)
20105848:	078a                	sll	a5,a5,0x2
2010584a:	97ba                	add	a5,a5,a4
2010584c:	439c                	lw	a5,0(a5)
2010584e:	fcf42623          	sw	a5,-52(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:115
            pred_digit = i;
20105852:	fc842783          	lw	a5,-56(s0)
20105856:	fef42623          	sw	a5,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:117
        }
        software_delay(100);
2010585a:	06400513          	li	a0,100
2010585e:	3e45                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:112 (discriminator 2)
    for (int i = 1; i < L3_outgoing_weights; i++) {
20105860:	fc842783          	lw	a5,-56(s0)
20105864:	0785                	add	a5,a5,1
20105866:	fcf42423          	sw	a5,-56(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:112 (discriminator 1)
2010586a:	fc842703          	lw	a4,-56(s0)
2010586e:	47a5                	li	a5,9
20105870:	fae7dde3          	bge	a5,a4,2010582a <QInt8Inference+0x3a4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:120
    }
    
    printf("Predicted digit: %ld, True Label: %d, Status: %s\n",
20105874:	fbb44603          	lbu	a2,-69(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:121
           pred_digit, label, (pred_digit == label) ? "PASS" : "FAIL");
20105878:	fbb44783          	lbu	a5,-69(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:120
    printf("Predicted digit: %ld, True Label: %d, Status: %s\n",
2010587c:	fec42703          	lw	a4,-20(s0)
20105880:	00f71763          	bne	a4,a5,2010588e <QInt8Inference+0x408>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:120 (discriminator 1)
20105884:	201007b7          	lui	a5,0x20100
20105888:	56078793          	add	a5,a5,1376 # 20100560 <use_hfxosc+0x23c>
2010588c:	a029                	j	20105896 <QInt8Inference+0x410>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:120 (discriminator 2)
2010588e:	201007b7          	lui	a5,0x20100
20105892:	56878793          	add	a5,a5,1384 # 20100568 <use_hfxosc+0x244>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:120 (discriminator 4)
20105896:	86be                	mv	a3,a5
20105898:	fec42583          	lw	a1,-20(s0)
2010589c:	201007b7          	lui	a5,0x20100
201058a0:	57078513          	add	a0,a5,1392 # 20100570 <use_hfxosc+0x24c>
201058a4:	2a21                	jal	201059bc <iprintf>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:122
    software_delay(1000);
201058a6:	3e800513          	li	a0,1000
201058aa:	3695                	jal	2010540e <software_delay>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:124

    printf("\n\n");
201058ac:	201007b7          	lui	a5,0x20100
201058b0:	5a478513          	add	a0,a5,1444 # 201005a4 <use_hfxosc+0x280>
201058b4:	22e5                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:125
}
201058b6:	0001                	nop
201058b8:	40b6                	lw	ra,76(sp)
201058ba:	4426                	lw	s0,72(sp)
201058bc:	6161                	add	sp,sp,80
201058be:	8082                	ret

201058c0 <main>:
main():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:127

int main(void) {
201058c0:	1141                	add	sp,sp,-16
201058c2:	c606                	sw	ra,12(sp)
201058c4:	c422                	sw	s0,8(sp)
201058c6:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:128
    display_banner();
201058c8:	3641                	jal	20105448 <display_banner>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:129
    printf("Starting MNIST inference...\n");
201058ca:	201007b7          	lui	a5,0x20100
201058ce:	5a878513          	add	a0,a5,1448 # 201005a8 <use_hfxosc+0x284>
201058d2:	22e9                	jal	20105a9c <puts>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:131

    QInt8Inference(input_data_0, label_0, 1);
201058d4:	201057b7          	lui	a5,0x20105
201058d8:	1587c783          	lbu	a5,344(a5) # 20105158 <label_0>
201058dc:	4605                	li	a2,1
201058de:	85be                	mv	a1,a5
201058e0:	201047b7          	lui	a5,0x20104
201058e4:	e6c78513          	add	a0,a5,-404 # 20103e6c <input_data_0>
201058e8:	3e79                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:132
    QInt8Inference(input_data_1, label_1, 2);
201058ea:	201057b7          	lui	a5,0x20105
201058ee:	1597c783          	lbu	a5,345(a5) # 20105159 <label_1>
201058f2:	4609                	li	a2,2
201058f4:	85be                	mv	a1,a5
201058f6:	201047b7          	lui	a5,0x20104
201058fa:	efc78513          	add	a0,a5,-260 # 20103efc <input_data_1>
201058fe:	3661                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:133
    QInt8Inference(input_data_2, label_2, 3);
20105900:	201057b7          	lui	a5,0x20105
20105904:	15a7c783          	lbu	a5,346(a5) # 2010515a <label_2>
20105908:	460d                	li	a2,3
2010590a:	85be                	mv	a1,a5
2010590c:	201047b7          	lui	a5,0x20104
20105910:	f8c78513          	add	a0,a5,-116 # 20103f8c <input_data_2>
20105914:	3e8d                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:134
    QInt8Inference(input_data_3, label_3, 4);
20105916:	201057b7          	lui	a5,0x20105
2010591a:	15b7c783          	lbu	a5,347(a5) # 2010515b <label_3>
2010591e:	4611                	li	a2,4
20105920:	85be                	mv	a1,a5
20105922:	201047b7          	lui	a5,0x20104
20105926:	01c78513          	add	a0,a5,28 # 2010401c <input_data_3>
2010592a:	3eb1                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:135
    QInt8Inference(input_data_4, label_4, 5);
2010592c:	201057b7          	lui	a5,0x20105
20105930:	15c7c783          	lbu	a5,348(a5) # 2010515c <label_4>
20105934:	4615                	li	a2,5
20105936:	85be                	mv	a1,a5
20105938:	201047b7          	lui	a5,0x20104
2010593c:	0ac78513          	add	a0,a5,172 # 201040ac <input_data_4>
20105940:	3699                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:136
    QInt8Inference(input_data_5, label_5, 6);
20105942:	201057b7          	lui	a5,0x20105
20105946:	15d7c783          	lbu	a5,349(a5) # 2010515d <label_5>
2010594a:	4619                	li	a2,6
2010594c:	85be                	mv	a1,a5
2010594e:	201047b7          	lui	a5,0x20104
20105952:	13c78513          	add	a0,a5,316 # 2010413c <input_data_5>
20105956:	3e05                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:137
    QInt8Inference(input_data_6, label_6, 7);
20105958:	201057b7          	lui	a5,0x20105
2010595c:	15e7c783          	lbu	a5,350(a5) # 2010515e <label_6>
20105960:	461d                	li	a2,7
20105962:	85be                	mv	a1,a5
20105964:	201047b7          	lui	a5,0x20104
20105968:	1cc78513          	add	a0,a5,460 # 201041cc <input_data_6>
2010596c:	3e29                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:138
    QInt8Inference(input_data_7, label_7, 8);
2010596e:	201057b7          	lui	a5,0x20105
20105972:	15f7c783          	lbu	a5,351(a5) # 2010515f <label_7>
20105976:	4621                	li	a2,8
20105978:	85be                	mv	a1,a5
2010597a:	201047b7          	lui	a5,0x20104
2010597e:	25c78513          	add	a0,a5,604 # 2010425c <input_data_7>
20105982:	3611                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:139
    QInt8Inference(input_data_8, label_8, 9);
20105984:	201057b7          	lui	a5,0x20105
20105988:	1607c783          	lbu	a5,352(a5) # 20105160 <label_8>
2010598c:	4625                	li	a2,9
2010598e:	85be                	mv	a1,a5
20105990:	201047b7          	lui	a5,0x20104
20105994:	2ec78513          	add	a0,a5,748 # 201042ec <input_data_8>
20105998:	34fd                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:140
    QInt8Inference(input_data_9, label_9, 10);
2010599a:	201057b7          	lui	a5,0x20105
2010599e:	1617c783          	lbu	a5,353(a5) # 20105161 <label_9>
201059a2:	4629                	li	a2,10
201059a4:	85be                	mv	a1,a5
201059a6:	201047b7          	lui	a5,0x20104
201059aa:	37c78513          	add	a0,a5,892 # 2010437c <input_data_9>
201059ae:	3ce1                	jal	20105486 <QInt8Inference>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:142

    return 0;
201059b0:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\src/main.c:143
}
201059b2:	853e                	mv	a0,a5
201059b4:	40b2                	lw	ra,12(sp)
201059b6:	4422                	lw	s0,8(sp)
201059b8:	0141                	add	sp,sp,16
201059ba:	8082                	ret

201059bc <iprintf>:
printf():
201059bc:	7139                	add	sp,sp,-64
201059be:	d432                	sw	a2,40(sp)
201059c0:	d636                	sw	a3,44(sp)
201059c2:	da3e                	sw	a5,52(sp)
201059c4:	d22e                	sw	a1,36(sp)
201059c6:	d83a                	sw	a4,48(sp)
201059c8:	dc42                	sw	a6,56(sp)
201059ca:	de46                	sw	a7,60(sp)
201059cc:	5fefb797          	auipc	a5,0x5fefb
201059d0:	0a47a783          	lw	a5,164(a5) # 80000a70 <_impure_ptr>
201059d4:	478c                	lw	a1,8(a5)
201059d6:	1054                	add	a3,sp,36
201059d8:	862a                	mv	a2,a0
201059da:	853e                	mv	a0,a5
201059dc:	ce06                	sw	ra,28(sp)
201059de:	c636                	sw	a3,12(sp)
201059e0:	23ad                	jal	20105f4a <_vfiprintf_r>
201059e2:	40f2                	lw	ra,28(sp)
201059e4:	6121                	add	sp,sp,64
201059e6:	8082                	ret

201059e8 <putchar>:
putchar():
201059e8:	85aa                	mv	a1,a0
201059ea:	5fefb517          	auipc	a0,0x5fefb
201059ee:	08652503          	lw	a0,134(a0) # 80000a70 <_impure_ptr>
201059f2:	4510                	lw	a2,8(a0)
201059f4:	7110006f          	j	20106904 <_putc_r>

201059f8 <_puts_r>:
_puts_r():
201059f8:	511c                	lw	a5,32(a0)
201059fa:	1101                	add	sp,sp,-32
201059fc:	cc22                	sw	s0,24(sp)
201059fe:	ca26                	sw	s1,20(sp)
20105a00:	c84a                	sw	s2,16(sp)
20105a02:	ce06                	sw	ra,28(sp)
20105a04:	c64e                	sw	s3,12(sp)
20105a06:	c452                	sw	s4,8(sp)
20105a08:	4500                	lw	s0,8(a0)
20105a0a:	84aa                	mv	s1,a0
20105a0c:	892e                	mv	s2,a1
20105a0e:	e399                	bnez	a5,20105a14 <_puts_r+0x1c>
20105a10:	57d000ef          	jal	2010678c <__sinit>
20105a14:	00c45783          	lhu	a5,12(s0)
20105a18:	8ba1                	and	a5,a5,8
20105a1a:	c399                	beqz	a5,20105a20 <_puts_r+0x28>
20105a1c:	481c                	lw	a5,16(s0)
20105a1e:	e7a5                	bnez	a5,20105a86 <_puts_r+0x8e>
20105a20:	85a2                	mv	a1,s0
20105a22:	8526                	mv	a0,s1
20105a24:	2205                	jal	20105b44 <__swsetup_r>
20105a26:	c125                	beqz	a0,20105a86 <_puts_r+0x8e>
20105a28:	557d                	li	a0,-1
20105a2a:	40f2                	lw	ra,28(sp)
20105a2c:	4462                	lw	s0,24(sp)
20105a2e:	44d2                	lw	s1,20(sp)
20105a30:	4942                	lw	s2,16(sp)
20105a32:	49b2                	lw	s3,12(sp)
20105a34:	4a22                	lw	s4,8(sp)
20105a36:	6105                	add	sp,sp,32
20105a38:	8082                	ret
20105a3a:	c41c                	sw	a5,8(s0)
20105a3c:	0905                	add	s2,s2,1
20105a3e:	0007d763          	bgez	a5,20105a4c <_puts_r+0x54>
20105a42:	4c18                	lw	a4,24(s0)
20105a44:	02e7cb63          	blt	a5,a4,20105a7a <_puts_r+0x82>
20105a48:	03458963          	beq	a1,s4,20105a7a <_puts_r+0x82>
20105a4c:	401c                	lw	a5,0(s0)
20105a4e:	00178713          	add	a4,a5,1
20105a52:	c018                	sw	a4,0(s0)
20105a54:	00b78023          	sb	a1,0(a5)
20105a58:	441c                	lw	a5,8(s0)
20105a5a:	00094583          	lbu	a1,0(s2)
20105a5e:	17fd                	add	a5,a5,-1
20105a60:	fde9                	bnez	a1,20105a3a <_puts_r+0x42>
20105a62:	c41c                	sw	a5,8(s0)
20105a64:	0207d463          	bgez	a5,20105a8c <_puts_r+0x94>
20105a68:	8622                	mv	a2,s0
20105a6a:	45a9                	li	a1,10
20105a6c:	8526                	mv	a0,s1
20105a6e:	282d                	jal	20105aa8 <__swbuf_r>
20105a70:	57fd                	li	a5,-1
20105a72:	faf50be3          	beq	a0,a5,20105a28 <_puts_r+0x30>
20105a76:	4529                	li	a0,10
20105a78:	bf4d                	j	20105a2a <_puts_r+0x32>
20105a7a:	8622                	mv	a2,s0
20105a7c:	8526                	mv	a0,s1
20105a7e:	202d                	jal	20105aa8 <__swbuf_r>
20105a80:	fd351ce3          	bne	a0,s3,20105a58 <_puts_r+0x60>
20105a84:	b755                	j	20105a28 <_puts_r+0x30>
20105a86:	59fd                	li	s3,-1
20105a88:	4a29                	li	s4,10
20105a8a:	b7f9                	j	20105a58 <_puts_r+0x60>
20105a8c:	401c                	lw	a5,0(s0)
20105a8e:	00178713          	add	a4,a5,1
20105a92:	c018                	sw	a4,0(s0)
20105a94:	4729                	li	a4,10
20105a96:	00e78023          	sb	a4,0(a5)
20105a9a:	bff1                	j	20105a76 <_puts_r+0x7e>

20105a9c <puts>:
puts():
20105a9c:	85aa                	mv	a1,a0
20105a9e:	5fefb517          	auipc	a0,0x5fefb
20105aa2:	fd252503          	lw	a0,-46(a0) # 80000a70 <_impure_ptr>
20105aa6:	bf89                	j	201059f8 <_puts_r>

20105aa8 <__swbuf_r>:
__swbuf_r():
20105aa8:	1101                	add	sp,sp,-32
20105aaa:	cc22                	sw	s0,24(sp)
20105aac:	ca26                	sw	s1,20(sp)
20105aae:	c84a                	sw	s2,16(sp)
20105ab0:	ce06                	sw	ra,28(sp)
20105ab2:	c64e                	sw	s3,12(sp)
20105ab4:	892a                	mv	s2,a0
20105ab6:	84ae                	mv	s1,a1
20105ab8:	8432                	mv	s0,a2
20105aba:	c509                	beqz	a0,20105ac4 <__swbuf_r+0x1c>
20105abc:	511c                	lw	a5,32(a0)
20105abe:	e399                	bnez	a5,20105ac4 <__swbuf_r+0x1c>
20105ac0:	4cd000ef          	jal	2010678c <__sinit>
20105ac4:	4c1c                	lw	a5,24(s0)
20105ac6:	c41c                	sw	a5,8(s0)
20105ac8:	00c45783          	lhu	a5,12(s0)
20105acc:	8ba1                	and	a5,a5,8
20105ace:	c399                	beqz	a5,20105ad4 <__swbuf_r+0x2c>
20105ad0:	481c                	lw	a5,16(s0)
20105ad2:	ef91                	bnez	a5,20105aee <__swbuf_r+0x46>
20105ad4:	85a2                	mv	a1,s0
20105ad6:	854a                	mv	a0,s2
20105ad8:	20b5                	jal	20105b44 <__swsetup_r>
20105ada:	c911                	beqz	a0,20105aee <__swbuf_r+0x46>
20105adc:	54fd                	li	s1,-1
20105ade:	40f2                	lw	ra,28(sp)
20105ae0:	4462                	lw	s0,24(sp)
20105ae2:	4942                	lw	s2,16(sp)
20105ae4:	49b2                	lw	s3,12(sp)
20105ae6:	8526                	mv	a0,s1
20105ae8:	44d2                	lw	s1,20(sp)
20105aea:	6105                	add	sp,sp,32
20105aec:	8082                	ret
20105aee:	401c                	lw	a5,0(s0)
20105af0:	4818                	lw	a4,16(s0)
20105af2:	0ff4f993          	zext.b	s3,s1
20105af6:	0ff4f493          	zext.b	s1,s1
20105afa:	40e78533          	sub	a0,a5,a4
20105afe:	485c                	lw	a5,20(s0)
20105b00:	00f54763          	blt	a0,a5,20105b0e <__swbuf_r+0x66>
20105b04:	85a2                	mv	a1,s0
20105b06:	854a                	mv	a0,s2
20105b08:	357000ef          	jal	2010665e <_fflush_r>
20105b0c:	f961                	bnez	a0,20105adc <__swbuf_r+0x34>
20105b0e:	441c                	lw	a5,8(s0)
20105b10:	17fd                	add	a5,a5,-1
20105b12:	c41c                	sw	a5,8(s0)
20105b14:	401c                	lw	a5,0(s0)
20105b16:	00178713          	add	a4,a5,1
20105b1a:	c018                	sw	a4,0(s0)
20105b1c:	01378023          	sb	s3,0(a5)
20105b20:	4858                	lw	a4,20(s0)
20105b22:	00150793          	add	a5,a0,1
20105b26:	00f70963          	beq	a4,a5,20105b38 <__swbuf_r+0x90>
20105b2a:	00c45783          	lhu	a5,12(s0)
20105b2e:	8b85                	and	a5,a5,1
20105b30:	d7dd                	beqz	a5,20105ade <__swbuf_r+0x36>
20105b32:	47a9                	li	a5,10
20105b34:	faf495e3          	bne	s1,a5,20105ade <__swbuf_r+0x36>
20105b38:	85a2                	mv	a1,s0
20105b3a:	854a                	mv	a0,s2
20105b3c:	323000ef          	jal	2010665e <_fflush_r>
20105b40:	dd59                	beqz	a0,20105ade <__swbuf_r+0x36>
20105b42:	bf69                	j	20105adc <__swbuf_r+0x34>

20105b44 <__swsetup_r>:
__swsetup_r():
20105b44:	1141                	add	sp,sp,-16
20105b46:	c422                	sw	s0,8(sp)
20105b48:	c226                	sw	s1,4(sp)
20105b4a:	c606                	sw	ra,12(sp)
20105b4c:	84aa                	mv	s1,a0
20105b4e:	5fefb517          	auipc	a0,0x5fefb
20105b52:	f2252503          	lw	a0,-222(a0) # 80000a70 <_impure_ptr>
20105b56:	842e                	mv	s0,a1
20105b58:	c509                	beqz	a0,20105b62 <__swsetup_r+0x1e>
20105b5a:	511c                	lw	a5,32(a0)
20105b5c:	e399                	bnez	a5,20105b62 <__swsetup_r+0x1e>
20105b5e:	42f000ef          	jal	2010678c <__sinit>
20105b62:	00c41783          	lh	a5,12(s0)
20105b66:	0087f713          	and	a4,a5,8
20105b6a:	eb21                	bnez	a4,20105bba <__swsetup_r+0x76>
20105b6c:	0107f713          	and	a4,a5,16
20105b70:	eb09                	bnez	a4,20105b82 <__swsetup_r+0x3e>
20105b72:	4725                	li	a4,9
20105b74:	c098                	sw	a4,0(s1)
20105b76:	0407e793          	or	a5,a5,64
20105b7a:	00f41623          	sh	a5,12(s0)
20105b7e:	557d                	li	a0,-1
20105b80:	a8a5                	j	20105bf8 <__swsetup_r+0xb4>
20105b82:	8b91                	and	a5,a5,4
20105b84:	c78d                	beqz	a5,20105bae <__swsetup_r+0x6a>
20105b86:	584c                	lw	a1,52(s0)
20105b88:	c989                	beqz	a1,20105b9a <__swsetup_r+0x56>
20105b8a:	04440793          	add	a5,s0,68
20105b8e:	00f58463          	beq	a1,a5,20105b96 <__swsetup_r+0x52>
20105b92:	8526                	mv	a0,s1
20105b94:	2215                	jal	20105cb8 <_free_r>
20105b96:	02042a23          	sw	zero,52(s0)
20105b9a:	00c45783          	lhu	a5,12(s0)
20105b9e:	00042223          	sw	zero,4(s0)
20105ba2:	fdb7f793          	and	a5,a5,-37
20105ba6:	00f41623          	sh	a5,12(s0)
20105baa:	481c                	lw	a5,16(s0)
20105bac:	c01c                	sw	a5,0(s0)
20105bae:	00c45783          	lhu	a5,12(s0)
20105bb2:	0087e793          	or	a5,a5,8
20105bb6:	00f41623          	sh	a5,12(s0)
20105bba:	481c                	lw	a5,16(s0)
20105bbc:	ef89                	bnez	a5,20105bd6 <__swsetup_r+0x92>
20105bbe:	00c45783          	lhu	a5,12(s0)
20105bc2:	20000713          	li	a4,512
20105bc6:	2807f793          	and	a5,a5,640
20105bca:	00e78663          	beq	a5,a4,20105bd6 <__swsetup_r+0x92>
20105bce:	85a2                	mv	a1,s0
20105bd0:	8526                	mv	a0,s1
20105bd2:	499000ef          	jal	2010686a <__smakebuf_r>
20105bd6:	00c41783          	lh	a5,12(s0)
20105bda:	0017f713          	and	a4,a5,1
20105bde:	c315                	beqz	a4,20105c02 <__swsetup_r+0xbe>
20105be0:	4858                	lw	a4,20(s0)
20105be2:	00042423          	sw	zero,8(s0)
20105be6:	40e00733          	neg	a4,a4
20105bea:	cc18                	sw	a4,24(s0)
20105bec:	4818                	lw	a4,16(s0)
20105bee:	4501                	li	a0,0
20105bf0:	e701                	bnez	a4,20105bf8 <__swsetup_r+0xb4>
20105bf2:	0807f713          	and	a4,a5,128
20105bf6:	f341                	bnez	a4,20105b76 <__swsetup_r+0x32>
20105bf8:	40b2                	lw	ra,12(sp)
20105bfa:	4422                	lw	s0,8(sp)
20105bfc:	4492                	lw	s1,4(sp)
20105bfe:	0141                	add	sp,sp,16
20105c00:	8082                	ret
20105c02:	0027f713          	and	a4,a5,2
20105c06:	4681                	li	a3,0
20105c08:	e311                	bnez	a4,20105c0c <__swsetup_r+0xc8>
20105c0a:	4854                	lw	a3,20(s0)
20105c0c:	c414                	sw	a3,8(s0)
20105c0e:	bff9                	j	20105bec <__swsetup_r+0xa8>

20105c10 <memset>:
memset():
20105c10:	433d                	li	t1,15
20105c12:	872a                	mv	a4,a0
20105c14:	02c37363          	bgeu	t1,a2,20105c3a <memset+0x2a>
20105c18:	00f77793          	and	a5,a4,15
20105c1c:	efbd                	bnez	a5,20105c9a <memset+0x8a>
20105c1e:	e5ad                	bnez	a1,20105c88 <memset+0x78>
20105c20:	ff067693          	and	a3,a2,-16
20105c24:	8a3d                	and	a2,a2,15
20105c26:	96ba                	add	a3,a3,a4
20105c28:	c30c                	sw	a1,0(a4)
20105c2a:	c34c                	sw	a1,4(a4)
20105c2c:	c70c                	sw	a1,8(a4)
20105c2e:	c74c                	sw	a1,12(a4)
20105c30:	0741                	add	a4,a4,16 # 2010 <__heap_size+0x1810>
20105c32:	fed76be3          	bltu	a4,a3,20105c28 <memset+0x18>
20105c36:	e211                	bnez	a2,20105c3a <memset+0x2a>
20105c38:	8082                	ret
20105c3a:	40c306b3          	sub	a3,t1,a2
20105c3e:	068a                	sll	a3,a3,0x2
20105c40:	00000297          	auipc	t0,0x0
20105c44:	9696                	add	a3,a3,t0
20105c46:	00a68067          	jr	10(a3)
20105c4a:	00b70723          	sb	a1,14(a4)
20105c4e:	00b706a3          	sb	a1,13(a4)
20105c52:	00b70623          	sb	a1,12(a4)
20105c56:	00b705a3          	sb	a1,11(a4)
20105c5a:	00b70523          	sb	a1,10(a4)
20105c5e:	00b704a3          	sb	a1,9(a4)
20105c62:	00b70423          	sb	a1,8(a4)
20105c66:	00b703a3          	sb	a1,7(a4)
20105c6a:	00b70323          	sb	a1,6(a4)
20105c6e:	00b702a3          	sb	a1,5(a4)
20105c72:	00b70223          	sb	a1,4(a4)
20105c76:	00b701a3          	sb	a1,3(a4)
20105c7a:	00b70123          	sb	a1,2(a4)
20105c7e:	00b700a3          	sb	a1,1(a4)
20105c82:	00b70023          	sb	a1,0(a4)
20105c86:	8082                	ret
20105c88:	0ff5f593          	zext.b	a1,a1
20105c8c:	00859693          	sll	a3,a1,0x8
20105c90:	8dd5                	or	a1,a1,a3
20105c92:	01059693          	sll	a3,a1,0x10
20105c96:	8dd5                	or	a1,a1,a3
20105c98:	b761                	j	20105c20 <memset+0x10>
20105c9a:	00279693          	sll	a3,a5,0x2
20105c9e:	00000297          	auipc	t0,0x0
20105ca2:	9696                	add	a3,a3,t0
20105ca4:	8286                	mv	t0,ra
20105ca6:	fa8680e7          	jalr	-88(a3)
20105caa:	8096                	mv	ra,t0
20105cac:	17c1                	add	a5,a5,-16
20105cae:	8f1d                	sub	a4,a4,a5
20105cb0:	963e                	add	a2,a2,a5
20105cb2:	f8c374e3          	bgeu	t1,a2,20105c3a <memset+0x2a>
20105cb6:	b7a5                	j	20105c1e <memset+0xe>

20105cb8 <_free_r>:
_free_r():
20105cb8:	c1c5                	beqz	a1,20105d58 <_free_r+0xa0>
20105cba:	ffc5a783          	lw	a5,-4(a1)
20105cbe:	1101                	add	sp,sp,-32
20105cc0:	cc22                	sw	s0,24(sp)
20105cc2:	ce06                	sw	ra,28(sp)
20105cc4:	ffc58413          	add	s0,a1,-4
20105cc8:	0007d363          	bgez	a5,20105cce <_free_r+0x16>
20105ccc:	943e                	add	s0,s0,a5
20105cce:	c62a                	sw	a0,12(sp)
20105cd0:	2431                	jal	20105edc <__malloc_lock>
20105cd2:	5fefb717          	auipc	a4,0x5fefb
20105cd6:	dca70713          	add	a4,a4,-566 # 80000a9c <__malloc_free_list>
20105cda:	431c                	lw	a5,0(a4)
20105cdc:	4532                	lw	a0,12(sp)
20105cde:	eb81                	bnez	a5,20105cee <_free_r+0x36>
20105ce0:	00042223          	sw	zero,4(s0)
20105ce4:	c300                	sw	s0,0(a4)
20105ce6:	4462                	lw	s0,24(sp)
20105ce8:	40f2                	lw	ra,28(sp)
20105cea:	6105                	add	sp,sp,32
20105cec:	aacd                	j	20105ede <__malloc_unlock>
20105cee:	00f47d63          	bgeu	s0,a5,20105d08 <_free_r+0x50>
20105cf2:	4010                	lw	a2,0(s0)
20105cf4:	00c406b3          	add	a3,s0,a2
20105cf8:	00d79663          	bne	a5,a3,20105d04 <_free_r+0x4c>
20105cfc:	4394                	lw	a3,0(a5)
20105cfe:	43dc                	lw	a5,4(a5)
20105d00:	96b2                	add	a3,a3,a2
20105d02:	c014                	sw	a3,0(s0)
20105d04:	c05c                	sw	a5,4(s0)
20105d06:	bff9                	j	20105ce4 <_free_r+0x2c>
20105d08:	873e                	mv	a4,a5
20105d0a:	43dc                	lw	a5,4(a5)
20105d0c:	c399                	beqz	a5,20105d12 <_free_r+0x5a>
20105d0e:	fef47de3          	bgeu	s0,a5,20105d08 <_free_r+0x50>
20105d12:	4314                	lw	a3,0(a4)
20105d14:	00d70633          	add	a2,a4,a3
20105d18:	00861f63          	bne	a2,s0,20105d36 <_free_r+0x7e>
20105d1c:	4010                	lw	a2,0(s0)
20105d1e:	96b2                	add	a3,a3,a2
20105d20:	c314                	sw	a3,0(a4)
20105d22:	00d70633          	add	a2,a4,a3
20105d26:	fcc790e3          	bne	a5,a2,20105ce6 <_free_r+0x2e>
20105d2a:	4390                	lw	a2,0(a5)
20105d2c:	43dc                	lw	a5,4(a5)
20105d2e:	96b2                	add	a3,a3,a2
20105d30:	c314                	sw	a3,0(a4)
20105d32:	c35c                	sw	a5,4(a4)
20105d34:	bf4d                	j	20105ce6 <_free_r+0x2e>
20105d36:	00c47563          	bgeu	s0,a2,20105d40 <_free_r+0x88>
20105d3a:	47b1                	li	a5,12
20105d3c:	c11c                	sw	a5,0(a0)
20105d3e:	b765                	j	20105ce6 <_free_r+0x2e>
20105d40:	4010                	lw	a2,0(s0)
20105d42:	00c406b3          	add	a3,s0,a2
20105d46:	00d79663          	bne	a5,a3,20105d52 <_free_r+0x9a>
20105d4a:	4394                	lw	a3,0(a5)
20105d4c:	43dc                	lw	a5,4(a5)
20105d4e:	96b2                	add	a3,a3,a2
20105d50:	c014                	sw	a3,0(s0)
20105d52:	c05c                	sw	a5,4(s0)
20105d54:	c340                	sw	s0,4(a4)
20105d56:	bf41                	j	20105ce6 <_free_r+0x2e>
20105d58:	8082                	ret

20105d5a <sbrk_aligned>:
sbrk_aligned():
20105d5a:	1141                	add	sp,sp,-16
20105d5c:	c04a                	sw	s2,0(sp)
20105d5e:	5fefb917          	auipc	s2,0x5fefb
20105d62:	d3a90913          	add	s2,s2,-710 # 80000a98 <__malloc_sbrk_start>
20105d66:	00092783          	lw	a5,0(s2)
20105d6a:	c422                	sw	s0,8(sp)
20105d6c:	c226                	sw	s1,4(sp)
20105d6e:	c606                	sw	ra,12(sp)
20105d70:	84aa                	mv	s1,a0
20105d72:	842e                	mv	s0,a1
20105d74:	e791                	bnez	a5,20105d80 <sbrk_aligned+0x26>
20105d76:	4581                	li	a1,0
20105d78:	5b1000ef          	jal	20106b28 <_sbrk_r>
20105d7c:	00a92023          	sw	a0,0(s2)
20105d80:	85a2                	mv	a1,s0
20105d82:	8526                	mv	a0,s1
20105d84:	5a5000ef          	jal	20106b28 <_sbrk_r>
20105d88:	597d                	li	s2,-1
20105d8a:	01251a63          	bne	a0,s2,20105d9e <sbrk_aligned+0x44>
20105d8e:	547d                	li	s0,-1
20105d90:	40b2                	lw	ra,12(sp)
20105d92:	8522                	mv	a0,s0
20105d94:	4422                	lw	s0,8(sp)
20105d96:	4492                	lw	s1,4(sp)
20105d98:	4902                	lw	s2,0(sp)
20105d9a:	0141                	add	sp,sp,16
20105d9c:	8082                	ret
20105d9e:	00350413          	add	s0,a0,3
20105da2:	9871                	and	s0,s0,-4
20105da4:	fe8506e3          	beq	a0,s0,20105d90 <sbrk_aligned+0x36>
20105da8:	40a405b3          	sub	a1,s0,a0
20105dac:	8526                	mv	a0,s1
20105dae:	57b000ef          	jal	20106b28 <_sbrk_r>
20105db2:	fd251fe3          	bne	a0,s2,20105d90 <sbrk_aligned+0x36>
20105db6:	bfe1                	j	20105d8e <sbrk_aligned+0x34>

20105db8 <_malloc_r>:
_malloc_r():
20105db8:	1101                	add	sp,sp,-32
20105dba:	ca26                	sw	s1,20(sp)
20105dbc:	00358493          	add	s1,a1,3
20105dc0:	98f1                	and	s1,s1,-4
20105dc2:	c84a                	sw	s2,16(sp)
20105dc4:	ce06                	sw	ra,28(sp)
20105dc6:	cc22                	sw	s0,24(sp)
20105dc8:	c64e                	sw	s3,12(sp)
20105dca:	c452                	sw	s4,8(sp)
20105dcc:	04a1                	add	s1,s1,8
20105dce:	47b1                	li	a5,12
20105dd0:	892a                	mv	s2,a0
20105dd2:	06f4f863          	bgeu	s1,a5,20105e42 <_malloc_r+0x8a>
20105dd6:	44b1                	li	s1,12
20105dd8:	06b4e763          	bltu	s1,a1,20105e46 <_malloc_r+0x8e>
20105ddc:	854a                	mv	a0,s2
20105dde:	28fd                	jal	20105edc <__malloc_lock>
20105de0:	5fefb997          	auipc	s3,0x5fefb
20105de4:	cbc98993          	add	s3,s3,-836 # 80000a9c <__malloc_free_list>
20105de8:	0009a783          	lw	a5,0(s3)
20105dec:	843e                	mv	s0,a5
20105dee:	e825                	bnez	s0,20105e5e <_malloc_r+0xa6>
20105df0:	85a6                	mv	a1,s1
20105df2:	854a                	mv	a0,s2
20105df4:	379d                	jal	20105d5a <sbrk_aligned>
20105df6:	57fd                	li	a5,-1
20105df8:	842a                	mv	s0,a0
20105dfa:	0cf51f63          	bne	a0,a5,20105ed8 <_malloc_r+0x120>
20105dfe:	0009a403          	lw	s0,0(s3)
20105e02:	87a2                	mv	a5,s0
20105e04:	ebd5                	bnez	a5,20105eb8 <_malloc_r+0x100>
20105e06:	c079                	beqz	s0,20105ecc <_malloc_r+0x114>
20105e08:	00042a03          	lw	s4,0(s0)
20105e0c:	4581                	li	a1,0
20105e0e:	854a                	mv	a0,s2
20105e10:	9a22                	add	s4,s4,s0
20105e12:	517000ef          	jal	20106b28 <_sbrk_r>
20105e16:	0aaa1b63          	bne	s4,a0,20105ecc <_malloc_r+0x114>
20105e1a:	401c                	lw	a5,0(s0)
20105e1c:	854a                	mv	a0,s2
20105e1e:	8c9d                	sub	s1,s1,a5
20105e20:	85a6                	mv	a1,s1
20105e22:	3f25                	jal	20105d5a <sbrk_aligned>
20105e24:	57fd                	li	a5,-1
20105e26:	0af50363          	beq	a0,a5,20105ecc <_malloc_r+0x114>
20105e2a:	401c                	lw	a5,0(s0)
20105e2c:	97a6                	add	a5,a5,s1
20105e2e:	c01c                	sw	a5,0(s0)
20105e30:	0009a783          	lw	a5,0(s3)
20105e34:	43d8                	lw	a4,4(a5)
20105e36:	e741                	bnez	a4,20105ebe <_malloc_r+0x106>
20105e38:	5fefb797          	auipc	a5,0x5fefb
20105e3c:	c607a223          	sw	zero,-924(a5) # 80000a9c <__malloc_free_list>
20105e40:	a081                	j	20105e80 <_malloc_r+0xc8>
20105e42:	f804dbe3          	bgez	s1,20105dd8 <_malloc_r+0x20>
20105e46:	47b1                	li	a5,12
20105e48:	00f92023          	sw	a5,0(s2)
20105e4c:	4501                	li	a0,0
20105e4e:	40f2                	lw	ra,28(sp)
20105e50:	4462                	lw	s0,24(sp)
20105e52:	44d2                	lw	s1,20(sp)
20105e54:	4942                	lw	s2,16(sp)
20105e56:	49b2                	lw	s3,12(sp)
20105e58:	4a22                	lw	s4,8(sp)
20105e5a:	6105                	add	sp,sp,32
20105e5c:	8082                	ret
20105e5e:	4014                	lw	a3,0(s0)
20105e60:	8e85                	sub	a3,a3,s1
20105e62:	0406c863          	bltz	a3,20105eb2 <_malloc_r+0xfa>
20105e66:	472d                	li	a4,11
20105e68:	02d77d63          	bgeu	a4,a3,20105ea2 <_malloc_r+0xea>
20105e6c:	c004                	sw	s1,0(s0)
20105e6e:	00940733          	add	a4,s0,s1
20105e72:	02879663          	bne	a5,s0,20105e9e <_malloc_r+0xe6>
20105e76:	00e9a023          	sw	a4,0(s3)
20105e7a:	405c                	lw	a5,4(s0)
20105e7c:	c314                	sw	a3,0(a4)
20105e7e:	c35c                	sw	a5,4(a4)
20105e80:	854a                	mv	a0,s2
20105e82:	28b1                	jal	20105ede <__malloc_unlock>
20105e84:	00b40513          	add	a0,s0,11
20105e88:	00440793          	add	a5,s0,4
20105e8c:	9961                	and	a0,a0,-8
20105e8e:	40f50733          	sub	a4,a0,a5
20105e92:	faf50ee3          	beq	a0,a5,20105e4e <_malloc_r+0x96>
20105e96:	943a                	add	s0,s0,a4
20105e98:	8f89                	sub	a5,a5,a0
20105e9a:	c01c                	sw	a5,0(s0)
20105e9c:	bf4d                	j	20105e4e <_malloc_r+0x96>
20105e9e:	c3d8                	sw	a4,4(a5)
20105ea0:	bfe9                	j	20105e7a <_malloc_r+0xc2>
20105ea2:	4058                	lw	a4,4(s0)
20105ea4:	00879563          	bne	a5,s0,20105eae <_malloc_r+0xf6>
20105ea8:	00e9a023          	sw	a4,0(s3)
20105eac:	bfd1                	j	20105e80 <_malloc_r+0xc8>
20105eae:	c3d8                	sw	a4,4(a5)
20105eb0:	bfc1                	j	20105e80 <_malloc_r+0xc8>
20105eb2:	87a2                	mv	a5,s0
20105eb4:	4040                	lw	s0,4(s0)
20105eb6:	bf25                	j	20105dee <_malloc_r+0x36>
20105eb8:	843e                	mv	s0,a5
20105eba:	43dc                	lw	a5,4(a5)
20105ebc:	b7a1                	j	20105e04 <_malloc_r+0x4c>
20105ebe:	873e                	mv	a4,a5
20105ec0:	43dc                	lw	a5,4(a5)
20105ec2:	fe879ee3          	bne	a5,s0,20105ebe <_malloc_r+0x106>
20105ec6:	00072223          	sw	zero,4(a4)
20105eca:	bf5d                	j	20105e80 <_malloc_r+0xc8>
20105ecc:	47b1                	li	a5,12
20105ece:	00f92023          	sw	a5,0(s2)
20105ed2:	854a                	mv	a0,s2
20105ed4:	2029                	jal	20105ede <__malloc_unlock>
20105ed6:	bf9d                	j	20105e4c <_malloc_r+0x94>
20105ed8:	c104                	sw	s1,0(a0)
20105eda:	b75d                	j	20105e80 <_malloc_r+0xc8>

20105edc <__malloc_lock>:
__malloc_lock():
20105edc:	8082                	ret

20105ede <__malloc_unlock>:
__malloc_unlock():
20105ede:	8082                	ret

20105ee0 <__sfputc_r>:
__sfputc_r():
20105ee0:	461c                	lw	a5,8(a2)
20105ee2:	17fd                	add	a5,a5,-1
20105ee4:	c61c                	sw	a5,8(a2)
20105ee6:	0007d963          	bgez	a5,20105ef8 <__sfputc_r+0x18>
20105eea:	4e18                	lw	a4,24(a2)
20105eec:	00e7c563          	blt	a5,a4,20105ef6 <__sfputc_r+0x16>
20105ef0:	47a9                	li	a5,10
20105ef2:	00f59363          	bne	a1,a5,20105ef8 <__sfputc_r+0x18>
20105ef6:	be4d                	j	20105aa8 <__swbuf_r>
20105ef8:	421c                	lw	a5,0(a2)
20105efa:	852e                	mv	a0,a1
20105efc:	00178713          	add	a4,a5,1
20105f00:	c218                	sw	a4,0(a2)
20105f02:	00b78023          	sb	a1,0(a5)
20105f06:	8082                	ret

20105f08 <__sfputs_r>:
__sfputs_r():
20105f08:	1101                	add	sp,sp,-32
20105f0a:	cc22                	sw	s0,24(sp)
20105f0c:	ca26                	sw	s1,20(sp)
20105f0e:	c84a                	sw	s2,16(sp)
20105f10:	c64e                	sw	s3,12(sp)
20105f12:	c452                	sw	s4,8(sp)
20105f14:	ce06                	sw	ra,28(sp)
20105f16:	892a                	mv	s2,a0
20105f18:	89ae                	mv	s3,a1
20105f1a:	8432                	mv	s0,a2
20105f1c:	00d604b3          	add	s1,a2,a3
20105f20:	5a7d                	li	s4,-1
20105f22:	00941463          	bne	s0,s1,20105f2a <__sfputs_r+0x22>
20105f26:	4501                	li	a0,0
20105f28:	a809                	j	20105f3a <__sfputs_r+0x32>
20105f2a:	00044583          	lbu	a1,0(s0)
20105f2e:	864e                	mv	a2,s3
20105f30:	854a                	mv	a0,s2
20105f32:	377d                	jal	20105ee0 <__sfputc_r>
20105f34:	0405                	add	s0,s0,1
20105f36:	ff4516e3          	bne	a0,s4,20105f22 <__sfputs_r+0x1a>
20105f3a:	40f2                	lw	ra,28(sp)
20105f3c:	4462                	lw	s0,24(sp)
20105f3e:	44d2                	lw	s1,20(sp)
20105f40:	4942                	lw	s2,16(sp)
20105f42:	49b2                	lw	s3,12(sp)
20105f44:	4a22                	lw	s4,8(sp)
20105f46:	6105                	add	sp,sp,32
20105f48:	8082                	ret

20105f4a <_vfiprintf_r>:
_vfiprintf_r():
20105f4a:	7135                	add	sp,sp,-160
20105f4c:	cd22                	sw	s0,152(sp)
20105f4e:	cb26                	sw	s1,148(sp)
20105f50:	c94a                	sw	s2,144(sp)
20105f52:	c74e                	sw	s3,140(sp)
20105f54:	cf06                	sw	ra,156(sp)
20105f56:	c552                	sw	s4,136(sp)
20105f58:	c356                	sw	s5,132(sp)
20105f5a:	c15a                	sw	s6,128(sp)
20105f5c:	dede                	sw	s7,124(sp)
20105f5e:	dce2                	sw	s8,120(sp)
20105f60:	dae6                	sw	s9,116(sp)
20105f62:	89aa                	mv	s3,a0
20105f64:	892e                	mv	s2,a1
20105f66:	84b2                	mv	s1,a2
20105f68:	8436                	mv	s0,a3
20105f6a:	c509                	beqz	a0,20105f74 <_vfiprintf_r+0x2a>
20105f6c:	511c                	lw	a5,32(a0)
20105f6e:	e399                	bnez	a5,20105f74 <_vfiprintf_r+0x2a>
20105f70:	01d000ef          	jal	2010678c <__sinit>
20105f74:	00c95783          	lhu	a5,12(s2)
20105f78:	8ba1                	and	a5,a5,8
20105f7a:	c7f1                	beqz	a5,20106046 <_vfiprintf_r+0xfc>
20105f7c:	01092783          	lw	a5,16(s2)
20105f80:	c3f9                	beqz	a5,20106046 <_vfiprintf_r+0xfc>
20105f82:	02000793          	li	a5,32
20105f86:	02f104a3          	sb	a5,41(sp)
20105f8a:	03000793          	li	a5,48
20105f8e:	d202                	sw	zero,36(sp)
20105f90:	02f10523          	sb	a5,42(sp)
20105f94:	c622                	sw	s0,12(sp)
20105f96:	02500b93          	li	s7,37
20105f9a:	ffffea97          	auipc	s5,0xffffe
20105f9e:	472a8a93          	add	s5,s5,1138 # 2010440c <input_data_9+0x90>
20105fa2:	4c05                	li	s8,1
20105fa4:	4b29                	li	s6,10
20105fa6:	8426                	mv	s0,s1
20105fa8:	00044783          	lbu	a5,0(s0)
20105fac:	c399                	beqz	a5,20105fb2 <_vfiprintf_r+0x68>
20105fae:	0b779e63          	bne	a5,s7,2010606a <_vfiprintf_r+0x120>
20105fb2:	40940cb3          	sub	s9,s0,s1
20105fb6:	00940d63          	beq	s0,s1,20105fd0 <_vfiprintf_r+0x86>
20105fba:	86e6                	mv	a3,s9
20105fbc:	8626                	mv	a2,s1
20105fbe:	85ca                	mv	a1,s2
20105fc0:	854e                	mv	a0,s3
20105fc2:	3799                	jal	20105f08 <__sfputs_r>
20105fc4:	57fd                	li	a5,-1
20105fc6:	1cf50363          	beq	a0,a5,2010618c <_vfiprintf_r+0x242>
20105fca:	5792                	lw	a5,36(sp)
20105fcc:	97e6                	add	a5,a5,s9
20105fce:	d23e                	sw	a5,36(sp)
20105fd0:	00044783          	lbu	a5,0(s0)
20105fd4:	1a078c63          	beqz	a5,2010618c <_vfiprintf_r+0x242>
20105fd8:	57fd                	li	a5,-1
20105fda:	00140493          	add	s1,s0,1
20105fde:	c802                	sw	zero,16(sp)
20105fe0:	ce02                	sw	zero,28(sp)
20105fe2:	ca3e                	sw	a5,20(sp)
20105fe4:	cc02                	sw	zero,24(sp)
20105fe6:	040109a3          	sb	zero,83(sp)
20105fea:	d482                	sw	zero,104(sp)
20105fec:	0004c583          	lbu	a1,0(s1)
20105ff0:	4615                	li	a2,5
20105ff2:	8556                	mv	a0,s5
20105ff4:	221000ef          	jal	20106a14 <memchr>
20105ff8:	47c2                	lw	a5,16(sp)
20105ffa:	00148413          	add	s0,s1,1
20105ffe:	e925                	bnez	a0,2010606e <_vfiprintf_r+0x124>
20106000:	0107f713          	and	a4,a5,16
20106004:	c709                	beqz	a4,2010600e <_vfiprintf_r+0xc4>
20106006:	02000713          	li	a4,32
2010600a:	04e109a3          	sb	a4,83(sp)
2010600e:	0087f713          	and	a4,a5,8
20106012:	c709                	beqz	a4,2010601c <_vfiprintf_r+0xd2>
20106014:	02b00713          	li	a4,43
20106018:	04e109a3          	sb	a4,83(sp)
2010601c:	0004c683          	lbu	a3,0(s1)
20106020:	02a00713          	li	a4,42
20106024:	04e68d63          	beq	a3,a4,2010607e <_vfiprintf_r+0x134>
20106028:	47f2                	lw	a5,28(sp)
2010602a:	8426                	mv	s0,s1
2010602c:	4681                	li	a3,0
2010602e:	4625                	li	a2,9
20106030:	00044703          	lbu	a4,0(s0)
20106034:	00140593          	add	a1,s0,1
20106038:	fd070713          	add	a4,a4,-48
2010603c:	08e67763          	bgeu	a2,a4,201060ca <_vfiprintf_r+0x180>
20106040:	c6b9                	beqz	a3,2010608e <_vfiprintf_r+0x144>
20106042:	ce3e                	sw	a5,28(sp)
20106044:	a0a9                	j	2010608e <_vfiprintf_r+0x144>
20106046:	85ca                	mv	a1,s2
20106048:	854e                	mv	a0,s3
2010604a:	3ced                	jal	20105b44 <__swsetup_r>
2010604c:	d91d                	beqz	a0,20105f82 <_vfiprintf_r+0x38>
2010604e:	557d                	li	a0,-1
20106050:	40fa                	lw	ra,156(sp)
20106052:	446a                	lw	s0,152(sp)
20106054:	44da                	lw	s1,148(sp)
20106056:	494a                	lw	s2,144(sp)
20106058:	49ba                	lw	s3,140(sp)
2010605a:	4a2a                	lw	s4,136(sp)
2010605c:	4a9a                	lw	s5,132(sp)
2010605e:	4b0a                	lw	s6,128(sp)
20106060:	5bf6                	lw	s7,124(sp)
20106062:	5c66                	lw	s8,120(sp)
20106064:	5cd6                	lw	s9,116(sp)
20106066:	610d                	add	sp,sp,160
20106068:	8082                	ret
2010606a:	0405                	add	s0,s0,1
2010606c:	bf35                	j	20105fa8 <_vfiprintf_r+0x5e>
2010606e:	41550533          	sub	a0,a0,s5
20106072:	00ac1533          	sll	a0,s8,a0
20106076:	8fc9                	or	a5,a5,a0
20106078:	c83e                	sw	a5,16(sp)
2010607a:	84a2                	mv	s1,s0
2010607c:	bf85                	j	20105fec <_vfiprintf_r+0xa2>
2010607e:	4732                	lw	a4,12(sp)
20106080:	00470693          	add	a3,a4,4
20106084:	4318                	lw	a4,0(a4)
20106086:	c636                	sw	a3,12(sp)
20106088:	02074a63          	bltz	a4,201060bc <_vfiprintf_r+0x172>
2010608c:	ce3a                	sw	a4,28(sp)
2010608e:	00044703          	lbu	a4,0(s0)
20106092:	02e00793          	li	a5,46
20106096:	04f71e63          	bne	a4,a5,201060f2 <_vfiprintf_r+0x1a8>
2010609a:	00144703          	lbu	a4,1(s0)
2010609e:	02a00793          	li	a5,42
201060a2:	02f71a63          	bne	a4,a5,201060d6 <_vfiprintf_r+0x18c>
201060a6:	47b2                	lw	a5,12(sp)
201060a8:	0409                	add	s0,s0,2
201060aa:	00478713          	add	a4,a5,4
201060ae:	439c                	lw	a5,0(a5)
201060b0:	c63a                	sw	a4,12(sp)
201060b2:	0007d363          	bgez	a5,201060b8 <_vfiprintf_r+0x16e>
201060b6:	57fd                	li	a5,-1
201060b8:	ca3e                	sw	a5,20(sp)
201060ba:	a825                	j	201060f2 <_vfiprintf_r+0x1a8>
201060bc:	40e00733          	neg	a4,a4
201060c0:	0027e793          	or	a5,a5,2
201060c4:	ce3a                	sw	a4,28(sp)
201060c6:	c83e                	sw	a5,16(sp)
201060c8:	b7d9                	j	2010608e <_vfiprintf_r+0x144>
201060ca:	036787b3          	mul	a5,a5,s6
201060ce:	842e                	mv	s0,a1
201060d0:	4685                	li	a3,1
201060d2:	97ba                	add	a5,a5,a4
201060d4:	bfb1                	j	20106030 <_vfiprintf_r+0xe6>
201060d6:	0405                	add	s0,s0,1
201060d8:	ca02                	sw	zero,20(sp)
201060da:	4681                	li	a3,0
201060dc:	4781                	li	a5,0
201060de:	4625                	li	a2,9
201060e0:	00044703          	lbu	a4,0(s0)
201060e4:	00140593          	add	a1,s0,1
201060e8:	fd070713          	add	a4,a4,-48
201060ec:	06e67663          	bgeu	a2,a4,20106158 <_vfiprintf_r+0x20e>
201060f0:	f6e1                	bnez	a3,201060b8 <_vfiprintf_r+0x16e>
201060f2:	00044583          	lbu	a1,0(s0)
201060f6:	460d                	li	a2,3
201060f8:	ffffe517          	auipc	a0,0xffffe
201060fc:	31c50513          	add	a0,a0,796 # 20104414 <input_data_9+0x98>
20106100:	115000ef          	jal	20106a14 <memchr>
20106104:	cd11                	beqz	a0,20106120 <_vfiprintf_r+0x1d6>
20106106:	ffffe797          	auipc	a5,0xffffe
2010610a:	30e78793          	add	a5,a5,782 # 20104414 <input_data_9+0x98>
2010610e:	8d1d                	sub	a0,a0,a5
20106110:	47c2                	lw	a5,16(sp)
20106112:	04000713          	li	a4,64
20106116:	00a71733          	sll	a4,a4,a0
2010611a:	8fd9                	or	a5,a5,a4
2010611c:	0405                	add	s0,s0,1
2010611e:	c83e                	sw	a5,16(sp)
20106120:	00044583          	lbu	a1,0(s0)
20106124:	4619                	li	a2,6
20106126:	ffffe517          	auipc	a0,0xffffe
2010612a:	2f250513          	add	a0,a0,754 # 20104418 <input_data_9+0x9c>
2010612e:	00140493          	add	s1,s0,1
20106132:	02b10423          	sb	a1,40(sp)
20106136:	0df000ef          	jal	20106a14 <memchr>
2010613a:	c12d                	beqz	a0,2010619c <_vfiprintf_r+0x252>
2010613c:	00000793          	li	a5,0
20106140:	e795                	bnez	a5,2010616c <_vfiprintf_r+0x222>
20106142:	4742                	lw	a4,16(sp)
20106144:	47b2                	lw	a5,12(sp)
20106146:	10077713          	and	a4,a4,256
2010614a:	cf09                	beqz	a4,20106164 <_vfiprintf_r+0x21a>
2010614c:	0791                	add	a5,a5,4
2010614e:	c63e                	sw	a5,12(sp)
20106150:	5792                	lw	a5,36(sp)
20106152:	97d2                	add	a5,a5,s4
20106154:	d23e                	sw	a5,36(sp)
20106156:	bd81                	j	20105fa6 <_vfiprintf_r+0x5c>
20106158:	036787b3          	mul	a5,a5,s6
2010615c:	842e                	mv	s0,a1
2010615e:	4685                	li	a3,1
20106160:	97ba                	add	a5,a5,a4
20106162:	bfbd                	j	201060e0 <_vfiprintf_r+0x196>
20106164:	079d                	add	a5,a5,7
20106166:	9be1                	and	a5,a5,-8
20106168:	07a1                	add	a5,a5,8
2010616a:	b7d5                	j	2010614e <_vfiprintf_r+0x204>
2010616c:	0078                	add	a4,sp,12
2010616e:	00000697          	auipc	a3,0x0
20106172:	d9a68693          	add	a3,a3,-614 # 20105f08 <__sfputs_r>
20106176:	864a                	mv	a2,s2
20106178:	080c                	add	a1,sp,16
2010617a:	854e                	mv	a0,s3
2010617c:	00000097          	auipc	ra,0x0
20106180:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20106184:	57fd                	li	a5,-1
20106186:	8a2a                	mv	s4,a0
20106188:	fcf514e3          	bne	a0,a5,20106150 <_vfiprintf_r+0x206>
2010618c:	00c95783          	lhu	a5,12(s2)
20106190:	0407f793          	and	a5,a5,64
20106194:	ea079de3          	bnez	a5,2010604e <_vfiprintf_r+0x104>
20106198:	5512                	lw	a0,36(sp)
2010619a:	bd5d                	j	20106050 <_vfiprintf_r+0x106>
2010619c:	0078                	add	a4,sp,12
2010619e:	00000697          	auipc	a3,0x0
201061a2:	d6a68693          	add	a3,a3,-662 # 20105f08 <__sfputs_r>
201061a6:	864a                	mv	a2,s2
201061a8:	080c                	add	a1,sp,16
201061aa:	854e                	mv	a0,s3
201061ac:	2a11                	jal	201062c0 <_printf_i>
201061ae:	bfd9                	j	20106184 <_vfiprintf_r+0x23a>

201061b0 <_printf_common>:
_printf_common():
201061b0:	7179                	add	sp,sp,-48
201061b2:	ca56                	sw	s5,20(sp)
201061b4:	499c                	lw	a5,16(a1)
201061b6:	8aba                	mv	s5,a4
201061b8:	4598                	lw	a4,8(a1)
201061ba:	d422                	sw	s0,40(sp)
201061bc:	d04a                	sw	s2,32(sp)
201061be:	ce4e                	sw	s3,28(sp)
201061c0:	cc52                	sw	s4,24(sp)
201061c2:	d606                	sw	ra,44(sp)
201061c4:	d226                	sw	s1,36(sp)
201061c6:	c85a                	sw	s6,16(sp)
201061c8:	c65e                	sw	s7,12(sp)
201061ca:	89aa                	mv	s3,a0
201061cc:	842e                	mv	s0,a1
201061ce:	8932                	mv	s2,a2
201061d0:	8a36                	mv	s4,a3
201061d2:	00e7d363          	bge	a5,a4,201061d8 <_printf_common+0x28>
201061d6:	87ba                	mv	a5,a4
201061d8:	00f92023          	sw	a5,0(s2)
201061dc:	04344703          	lbu	a4,67(s0)
201061e0:	c701                	beqz	a4,201061e8 <_printf_common+0x38>
201061e2:	0785                	add	a5,a5,1
201061e4:	00f92023          	sw	a5,0(s2)
201061e8:	401c                	lw	a5,0(s0)
201061ea:	0207f793          	and	a5,a5,32
201061ee:	c791                	beqz	a5,201061fa <_printf_common+0x4a>
201061f0:	00092783          	lw	a5,0(s2)
201061f4:	0789                	add	a5,a5,2
201061f6:	00f92023          	sw	a5,0(s2)
201061fa:	4004                	lw	s1,0(s0)
201061fc:	8899                	and	s1,s1,6
201061fe:	e891                	bnez	s1,20106212 <_printf_common+0x62>
20106200:	01940b13          	add	s6,s0,25
20106204:	5bfd                	li	s7,-1
20106206:	445c                	lw	a5,12(s0)
20106208:	00092703          	lw	a4,0(s2)
2010620c:	8f99                	sub	a5,a5,a4
2010620e:	04f4cc63          	blt	s1,a5,20106266 <_printf_common+0xb6>
20106212:	04344783          	lbu	a5,67(s0)
20106216:	00f036b3          	snez	a3,a5
2010621a:	401c                	lw	a5,0(s0)
2010621c:	0207f793          	and	a5,a5,32
20106220:	eba5                	bnez	a5,20106290 <_printf_common+0xe0>
20106222:	04340613          	add	a2,s0,67
20106226:	85d2                	mv	a1,s4
20106228:	854e                	mv	a0,s3
2010622a:	9a82                	jalr	s5
2010622c:	57fd                	li	a5,-1
2010622e:	04f50363          	beq	a0,a5,20106274 <_printf_common+0xc4>
20106232:	401c                	lw	a5,0(s0)
20106234:	4711                	li	a4,4
20106236:	4481                	li	s1,0
20106238:	8b99                	and	a5,a5,6
2010623a:	00e79963          	bne	a5,a4,2010624c <_printf_common+0x9c>
2010623e:	4444                	lw	s1,12(s0)
20106240:	00092783          	lw	a5,0(s2)
20106244:	8c9d                	sub	s1,s1,a5
20106246:	0004d363          	bgez	s1,2010624c <_printf_common+0x9c>
2010624a:	4481                	li	s1,0
2010624c:	441c                	lw	a5,8(s0)
2010624e:	4818                	lw	a4,16(s0)
20106250:	00f75463          	bge	a4,a5,20106258 <_printf_common+0xa8>
20106254:	8f99                	sub	a5,a5,a4
20106256:	94be                	add	s1,s1,a5
20106258:	4901                	li	s2,0
2010625a:	0469                	add	s0,s0,26
2010625c:	5b7d                	li	s6,-1
2010625e:	05249863          	bne	s1,s2,201062ae <_printf_common+0xfe>
20106262:	4501                	li	a0,0
20106264:	a809                	j	20106276 <_printf_common+0xc6>
20106266:	4685                	li	a3,1
20106268:	865a                	mv	a2,s6
2010626a:	85d2                	mv	a1,s4
2010626c:	854e                	mv	a0,s3
2010626e:	9a82                	jalr	s5
20106270:	01751e63          	bne	a0,s7,2010628c <_printf_common+0xdc>
20106274:	557d                	li	a0,-1
20106276:	50b2                	lw	ra,44(sp)
20106278:	5422                	lw	s0,40(sp)
2010627a:	5492                	lw	s1,36(sp)
2010627c:	5902                	lw	s2,32(sp)
2010627e:	49f2                	lw	s3,28(sp)
20106280:	4a62                	lw	s4,24(sp)
20106282:	4ad2                	lw	s5,20(sp)
20106284:	4b42                	lw	s6,16(sp)
20106286:	4bb2                	lw	s7,12(sp)
20106288:	6145                	add	sp,sp,48
2010628a:	8082                	ret
2010628c:	0485                	add	s1,s1,1
2010628e:	bfa5                	j	20106206 <_printf_common+0x56>
20106290:	00d40733          	add	a4,s0,a3
20106294:	03000613          	li	a2,48
20106298:	04c701a3          	sb	a2,67(a4)
2010629c:	04544703          	lbu	a4,69(s0)
201062a0:	00168793          	add	a5,a3,1
201062a4:	97a2                	add	a5,a5,s0
201062a6:	0689                	add	a3,a3,2
201062a8:	04e781a3          	sb	a4,67(a5)
201062ac:	bf9d                	j	20106222 <_printf_common+0x72>
201062ae:	4685                	li	a3,1
201062b0:	8622                	mv	a2,s0
201062b2:	85d2                	mv	a1,s4
201062b4:	854e                	mv	a0,s3
201062b6:	9a82                	jalr	s5
201062b8:	fb650ee3          	beq	a0,s6,20106274 <_printf_common+0xc4>
201062bc:	0905                	add	s2,s2,1
201062be:	b745                	j	2010625e <_printf_common+0xae>

201062c0 <_printf_i>:
_printf_i():
201062c0:	7179                	add	sp,sp,-48
201062c2:	d422                	sw	s0,40(sp)
201062c4:	d226                	sw	s1,36(sp)
201062c6:	d04a                	sw	s2,32(sp)
201062c8:	ce4e                	sw	s3,28(sp)
201062ca:	d606                	sw	ra,44(sp)
201062cc:	cc52                	sw	s4,24(sp)
201062ce:	ca56                	sw	s5,20(sp)
201062d0:	c85a                	sw	s6,16(sp)
201062d2:	0185c803          	lbu	a6,24(a1)
201062d6:	07800793          	li	a5,120
201062da:	84aa                	mv	s1,a0
201062dc:	842e                	mv	s0,a1
201062de:	8932                	mv	s2,a2
201062e0:	89b6                	mv	s3,a3
201062e2:	0307e263          	bltu	a5,a6,20106306 <_printf_i+0x46>
201062e6:	06200793          	li	a5,98
201062ea:	04358693          	add	a3,a1,67
201062ee:	0307e163          	bltu	a5,a6,20106310 <_printf_i+0x50>
201062f2:	1a080e63          	beqz	a6,201064ae <_printf_i+0x1ee>
201062f6:	05800793          	li	a5,88
201062fa:	ffffe617          	auipc	a2,0xffffe
201062fe:	12660613          	add	a2,a2,294 # 20104420 <input_data_9+0xa4>
20106302:	14f80163          	beq	a6,a5,20106444 <_printf_i+0x184>
20106306:	04240a93          	add	s5,s0,66
2010630a:	05040123          	sb	a6,66(s0)
2010630e:	a815                	j	20106342 <_printf_i+0x82>
20106310:	f9d80793          	add	a5,a6,-99
20106314:	0ff7f793          	zext.b	a5,a5
20106318:	4655                	li	a2,21
2010631a:	fef666e3          	bltu	a2,a5,20106306 <_printf_i+0x46>
2010631e:	ffffe617          	auipc	a2,0xffffe
20106322:	12a60613          	add	a2,a2,298 # 20104448 <input_data_9+0xcc>
20106326:	078a                	sll	a5,a5,0x2
20106328:	97b2                	add	a5,a5,a2
2010632a:	439c                	lw	a5,0(a5)
2010632c:	97b2                	add	a5,a5,a2
2010632e:	8782                	jr	a5
20106330:	431c                	lw	a5,0(a4)
20106332:	04258a93          	add	s5,a1,66
20106336:	00478693          	add	a3,a5,4
2010633a:	439c                	lw	a5,0(a5)
2010633c:	c314                	sw	a3,0(a4)
2010633e:	04f58123          	sb	a5,66(a1)
20106342:	4785                	li	a5,1
20106344:	aa41                	j	201064d4 <_printf_i+0x214>
20106346:	419c                	lw	a5,0(a1)
20106348:	4308                	lw	a0,0(a4)
2010634a:	0807f613          	and	a2,a5,128
2010634e:	00450593          	add	a1,a0,4
20106352:	c20d                	beqz	a2,20106374 <_printf_i+0xb4>
20106354:	411c                	lw	a5,0(a0)
20106356:	c30c                	sw	a1,0(a4)
20106358:	0007d863          	bgez	a5,20106368 <_printf_i+0xa8>
2010635c:	02d00713          	li	a4,45
20106360:	40f007b3          	neg	a5,a5
20106364:	04e401a3          	sb	a4,67(s0)
20106368:	ffffe617          	auipc	a2,0xffffe
2010636c:	0b860613          	add	a2,a2,184 # 20104420 <input_data_9+0xa4>
20106370:	4829                	li	a6,10
20106372:	a089                	j	201063b4 <_printf_i+0xf4>
20106374:	0407f613          	and	a2,a5,64
20106378:	411c                	lw	a5,0(a0)
2010637a:	c30c                	sw	a1,0(a4)
2010637c:	de71                	beqz	a2,20106358 <_printf_i+0x98>
2010637e:	07c2                	sll	a5,a5,0x10
20106380:	87c1                	sra	a5,a5,0x10
20106382:	bfd9                	j	20106358 <_printf_i+0x98>
20106384:	418c                	lw	a1,0(a1)
20106386:	4310                	lw	a2,0(a4)
20106388:	0805f513          	and	a0,a1,128
2010638c:	421c                	lw	a5,0(a2)
2010638e:	0611                	add	a2,a2,4
20106390:	e511                	bnez	a0,2010639c <_printf_i+0xdc>
20106392:	0405f593          	and	a1,a1,64
20106396:	c199                	beqz	a1,2010639c <_printf_i+0xdc>
20106398:	07c2                	sll	a5,a5,0x10
2010639a:	83c1                	srl	a5,a5,0x10
2010639c:	c310                	sw	a2,0(a4)
2010639e:	06f00713          	li	a4,111
201063a2:	ffffe617          	auipc	a2,0xffffe
201063a6:	07e60613          	add	a2,a2,126 # 20104420 <input_data_9+0xa4>
201063aa:	0ce81c63          	bne	a6,a4,20106482 <_printf_i+0x1c2>
201063ae:	4821                	li	a6,8
201063b0:	040401a3          	sb	zero,67(s0)
201063b4:	4058                	lw	a4,4(s0)
201063b6:	c418                	sw	a4,8(s0)
201063b8:	00074863          	bltz	a4,201063c8 <_printf_i+0x108>
201063bc:	400c                	lw	a1,0(s0)
201063be:	8f5d                	or	a4,a4,a5
201063c0:	8ab6                	mv	s5,a3
201063c2:	99ed                	and	a1,a1,-5
201063c4:	c00c                	sw	a1,0(s0)
201063c6:	cf19                	beqz	a4,201063e4 <_printf_i+0x124>
201063c8:	8ab6                	mv	s5,a3
201063ca:	0307f733          	remu	a4,a5,a6
201063ce:	1afd                	add	s5,s5,-1
201063d0:	9732                	add	a4,a4,a2
201063d2:	00074703          	lbu	a4,0(a4)
201063d6:	00ea8023          	sb	a4,0(s5)
201063da:	873e                	mv	a4,a5
201063dc:	0307d7b3          	divu	a5,a5,a6
201063e0:	ff0775e3          	bgeu	a4,a6,201063ca <_printf_i+0x10a>
201063e4:	47a1                	li	a5,8
201063e6:	00f81e63          	bne	a6,a5,20106402 <_printf_i+0x142>
201063ea:	401c                	lw	a5,0(s0)
201063ec:	8b85                	and	a5,a5,1
201063ee:	cb91                	beqz	a5,20106402 <_printf_i+0x142>
201063f0:	4058                	lw	a4,4(s0)
201063f2:	481c                	lw	a5,16(s0)
201063f4:	00e7c763          	blt	a5,a4,20106402 <_printf_i+0x142>
201063f8:	03000793          	li	a5,48
201063fc:	fefa8fa3          	sb	a5,-1(s5)
20106400:	1afd                	add	s5,s5,-1
20106402:	415686b3          	sub	a3,a3,s5
20106406:	c814                	sw	a3,16(s0)
20106408:	874e                	mv	a4,s3
2010640a:	86ca                	mv	a3,s2
2010640c:	0070                	add	a2,sp,12
2010640e:	85a2                	mv	a1,s0
20106410:	8526                	mv	a0,s1
20106412:	3b79                	jal	201061b0 <_printf_common>
20106414:	5a7d                	li	s4,-1
20106416:	0d451363          	bne	a0,s4,201064dc <_printf_i+0x21c>
2010641a:	557d                	li	a0,-1
2010641c:	50b2                	lw	ra,44(sp)
2010641e:	5422                	lw	s0,40(sp)
20106420:	5492                	lw	s1,36(sp)
20106422:	5902                	lw	s2,32(sp)
20106424:	49f2                	lw	s3,28(sp)
20106426:	4a62                	lw	s4,24(sp)
20106428:	4ad2                	lw	s5,20(sp)
2010642a:	4b42                	lw	s6,16(sp)
2010642c:	6145                	add	sp,sp,48
2010642e:	8082                	ret
20106430:	419c                	lw	a5,0(a1)
20106432:	0207e793          	or	a5,a5,32
20106436:	c19c                	sw	a5,0(a1)
20106438:	07800813          	li	a6,120
2010643c:	ffffe617          	auipc	a2,0xffffe
20106440:	ff860613          	add	a2,a2,-8 # 20104434 <input_data_9+0xb8>
20106444:	050402a3          	sb	a6,69(s0)
20106448:	400c                	lw	a1,0(s0)
2010644a:	4308                	lw	a0,0(a4)
2010644c:	0805f813          	and	a6,a1,128
20106450:	411c                	lw	a5,0(a0)
20106452:	0511                	add	a0,a0,4
20106454:	00081863          	bnez	a6,20106464 <_printf_i+0x1a4>
20106458:	0405f813          	and	a6,a1,64
2010645c:	00080463          	beqz	a6,20106464 <_printf_i+0x1a4>
20106460:	07c2                	sll	a5,a5,0x10
20106462:	83c1                	srl	a5,a5,0x10
20106464:	c308                	sw	a0,0(a4)
20106466:	0015f713          	and	a4,a1,1
2010646a:	c701                	beqz	a4,20106472 <_printf_i+0x1b2>
2010646c:	0205e593          	or	a1,a1,32
20106470:	c00c                	sw	a1,0(s0)
20106472:	c399                	beqz	a5,20106478 <_printf_i+0x1b8>
20106474:	4841                	li	a6,16
20106476:	bf2d                	j	201063b0 <_printf_i+0xf0>
20106478:	4018                	lw	a4,0(s0)
2010647a:	fdf77713          	and	a4,a4,-33
2010647e:	c018                	sw	a4,0(s0)
20106480:	bfd5                	j	20106474 <_printf_i+0x1b4>
20106482:	4829                	li	a6,10
20106484:	b735                	j	201063b0 <_printf_i+0xf0>
20106486:	4190                	lw	a2,0(a1)
20106488:	431c                	lw	a5,0(a4)
2010648a:	49cc                	lw	a1,20(a1)
2010648c:	08067813          	and	a6,a2,128
20106490:	00478513          	add	a0,a5,4
20106494:	00080663          	beqz	a6,201064a0 <_printf_i+0x1e0>
20106498:	c308                	sw	a0,0(a4)
2010649a:	439c                	lw	a5,0(a5)
2010649c:	c38c                	sw	a1,0(a5)
2010649e:	a801                	j	201064ae <_printf_i+0x1ee>
201064a0:	c308                	sw	a0,0(a4)
201064a2:	04067613          	and	a2,a2,64
201064a6:	439c                	lw	a5,0(a5)
201064a8:	da75                	beqz	a2,2010649c <_printf_i+0x1dc>
201064aa:	00b79023          	sh	a1,0(a5)
201064ae:	00042823          	sw	zero,16(s0)
201064b2:	8ab6                	mv	s5,a3
201064b4:	bf91                	j	20106408 <_printf_i+0x148>
201064b6:	431c                	lw	a5,0(a4)
201064b8:	41d0                	lw	a2,4(a1)
201064ba:	4581                	li	a1,0
201064bc:	00478693          	add	a3,a5,4
201064c0:	c314                	sw	a3,0(a4)
201064c2:	0007aa83          	lw	s5,0(a5)
201064c6:	8556                	mv	a0,s5
201064c8:	23b1                	jal	20106a14 <memchr>
201064ca:	c501                	beqz	a0,201064d2 <_printf_i+0x212>
201064cc:	41550533          	sub	a0,a0,s5
201064d0:	c048                	sw	a0,4(s0)
201064d2:	405c                	lw	a5,4(s0)
201064d4:	c81c                	sw	a5,16(s0)
201064d6:	040401a3          	sb	zero,67(s0)
201064da:	b73d                	j	20106408 <_printf_i+0x148>
201064dc:	4814                	lw	a3,16(s0)
201064de:	8656                	mv	a2,s5
201064e0:	85ca                	mv	a1,s2
201064e2:	8526                	mv	a0,s1
201064e4:	9982                	jalr	s3
201064e6:	f3450ae3          	beq	a0,s4,2010641a <_printf_i+0x15a>
201064ea:	401c                	lw	a5,0(s0)
201064ec:	8b89                	and	a5,a5,2
201064ee:	e78d                	bnez	a5,20106518 <_printf_i+0x258>
201064f0:	47b2                	lw	a5,12(sp)
201064f2:	4448                	lw	a0,12(s0)
201064f4:	f2f554e3          	bge	a0,a5,2010641c <_printf_i+0x15c>
201064f8:	853e                	mv	a0,a5
201064fa:	b70d                	j	2010641c <_printf_i+0x15c>
201064fc:	4685                	li	a3,1
201064fe:	8656                	mv	a2,s5
20106500:	85ca                	mv	a1,s2
20106502:	8526                	mv	a0,s1
20106504:	9982                	jalr	s3
20106506:	f1650ae3          	beq	a0,s6,2010641a <_printf_i+0x15a>
2010650a:	0a05                	add	s4,s4,1
2010650c:	445c                	lw	a5,12(s0)
2010650e:	4732                	lw	a4,12(sp)
20106510:	8f99                	sub	a5,a5,a4
20106512:	fefa45e3          	blt	s4,a5,201064fc <_printf_i+0x23c>
20106516:	bfe9                	j	201064f0 <_printf_i+0x230>
20106518:	4a01                	li	s4,0
2010651a:	01940a93          	add	s5,s0,25
2010651e:	5b7d                	li	s6,-1
20106520:	b7f5                	j	2010650c <_printf_i+0x24c>

20106522 <__sflush_r>:
__sflush_r():
20106522:	00c59783          	lh	a5,12(a1)
20106526:	1101                	add	sp,sp,-32
20106528:	cc22                	sw	s0,24(sp)
2010652a:	ca26                	sw	s1,20(sp)
2010652c:	ce06                	sw	ra,28(sp)
2010652e:	c84a                	sw	s2,16(sp)
20106530:	c64e                	sw	s3,12(sp)
20106532:	0087f713          	and	a4,a5,8
20106536:	84aa                	mv	s1,a0
20106538:	842e                	mv	s0,a1
2010653a:	e779                	bnez	a4,20106608 <__sflush_r+0xe6>
2010653c:	41d8                	lw	a4,4(a1)
2010653e:	00e04563          	bgtz	a4,20106548 <__sflush_r+0x26>
20106542:	41b8                	lw	a4,64(a1)
20106544:	0ae05b63          	blez	a4,201065fa <__sflush_r+0xd8>
20106548:	5458                	lw	a4,44(s0)
2010654a:	cb45                	beqz	a4,201065fa <__sflush_r+0xd8>
2010654c:	0004a903          	lw	s2,0(s1)
20106550:	01379693          	sll	a3,a5,0x13
20106554:	0004a023          	sw	zero,0(s1)
20106558:	500c                	lw	a1,32(s0)
2010655a:	0606de63          	bgez	a3,201065d6 <__sflush_r+0xb4>
2010655e:	4870                	lw	a2,84(s0)
20106560:	00c45783          	lhu	a5,12(s0)
20106564:	8b91                	and	a5,a5,4
20106566:	c799                	beqz	a5,20106574 <__sflush_r+0x52>
20106568:	405c                	lw	a5,4(s0)
2010656a:	8e1d                	sub	a2,a2,a5
2010656c:	585c                	lw	a5,52(s0)
2010656e:	c399                	beqz	a5,20106574 <__sflush_r+0x52>
20106570:	403c                	lw	a5,64(s0)
20106572:	8e1d                	sub	a2,a2,a5
20106574:	545c                	lw	a5,44(s0)
20106576:	500c                	lw	a1,32(s0)
20106578:	4681                	li	a3,0
2010657a:	8526                	mv	a0,s1
2010657c:	9782                	jalr	a5
2010657e:	577d                	li	a4,-1
20106580:	00c45783          	lhu	a5,12(s0)
20106584:	00e51d63          	bne	a0,a4,2010659e <__sflush_r+0x7c>
20106588:	4094                	lw	a3,0(s1)
2010658a:	4775                	li	a4,29
2010658c:	06d76963          	bltu	a4,a3,201065fe <__sflush_r+0xdc>
20106590:	20400737          	lui	a4,0x20400
20106594:	0705                	add	a4,a4,1 # 20400001 <metal_segment_data_source_start+0x2f3bc1>
20106596:	00d75733          	srl	a4,a4,a3
2010659a:	8b05                	and	a4,a4,1
2010659c:	c32d                	beqz	a4,201065fe <__sflush_r+0xdc>
2010659e:	4818                	lw	a4,16(s0)
201065a0:	00042223          	sw	zero,4(s0)
201065a4:	c018                	sw	a4,0(s0)
201065a6:	01379713          	sll	a4,a5,0x13
201065aa:	00075863          	bgez	a4,201065ba <__sflush_r+0x98>
201065ae:	57fd                	li	a5,-1
201065b0:	00f51463          	bne	a0,a5,201065b8 <__sflush_r+0x96>
201065b4:	409c                	lw	a5,0(s1)
201065b6:	e391                	bnez	a5,201065ba <__sflush_r+0x98>
201065b8:	c868                	sw	a0,84(s0)
201065ba:	584c                	lw	a1,52(s0)
201065bc:	0124a023          	sw	s2,0(s1)
201065c0:	cd8d                	beqz	a1,201065fa <__sflush_r+0xd8>
201065c2:	04440793          	add	a5,s0,68
201065c6:	00f58563          	beq	a1,a5,201065d0 <__sflush_r+0xae>
201065ca:	8526                	mv	a0,s1
201065cc:	eecff0ef          	jal	20105cb8 <_free_r>
201065d0:	02042a23          	sw	zero,52(s0)
201065d4:	a01d                	j	201065fa <__sflush_r+0xd8>
201065d6:	4601                	li	a2,0
201065d8:	4685                	li	a3,1
201065da:	8526                	mv	a0,s1
201065dc:	9702                	jalr	a4
201065de:	57fd                	li	a5,-1
201065e0:	862a                	mv	a2,a0
201065e2:	f6f51fe3          	bne	a0,a5,20106560 <__sflush_r+0x3e>
201065e6:	409c                	lw	a5,0(s1)
201065e8:	dfa5                	beqz	a5,20106560 <__sflush_r+0x3e>
201065ea:	4775                	li	a4,29
201065ec:	00e78563          	beq	a5,a4,201065f6 <__sflush_r+0xd4>
201065f0:	4759                	li	a4,22
201065f2:	04e79463          	bne	a5,a4,2010663a <__sflush_r+0x118>
201065f6:	0124a023          	sw	s2,0(s1)
201065fa:	4501                	li	a0,0
201065fc:	a0b1                	j	20106648 <__sflush_r+0x126>
201065fe:	0407e793          	or	a5,a5,64
20106602:	07c2                	sll	a5,a5,0x10
20106604:	87c1                	sra	a5,a5,0x10
20106606:	a835                	j	20106642 <__sflush_r+0x120>
20106608:	0105a983          	lw	s3,16(a1)
2010660c:	fe0987e3          	beqz	s3,201065fa <__sflush_r+0xd8>
20106610:	0005a903          	lw	s2,0(a1)
20106614:	8b8d                	and	a5,a5,3
20106616:	0135a023          	sw	s3,0(a1)
2010661a:	41390933          	sub	s2,s2,s3
2010661e:	4701                	li	a4,0
20106620:	e391                	bnez	a5,20106624 <__sflush_r+0x102>
20106622:	49d8                	lw	a4,20(a1)
20106624:	c418                	sw	a4,8(s0)
20106626:	fd205ae3          	blez	s2,201065fa <__sflush_r+0xd8>
2010662a:	541c                	lw	a5,40(s0)
2010662c:	500c                	lw	a1,32(s0)
2010662e:	86ca                	mv	a3,s2
20106630:	864e                	mv	a2,s3
20106632:	8526                	mv	a0,s1
20106634:	9782                	jalr	a5
20106636:	02a04063          	bgtz	a0,20106656 <__sflush_r+0x134>
2010663a:	00c41783          	lh	a5,12(s0)
2010663e:	0407e793          	or	a5,a5,64
20106642:	00f41623          	sh	a5,12(s0)
20106646:	557d                	li	a0,-1
20106648:	40f2                	lw	ra,28(sp)
2010664a:	4462                	lw	s0,24(sp)
2010664c:	44d2                	lw	s1,20(sp)
2010664e:	4942                	lw	s2,16(sp)
20106650:	49b2                	lw	s3,12(sp)
20106652:	6105                	add	sp,sp,32
20106654:	8082                	ret
20106656:	99aa                	add	s3,s3,a0
20106658:	40a90933          	sub	s2,s2,a0
2010665c:	b7e9                	j	20106626 <__sflush_r+0x104>

2010665e <_fflush_r>:
_fflush_r():
2010665e:	499c                	lw	a5,16(a1)
20106660:	cb85                	beqz	a5,20106690 <_fflush_r+0x32>
20106662:	1101                	add	sp,sp,-32
20106664:	cc22                	sw	s0,24(sp)
20106666:	ce06                	sw	ra,28(sp)
20106668:	842a                	mv	s0,a0
2010666a:	c511                	beqz	a0,20106676 <_fflush_r+0x18>
2010666c:	511c                	lw	a5,32(a0)
2010666e:	e781                	bnez	a5,20106676 <_fflush_r+0x18>
20106670:	c62e                	sw	a1,12(sp)
20106672:	2a29                	jal	2010678c <__sinit>
20106674:	45b2                	lw	a1,12(sp)
20106676:	00c59783          	lh	a5,12(a1)
2010667a:	c791                	beqz	a5,20106686 <_fflush_r+0x28>
2010667c:	8522                	mv	a0,s0
2010667e:	4462                	lw	s0,24(sp)
20106680:	40f2                	lw	ra,28(sp)
20106682:	6105                	add	sp,sp,32
20106684:	bd79                	j	20106522 <__sflush_r>
20106686:	40f2                	lw	ra,28(sp)
20106688:	4462                	lw	s0,24(sp)
2010668a:	4501                	li	a0,0
2010668c:	6105                	add	sp,sp,32
2010668e:	8082                	ret
20106690:	4501                	li	a0,0
20106692:	8082                	ret

20106694 <std>:
std():
20106694:	1141                	add	sp,sp,-16
20106696:	c422                	sw	s0,8(sp)
20106698:	c606                	sw	ra,12(sp)
2010669a:	842a                	mv	s0,a0
2010669c:	00b51623          	sh	a1,12(a0)
201066a0:	00c51723          	sh	a2,14(a0)
201066a4:	00052023          	sw	zero,0(a0)
201066a8:	00052223          	sw	zero,4(a0)
201066ac:	00052423          	sw	zero,8(a0)
201066b0:	06052223          	sw	zero,100(a0)
201066b4:	00052823          	sw	zero,16(a0)
201066b8:	00052a23          	sw	zero,20(a0)
201066bc:	00052c23          	sw	zero,24(a0)
201066c0:	4621                	li	a2,8
201066c2:	4581                	li	a1,0
201066c4:	05c50513          	add	a0,a0,92
201066c8:	d48ff0ef          	jal	20105c10 <memset>
201066cc:	00000797          	auipc	a5,0x0
201066d0:	28e78793          	add	a5,a5,654 # 2010695a <__sread>
201066d4:	d05c                	sw	a5,36(s0)
201066d6:	00000797          	auipc	a5,0x0
201066da:	2b478793          	add	a5,a5,692 # 2010698a <__swrite>
201066de:	d41c                	sw	a5,40(s0)
201066e0:	00000797          	auipc	a5,0x0
201066e4:	2f878793          	add	a5,a5,760 # 201069d8 <__sseek>
201066e8:	d45c                	sw	a5,44(s0)
201066ea:	00000797          	auipc	a5,0x0
201066ee:	32478793          	add	a5,a5,804 # 20106a0e <__sclose>
201066f2:	40b2                	lw	ra,12(sp)
201066f4:	d000                	sw	s0,32(s0)
201066f6:	d81c                	sw	a5,48(s0)
201066f8:	4422                	lw	s0,8(sp)
201066fa:	0141                	add	sp,sp,16
201066fc:	8082                	ret

201066fe <stdio_exit_handler>:
stdio_exit_handler():
201066fe:	5fefa617          	auipc	a2,0x5fefa
20106702:	94e60613          	add	a2,a2,-1714 # 8000004c <__sglue>
20106706:	00000597          	auipc	a1,0x0
2010670a:	f5858593          	add	a1,a1,-168 # 2010665e <_fflush_r>
2010670e:	5fefa517          	auipc	a0,0x5fefa
20106712:	8f250513          	add	a0,a0,-1806 # 80000000 <_impure_data>
20106716:	a849                	j	201067a8 <_fwalk_sglue>

20106718 <cleanup_stdio>:
cleanup_stdio():
20106718:	414c                	lw	a1,4(a0)
2010671a:	1141                	add	sp,sp,-16
2010671c:	c422                	sw	s0,8(sp)
2010671e:	c606                	sw	ra,12(sp)
20106720:	aec18793          	add	a5,gp,-1300 # 80000d5c <__sf>
20106724:	842a                	mv	s0,a0
20106726:	00f58363          	beq	a1,a5,2010672c <cleanup_stdio+0x14>
2010672a:	3f15                	jal	2010665e <_fflush_r>
2010672c:	440c                	lw	a1,8(s0)
2010672e:	b5418793          	add	a5,gp,-1196 # 80000dc4 <__sf+0x68>
20106732:	00f58463          	beq	a1,a5,2010673a <cleanup_stdio+0x22>
20106736:	8522                	mv	a0,s0
20106738:	371d                	jal	2010665e <_fflush_r>
2010673a:	444c                	lw	a1,12(s0)
2010673c:	bbc18793          	add	a5,gp,-1092 # 80000e2c <__sf+0xd0>
20106740:	00f58763          	beq	a1,a5,2010674e <cleanup_stdio+0x36>
20106744:	8522                	mv	a0,s0
20106746:	4422                	lw	s0,8(sp)
20106748:	40b2                	lw	ra,12(sp)
2010674a:	0141                	add	sp,sp,16
2010674c:	bf09                	j	2010665e <_fflush_r>
2010674e:	40b2                	lw	ra,12(sp)
20106750:	4422                	lw	s0,8(sp)
20106752:	0141                	add	sp,sp,16
20106754:	8082                	ret

20106756 <global_stdio_init.part.0>:
global_stdio_init.part.0():
20106756:	1141                	add	sp,sp,-16
20106758:	00000797          	auipc	a5,0x0
2010675c:	fa678793          	add	a5,a5,-90 # 201066fe <stdio_exit_handler>
20106760:	4601                	li	a2,0
20106762:	4591                	li	a1,4
20106764:	aec18513          	add	a0,gp,-1300 # 80000d5c <__sf>
20106768:	c606                	sw	ra,12(sp)
2010676a:	5fefa717          	auipc	a4,0x5fefa
2010676e:	32f72b23          	sw	a5,822(a4) # 80000aa0 <__stdio_exit_handler>
20106772:	370d                	jal	20106694 <std>
20106774:	4605                	li	a2,1
20106776:	45a5                	li	a1,9
20106778:	b5418513          	add	a0,gp,-1196 # 80000dc4 <__sf+0x68>
2010677c:	3f21                	jal	20106694 <std>
2010677e:	40b2                	lw	ra,12(sp)
20106780:	4609                	li	a2,2
20106782:	45c9                	li	a1,18
20106784:	bbc18513          	add	a0,gp,-1092 # 80000e2c <__sf+0xd0>
20106788:	0141                	add	sp,sp,16
2010678a:	b729                	j	20106694 <std>

2010678c <__sinit>:
__sinit():
2010678c:	511c                	lw	a5,32(a0)
2010678e:	ef81                	bnez	a5,201067a6 <__sinit+0x1a>
20106790:	00000797          	auipc	a5,0x0
20106794:	f8878793          	add	a5,a5,-120 # 20106718 <cleanup_stdio>
20106798:	d11c                	sw	a5,32(a0)
2010679a:	5fefa797          	auipc	a5,0x5fefa
2010679e:	3067a783          	lw	a5,774(a5) # 80000aa0 <__stdio_exit_handler>
201067a2:	e391                	bnez	a5,201067a6 <__sinit+0x1a>
201067a4:	bf4d                	j	20106756 <global_stdio_init.part.0>
201067a6:	8082                	ret

201067a8 <_fwalk_sglue>:
_fwalk_sglue():
201067a8:	7179                	add	sp,sp,-48
201067aa:	d422                	sw	s0,40(sp)
201067ac:	d04a                	sw	s2,32(sp)
201067ae:	ce4e                	sw	s3,28(sp)
201067b0:	cc52                	sw	s4,24(sp)
201067b2:	c85a                	sw	s6,16(sp)
201067b4:	c65e                	sw	s7,12(sp)
201067b6:	d606                	sw	ra,44(sp)
201067b8:	d226                	sw	s1,36(sp)
201067ba:	ca56                	sw	s5,20(sp)
201067bc:	89aa                	mv	s3,a0
201067be:	8a2e                	mv	s4,a1
201067c0:	8432                	mv	s0,a2
201067c2:	4901                	li	s2,0
201067c4:	4b05                	li	s6,1
201067c6:	5bfd                	li	s7,-1
201067c8:	4404                	lw	s1,8(s0)
201067ca:	00442a83          	lw	s5,4(s0)
201067ce:	1afd                	add	s5,s5,-1
201067d0:	020ad063          	bgez	s5,201067f0 <_fwalk_sglue+0x48>
201067d4:	4000                	lw	s0,0(s0)
201067d6:	f86d                	bnez	s0,201067c8 <_fwalk_sglue+0x20>
201067d8:	50b2                	lw	ra,44(sp)
201067da:	5422                	lw	s0,40(sp)
201067dc:	5492                	lw	s1,36(sp)
201067de:	49f2                	lw	s3,28(sp)
201067e0:	4a62                	lw	s4,24(sp)
201067e2:	4ad2                	lw	s5,20(sp)
201067e4:	4b42                	lw	s6,16(sp)
201067e6:	4bb2                	lw	s7,12(sp)
201067e8:	854a                	mv	a0,s2
201067ea:	5902                	lw	s2,32(sp)
201067ec:	6145                	add	sp,sp,48
201067ee:	8082                	ret
201067f0:	00c4d783          	lhu	a5,12(s1)
201067f4:	00fb7b63          	bgeu	s6,a5,2010680a <_fwalk_sglue+0x62>
201067f8:	00e49783          	lh	a5,14(s1)
201067fc:	01778763          	beq	a5,s7,2010680a <_fwalk_sglue+0x62>
20106800:	85a6                	mv	a1,s1
20106802:	854e                	mv	a0,s3
20106804:	9a02                	jalr	s4
20106806:	00a96933          	or	s2,s2,a0
2010680a:	06848493          	add	s1,s1,104
2010680e:	b7c1                	j	201067ce <_fwalk_sglue+0x26>

20106810 <__swhatbuf_r>:
__swhatbuf_r():
20106810:	7159                	add	sp,sp,-112
20106812:	d4a2                	sw	s0,104(sp)
20106814:	842e                	mv	s0,a1
20106816:	00e59583          	lh	a1,14(a1)
2010681a:	d2a6                	sw	s1,100(sp)
2010681c:	d0ca                	sw	s2,96(sp)
2010681e:	d686                	sw	ra,108(sp)
20106820:	84b2                	mv	s1,a2
20106822:	8936                	mv	s2,a3
20106824:	0205d363          	bgez	a1,2010684a <__swhatbuf_r+0x3a>
20106828:	00c45783          	lhu	a5,12(s0)
2010682c:	0807f793          	and	a5,a5,128
20106830:	eb8d                	bnez	a5,20106862 <__swhatbuf_r+0x52>
20106832:	40000713          	li	a4,1024
20106836:	50b6                	lw	ra,108(sp)
20106838:	5426                	lw	s0,104(sp)
2010683a:	00f92023          	sw	a5,0(s2)
2010683e:	c098                	sw	a4,0(s1)
20106840:	5906                	lw	s2,96(sp)
20106842:	5496                	lw	s1,100(sp)
20106844:	4501                	li	a0,0
20106846:	6165                	add	sp,sp,112
20106848:	8082                	ret
2010684a:	0030                	add	a2,sp,8
2010684c:	2c09                	jal	20106a5e <_fstat_r>
2010684e:	fc054de3          	bltz	a0,20106828 <__swhatbuf_r+0x18>
20106852:	4732                	lw	a4,12(sp)
20106854:	67bd                	lui	a5,0xf
20106856:	8ff9                	and	a5,a5,a4
20106858:	7779                	lui	a4,0xffffe
2010685a:	97ba                	add	a5,a5,a4
2010685c:	0017b793          	seqz	a5,a5
20106860:	bfc9                	j	20106832 <__swhatbuf_r+0x22>
20106862:	4781                	li	a5,0
20106864:	04000713          	li	a4,64
20106868:	b7f9                	j	20106836 <__swhatbuf_r+0x26>

2010686a <__smakebuf_r>:
__smakebuf_r():
2010686a:	00c5d783          	lhu	a5,12(a1)
2010686e:	7179                	add	sp,sp,-48
20106870:	d422                	sw	s0,40(sp)
20106872:	d606                	sw	ra,44(sp)
20106874:	d226                	sw	s1,36(sp)
20106876:	d04a                	sw	s2,32(sp)
20106878:	ce4e                	sw	s3,28(sp)
2010687a:	8b89                	and	a5,a5,2
2010687c:	842e                	mv	s0,a1
2010687e:	cf91                	beqz	a5,2010689a <__smakebuf_r+0x30>
20106880:	04740793          	add	a5,s0,71
20106884:	c01c                	sw	a5,0(s0)
20106886:	c81c                	sw	a5,16(s0)
20106888:	4785                	li	a5,1
2010688a:	c85c                	sw	a5,20(s0)
2010688c:	50b2                	lw	ra,44(sp)
2010688e:	5422                	lw	s0,40(sp)
20106890:	5492                	lw	s1,36(sp)
20106892:	5902                	lw	s2,32(sp)
20106894:	49f2                	lw	s3,28(sp)
20106896:	6145                	add	sp,sp,48
20106898:	8082                	ret
2010689a:	0074                	add	a3,sp,12
2010689c:	0030                	add	a2,sp,8
2010689e:	84aa                	mv	s1,a0
201068a0:	3f85                	jal	20106810 <__swhatbuf_r>
201068a2:	49a2                	lw	s3,8(sp)
201068a4:	892a                	mv	s2,a0
201068a6:	8526                	mv	a0,s1
201068a8:	85ce                	mv	a1,s3
201068aa:	d0eff0ef          	jal	20105db8 <_malloc_r>
201068ae:	ed01                	bnez	a0,201068c6 <__smakebuf_r+0x5c>
201068b0:	00c41783          	lh	a5,12(s0)
201068b4:	2007f713          	and	a4,a5,512
201068b8:	fb71                	bnez	a4,2010688c <__smakebuf_r+0x22>
201068ba:	9bf1                	and	a5,a5,-4
201068bc:	0027e793          	or	a5,a5,2
201068c0:	00f41623          	sh	a5,12(s0)
201068c4:	bf75                	j	20106880 <__smakebuf_r+0x16>
201068c6:	00c45783          	lhu	a5,12(s0)
201068ca:	c008                	sw	a0,0(s0)
201068cc:	c808                	sw	a0,16(s0)
201068ce:	0807e793          	or	a5,a5,128
201068d2:	00f41623          	sh	a5,12(s0)
201068d6:	47b2                	lw	a5,12(sp)
201068d8:	01342a23          	sw	s3,20(s0)
201068dc:	cf89                	beqz	a5,201068f6 <__smakebuf_r+0x8c>
201068de:	00e41583          	lh	a1,14(s0)
201068e2:	8526                	mv	a0,s1
201068e4:	2275                	jal	20106a90 <_isatty_r>
201068e6:	c901                	beqz	a0,201068f6 <__smakebuf_r+0x8c>
201068e8:	00c45783          	lhu	a5,12(s0)
201068ec:	9bf1                	and	a5,a5,-4
201068ee:	0017e793          	or	a5,a5,1
201068f2:	00f41623          	sh	a5,12(s0)
201068f6:	00c45783          	lhu	a5,12(s0)
201068fa:	0127e533          	or	a0,a5,s2
201068fe:	00a41623          	sh	a0,12(s0)
20106902:	b769                	j	2010688c <__smakebuf_r+0x22>

20106904 <_putc_r>:
_putc_r():
20106904:	1101                	add	sp,sp,-32
20106906:	cc22                	sw	s0,24(sp)
20106908:	ce06                	sw	ra,28(sp)
2010690a:	842a                	mv	s0,a0
2010690c:	c901                	beqz	a0,2010691c <_putc_r+0x18>
2010690e:	511c                	lw	a5,32(a0)
20106910:	e791                	bnez	a5,2010691c <_putc_r+0x18>
20106912:	c632                	sw	a2,12(sp)
20106914:	c42e                	sw	a1,8(sp)
20106916:	3d9d                	jal	2010678c <__sinit>
20106918:	4632                	lw	a2,12(sp)
2010691a:	45a2                	lw	a1,8(sp)
2010691c:	461c                	lw	a5,8(a2)
2010691e:	17fd                	add	a5,a5,-1 # efff <__heap_size+0xe7ff>
20106920:	c61c                	sw	a5,8(a2)
20106922:	0207d063          	bgez	a5,20106942 <_putc_r+0x3e>
20106926:	4e18                	lw	a4,24(a2)
20106928:	00e7c763          	blt	a5,a4,20106936 <_putc_r+0x32>
2010692c:	0ff5f793          	zext.b	a5,a1
20106930:	4729                	li	a4,10
20106932:	00e79863          	bne	a5,a4,20106942 <_putc_r+0x3e>
20106936:	8522                	mv	a0,s0
20106938:	4462                	lw	s0,24(sp)
2010693a:	40f2                	lw	ra,28(sp)
2010693c:	6105                	add	sp,sp,32
2010693e:	96aff06f          	j	20105aa8 <__swbuf_r>
20106942:	421c                	lw	a5,0(a2)
20106944:	0ff5f513          	zext.b	a0,a1
20106948:	00178713          	add	a4,a5,1
2010694c:	c218                	sw	a4,0(a2)
2010694e:	00b78023          	sb	a1,0(a5)
20106952:	40f2                	lw	ra,28(sp)
20106954:	4462                	lw	s0,24(sp)
20106956:	6105                	add	sp,sp,32
20106958:	8082                	ret

2010695a <__sread>:
__sread():
2010695a:	1141                	add	sp,sp,-16
2010695c:	c422                	sw	s0,8(sp)
2010695e:	842e                	mv	s0,a1
20106960:	00e59583          	lh	a1,14(a1)
20106964:	c606                	sw	ra,12(sp)
20106966:	2279                	jal	20106af4 <_read_r>
20106968:	00054963          	bltz	a0,2010697a <__sread+0x20>
2010696c:	487c                	lw	a5,84(s0)
2010696e:	97aa                	add	a5,a5,a0
20106970:	c87c                	sw	a5,84(s0)
20106972:	40b2                	lw	ra,12(sp)
20106974:	4422                	lw	s0,8(sp)
20106976:	0141                	add	sp,sp,16
20106978:	8082                	ret
2010697a:	00c45783          	lhu	a5,12(s0)
2010697e:	777d                	lui	a4,0xfffff
20106980:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd4df>
20106982:	8ff9                	and	a5,a5,a4
20106984:	00f41623          	sh	a5,12(s0)
20106988:	b7ed                	j	20106972 <__sread+0x18>

2010698a <__swrite>:
__swrite():
2010698a:	00c5d783          	lhu	a5,12(a1)
2010698e:	1101                	add	sp,sp,-32
20106990:	cc22                	sw	s0,24(sp)
20106992:	ca26                	sw	s1,20(sp)
20106994:	c84a                	sw	s2,16(sp)
20106996:	c64e                	sw	s3,12(sp)
20106998:	ce06                	sw	ra,28(sp)
2010699a:	1007f793          	and	a5,a5,256
2010699e:	84aa                	mv	s1,a0
201069a0:	842e                	mv	s0,a1
201069a2:	8932                	mv	s2,a2
201069a4:	89b6                	mv	s3,a3
201069a6:	c791                	beqz	a5,201069b2 <__swrite+0x28>
201069a8:	00e59583          	lh	a1,14(a1)
201069ac:	4689                	li	a3,2
201069ae:	4601                	li	a2,0
201069b0:	2a01                	jal	20106ac0 <_lseek_r>
201069b2:	00c45783          	lhu	a5,12(s0)
201069b6:	777d                	lui	a4,0xfffff
201069b8:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd4df>
201069ba:	8ff9                	and	a5,a5,a4
201069bc:	00e41583          	lh	a1,14(s0)
201069c0:	00f41623          	sh	a5,12(s0)
201069c4:	4462                	lw	s0,24(sp)
201069c6:	40f2                	lw	ra,28(sp)
201069c8:	86ce                	mv	a3,s3
201069ca:	864a                	mv	a2,s2
201069cc:	49b2                	lw	s3,12(sp)
201069ce:	4942                	lw	s2,16(sp)
201069d0:	8526                	mv	a0,s1
201069d2:	44d2                	lw	s1,20(sp)
201069d4:	6105                	add	sp,sp,32
201069d6:	a249                	j	20106b58 <_write_r>

201069d8 <__sseek>:
__sseek():
201069d8:	1141                	add	sp,sp,-16
201069da:	c422                	sw	s0,8(sp)
201069dc:	842e                	mv	s0,a1
201069de:	00e59583          	lh	a1,14(a1)
201069e2:	c606                	sw	ra,12(sp)
201069e4:	28f1                	jal	20106ac0 <_lseek_r>
201069e6:	577d                	li	a4,-1
201069e8:	00c45783          	lhu	a5,12(s0)
201069ec:	00e51b63          	bne	a0,a4,20106a02 <__sseek+0x2a>
201069f0:	777d                	lui	a4,0xfffff
201069f2:	177d                	add	a4,a4,-1 # ffffefff <metal_segment_heap_target_end+0x7fffd4df>
201069f4:	8ff9                	and	a5,a5,a4
201069f6:	00f41623          	sh	a5,12(s0)
201069fa:	40b2                	lw	ra,12(sp)
201069fc:	4422                	lw	s0,8(sp)
201069fe:	0141                	add	sp,sp,16
20106a00:	8082                	ret
20106a02:	6705                	lui	a4,0x1
20106a04:	8fd9                	or	a5,a5,a4
20106a06:	00f41623          	sh	a5,12(s0)
20106a0a:	c868                	sw	a0,84(s0)
20106a0c:	b7fd                	j	201069fa <__sseek+0x22>

20106a0e <__sclose>:
__sclose():
20106a0e:	00e59583          	lh	a1,14(a1)
20106a12:	a831                	j	20106a2e <_close_r>

20106a14 <memchr>:
memchr():
20106a14:	0ff5f593          	zext.b	a1,a1
20106a18:	962a                	add	a2,a2,a0
20106a1a:	00c51463          	bne	a0,a2,20106a22 <memchr+0xe>
20106a1e:	4501                	li	a0,0
20106a20:	8082                	ret
20106a22:	00054783          	lbu	a5,0(a0)
20106a26:	feb78de3          	beq	a5,a1,20106a20 <memchr+0xc>
20106a2a:	0505                	add	a0,a0,1
20106a2c:	b7fd                	j	20106a1a <memchr+0x6>

20106a2e <_close_r>:
_close_r():
20106a2e:	1141                	add	sp,sp,-16
20106a30:	c422                	sw	s0,8(sp)
20106a32:	842a                	mv	s0,a0
20106a34:	852e                	mv	a0,a1
20106a36:	5fefa797          	auipc	a5,0x5fefa
20106a3a:	0607a723          	sw	zero,110(a5) # 80000aa4 <errno>
20106a3e:	c606                	sw	ra,12(sp)
20106a40:	067000ef          	jal	201072a6 <_close>
20106a44:	57fd                	li	a5,-1
20106a46:	00f51863          	bne	a0,a5,20106a56 <_close_r+0x28>
20106a4a:	5fefa797          	auipc	a5,0x5fefa
20106a4e:	05a7a783          	lw	a5,90(a5) # 80000aa4 <errno>
20106a52:	c391                	beqz	a5,20106a56 <_close_r+0x28>
20106a54:	c01c                	sw	a5,0(s0)
20106a56:	40b2                	lw	ra,12(sp)
20106a58:	4422                	lw	s0,8(sp)
20106a5a:	0141                	add	sp,sp,16
20106a5c:	8082                	ret

20106a5e <_fstat_r>:
_fstat_r():
20106a5e:	1141                	add	sp,sp,-16
20106a60:	c422                	sw	s0,8(sp)
20106a62:	842a                	mv	s0,a0
20106a64:	852e                	mv	a0,a1
20106a66:	85b2                	mv	a1,a2
20106a68:	5fefa797          	auipc	a5,0x5fefa
20106a6c:	0207ae23          	sw	zero,60(a5) # 80000aa4 <errno>
20106a70:	c606                	sw	ra,12(sp)
20106a72:	057000ef          	jal	201072c8 <_fstat>
20106a76:	57fd                	li	a5,-1
20106a78:	00f51863          	bne	a0,a5,20106a88 <_fstat_r+0x2a>
20106a7c:	5fefa797          	auipc	a5,0x5fefa
20106a80:	0287a783          	lw	a5,40(a5) # 80000aa4 <errno>
20106a84:	c391                	beqz	a5,20106a88 <_fstat_r+0x2a>
20106a86:	c01c                	sw	a5,0(s0)
20106a88:	40b2                	lw	ra,12(sp)
20106a8a:	4422                	lw	s0,8(sp)
20106a8c:	0141                	add	sp,sp,16
20106a8e:	8082                	ret

20106a90 <_isatty_r>:
_isatty_r():
20106a90:	1141                	add	sp,sp,-16
20106a92:	c422                	sw	s0,8(sp)
20106a94:	842a                	mv	s0,a0
20106a96:	852e                	mv	a0,a1
20106a98:	5fefa797          	auipc	a5,0x5fefa
20106a9c:	0007a623          	sw	zero,12(a5) # 80000aa4 <errno>
20106aa0:	c606                	sw	ra,12(sp)
20106aa2:	04d000ef          	jal	201072ee <_isatty>
20106aa6:	57fd                	li	a5,-1
20106aa8:	00f51863          	bne	a0,a5,20106ab8 <_isatty_r+0x28>
20106aac:	5fefa797          	auipc	a5,0x5fefa
20106ab0:	ff87a783          	lw	a5,-8(a5) # 80000aa4 <errno>
20106ab4:	c391                	beqz	a5,20106ab8 <_isatty_r+0x28>
20106ab6:	c01c                	sw	a5,0(s0)
20106ab8:	40b2                	lw	ra,12(sp)
20106aba:	4422                	lw	s0,8(sp)
20106abc:	0141                	add	sp,sp,16
20106abe:	8082                	ret

20106ac0 <_lseek_r>:
_lseek_r():
20106ac0:	1141                	add	sp,sp,-16
20106ac2:	c422                	sw	s0,8(sp)
20106ac4:	842a                	mv	s0,a0
20106ac6:	852e                	mv	a0,a1
20106ac8:	85b2                	mv	a1,a2
20106aca:	8636                	mv	a2,a3
20106acc:	5fefa797          	auipc	a5,0x5fefa
20106ad0:	fc07ac23          	sw	zero,-40(a5) # 80000aa4 <errno>
20106ad4:	c606                	sw	ra,12(sp)
20106ad6:	039000ef          	jal	2010730e <_lseek>
20106ada:	57fd                	li	a5,-1
20106adc:	00f51863          	bne	a0,a5,20106aec <_lseek_r+0x2c>
20106ae0:	5fefa797          	auipc	a5,0x5fefa
20106ae4:	fc47a783          	lw	a5,-60(a5) # 80000aa4 <errno>
20106ae8:	c391                	beqz	a5,20106aec <_lseek_r+0x2c>
20106aea:	c01c                	sw	a5,0(s0)
20106aec:	40b2                	lw	ra,12(sp)
20106aee:	4422                	lw	s0,8(sp)
20106af0:	0141                	add	sp,sp,16
20106af2:	8082                	ret

20106af4 <_read_r>:
_read_r():
20106af4:	1141                	add	sp,sp,-16
20106af6:	c422                	sw	s0,8(sp)
20106af8:	842a                	mv	s0,a0
20106afa:	852e                	mv	a0,a1
20106afc:	85b2                	mv	a1,a2
20106afe:	8636                	mv	a2,a3
20106b00:	5fefa797          	auipc	a5,0x5fefa
20106b04:	fa07a223          	sw	zero,-92(a5) # 80000aa4 <errno>
20106b08:	c606                	sw	ra,12(sp)
20106b0a:	02f000ef          	jal	20107338 <_read>
20106b0e:	57fd                	li	a5,-1
20106b10:	00f51863          	bne	a0,a5,20106b20 <_read_r+0x2c>
20106b14:	5fefa797          	auipc	a5,0x5fefa
20106b18:	f907a783          	lw	a5,-112(a5) # 80000aa4 <errno>
20106b1c:	c391                	beqz	a5,20106b20 <_read_r+0x2c>
20106b1e:	c01c                	sw	a5,0(s0)
20106b20:	40b2                	lw	ra,12(sp)
20106b22:	4422                	lw	s0,8(sp)
20106b24:	0141                	add	sp,sp,16
20106b26:	8082                	ret

20106b28 <_sbrk_r>:
_sbrk_r():
20106b28:	1141                	add	sp,sp,-16
20106b2a:	c422                	sw	s0,8(sp)
20106b2c:	842a                	mv	s0,a0
20106b2e:	852e                	mv	a0,a1
20106b30:	5fefa797          	auipc	a5,0x5fefa
20106b34:	f607aa23          	sw	zero,-140(a5) # 80000aa4 <errno>
20106b38:	c606                	sw	ra,12(sp)
20106b3a:	029000ef          	jal	20107362 <_sbrk>
20106b3e:	57fd                	li	a5,-1
20106b40:	00f51863          	bne	a0,a5,20106b50 <_sbrk_r+0x28>
20106b44:	5fefa797          	auipc	a5,0x5fefa
20106b48:	f607a783          	lw	a5,-160(a5) # 80000aa4 <errno>
20106b4c:	c391                	beqz	a5,20106b50 <_sbrk_r+0x28>
20106b4e:	c01c                	sw	a5,0(s0)
20106b50:	40b2                	lw	ra,12(sp)
20106b52:	4422                	lw	s0,8(sp)
20106b54:	0141                	add	sp,sp,16
20106b56:	8082                	ret

20106b58 <_write_r>:
_write_r():
20106b58:	1141                	add	sp,sp,-16
20106b5a:	c422                	sw	s0,8(sp)
20106b5c:	842a                	mv	s0,a0
20106b5e:	852e                	mv	a0,a1
20106b60:	85b2                	mv	a1,a2
20106b62:	8636                	mv	a2,a3
20106b64:	5fefa797          	auipc	a5,0x5fefa
20106b68:	f407a023          	sw	zero,-192(a5) # 80000aa4 <errno>
20106b6c:	c606                	sw	ra,12(sp)
20106b6e:	07f000ef          	jal	201073ec <_write>
20106b72:	57fd                	li	a5,-1
20106b74:	00f51863          	bne	a0,a5,20106b84 <_write_r+0x2c>
20106b78:	5fefa797          	auipc	a5,0x5fefa
20106b7c:	f2c7a783          	lw	a5,-212(a5) # 80000aa4 <errno>
20106b80:	c391                	beqz	a5,20106b84 <_write_r+0x2c>
20106b82:	c01c                	sw	a5,0(s0)
20106b84:	40b2                	lw	ra,12(sp)
20106b86:	4422                	lw	s0,8(sp)
20106b88:	0141                	add	sp,sp,16
20106b8a:	8082                	ret

20106b8c <__fixdfsi>:
__fixdfsi():
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:40
20106b8c:	0145d713          	srl	a4,a1,0x14
20106b90:	001006b7          	lui	a3,0x100
20106b94:	fff68793          	add	a5,a3,-1 # fffff <__heap_size+0xff7ff>
20106b98:	7ff77713          	and	a4,a4,2047
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41
20106b9c:	3fe00613          	li	a2,1022
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:40
20106ba0:	8fed                	and	a5,a5,a1
20106ba2:	81fd                	srl	a1,a1,0x1f
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41
20106ba4:	04e65463          	bge	a2,a4,20106bec <__fixdfsi+0x60>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 10)
20106ba8:	41d00613          	li	a2,1053
20106bac:	00e65763          	bge	a2,a4,20106bba <__fixdfsi+0x2e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 19)
20106bb0:	80000537          	lui	a0,0x80000
20106bb4:	157d                	add	a0,a0,-1 # 7fffffff <metal_segment_data_source_start+0x5fef3bbf>
20106bb6:	952e                	add	a0,a0,a1
20106bb8:	8082                	ret
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 13)
20106bba:	8fd5                	or	a5,a5,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 28)
20106bbc:	43300693          	li	a3,1075
20106bc0:	8e99                	sub	a3,a3,a4
20106bc2:	467d                	li	a2,31
20106bc4:	00d64d63          	blt	a2,a3,20106bde <__fixdfsi+0x52>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 37)
20106bc8:	bed70713          	add	a4,a4,-1043 # bed <__heap_size+0x3ed>
20106bcc:	00e797b3          	sll	a5,a5,a4
20106bd0:	00d55533          	srl	a0,a0,a3
20106bd4:	8d5d                	or	a0,a0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 44)
20106bd6:	cd81                	beqz	a1,20106bee <__fixdfsi+0x62>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 45)
20106bd8:	40a00533          	neg	a0,a0
20106bdc:	8082                	ret
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 42)
20106bde:	41300693          	li	a3,1043
20106be2:	40e68733          	sub	a4,a3,a4
20106be6:	00e7d533          	srl	a0,a5,a4
20106bea:	b7f5                	j	20106bd6 <__fixdfsi+0x4a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:41 (discriminator 1)
20106bec:	4501                	li	a0,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/fixdfsi.c:45
20106bee:	8082                	ret

20106bf0 <__divsf3>:
__divsf3():
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:34
20106bf0:	1101                	add	sp,sp,-32
20106bf2:	ca26                	sw	s1,20(sp)
20106bf4:	01755493          	srl	s1,a0,0x17
20106bf8:	c84a                	sw	s2,16(sp)
20106bfa:	c64e                	sw	s3,12(sp)
20106bfc:	c452                	sw	s4,8(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42
20106bfe:	00951993          	sll	s3,a0,0x9
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:34
20106c02:	ce06                	sw	ra,28(sp)
20106c04:	cc22                	sw	s0,24(sp)
20106c06:	c256                	sw	s5,4(sp)
20106c08:	0ff4f493          	zext.b	s1,s1
20106c0c:	8a2e                	mv	s4,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42
20106c0e:	0099d993          	srl	s3,s3,0x9
20106c12:	01f55913          	srl	s2,a0,0x1f
20106c16:	c4ad                	beqz	s1,20106c80 <__divsf3+0x90>
20106c18:	0ff00793          	li	a5,255
20106c1c:	06f48e63          	beq	s1,a5,20106c98 <__divsf3+0xa8>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 5)
20106c20:	098e                	sll	s3,s3,0x3
20106c22:	040007b7          	lui	a5,0x4000
20106c26:	00f9e9b3          	or	s3,s3,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 7)
20106c2a:	f8148493          	add	s1,s1,-127
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 27)
20106c2e:	4a81                	li	s5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43
20106c30:	017a5793          	srl	a5,s4,0x17
20106c34:	009a1413          	sll	s0,s4,0x9
20106c38:	0ff7f793          	zext.b	a5,a5
20106c3c:	8025                	srl	s0,s0,0x9
20106c3e:	01fa5a13          	srl	s4,s4,0x1f
20106c42:	c7ad                	beqz	a5,20106cac <__divsf3+0xbc>
20106c44:	0ff00713          	li	a4,255
20106c48:	06e78d63          	beq	a5,a4,20106cc2 <__divsf3+0xd2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 5)
20106c4c:	040e                	sll	s0,s0,0x3
20106c4e:	04000737          	lui	a4,0x4000
20106c52:	8c59                	or	s0,s0,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 7)
20106c54:	f8178793          	add	a5,a5,-127 # 3ffff81 <__heap_size+0x3fff781>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 27)
20106c58:	4701                	li	a4,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44
20106c5a:	8c9d                	sub	s1,s1,a5
20106c5c:	002a9793          	sll	a5,s5,0x2
20106c60:	8fd9                	or	a5,a5,a4
20106c62:	17fd                	add	a5,a5,-1
20106c64:	4639                	li	a2,14
20106c66:	014946b3          	xor	a3,s2,s4
20106c6a:	06f66563          	bltu	a2,a5,20106cd4 <__divsf3+0xe4>
20106c6e:	ffffe617          	auipc	a2,0xffffe
20106c72:	83260613          	add	a2,a2,-1998 # 201044a0 <input_data_9+0x124>
20106c76:	078a                	sll	a5,a5,0x2
20106c78:	97b2                	add	a5,a5,a2
20106c7a:	439c                	lw	a5,0(a5)
20106c7c:	97b2                	add	a5,a5,a2
20106c7e:	8782                	jr	a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 2)
20106c80:	02098363          	beqz	s3,20106ca6 <__divsf3+0xb6>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 15)
20106c84:	854e                	mv	a0,s3
20106c86:	2b1d                	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 21)
20106c88:	ffb50793          	add	a5,a0,-5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 27)
20106c8c:	f8a00493          	li	s1,-118
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 25)
20106c90:	00f999b3          	sll	s3,s3,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 27)
20106c94:	8c89                	sub	s1,s1,a0
20106c96:	bf61                	j	20106c2e <__divsf3+0x3e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42
20106c98:	0ff00493          	li	s1,255
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 29)
20106c9c:	4a89                	li	s5,2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 3)
20106c9e:	f80989e3          	beqz	s3,20106c30 <__divsf3+0x40>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 30)
20106ca2:	4a8d                	li	s5,3
20106ca4:	b771                	j	20106c30 <__divsf3+0x40>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42
20106ca6:	4481                	li	s1,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42 (discriminator 9)
20106ca8:	4a85                	li	s5,1
20106caa:	b759                	j	20106c30 <__divsf3+0x40>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 2)
20106cac:	c00d                	beqz	s0,20106cce <__divsf3+0xde>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 15)
20106cae:	8522                	mv	a0,s0
20106cb0:	2331                	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 21)
20106cb2:	ffb50793          	add	a5,a0,-5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 25)
20106cb6:	00f41433          	sll	s0,s0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 27)
20106cba:	f8a00793          	li	a5,-118
20106cbe:	8f89                	sub	a5,a5,a0
20106cc0:	bf61                	j	20106c58 <__divsf3+0x68>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43
20106cc2:	0ff00793          	li	a5,255
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 29)
20106cc6:	4709                	li	a4,2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 3)
20106cc8:	d849                	beqz	s0,20106c5a <__divsf3+0x6a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 30)
20106cca:	470d                	li	a4,3
20106ccc:	b779                	j	20106c5a <__divsf3+0x6a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43
20106cce:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43 (discriminator 9)
20106cd0:	4705                	li	a4,1
20106cd2:	b761                	j	20106c5a <__divsf3+0x6a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 2)
20106cd4:	00541613          	sll	a2,s0,0x5
20106cd8:	0c89fd63          	bgeu	s3,s0,20106db2 <__divsf3+0x1c2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 10)
20106cdc:	14fd                	add	s1,s1,-1
20106cde:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 13)
20106ce0:	01065593          	srl	a1,a2,0x10
20106ce4:	02b9d833          	divu	a6,s3,a1
20106ce8:	6741                	lui	a4,0x10
20106cea:	1701                	add	a4,a4,-32 # ffe0 <__heap_size+0xf7e0>
20106cec:	8f71                	and	a4,a4,a2
20106cee:	83c1                	srl	a5,a5,0x10
20106cf0:	02b9f9b3          	remu	s3,s3,a1
20106cf4:	8442                	mv	s0,a6
20106cf6:	03070533          	mul	a0,a4,a6
20106cfa:	09c2                	sll	s3,s3,0x10
20106cfc:	0137e7b3          	or	a5,a5,s3
20106d00:	00a7fc63          	bgeu	a5,a0,20106d18 <__divsf3+0x128>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 14)
20106d04:	97b2                	add	a5,a5,a2
20106d06:	fff80413          	add	s0,a6,-1
20106d0a:	00c7e763          	bltu	a5,a2,20106d18 <__divsf3+0x128>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 16)
20106d0e:	00a7f563          	bgeu	a5,a0,20106d18 <__divsf3+0x128>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 18)
20106d12:	ffe80413          	add	s0,a6,-2
20106d16:	97b2                	add	a5,a5,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 20)
20106d18:	8f89                	sub	a5,a5,a0
20106d1a:	02b7d533          	divu	a0,a5,a1
20106d1e:	02b7f7b3          	remu	a5,a5,a1
20106d22:	85aa                	mv	a1,a0
20106d24:	02a70733          	mul	a4,a4,a0
20106d28:	07c2                	sll	a5,a5,0x10
20106d2a:	02e7f163          	bgeu	a5,a4,20106d4c <__divsf3+0x15c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 21)
20106d2e:	00c78833          	add	a6,a5,a2
20106d32:	00f838b3          	sltu	a7,a6,a5
20106d36:	fff50593          	add	a1,a0,-1
20106d3a:	87c2                	mv	a5,a6
20106d3c:	00089863          	bnez	a7,20106d4c <__divsf3+0x15c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 23)
20106d40:	00e87663          	bgeu	a6,a4,20106d4c <__divsf3+0x15c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 25)
20106d44:	ffe50593          	add	a1,a0,-2
20106d48:	00c807b3          	add	a5,a6,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 27)
20106d4c:	0442                	sll	s0,s0,0x10
20106d4e:	8f99                	sub	a5,a5,a4
20106d50:	8c4d                	or	s0,s0,a1
20106d52:	00f037b3          	snez	a5,a5
20106d56:	8c5d                	or	s0,s0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 2)
20106d58:	07f48713          	add	a4,s1,127
20106d5c:	08e05763          	blez	a4,20106dea <__divsf3+0x1fa>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 6)
20106d60:	00747793          	and	a5,s0,7
20106d64:	c799                	beqz	a5,20106d72 <__divsf3+0x182>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45
20106d66:	00f47793          	and	a5,s0,15
20106d6a:	4611                	li	a2,4
20106d6c:	00c78363          	beq	a5,a2,20106d72 <__divsf3+0x182>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 10)
20106d70:	0411                	add	s0,s0,4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 9)
20106d72:	00441793          	sll	a5,s0,0x4
20106d76:	0007d863          	bgez	a5,20106d86 <__divsf3+0x196>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 24)
20106d7a:	f80007b7          	lui	a5,0xf8000
20106d7e:	17fd                	add	a5,a5,-1 # f7ffffff <metal_segment_heap_target_end+0x77ffe4df>
20106d80:	8c7d                	and	s0,s0,a5
20106d82:	08048713          	add	a4,s1,128
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 26)
20106d86:	0fe00793          	li	a5,254
20106d8a:	04e7c563          	blt	a5,a4,20106dd4 <__divsf3+0x1e4>
20106d8e:	00345793          	srl	a5,s0,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:49
20106d92:	40f2                	lw	ra,28(sp)
20106d94:	4462                	lw	s0,24(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 111)
20106d96:	07a6                	sll	a5,a5,0x9
20106d98:	075e                	sll	a4,a4,0x17
20106d9a:	83a5                	srl	a5,a5,0x9
20106d9c:	8f5d                	or	a4,a4,a5
20106d9e:	01f69513          	sll	a0,a3,0x1f
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:49
20106da2:	44d2                	lw	s1,20(sp)
20106da4:	4942                	lw	s2,16(sp)
20106da6:	49b2                	lw	s3,12(sp)
20106da8:	4a22                	lw	s4,8(sp)
20106daa:	4a92                	lw	s5,4(sp)
20106dac:	8d59                	or	a0,a0,a4
20106dae:	6105                	add	sp,sp,32
20106db0:	8082                	ret
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 11)
20106db2:	01f99793          	sll	a5,s3,0x1f
20106db6:	0019d993          	srl	s3,s3,0x1
20106dba:	b71d                	j	20106ce0 <__divsf3+0xf0>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:42
20106dbc:	86ca                	mv	a3,s2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44 (discriminator 8)
20106dbe:	844e                	mv	s0,s3
20106dc0:	8756                	mv	a4,s5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45
20106dc2:	478d                	li	a5,3
20106dc4:	06f70263          	beq	a4,a5,20106e28 <__divsf3+0x238>
20106dc8:	4785                	li	a5,1
20106dca:	06f70563          	beq	a4,a5,20106e34 <__divsf3+0x244>
20106dce:	4789                	li	a5,2
20106dd0:	f8f714e3          	bne	a4,a5,20106d58 <__divsf3+0x168>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 4)
20106dd4:	4781                	li	a5,0
20106dd6:	0ff00713          	li	a4,255
20106dda:	bf65                	j	20106d92 <__divsf3+0x1a2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:43
20106ddc:	86d2                	mv	a3,s4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:44
20106dde:	b7d5                	j	20106dc2 <__divsf3+0x1d2>
20106de0:	00400437          	lui	s0,0x400
20106de4:	4681                	li	a3,0
20106de6:	470d                	li	a4,3
20106de8:	bfe9                	j	20106dc2 <__divsf3+0x1d2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 59)
20106dea:	4785                	li	a5,1
20106dec:	8f99                	sub	a5,a5,a4
20106dee:	476d                	li	a4,27
20106df0:	04f74263          	blt	a4,a5,20106e34 <__divsf3+0x244>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 65)
20106df4:	09e48493          	add	s1,s1,158
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 60)
20106df8:	00f457b3          	srl	a5,s0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 65)
20106dfc:	00941433          	sll	s0,s0,s1
20106e00:	00803433          	snez	s0,s0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 67)
20106e04:	8fc1                	or	a5,a5,s0
20106e06:	0077f713          	and	a4,a5,7
20106e0a:	c719                	beqz	a4,20106e18 <__divsf3+0x228>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45
20106e0c:	00f7f713          	and	a4,a5,15
20106e10:	4611                	li	a2,4
20106e12:	00c70363          	beq	a4,a2,20106e18 <__divsf3+0x228>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 70)
20106e16:	0791                	add	a5,a5,4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 69)
20106e18:	00579713          	sll	a4,a5,0x5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 85)
20106e1c:	838d                	srl	a5,a5,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 69)
20106e1e:	00075c63          	bgez	a4,20106e36 <__divsf3+0x246>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 84)
20106e22:	4781                	li	a5,0
20106e24:	4705                	li	a4,1
20106e26:	b7b5                	j	20106d92 <__divsf3+0x1a2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45
20106e28:	004007b7          	lui	a5,0x400
20106e2c:	0ff00713          	li	a4,255
20106e30:	4681                	li	a3,0
20106e32:	b785                	j	20106d92 <__divsf3+0x1a2>
20106e34:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divsf3.c:45 (discriminator 61)
20106e36:	4701                	li	a4,0
20106e38:	bfa9                	j	20106d92 <__divsf3+0x1a2>

20106e3a <__mulsf3>:
__mulsf3():
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:34
20106e3a:	1101                	add	sp,sp,-32
20106e3c:	c84a                	sw	s2,16(sp)
20106e3e:	01755913          	srl	s2,a0,0x17
20106e42:	ca26                	sw	s1,20(sp)
20106e44:	c64e                	sw	s3,12(sp)
20106e46:	c256                	sw	s5,4(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42
20106e48:	00951493          	sll	s1,a0,0x9
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:34
20106e4c:	ce06                	sw	ra,28(sp)
20106e4e:	cc22                	sw	s0,24(sp)
20106e50:	c452                	sw	s4,8(sp)
20106e52:	0ff97913          	zext.b	s2,s2
20106e56:	8aae                	mv	s5,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42
20106e58:	80a5                	srl	s1,s1,0x9
20106e5a:	01f55993          	srl	s3,a0,0x1f
20106e5e:	0c090763          	beqz	s2,20106f2c <__mulsf3+0xf2>
20106e62:	0ff00793          	li	a5,255
20106e66:	0cf90f63          	beq	s2,a5,20106f44 <__mulsf3+0x10a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 5)
20106e6a:	048e                	sll	s1,s1,0x3
20106e6c:	040007b7          	lui	a5,0x4000
20106e70:	8cdd                	or	s1,s1,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 7)
20106e72:	f8190913          	add	s2,s2,-127
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 27)
20106e76:	4a01                	li	s4,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43
20106e78:	017ad793          	srl	a5,s5,0x17
20106e7c:	009a9413          	sll	s0,s5,0x9
20106e80:	0ff7f793          	zext.b	a5,a5
20106e84:	8025                	srl	s0,s0,0x9
20106e86:	01fada93          	srl	s5,s5,0x1f
20106e8a:	c7f1                	beqz	a5,20106f56 <__mulsf3+0x11c>
20106e8c:	0ff00713          	li	a4,255
20106e90:	0ce78e63          	beq	a5,a4,20106f6c <__mulsf3+0x132>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 5)
20106e94:	040e                	sll	s0,s0,0x3
20106e96:	04000737          	lui	a4,0x4000
20106e9a:	8c59                	or	s0,s0,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 7)
20106e9c:	f8178793          	add	a5,a5,-127 # 3ffff81 <__heap_size+0x3fff781>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 27)
20106ea0:	4701                	li	a4,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44
20106ea2:	993e                	add	s2,s2,a5
20106ea4:	002a1793          	sll	a5,s4,0x2
20106ea8:	8fd9                	or	a5,a5,a4
20106eaa:	4629                	li	a2,10
20106eac:	00190693          	add	a3,s2,1
20106eb0:	14f64b63          	blt	a2,a5,20107006 <__mulsf3+0x1cc>
20106eb4:	4609                	li	a2,2
20106eb6:	0159c9b3          	xor	s3,s3,s5
20106eba:	0cf64263          	blt	a2,a5,20106f7e <__mulsf3+0x144>
20106ebe:	17fd                	add	a5,a5,-1
20106ec0:	4605                	li	a2,1
20106ec2:	0cf67b63          	bgeu	a2,a5,20106f98 <__mulsf3+0x15e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44 (discriminator 2)
20106ec6:	6841                	lui	a6,0x10
20106ec8:	fff80513          	add	a0,a6,-1 # ffff <__heap_size+0xf7ff>
20106ecc:	0104d613          	srl	a2,s1,0x10
20106ed0:	01045793          	srl	a5,s0,0x10
20106ed4:	8ce9                	and	s1,s1,a0
20106ed6:	8c69                	and	s0,s0,a0
20106ed8:	029405b3          	mul	a1,s0,s1
20106edc:	02860433          	mul	s0,a2,s0
20106ee0:	02f60633          	mul	a2,a2,a5
20106ee4:	029787b3          	mul	a5,a5,s1
20106ee8:	00878733          	add	a4,a5,s0
20106eec:	0105d793          	srl	a5,a1,0x10
20106ef0:	97ba                	add	a5,a5,a4
20106ef2:	0087f363          	bgeu	a5,s0,20106ef8 <__mulsf3+0xbe>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44 (discriminator 9)
20106ef6:	9642                	add	a2,a2,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44 (discriminator 11)
20106ef8:	00a7f733          	and	a4,a5,a0
20106efc:	0742                	sll	a4,a4,0x10
20106efe:	8de9                	and	a1,a1,a0
20106f00:	972e                	add	a4,a4,a1
20106f02:	83c1                	srl	a5,a5,0x10
20106f04:	00671413          	sll	s0,a4,0x6
20106f08:	97b2                	add	a5,a5,a2
20106f0a:	8369                	srl	a4,a4,0x1a
20106f0c:	079a                	sll	a5,a5,0x6
20106f0e:	00803433          	snez	s0,s0
20106f12:	8c59                	or	s0,s0,a4
20106f14:	00479713          	sll	a4,a5,0x4
20106f18:	8c5d                	or	s0,s0,a5
20106f1a:	00075763          	bgez	a4,20106f28 <__mulsf3+0xee>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44 (discriminator 12)
20106f1e:	00145793          	srl	a5,s0,0x1
20106f22:	8805                	and	s0,s0,1
20106f24:	8c5d                	or	s0,s0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44
20106f26:	8936                	mv	s2,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44 (discriminator 17)
20106f28:	86ca                	mv	a3,s2
20106f2a:	a041                	j	20106faa <__mulsf3+0x170>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 2)
20106f2c:	c095                	beqz	s1,20106f50 <__mulsf3+0x116>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 15)
20106f2e:	8526                	mv	a0,s1
20106f30:	2471                	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 21)
20106f32:	ffb50793          	add	a5,a0,-5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 27)
20106f36:	f8a00913          	li	s2,-118
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 25)
20106f3a:	00f494b3          	sll	s1,s1,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 27)
20106f3e:	40a90933          	sub	s2,s2,a0
20106f42:	bf15                	j	20106e76 <__mulsf3+0x3c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42
20106f44:	0ff00913          	li	s2,255
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 29)
20106f48:	4a09                	li	s4,2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 3)
20106f4a:	d49d                	beqz	s1,20106e78 <__mulsf3+0x3e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 30)
20106f4c:	4a0d                	li	s4,3
20106f4e:	b72d                	j	20106e78 <__mulsf3+0x3e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42
20106f50:	4901                	li	s2,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:42 (discriminator 9)
20106f52:	4a05                	li	s4,1
20106f54:	b715                	j	20106e78 <__mulsf3+0x3e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 2)
20106f56:	c00d                	beqz	s0,20106f78 <__mulsf3+0x13e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 15)
20106f58:	8522                	mv	a0,s0
20106f5a:	248d                	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 21)
20106f5c:	ffb50793          	add	a5,a0,-5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 25)
20106f60:	00f41433          	sll	s0,s0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 27)
20106f64:	f8a00793          	li	a5,-118
20106f68:	8f89                	sub	a5,a5,a0
20106f6a:	bf1d                	j	20106ea0 <__mulsf3+0x66>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43
20106f6c:	0ff00793          	li	a5,255
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 29)
20106f70:	4709                	li	a4,2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 3)
20106f72:	d805                	beqz	s0,20106ea2 <__mulsf3+0x68>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 30)
20106f74:	470d                	li	a4,3
20106f76:	b735                	j	20106ea2 <__mulsf3+0x68>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43
20106f78:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43 (discriminator 9)
20106f7a:	4705                	li	a4,1
20106f7c:	b71d                	j	20106ea2 <__mulsf3+0x68>
20106f7e:	4605                	li	a2,1
20106f80:	00f617b3          	sll	a5,a2,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44
20106f84:	5307f613          	and	a2,a5,1328
20106f88:	e649                	bnez	a2,20107012 <__mulsf3+0x1d8>
20106f8a:	2407f613          	and	a2,a5,576
20106f8e:	ea61                	bnez	a2,2010705e <__mulsf3+0x224>
20106f90:	0887f793          	and	a5,a5,136
20106f94:	db8d                	beqz	a5,20106ec6 <__mulsf3+0x8c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:43
20106f96:	89d6                	mv	s3,s5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45
20106f98:	4789                	li	a5,2
20106f9a:	0af70e63          	beq	a4,a5,20107056 <__mulsf3+0x21c>
20106f9e:	478d                	li	a5,3
20106fa0:	0af70f63          	beq	a4,a5,2010705e <__mulsf3+0x224>
20106fa4:	4785                	li	a5,1
20106fa6:	0cf70263          	beq	a4,a5,2010706a <__mulsf3+0x230>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 2)
20106faa:	07f68713          	add	a4,a3,127
20106fae:	06e05563          	blez	a4,20107018 <__mulsf3+0x1de>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 6)
20106fb2:	00747793          	and	a5,s0,7
20106fb6:	c799                	beqz	a5,20106fc4 <__mulsf3+0x18a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45
20106fb8:	00f47793          	and	a5,s0,15
20106fbc:	4611                	li	a2,4
20106fbe:	00c78363          	beq	a5,a2,20106fc4 <__mulsf3+0x18a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 10)
20106fc2:	0411                	add	s0,s0,4 # 400004 <__heap_size+0x3ff804>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 9)
20106fc4:	00441793          	sll	a5,s0,0x4
20106fc8:	0007d863          	bgez	a5,20106fd8 <__mulsf3+0x19e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 24)
20106fcc:	f80007b7          	lui	a5,0xf8000
20106fd0:	17fd                	add	a5,a5,-1 # f7ffffff <metal_segment_heap_target_end+0x77ffe4df>
20106fd2:	8c7d                	and	s0,s0,a5
20106fd4:	08068713          	add	a4,a3,128
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 26)
20106fd8:	0fe00793          	li	a5,254
20106fdc:	06e7cd63          	blt	a5,a4,20107056 <__mulsf3+0x21c>
20106fe0:	00345793          	srl	a5,s0,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:49
20106fe4:	40f2                	lw	ra,28(sp)
20106fe6:	4462                	lw	s0,24(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 111)
20106fe8:	07a6                	sll	a5,a5,0x9
20106fea:	01771513          	sll	a0,a4,0x17
20106fee:	83a5                	srl	a5,a5,0x9
20106ff0:	09fe                	sll	s3,s3,0x1f
20106ff2:	8d5d                	or	a0,a0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:49
20106ff4:	44d2                	lw	s1,20(sp)
20106ff6:	4942                	lw	s2,16(sp)
20106ff8:	4a22                	lw	s4,8(sp)
20106ffa:	4a92                	lw	s5,4(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 111)
20106ffc:	01356533          	or	a0,a0,s3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:49
20107000:	49b2                	lw	s3,12(sp)
20107002:	6105                	add	sp,sp,32
20107004:	8082                	ret
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:44
20107006:	463d                	li	a2,15
20107008:	04c78b63          	beq	a5,a2,2010705e <__mulsf3+0x224>
2010700c:	462d                	li	a2,11
2010700e:	f8c784e3          	beq	a5,a2,20106f96 <__mulsf3+0x15c>
20107012:	8426                	mv	s0,s1
20107014:	8752                	mv	a4,s4
20107016:	b749                	j	20106f98 <__mulsf3+0x15e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 59)
20107018:	4785                	li	a5,1
2010701a:	8f99                	sub	a5,a5,a4
2010701c:	476d                	li	a4,27
2010701e:	04f74663          	blt	a4,a5,2010706a <__mulsf3+0x230>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 65)
20107022:	09e68693          	add	a3,a3,158
20107026:	00d416b3          	sll	a3,s0,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 60)
2010702a:	00f457b3          	srl	a5,s0,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 65)
2010702e:	00d036b3          	snez	a3,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 67)
20107032:	8fd5                	or	a5,a5,a3
20107034:	0077f713          	and	a4,a5,7
20107038:	c719                	beqz	a4,20107046 <__mulsf3+0x20c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45
2010703a:	00f7f713          	and	a4,a5,15
2010703e:	4691                	li	a3,4
20107040:	00d70363          	beq	a4,a3,20107046 <__mulsf3+0x20c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 70)
20107044:	0791                	add	a5,a5,4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 69)
20107046:	00579713          	sll	a4,a5,0x5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 85)
2010704a:	838d                	srl	a5,a5,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 69)
2010704c:	02075063          	bgez	a4,2010706c <__mulsf3+0x232>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 84)
20107050:	4781                	li	a5,0
20107052:	4705                	li	a4,1
20107054:	bf41                	j	20106fe4 <__mulsf3+0x1aa>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 4)
20107056:	4781                	li	a5,0
20107058:	0ff00713          	li	a4,255
2010705c:	b761                	j	20106fe4 <__mulsf3+0x1aa>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45
2010705e:	004007b7          	lui	a5,0x400
20107062:	0ff00713          	li	a4,255
20107066:	4981                	li	s3,0
20107068:	bfb5                	j	20106fe4 <__mulsf3+0x1aa>
2010706a:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/mulsf3.c:45 (discriminator 61)
2010706c:	4701                	li	a4,0
2010706e:	bf9d                	j	20106fe4 <__mulsf3+0x1aa>

20107070 <__floatsisf>:
__floatsisf():
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:34
20107070:	1141                	add	sp,sp,-16
20107072:	c606                	sw	ra,12(sp)
20107074:	c422                	sw	s0,8(sp)
20107076:	c226                	sw	s1,4(sp)
20107078:	87aa                	mv	a5,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40
2010707a:	c145                	beqz	a0,2010711a <__floatsisf+0xaa>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 3)
2010707c:	41f55713          	sra	a4,a0,0x1f
20107080:	00a74433          	xor	s0,a4,a0
20107084:	8c19                	sub	s0,s0,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 1)
20107086:	01f55493          	srl	s1,a0,0x1f
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 6)
2010708a:	8522                	mv	a0,s0
2010708c:	2a05                	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 12)
2010708e:	09e00793          	li	a5,158
20107092:	8f89                	sub	a5,a5,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 14)
20107094:	09600713          	li	a4,150
20107098:	02f74463          	blt	a4,a5,201070c0 <__floatsisf+0x50>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 28)
2010709c:	4721                	li	a4,8
2010709e:	08e50163          	beq	a0,a4,20107120 <__floatsisf+0xb0>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 30)
201070a2:	1561                	add	a0,a0,-8
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 35)
201070a4:	00a41433          	sll	s0,s0,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:41
201070a8:	0426                	sll	s0,s0,0x9
201070aa:	8025                	srl	s0,s0,0x9
201070ac:	07de                	sll	a5,a5,0x17
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:45
201070ae:	40b2                	lw	ra,12(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:41
201070b0:	8fc1                	or	a5,a5,s0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:45
201070b2:	4422                	lw	s0,8(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:41
201070b4:	01f49513          	sll	a0,s1,0x1f
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:45
201070b8:	8d5d                	or	a0,a0,a5
201070ba:	4492                	lw	s1,4(sp)
201070bc:	0141                	add	sp,sp,16
201070be:	8082                	ret
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 29)
201070c0:	09900713          	li	a4,153
201070c4:	04f75663          	bge	a4,a5,20107110 <__floatsisf+0xa0>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 38)
201070c8:	4715                	li	a4,5
201070ca:	8f09                	sub	a4,a4,a0
201070cc:	01b50693          	add	a3,a0,27
201070d0:	00e45733          	srl	a4,s0,a4
201070d4:	00d41433          	sll	s0,s0,a3
201070d8:	00803433          	snez	s0,s0
201070dc:	8f41                	or	a4,a4,s0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 48)
201070de:	fc000437          	lui	s0,0xfc000
201070e2:	147d                	add	s0,s0,-1 # fbffffff <metal_segment_heap_target_end+0x7bffe4df>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 85)
201070e4:	00777693          	and	a3,a4,7
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 48)
201070e8:	8c79                	and	s0,s0,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 85)
201070ea:	c691                	beqz	a3,201070f6 <__floatsisf+0x86>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 89)
201070ec:	8b3d                	and	a4,a4,15
201070ee:	4691                	li	a3,4
201070f0:	00d70363          	beq	a4,a3,201070f6 <__floatsisf+0x86>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 93)
201070f4:	0411                	add	s0,s0,4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 111)
201070f6:	00541713          	sll	a4,s0,0x5
201070fa:	00075963          	bgez	a4,2010710c <__floatsisf+0x9c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 112)
201070fe:	fc0007b7          	lui	a5,0xfc000
20107102:	17fd                	add	a5,a5,-1 # fbffffff <metal_segment_heap_target_end+0x7bffe4df>
20107104:	8c7d                	and	s0,s0,a5
20107106:	09f00793          	li	a5,159
2010710a:	8f89                	sub	a5,a5,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 128)
2010710c:	800d                	srl	s0,s0,0x3
2010710e:	bf69                	j	201070a8 <__floatsisf+0x38>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 41)
20107110:	ffb50713          	add	a4,a0,-5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 46)
20107114:	00e41733          	sll	a4,s0,a4
20107118:	b7d9                	j	201070de <__floatsisf+0x6e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 2)
2010711a:	4481                	li	s1,0
2010711c:	4401                	li	s0,0
2010711e:	b769                	j	201070a8 <__floatsisf+0x38>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsisf.c:40 (discriminator 12)
20107120:	09600793          	li	a5,150
20107124:	b751                	j	201070a8 <__floatsisf+0x38>

20107126 <__extendsfdf2>:
__extendsfdf2():
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:43
20107126:	01755713          	srl	a4,a0,0x17
2010712a:	0ff77713          	zext.b	a4,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:36
2010712e:	1141                	add	sp,sp,-16
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
20107130:	00170793          	add	a5,a4,1 # 4000001 <__heap_size+0x3fff801>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:36
20107134:	c422                	sw	s0,8(sp)
20107136:	c226                	sw	s1,4(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:43
20107138:	00951413          	sll	s0,a0,0x9
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:36
2010713c:	c606                	sw	ra,12(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
2010713e:	0fe7f793          	and	a5,a5,254
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:43
20107142:	8025                	srl	s0,s0,0x9
20107144:	01f55493          	srl	s1,a0,0x1f
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
20107148:	c78d                	beqz	a5,20107172 <__extendsfdf2+0x4c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 4)
2010714a:	00345793          	srl	a5,s0,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 1)
2010714e:	38070713          	add	a4,a4,896
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 4)
20107152:	0476                	sll	s0,s0,0x1d
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:49
20107154:	07b2                	sll	a5,a5,0xc
20107156:	83b1                	srl	a5,a5,0xc
20107158:	0752                	sll	a4,a4,0x14
2010715a:	01f49513          	sll	a0,s1,0x1f
2010715e:	8f5d                	or	a4,a4,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:53
20107160:	40b2                	lw	ra,12(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:49
20107162:	00a767b3          	or	a5,a4,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:53
20107166:	8522                	mv	a0,s0
20107168:	4422                	lw	s0,8(sp)
2010716a:	4492                	lw	s1,4(sp)
2010716c:	85be                	mv	a1,a5
2010716e:	0141                	add	sp,sp,16
20107170:	8082                	ret
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 2)
20107172:	eb15                	bnez	a4,201071a6 <__extendsfdf2+0x80>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
20107174:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 12)
20107176:	dc79                	beqz	s0,20107154 <__extendsfdf2+0x2e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 22)
20107178:	8522                	mv	a0,s0
2010717a:	2089                	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 28)
2010717c:	47a9                	li	a5,10
2010717e:	00a7ce63          	blt	a5,a0,2010719a <__extendsfdf2+0x74>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 34)
20107182:	47ad                	li	a5,11
20107184:	8f89                	sub	a5,a5,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 29)
20107186:	01550713          	add	a4,a0,21
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 34)
2010718a:	00f457b3          	srl	a5,s0,a5
2010718e:	00e41433          	sll	s0,s0,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 38)
20107192:	38900713          	li	a4,905
20107196:	8f09                	sub	a4,a4,a0
20107198:	bf75                	j	20107154 <__extendsfdf2+0x2e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 30)
2010719a:	ff550793          	add	a5,a0,-11
2010719e:	00f417b3          	sll	a5,s0,a5
201071a2:	4401                	li	s0,0
201071a4:	b7fd                	j	20107192 <__extendsfdf2+0x6c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
201071a6:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 9)
201071a8:	c419                	beqz	s0,201071b6 <__extendsfdf2+0x90>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 45)
201071aa:	00345793          	srl	a5,s0,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 51)
201071ae:	00080737          	lui	a4,0x80
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 45)
201071b2:	0476                	sll	s0,s0,0x1d
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 51)
201071b4:	8fd9                	or	a5,a5,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45 (discriminator 9)
201071b6:	7ff00713          	li	a4,2047
201071ba:	bf69                	j	20107154 <__extendsfdf2+0x2e>

201071bc <__clzsi2>:
__clzsi2():
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:690 (discriminator 1)
201071bc:	67c1                	lui	a5,0x10
201071be:	02f57663          	bgeu	a0,a5,201071ea <__clzsi2+0x2e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:690 (discriminator 3)
201071c2:	10053793          	sltiu	a5,a0,256
201071c6:	0017b793          	seqz	a5,a5
201071ca:	078e                	sll	a5,a5,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:690 (discriminator 21)
201071cc:	02000713          	li	a4,32
201071d0:	8f1d                	sub	a4,a4,a5
201071d2:	00f55533          	srl	a0,a0,a5
201071d6:	ffffd797          	auipc	a5,0xffffd
201071da:	30678793          	add	a5,a5,774 # 201044dc <__clz_tab>
201071de:	97aa                	add	a5,a5,a0
201071e0:	0007c503          	lbu	a0,0(a5)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:693
201071e4:	40a70533          	sub	a0,a4,a0
201071e8:	8082                	ret
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:690 (discriminator 4)
201071ea:	01000737          	lui	a4,0x1000
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:690 (discriminator 11)
201071ee:	47e1                	li	a5,24
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:690 (discriminator 4)
201071f0:	fce57ee3          	bgeu	a0,a4,201071cc <__clzsi2+0x10>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:690 (discriminator 10)
201071f4:	47c1                	li	a5,16
201071f6:	bfd9                	j	201071cc <__clzsi2+0x10>

201071f8 <round>:
round():
201071f8:	4145d613          	sra	a2,a1,0x14
201071fc:	7ff67613          	and	a2,a2,2047
20107200:	c0160813          	add	a6,a2,-1023
20107204:	434d                	li	t1,19
20107206:	872a                	mv	a4,a0
20107208:	87ae                	mv	a5,a1
2010720a:	86ae                	mv	a3,a1
2010720c:	05034663          	blt	t1,a6,20107258 <round+0x60>
20107210:	02085263          	bgez	a6,20107234 <round+0x3c>
20107214:	800007b7          	lui	a5,0x80000
20107218:	8fed                	and	a5,a5,a1
2010721a:	577d                	li	a4,-1
2010721c:	86be                	mv	a3,a5
2010721e:	00e81563          	bne	a6,a4,20107228 <round+0x30>
20107222:	3ff006b7          	lui	a3,0x3ff00
20107226:	8edd                	or	a3,a3,a5
20107228:	4601                	li	a2,0
2010722a:	8732                	mv	a4,a2
2010722c:	87b6                	mv	a5,a3
2010722e:	853a                	mv	a0,a4
20107230:	85be                	mv	a1,a5
20107232:	8082                	ret
20107234:	00100637          	lui	a2,0x100
20107238:	167d                	add	a2,a2,-1 # fffff <__heap_size+0xff7ff>
2010723a:	41065633          	sra	a2,a2,a6
2010723e:	8df1                	and	a1,a1,a2
20107240:	8dc9                	or	a1,a1,a0
20107242:	d5f5                	beqz	a1,2010722e <round+0x36>
20107244:	000807b7          	lui	a5,0x80
20107248:	4107d7b3          	sra	a5,a5,a6
2010724c:	97b6                	add	a5,a5,a3
2010724e:	fff64613          	not	a2,a2
20107252:	00f676b3          	and	a3,a2,a5
20107256:	bfc9                	j	20107228 <round+0x30>
20107258:	03300313          	li	t1,51
2010725c:	01035e63          	bge	t1,a6,20107278 <round+0x80>
20107260:	40000693          	li	a3,1024
20107264:	fcd815e3          	bne	a6,a3,2010722e <round+0x36>
20107268:	1141                	add	sp,sp,-16
2010726a:	862a                	mv	a2,a0
2010726c:	86ae                	mv	a3,a1
2010726e:	c606                	sw	ra,12(sp)
20107270:	2ef5                	jal	2010766c <__adddf3>
20107272:	40b2                	lw	ra,12(sp)
20107274:	0141                	add	sp,sp,16
20107276:	8082                	ret
20107278:	bed60593          	add	a1,a2,-1043
2010727c:	567d                	li	a2,-1
2010727e:	00b65633          	srl	a2,a2,a1
20107282:	00a675b3          	and	a1,a2,a0
20107286:	d5c5                	beqz	a1,2010722e <round+0x36>
20107288:	41030333          	sub	t1,t1,a6
2010728c:	4785                	li	a5,1
2010728e:	006797b3          	sll	a5,a5,t1
20107292:	00a788b3          	add	a7,a5,a0
20107296:	00f8f363          	bgeu	a7,a5,2010729c <round+0xa4>
2010729a:	0685                	add	a3,a3,1 # 3ff00001 <metal_segment_data_source_start+0x1fdf3bc1>
2010729c:	fff64613          	not	a2,a2
201072a0:	01167633          	and	a2,a2,a7
201072a4:	b759                	j	2010722a <round+0x32>

201072a6 <_close>:
_close():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
201072a6:	1101                	add	sp,sp,-32
201072a8:	ce06                	sw	ra,28(sp)
201072aa:	cc22                	sw	s0,24(sp)
201072ac:	1000                	add	s0,sp,32
201072ae:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
201072b2:	2af1                	jal	2010748e <__errno>
201072b4:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:4 (discriminator 1)
201072b6:	05800793          	li	a5,88
201072ba:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:5
    return -1;
201072bc:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_close.c:6
}
201072be:	853e                	mv	a0,a5
201072c0:	40f2                	lw	ra,28(sp)
201072c2:	4462                	lw	s0,24(sp)
201072c4:	6105                	add	sp,sp,32
201072c6:	8082                	ret

201072c8 <_fstat>:
_fstat():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
201072c8:	1101                	add	sp,sp,-32
201072ca:	ce06                	sw	ra,28(sp)
201072cc:	cc22                	sw	s0,24(sp)
201072ce:	1000                	add	s0,sp,32
201072d0:	fea42623          	sw	a0,-20(s0)
201072d4:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
201072d8:	2a5d                	jal	2010748e <__errno>
201072da:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:5 (discriminator 1)
201072dc:	fa800793          	li	a5,-88
201072e0:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:6
    return -1;
201072e2:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_fstat.c:7
}
201072e4:	853e                	mv	a0,a5
201072e6:	40f2                	lw	ra,28(sp)
201072e8:	4462                	lw	s0,24(sp)
201072ea:	6105                	add	sp,sp,32
201072ec:	8082                	ret

201072ee <_isatty>:
_isatty():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
201072ee:	1101                	add	sp,sp,-32
201072f0:	ce22                	sw	s0,28(sp)
201072f2:	1000                	add	s0,sp,32
201072f4:	fea42623          	sw	a0,-20(s0)
201072f8:	fec42783          	lw	a5,-20(s0)
201072fc:	17fd                	add	a5,a5,-1 # 7ffff <__heap_size+0x7f7ff>
201072fe:	0017b793          	seqz	a5,a5
20107302:	0ff7f793          	zext.b	a5,a5
20107306:	853e                	mv	a0,a5
20107308:	4472                	lw	s0,28(sp)
2010730a:	6105                	add	sp,sp,32
2010730c:	8082                	ret

2010730e <_lseek>:
_lseek():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
2010730e:	1101                	add	sp,sp,-32
20107310:	ce06                	sw	ra,28(sp)
20107312:	cc22                	sw	s0,24(sp)
20107314:	1000                	add	s0,sp,32
20107316:	fea42623          	sw	a0,-20(s0)
2010731a:	feb42423          	sw	a1,-24(s0)
2010731e:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20107322:	22b5                	jal	2010748e <__errno>
20107324:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:5 (discriminator 1)
20107326:	05800793          	li	a5,88
2010732a:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:6
    return -1;
2010732c:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_lseek.c:7
}
2010732e:	853e                	mv	a0,a5
20107330:	40f2                	lw	ra,28(sp)
20107332:	4462                	lw	s0,24(sp)
20107334:	6105                	add	sp,sp,32
20107336:	8082                	ret

20107338 <_read>:
_read():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20107338:	1101                	add	sp,sp,-32
2010733a:	ce06                	sw	ra,28(sp)
2010733c:	cc22                	sw	s0,24(sp)
2010733e:	1000                	add	s0,sp,32
20107340:	fea42623          	sw	a0,-20(s0)
20107344:	feb42423          	sw	a1,-24(s0)
20107348:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
2010734c:	2289                	jal	2010748e <__errno>
2010734e:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:5 (discriminator 1)
20107350:	05800793          	li	a5,88
20107354:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:6
    return -1;
20107356:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_read.c:7
}
20107358:	853e                	mv	a0,a5
2010735a:	40f2                	lw	ra,28(sp)
2010735c:	4462                	lw	s0,24(sp)
2010735e:	6105                	add	sp,sp,32
20107360:	8082                	ret

20107362 <_sbrk>:
_sbrk():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20107362:	7179                	add	sp,sp,-48
20107364:	d606                	sw	ra,44(sp)
20107366:	d422                	sw	s0,40(sp)
20107368:	1800                	add	s0,sp,48
2010736a:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
2010736e:	800017b7          	lui	a5,0x80001
20107372:	a747a783          	lw	a5,-1420(a5) # 80000a74 <__brk>
20107376:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
2010737a:	0b018713          	add	a4,gp,176 # 80001320 <_sp>
2010737e:	800027b7          	lui	a5,0x80002
20107382:	b2078793          	add	a5,a5,-1248 # 80001b20 <metal_segment_heap_target_end>
20107386:	00f71463          	bne	a4,a5,2010738e <_sbrk+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
2010738a:	57fd                	li	a5,-1
2010738c:	a899                	j	201073e2 <_sbrk+0x80>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
2010738e:	800017b7          	lui	a5,0x80001
20107392:	a747a703          	lw	a4,-1420(a5) # 80000a74 <__brk>
20107396:	fdc42783          	lw	a5,-36(s0)
2010739a:	973e                	add	a4,a4,a5
2010739c:	800027b7          	lui	a5,0x80002
201073a0:	b2078793          	add	a5,a5,-1248 # 80001b20 <metal_segment_heap_target_end>
201073a4:	02f77663          	bgeu	a4,a5,201073d0 <_sbrk+0x6e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
201073a8:	800017b7          	lui	a5,0x80001
201073ac:	a747a703          	lw	a4,-1420(a5) # 80000a74 <__brk>
201073b0:	fdc42783          	lw	a5,-36(s0)
201073b4:	973e                	add	a4,a4,a5
201073b6:	800017b7          	lui	a5,0x80001
201073ba:	a6e7aa23          	sw	a4,-1420(a5) # 80000a74 <__brk>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
201073be:	fdc42583          	lw	a1,-36(s0)
201073c2:	fec42503          	lw	a0,-20(s0)
201073c6:	cc5f80ef          	jal	2010008a <metal_mem_scrub>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:42

    return old;
201073ca:	fec42783          	lw	a5,-20(s0)
201073ce:	a811                	j	201073e2 <_sbrk+0x80>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
201073d0:	800017b7          	lui	a5,0x80001
201073d4:	80002737          	lui	a4,0x80002
201073d8:	b2070713          	add	a4,a4,-1248 # 80001b20 <metal_segment_heap_target_end>
201073dc:	a6e7aa23          	sw	a4,-1420(a5) # 80000a74 <__brk>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
201073e0:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_sbrk.c:43
}
201073e2:	853e                	mv	a0,a5
201073e4:	50b2                	lw	ra,44(sp)
201073e6:	5422                	lw	s0,40(sp)
201073e8:	6145                	add	sp,sp,48
201073ea:	8082                	ret

201073ec <_write>:
_write():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
201073ec:	7179                	add	sp,sp,-48
201073ee:	d606                	sw	ra,44(sp)
201073f0:	d422                	sw	s0,40(sp)
201073f2:	1800                	add	s0,sp,48
201073f4:	fca42e23          	sw	a0,-36(s0)
201073f8:	fcb42c23          	sw	a1,-40(s0)
201073fc:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20107400:	fdc42703          	lw	a4,-36(s0)
20107404:	4785                	li	a5,1
20107406:	00f70963          	beq	a4,a5,20107418 <_write+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
2010740a:	2051                	jal	2010748e <__errno>
2010740c:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:9 (discriminator 1)
2010740e:	05800793          	li	a5,88
20107412:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:10
        return -1;
20107414:	57fd                	li	a5,-1
20107416:	a835                	j	20107452 <_write+0x66>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20107418:	fd842783          	lw	a5,-40(s0)
2010741c:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20107420:	fe042623          	sw	zero,-20(s0)
20107424:	a005                	j	20107444 <_write+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:15
        metal_tty_putc(bptr[i]);
20107426:	fe842703          	lw	a4,-24(s0)
2010742a:	fec42783          	lw	a5,-20(s0)
2010742e:	97ba                	add	a5,a5,a4
20107430:	0007c783          	lbu	a5,0(a5)
20107434:	853e                	mv	a0,a5
20107436:	141000ef          	jal	20107d76 <metal_tty_putc>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
2010743a:	fec42783          	lw	a5,-20(s0)
2010743e:	0785                	add	a5,a5,1
20107440:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20107444:	fec42703          	lw	a4,-20(s0)
20107448:	fd442783          	lw	a5,-44(s0)
2010744c:	fcf76de3          	bltu	a4,a5,20107426 <_write+0x3a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:16
    return 0;
20107450:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_write.c:17
}
20107452:	853e                	mv	a0,a5
20107454:	50b2                	lw	ra,44(sp)
20107456:	5422                	lw	s0,40(sp)
20107458:	6145                	add	sp,sp,48
2010745a:	8082                	ret

2010745c <atexit>:
atexit():
2010745c:	85aa                	mv	a1,a0
2010745e:	4681                	li	a3,0
20107460:	4601                	li	a2,0
20107462:	4501                	li	a0,0
20107464:	a0e1                	j	2010752c <__register_exitproc>

20107466 <exit>:
exit():
20107466:	1141                	add	sp,sp,-16
20107468:	c422                	sw	s0,8(sp)
2010746a:	c606                	sw	ra,12(sp)
2010746c:	00000797          	auipc	a5,0x0
20107470:	13878793          	add	a5,a5,312 # 201075a4 <__call_exitprocs>
20107474:	842a                	mv	s0,a0
20107476:	c399                	beqz	a5,2010747c <exit+0x16>
20107478:	4581                	li	a1,0
2010747a:	222d                	jal	201075a4 <__call_exitprocs>
2010747c:	5fef9797          	auipc	a5,0x5fef9
20107480:	6247a783          	lw	a5,1572(a5) # 80000aa0 <__stdio_exit_handler>
20107484:	c391                	beqz	a5,20107488 <exit+0x22>
20107486:	9782                	jalr	a5
20107488:	8522                	mv	a0,s0
2010748a:	79d040ef          	jal	2010c426 <_exit>

2010748e <__errno>:
__errno():
2010748e:	5fef9517          	auipc	a0,0x5fef9
20107492:	5e252503          	lw	a0,1506(a0) # 80000a70 <_impure_ptr>
20107496:	8082                	ret

20107498 <__libc_init_array>:
__libc_init_array():
20107498:	1141                	add	sp,sp,-16
2010749a:	c422                	sw	s0,8(sp)
2010749c:	c226                	sw	s1,4(sp)
2010749e:	ffff9417          	auipc	s0,0xffff9
201074a2:	e2a40413          	add	s0,s0,-470 # 201002c8 <_metal_tty_init_ptr>
201074a6:	ffff9497          	auipc	s1,0xffff9
201074aa:	e2248493          	add	s1,s1,-478 # 201002c8 <_metal_tty_init_ptr>
201074ae:	8c81                	sub	s1,s1,s0
201074b0:	c04a                	sw	s2,0(sp)
201074b2:	c606                	sw	ra,12(sp)
201074b4:	8489                	sra	s1,s1,0x2
201074b6:	4901                	li	s2,0
201074b8:	02991563          	bne	s2,s1,201074e2 <__libc_init_array+0x4a>
201074bc:	ffff9417          	auipc	s0,0xffff9
201074c0:	e0c40413          	add	s0,s0,-500 # 201002c8 <_metal_tty_init_ptr>
201074c4:	ffff9497          	auipc	s1,0xffff9
201074c8:	e0448493          	add	s1,s1,-508 # 201002c8 <_metal_tty_init_ptr>
201074cc:	8c81                	sub	s1,s1,s0
201074ce:	8489                	sra	s1,s1,0x2
201074d0:	4901                	li	s2,0
201074d2:	00991d63          	bne	s2,s1,201074ec <__libc_init_array+0x54>
201074d6:	40b2                	lw	ra,12(sp)
201074d8:	4422                	lw	s0,8(sp)
201074da:	4492                	lw	s1,4(sp)
201074dc:	4902                	lw	s2,0(sp)
201074de:	0141                	add	sp,sp,16
201074e0:	8082                	ret
201074e2:	401c                	lw	a5,0(s0)
201074e4:	0905                	add	s2,s2,1
201074e6:	0411                	add	s0,s0,4
201074e8:	9782                	jalr	a5
201074ea:	b7f9                	j	201074b8 <__libc_init_array+0x20>
201074ec:	401c                	lw	a5,0(s0)
201074ee:	0905                	add	s2,s2,1
201074f0:	0411                	add	s0,s0,4
201074f2:	9782                	jalr	a5
201074f4:	bff9                	j	201074d2 <__libc_init_array+0x3a>

201074f6 <__libc_fini_array>:
__libc_fini_array():
201074f6:	1141                	add	sp,sp,-16
201074f8:	c422                	sw	s0,8(sp)
201074fa:	c226                	sw	s1,4(sp)
201074fc:	ffff9417          	auipc	s0,0xffff9
20107500:	ddc40413          	add	s0,s0,-548 # 201002d8 <__fini_array_end>
20107504:	ffff9497          	auipc	s1,0xffff9
20107508:	dd448493          	add	s1,s1,-556 # 201002d8 <__fini_array_end>
2010750c:	8c05                	sub	s0,s0,s1
2010750e:	c606                	sw	ra,12(sp)
20107510:	8409                	sra	s0,s0,0x2
20107512:	e411                	bnez	s0,2010751e <__libc_fini_array+0x28>
20107514:	40b2                	lw	ra,12(sp)
20107516:	4422                	lw	s0,8(sp)
20107518:	4492                	lw	s1,4(sp)
2010751a:	0141                	add	sp,sp,16
2010751c:	8082                	ret
2010751e:	147d                	add	s0,s0,-1
20107520:	00241793          	sll	a5,s0,0x2
20107524:	97a6                	add	a5,a5,s1
20107526:	439c                	lw	a5,0(a5)
20107528:	9782                	jalr	a5
2010752a:	b7e5                	j	20107512 <__libc_fini_array+0x1c>

2010752c <__register_exitproc>:
__register_exitproc():
2010752c:	5fef9717          	auipc	a4,0x5fef9
20107530:	57c70713          	add	a4,a4,1404 # 80000aa8 <__atexit>
20107534:	431c                	lw	a5,0(a4)
20107536:	88aa                	mv	a7,a0
20107538:	ef81                	bnez	a5,20107550 <__register_exitproc+0x24>
2010753a:	c2418793          	add	a5,gp,-988 # 80000e94 <__atexit0>
2010753e:	c31c                	sw	a5,0(a4)
20107540:	00000713          	li	a4,0
20107544:	c701                	beqz	a4,2010754c <__register_exitproc+0x20>
20107546:	4318                	lw	a4,0(a4)
20107548:	08e7a423          	sw	a4,136(a5)
2010754c:	c2418793          	add	a5,gp,-988 # 80000e94 <__atexit0>
20107550:	43d8                	lw	a4,4(a5)
20107552:	487d                	li	a6,31
20107554:	557d                	li	a0,-1
20107556:	04e84663          	blt	a6,a4,201075a2 <__register_exitproc+0x76>
2010755a:	02088d63          	beqz	a7,20107594 <__register_exitproc+0x68>
2010755e:	0887a803          	lw	a6,136(a5)
20107562:	04080063          	beqz	a6,201075a2 <__register_exitproc+0x76>
20107566:	00271513          	sll	a0,a4,0x2
2010756a:	9542                	add	a0,a0,a6
2010756c:	c110                	sw	a2,0(a0)
2010756e:	10082303          	lw	t1,256(a6)
20107572:	4605                	li	a2,1
20107574:	00e61633          	sll	a2,a2,a4
20107578:	00c36333          	or	t1,t1,a2
2010757c:	10682023          	sw	t1,256(a6)
20107580:	08d52023          	sw	a3,128(a0)
20107584:	4689                	li	a3,2
20107586:	00d89763          	bne	a7,a3,20107594 <__register_exitproc+0x68>
2010758a:	10482683          	lw	a3,260(a6)
2010758e:	8ed1                	or	a3,a3,a2
20107590:	10d82223          	sw	a3,260(a6)
20107594:	00170693          	add	a3,a4,1
20107598:	070a                	sll	a4,a4,0x2
2010759a:	c3d4                	sw	a3,4(a5)
2010759c:	97ba                	add	a5,a5,a4
2010759e:	c78c                	sw	a1,8(a5)
201075a0:	4501                	li	a0,0
201075a2:	8082                	ret

201075a4 <__call_exitprocs>:
__call_exitprocs():
201075a4:	7179                	add	sp,sp,-48
201075a6:	ca56                	sw	s5,20(sp)
201075a8:	c85a                	sw	s6,16(sp)
201075aa:	c65e                	sw	s7,12(sp)
201075ac:	c462                	sw	s8,8(sp)
201075ae:	d606                	sw	ra,44(sp)
201075b0:	d422                	sw	s0,40(sp)
201075b2:	d226                	sw	s1,36(sp)
201075b4:	d04a                	sw	s2,32(sp)
201075b6:	ce4e                	sw	s3,28(sp)
201075b8:	cc52                	sw	s4,24(sp)
201075ba:	c266                	sw	s9,4(sp)
201075bc:	8b2a                	mv	s6,a0
201075be:	8aae                	mv	s5,a1
201075c0:	5fef9b97          	auipc	s7,0x5fef9
201075c4:	4e8b8b93          	add	s7,s7,1256 # 80000aa8 <__atexit>
201075c8:	4c05                	li	s8,1
201075ca:	000ba483          	lw	s1,0(s7)
201075ce:	cc81                	beqz	s1,201075e6 <__call_exitprocs+0x42>
201075d0:	40c0                	lw	s0,4(s1)
201075d2:	0884a983          	lw	s3,136(s1)
201075d6:	fff40913          	add	s2,s0,-1
201075da:	040a                	sll	s0,s0,0x2
201075dc:	00898a33          	add	s4,s3,s0
201075e0:	9426                	add	s0,s0,s1
201075e2:	00095f63          	bgez	s2,20107600 <__call_exitprocs+0x5c>
201075e6:	50b2                	lw	ra,44(sp)
201075e8:	5422                	lw	s0,40(sp)
201075ea:	5492                	lw	s1,36(sp)
201075ec:	5902                	lw	s2,32(sp)
201075ee:	49f2                	lw	s3,28(sp)
201075f0:	4a62                	lw	s4,24(sp)
201075f2:	4ad2                	lw	s5,20(sp)
201075f4:	4b42                	lw	s6,16(sp)
201075f6:	4bb2                	lw	s7,12(sp)
201075f8:	4c22                	lw	s8,8(sp)
201075fa:	4c92                	lw	s9,4(sp)
201075fc:	6145                	add	sp,sp,48
201075fe:	8082                	ret
20107600:	000a8c63          	beqz	s5,20107618 <__call_exitprocs+0x74>
20107604:	00099663          	bnez	s3,20107610 <__call_exitprocs+0x6c>
20107608:	197d                	add	s2,s2,-1
2010760a:	1a71                	add	s4,s4,-4
2010760c:	1471                	add	s0,s0,-4
2010760e:	bfd1                	j	201075e2 <__call_exitprocs+0x3e>
20107610:	07ca2783          	lw	a5,124(s4)
20107614:	ff579ae3          	bne	a5,s5,20107608 <__call_exitprocs+0x64>
20107618:	40d8                	lw	a4,4(s1)
2010761a:	405c                	lw	a5,4(s0)
2010761c:	177d                	add	a4,a4,-1
2010761e:	03271863          	bne	a4,s2,2010764e <__call_exitprocs+0xaa>
20107622:	0124a223          	sw	s2,4(s1)
20107626:	d3ed                	beqz	a5,20107608 <__call_exitprocs+0x64>
20107628:	0044ac83          	lw	s9,4(s1)
2010762c:	00098863          	beqz	s3,2010763c <__call_exitprocs+0x98>
20107630:	1009a683          	lw	a3,256(s3)
20107634:	012c1733          	sll	a4,s8,s2
20107638:	8ef9                	and	a3,a3,a4
2010763a:	ee89                	bnez	a3,20107654 <__call_exitprocs+0xb0>
2010763c:	9782                	jalr	a5
2010763e:	40d8                	lw	a4,4(s1)
20107640:	000ba783          	lw	a5,0(s7)
20107644:	f99713e3          	bne	a4,s9,201075ca <__call_exitprocs+0x26>
20107648:	fcf480e3          	beq	s1,a5,20107608 <__call_exitprocs+0x64>
2010764c:	bfbd                	j	201075ca <__call_exitprocs+0x26>
2010764e:	00042223          	sw	zero,4(s0)
20107652:	bfd1                	j	20107626 <__call_exitprocs+0x82>
20107654:	1049a683          	lw	a3,260(s3)
20107658:	ffca2583          	lw	a1,-4(s4)
2010765c:	8f75                	and	a4,a4,a3
2010765e:	e701                	bnez	a4,20107666 <__call_exitprocs+0xc2>
20107660:	855a                	mv	a0,s6
20107662:	9782                	jalr	a5
20107664:	bfe9                	j	2010763e <__call_exitprocs+0x9a>
20107666:	852e                	mv	a0,a1
20107668:	9782                	jalr	a5
2010766a:	bfd1                	j	2010763e <__call_exitprocs+0x9a>

2010766c <__adddf3>:
__adddf3():
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42
2010766c:	00100837          	lui	a6,0x100
20107670:	187d                	add	a6,a6,-1 # fffff <__heap_size+0xff7ff>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:34
20107672:	1101                	add	sp,sp,-32
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42
20107674:	00b878b3          	and	a7,a6,a1
20107678:	0145d713          	srl	a4,a1,0x14
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42 (discriminator 2)
2010767c:	01d55793          	srl	a5,a0,0x1d
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43
20107680:	00d87833          	and	a6,a6,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:34
20107684:	ca26                	sw	s1,20(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42
20107686:	7ff77493          	and	s1,a4,2047
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42 (discriminator 2)
2010768a:	00389713          	sll	a4,a7,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43
2010768e:	0146d893          	srl	a7,a3,0x14
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43 (discriminator 2)
20107692:	080e                	sll	a6,a6,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:34
20107694:	c84a                	sw	s2,16(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42 (discriminator 2)
20107696:	8fd9                	or	a5,a5,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43
20107698:	7ff8f893          	and	a7,a7,2047
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43 (discriminator 2)
2010769c:	01d65713          	srl	a4,a2,0x1d
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:34
201076a0:	ce06                	sw	ra,28(sp)
201076a2:	cc22                	sw	s0,24(sp)
201076a4:	c64e                	sw	s3,12(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42
201076a6:	01f5d913          	srl	s2,a1,0x1f
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43
201076aa:	82fd                	srl	a3,a3,0x1f
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43 (discriminator 2)
201076ac:	01076733          	or	a4,a4,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:42 (discriminator 2)
201076b0:	050e                	sll	a0,a0,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:43 (discriminator 2)
201076b2:	060e                	sll	a2,a2,0x3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 6)
201076b4:	41148833          	sub	a6,s1,a7
201076b8:	22d91963          	bne	s2,a3,201078ea <__adddf3+0x27e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 7)
201076bc:	0f005563          	blez	a6,201077a6 <__adddf3+0x13a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 9)
201076c0:	02089963          	bnez	a7,201076f2 <__adddf3+0x86>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 11)
201076c4:	00c766b3          	or	a3,a4,a2
201076c8:	50068e63          	beqz	a3,20107be4 <__adddf3+0x578>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 14)
201076cc:	fff80593          	add	a1,a6,-1
201076d0:	e991                	bnez	a1,201076e4 <__adddf3+0x78>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 80)
201076d2:	962a                	add	a2,a2,a0
201076d4:	00a636b3          	sltu	a3,a2,a0
201076d8:	973e                	add	a4,a4,a5
201076da:	8532                	mv	a0,a2
201076dc:	00d707b3          	add	a5,a4,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 66)
201076e0:	4485                	li	s1,1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
201076e2:	a8b9                	j	20107740 <__adddf3+0xd4>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 24)
201076e4:	7ff00693          	li	a3,2047
201076e8:	00d81d63          	bne	a6,a3,20107702 <__adddf3+0x96>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 348)
201076ec:	7ff00493          	li	s1,2047
201076f0:	a24d                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 12)
201076f2:	7ff00693          	li	a3,2047
201076f6:	18d48e63          	beq	s1,a3,20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 38)
201076fa:	008006b7          	lui	a3,0x800
201076fe:	8f55                	or	a4,a4,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 7)
20107700:	85c2                	mv	a1,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 47)
20107702:	03800693          	li	a3,56
20107706:	08b6cb63          	blt	a3,a1,2010779c <__adddf3+0x130>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 48)
2010770a:	46fd                	li	a3,31
2010770c:	06b6c163          	blt	a3,a1,2010776e <__adddf3+0x102>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 50)
20107710:	02000813          	li	a6,32
20107714:	40b80833          	sub	a6,a6,a1
20107718:	010716b3          	sll	a3,a4,a6
2010771c:	00b658b3          	srl	a7,a2,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 55)
20107720:	01061833          	sll	a6,a2,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 50)
20107724:	0116e6b3          	or	a3,a3,a7
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 55)
20107728:	01003833          	snez	a6,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 57)
2010772c:	0106e6b3          	or	a3,a3,a6
20107730:	00b755b3          	srl	a1,a4,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 64)
20107734:	9536                	add	a0,a0,a3
20107736:	95be                	add	a1,a1,a5
20107738:	00d536b3          	sltu	a3,a0,a3
2010773c:	00d587b3          	add	a5,a1,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 122)
20107740:	00879713          	sll	a4,a5,0x8
20107744:	14075763          	bgez	a4,20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 182)
20107748:	0485                	add	s1,s1,1
2010774a:	7ff00713          	li	a4,2047
2010774e:	48e48863          	beq	s1,a4,20107bde <__adddf3+0x572>
20107752:	ff800737          	lui	a4,0xff800
20107756:	177d                	add	a4,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fe4df>
20107758:	8f7d                	and	a4,a4,a5
2010775a:	00155793          	srl	a5,a0,0x1
2010775e:	8905                	and	a0,a0,1
20107760:	8fc9                	or	a5,a5,a0
20107762:	01f71513          	sll	a0,a4,0x1f
20107766:	8d5d                	or	a0,a0,a5
20107768:	00175793          	srl	a5,a4,0x1
2010776c:	a21d                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 51)
2010776e:	fe058693          	add	a3,a1,-32
20107772:	02000893          	li	a7,32
20107776:	00d756b3          	srl	a3,a4,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 59)
2010777a:	4801                	li	a6,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 51)
2010777c:	01158863          	beq	a1,a7,2010778c <__adddf3+0x120>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 58)
20107780:	04000813          	li	a6,64
20107784:	40b80833          	sub	a6,a6,a1
20107788:	01071833          	sll	a6,a4,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 61)
2010778c:	00c86833          	or	a6,a6,a2
20107790:	01003833          	snez	a6,a6
20107794:	0106e6b3          	or	a3,a3,a6
20107798:	4581                	li	a1,0
2010779a:	bf69                	j	20107734 <__adddf3+0xc8>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 49)
2010779c:	00c766b3          	or	a3,a4,a2
201077a0:	00d036b3          	snez	a3,a3
201077a4:	bfd5                	j	20107798 <__adddf3+0x12c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 10)
201077a6:	0a080963          	beqz	a6,20107858 <__adddf3+0x1ec>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 66)
201077aa:	409886b3          	sub	a3,a7,s1
201077ae:	ec99                	bnez	s1,201077cc <__adddf3+0x160>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 68)
201077b0:	00a7e5b3          	or	a1,a5,a0
201077b4:	40058d63          	beqz	a1,20107bce <__adddf3+0x562>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 71)
201077b8:	fff68593          	add	a1,a3,-1 # 7fffff <__heap_size+0x7ff7ff>
201077bc:	d999                	beqz	a1,201076d2 <__adddf3+0x66>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 81)
201077be:	7ff00813          	li	a6,2047
201077c2:	01069d63          	bne	a3,a6,201077dc <__adddf3+0x170>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 154)
201077c6:	87ba                	mv	a5,a4
201077c8:	8532                	mv	a0,a2
201077ca:	b70d                	j	201076ec <__adddf3+0x80>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 69)
201077cc:	7ff00593          	li	a1,2047
201077d0:	feb88be3          	beq	a7,a1,201077c6 <__adddf3+0x15a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 95)
201077d4:	008005b7          	lui	a1,0x800
201077d8:	8fcd                	or	a5,a5,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 66)
201077da:	85b6                	mv	a1,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 104)
201077dc:	03800693          	li	a3,56
201077e0:	06b6c763          	blt	a3,a1,2010784e <__adddf3+0x1e2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 105)
201077e4:	46fd                	li	a3,31
201077e6:	02b6cd63          	blt	a3,a1,20107820 <__adddf3+0x1b4>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 107)
201077ea:	02000813          	li	a6,32
201077ee:	40b80833          	sub	a6,a6,a1
201077f2:	010796b3          	sll	a3,a5,a6
201077f6:	00b55333          	srl	t1,a0,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 112)
201077fa:	01051833          	sll	a6,a0,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 107)
201077fe:	0066e6b3          	or	a3,a3,t1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 112)
20107802:	01003833          	snez	a6,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 114)
20107806:	0106e6b3          	or	a3,a3,a6
2010780a:	00b7d5b3          	srl	a1,a5,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 121)
2010780e:	9636                	add	a2,a2,a3
20107810:	95ba                	add	a1,a1,a4
20107812:	00d636b3          	sltu	a3,a2,a3
20107816:	8532                	mv	a0,a2
20107818:	00d587b3          	add	a5,a1,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 66)
2010781c:	84c6                	mv	s1,a7
2010781e:	b70d                	j	20107740 <__adddf3+0xd4>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 108)
20107820:	fe058693          	add	a3,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20107824:	02000313          	li	t1,32
20107828:	00d7d6b3          	srl	a3,a5,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 116)
2010782c:	4801                	li	a6,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 108)
2010782e:	00658863          	beq	a1,t1,2010783e <__adddf3+0x1d2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 115)
20107832:	04000813          	li	a6,64
20107836:	40b80833          	sub	a6,a6,a1
2010783a:	01079833          	sll	a6,a5,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 118)
2010783e:	00a86833          	or	a6,a6,a0
20107842:	01003833          	snez	a6,a6
20107846:	0106e6b3          	or	a3,a3,a6
2010784a:	4581                	li	a1,0
2010784c:	b7c9                	j	2010780e <__adddf3+0x1a2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 106)
2010784e:	00a7e6b3          	or	a3,a5,a0
20107852:	00d036b3          	snez	a3,a3
20107856:	bfd5                	j	2010784a <__adddf3+0x1de>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 67)
20107858:	00148693          	add	a3,s1,1
2010785c:	7fe6f593          	and	a1,a3,2046
20107860:	e5a5                	bnez	a1,201078c8 <__adddf3+0x25c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 68)
20107862:	00a7e6b3          	or	a3,a5,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 123)
20107866:	e4b1                	bnez	s1,201078b2 <__adddf3+0x246>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 125)
20107868:	36068663          	beqz	a3,20107bd4 <__adddf3+0x568>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 128)
2010786c:	00c766b3          	or	a3,a4,a2
20107870:	c28d                	beqz	a3,20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 134)
20107872:	962a                	add	a2,a2,a0
20107874:	00a636b3          	sltu	a3,a2,a0
20107878:	973e                	add	a4,a4,a5
2010787a:	00d707b3          	add	a5,a4,a3
2010787e:	00879713          	sll	a4,a5,0x8
20107882:	8532                	mv	a0,a2
20107884:	00075763          	bgez	a4,20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 136)
20107888:	ff800737          	lui	a4,0xff800
2010788c:	177d                	add	a4,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fe4df>
2010788e:	8ff9                	and	a5,a5,a4
20107890:	4485                	li	s1,1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 36)
20107892:	00757713          	and	a4,a0,7
20107896:	34070f63          	beqz	a4,20107bf4 <__adddf3+0x588>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 40)
2010789a:	00f57713          	and	a4,a0,15
2010789e:	4691                	li	a3,4
201078a0:	34d70a63          	beq	a4,a3,20107bf4 <__adddf3+0x588>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 44)
201078a4:	00450713          	add	a4,a0,4
201078a8:	00a736b3          	sltu	a3,a4,a0
201078ac:	97b6                	add	a5,a5,a3
201078ae:	853a                	mv	a0,a4
201078b0:	a691                	j	20107bf4 <__adddf3+0x588>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 153)
201078b2:	da91                	beqz	a3,201077c6 <__adddf3+0x15a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 155)
201078b4:	8e59                	or	a2,a2,a4
201078b6:	e2060be3          	beqz	a2,201076ec <__adddf3+0x80>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 351)
201078ba:	4901                	li	s2,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 354)
201078bc:	004007b7          	lui	a5,0x400
201078c0:	4501                	li	a0,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 348)
201078c2:	7ff00493          	li	s1,2047
201078c6:	a63d                	j	20107bf4 <__adddf3+0x588>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 124)
201078c8:	7ff00593          	li	a1,2047
201078cc:	30b68763          	beq	a3,a1,20107bda <__adddf3+0x56e>
201078d0:	962a                	add	a2,a2,a0
201078d2:	00a63533          	sltu	a0,a2,a0
201078d6:	973e                	add	a4,a4,a5
201078d8:	972a                	add	a4,a4,a0
201078da:	01f71513          	sll	a0,a4,0x1f
201078de:	8205                	srl	a2,a2,0x1
201078e0:	8d51                	or	a0,a0,a2
201078e2:	00175793          	srl	a5,a4,0x1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 66)
201078e6:	84b6                	mv	s1,a3
201078e8:	b76d                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 8)
201078ea:	0d005a63          	blez	a6,201079be <__adddf3+0x352>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 200)
201078ee:	08089463          	bnez	a7,20107976 <__adddf3+0x30a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 202)
201078f2:	00c766b3          	or	a3,a4,a2
201078f6:	2e068763          	beqz	a3,20107be4 <__adddf3+0x578>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 205)
201078fa:	fff80693          	add	a3,a6,-1
201078fe:	ee81                	bnez	a3,20107916 <__adddf3+0x2aa>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 214)
20107900:	40c50633          	sub	a2,a0,a2
20107904:	00c536b3          	sltu	a3,a0,a2
20107908:	40e78733          	sub	a4,a5,a4
2010790c:	8532                	mv	a0,a2
2010790e:	40d707b3          	sub	a5,a4,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
20107912:	4485                	li	s1,1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44
20107914:	a0b9                	j	20107962 <__adddf3+0x2f6>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 215)
20107916:	7ff00593          	li	a1,2047
2010791a:	dcb809e3          	beq	a6,a1,201076ec <__adddf3+0x80>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 238)
2010791e:	03800593          	li	a1,56
20107922:	08d5ca63          	blt	a1,a3,201079b6 <__adddf3+0x34a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 239)
20107926:	45fd                	li	a1,31
20107928:	06d5c063          	blt	a1,a3,20107988 <__adddf3+0x31c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 241)
2010792c:	02000813          	li	a6,32
20107930:	40d80833          	sub	a6,a6,a3
20107934:	00d658b3          	srl	a7,a2,a3
20107938:	010715b3          	sll	a1,a4,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 246)
2010793c:	01061833          	sll	a6,a2,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 241)
20107940:	0115e5b3          	or	a1,a1,a7
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 246)
20107944:	01003833          	snez	a6,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 248)
20107948:	0105e633          	or	a2,a1,a6
2010794c:	00d756b3          	srl	a3,a4,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 255)
20107950:	40c50633          	sub	a2,a0,a2
20107954:	00c53733          	sltu	a4,a0,a2
20107958:	40d786b3          	sub	a3,a5,a3
2010795c:	8532                	mv	a0,a2
2010795e:	40e687b3          	sub	a5,a3,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 313)
20107962:	00879713          	sll	a4,a5,0x8
20107966:	f20756e3          	bgez	a4,20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 373)
2010796a:	00800437          	lui	s0,0x800
2010796e:	147d                	add	s0,s0,-1 # 7fffff <__heap_size+0x7ff7ff>
20107970:	8c7d                	and	s0,s0,a5
20107972:	89aa                	mv	s3,a0
20107974:	aa45                	j	20107b24 <__adddf3+0x4b8>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 203)
20107976:	7ff00693          	li	a3,2047
2010797a:	f0d48ce3          	beq	s1,a3,20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 229)
2010797e:	008006b7          	lui	a3,0x800
20107982:	8f55                	or	a4,a4,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 8)
20107984:	86c2                	mv	a3,a6
20107986:	bf61                	j	2010791e <__adddf3+0x2b2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 242)
20107988:	fe068593          	add	a1,a3,-32 # 7fffe0 <__heap_size+0x7ff7e0>
2010798c:	02000893          	li	a7,32
20107990:	00b755b3          	srl	a1,a4,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 250)
20107994:	4801                	li	a6,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 242)
20107996:	01168863          	beq	a3,a7,201079a6 <__adddf3+0x33a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 249)
2010799a:	04000813          	li	a6,64
2010799e:	40d80833          	sub	a6,a6,a3
201079a2:	01071833          	sll	a6,a4,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 252)
201079a6:	00c86833          	or	a6,a6,a2
201079aa:	01003833          	snez	a6,a6
201079ae:	0105e633          	or	a2,a1,a6
201079b2:	4681                	li	a3,0
201079b4:	bf71                	j	20107950 <__adddf3+0x2e4>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 240)
201079b6:	8e59                	or	a2,a2,a4
201079b8:	00c03633          	snez	a2,a2
201079bc:	bfdd                	j	201079b2 <__adddf3+0x346>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 201)
201079be:	0c080563          	beqz	a6,20107a88 <__adddf3+0x41c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
201079c2:	40988833          	sub	a6,a7,s1
201079c6:	e895                	bnez	s1,201079fa <__adddf3+0x38e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 259)
201079c8:	00a7e5b3          	or	a1,a5,a0
201079cc:	20058e63          	beqz	a1,20107be8 <__adddf3+0x57c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 262)
201079d0:	fff80593          	add	a1,a6,-1
201079d4:	e991                	bnez	a1,201079e8 <__adddf3+0x37c>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 271)
201079d6:	40a60533          	sub	a0,a2,a0
201079da:	8f1d                	sub	a4,a4,a5
201079dc:	00a63633          	sltu	a2,a2,a0
201079e0:	40c707b3          	sub	a5,a4,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
201079e4:	8936                	mv	s2,a3
201079e6:	b735                	j	20107912 <__adddf3+0x2a6>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 272)
201079e8:	7ff00313          	li	t1,2047
201079ec:	00681f63          	bne	a6,t1,20107a0a <__adddf3+0x39e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 293)
201079f0:	87ba                	mv	a5,a4
201079f2:	8532                	mv	a0,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
201079f4:	7ff00493          	li	s1,2047
201079f8:	a07d                	j	20107aa6 <__adddf3+0x43a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 260)
201079fa:	7ff00593          	li	a1,2047
201079fe:	feb889e3          	beq	a7,a1,201079f0 <__adddf3+0x384>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 286)
20107a02:	008005b7          	lui	a1,0x800
20107a06:	8fcd                	or	a5,a5,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
20107a08:	85c2                	mv	a1,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 295)
20107a0a:	03800813          	li	a6,56
20107a0e:	06b84963          	blt	a6,a1,20107a80 <__adddf3+0x414>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 296)
20107a12:	487d                	li	a6,31
20107a14:	02b84f63          	blt	a6,a1,20107a52 <__adddf3+0x3e6>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 298)
20107a18:	02000313          	li	t1,32
20107a1c:	40b30333          	sub	t1,t1,a1
20107a20:	00b55e33          	srl	t3,a0,a1
20107a24:	00679833          	sll	a6,a5,t1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 303)
20107a28:	00651333          	sll	t1,a0,t1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 298)
20107a2c:	01c86833          	or	a6,a6,t3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 303)
20107a30:	00603333          	snez	t1,t1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 305)
20107a34:	00686533          	or	a0,a6,t1
20107a38:	00b7d5b3          	srl	a1,a5,a1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 312)
20107a3c:	40a60533          	sub	a0,a2,a0
20107a40:	40b705b3          	sub	a1,a4,a1
20107a44:	00a63633          	sltu	a2,a2,a0
20107a48:	40c587b3          	sub	a5,a1,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
20107a4c:	84c6                	mv	s1,a7
20107a4e:	8936                	mv	s2,a3
20107a50:	bf09                	j	20107962 <__adddf3+0x2f6>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 299)
20107a52:	fe058813          	add	a6,a1,-32 # 7fffe0 <__heap_size+0x7ff7e0>
20107a56:	02000e13          	li	t3,32
20107a5a:	0107d833          	srl	a6,a5,a6
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 307)
20107a5e:	4301                	li	t1,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 299)
20107a60:	01c58863          	beq	a1,t3,20107a70 <__adddf3+0x404>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 306)
20107a64:	04000313          	li	t1,64
20107a68:	40b30333          	sub	t1,t1,a1
20107a6c:	00679333          	sll	t1,a5,t1
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 309)
20107a70:	00a36333          	or	t1,t1,a0
20107a74:	00603333          	snez	t1,t1
20107a78:	00686533          	or	a0,a6,t1
20107a7c:	4581                	li	a1,0
20107a7e:	bf7d                	j	20107a3c <__adddf3+0x3d0>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 297)
20107a80:	8d5d                	or	a0,a0,a5
20107a82:	00a03533          	snez	a0,a0
20107a86:	bfdd                	j	20107a7c <__adddf3+0x410>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 258)
20107a88:	00148593          	add	a1,s1,1
20107a8c:	7fe5f593          	and	a1,a1,2046
20107a90:	e5ad                	bnez	a1,20107afa <__adddf3+0x48e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 68)
20107a92:	00a7e833          	or	a6,a5,a0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 11)
20107a96:	00c765b3          	or	a1,a4,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 314)
20107a9a:	e4a9                	bnez	s1,20107ae4 <__adddf3+0x478>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 316)
20107a9c:	00081763          	bnez	a6,20107aaa <__adddf3+0x43e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 318)
20107aa0:	cdf1                	beqz	a1,20107b7c <__adddf3+0x510>
20107aa2:	87ba                	mv	a5,a4
20107aa4:	8532                	mv	a0,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
20107aa6:	8936                	mv	s2,a3
20107aa8:	b3ed                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 319)
20107aaa:	de0584e3          	beqz	a1,20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 326)
20107aae:	40c50833          	sub	a6,a0,a2
20107ab2:	010538b3          	sltu	a7,a0,a6
20107ab6:	40e785b3          	sub	a1,a5,a4
20107aba:	411585b3          	sub	a1,a1,a7
20107abe:	00859893          	sll	a7,a1,0x8
20107ac2:	0008da63          	bgez	a7,20107ad6 <__adddf3+0x46a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 328)
20107ac6:	40a60533          	sub	a0,a2,a0
20107aca:	8f1d                	sub	a4,a4,a5
20107acc:	00a63633          	sltu	a2,a2,a0
20107ad0:	40c707b3          	sub	a5,a4,a2
20107ad4:	bfc9                	j	20107aa6 <__adddf3+0x43a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 329)
20107ad6:	00b86533          	or	a0,a6,a1
20107ada:	10050b63          	beqz	a0,20107bf0 <__adddf3+0x584>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 326)
20107ade:	87ae                	mv	a5,a1
20107ae0:	8542                	mv	a0,a6
20107ae2:	bb45                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 348)
20107ae4:	00081863          	bnez	a6,20107af4 <__adddf3+0x488>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 349)
20107ae8:	dc0589e3          	beqz	a1,201078ba <__adddf3+0x24e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 352)
20107aec:	87ba                	mv	a5,a4
20107aee:	8532                	mv	a0,a2
20107af0:	8936                	mv	s2,a3
20107af2:	beed                	j	201076ec <__adddf3+0x80>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 350)
20107af4:	be058ce3          	beqz	a1,201076ec <__adddf3+0x80>
20107af8:	b3c9                	j	201078ba <__adddf3+0x24e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 315)
20107afa:	40c505b3          	sub	a1,a0,a2
20107afe:	00b53833          	sltu	a6,a0,a1
20107b02:	40e78433          	sub	s0,a5,a4
20107b06:	41040433          	sub	s0,s0,a6
20107b0a:	00841813          	sll	a6,s0,0x8
20107b0e:	89ae                	mv	s3,a1
20107b10:	06085363          	bgez	a6,20107b76 <__adddf3+0x50a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 366)
20107b14:	40a609b3          	sub	s3,a2,a0
20107b18:	40f70433          	sub	s0,a4,a5
20107b1c:	01363633          	sltu	a2,a2,s3
20107b20:	8c11                	sub	s0,s0,a2
20107b22:	8936                	mv	s2,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 375)
20107b24:	cc31                	beqz	s0,20107b80 <__adddf3+0x514>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 378)
20107b26:	8522                	mv	a0,s0
20107b28:	e94ff0ef          	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 392)
20107b2c:	ff850693          	add	a3,a0,-8
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 398)
20107b30:	02000793          	li	a5,32
20107b34:	8f95                	sub	a5,a5,a3
20107b36:	00d41433          	sll	s0,s0,a3
20107b3a:	00f9d7b3          	srl	a5,s3,a5
20107b3e:	8fc1                	or	a5,a5,s0
20107b40:	00d99433          	sll	s0,s3,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 402)
20107b44:	0696ce63          	blt	a3,s1,20107bc0 <__adddf3+0x554>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 403)
20107b48:	8e85                	sub	a3,a3,s1
20107b4a:	00168613          	add	a2,a3,1
20107b4e:	477d                	li	a4,31
20107b50:	04c74563          	blt	a4,a2,20107b9a <__adddf3+0x52e>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 405)
20107b54:	02000713          	li	a4,32
20107b58:	8f11                	sub	a4,a4,a2
20107b5a:	00e79533          	sll	a0,a5,a4
20107b5e:	00c456b3          	srl	a3,s0,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 410)
20107b62:	00e41733          	sll	a4,s0,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 405)
20107b66:	8d55                	or	a0,a0,a3
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 410)
20107b68:	00e03733          	snez	a4,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 412)
20107b6c:	8d59                	or	a0,a0,a4
20107b6e:	00c7d7b3          	srl	a5,a5,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 418)
20107b72:	4481                	li	s1,0
20107b74:	bb39                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 367)
20107b76:	8dc1                	or	a1,a1,s0
20107b78:	f5d5                	bnez	a1,20107b24 <__adddf3+0x4b8>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 316)
20107b7a:	4481                	li	s1,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 331)
20107b7c:	4901                	li	s2,0
20107b7e:	a085                	j	20107bde <__adddf3+0x572>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 385)
20107b80:	854e                	mv	a0,s3
20107b82:	e3aff0ef          	jal	201071bc <__clzsi2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 392)
20107b86:	01850693          	add	a3,a0,24
20107b8a:	47fd                	li	a5,31
20107b8c:	fad7d2e3          	bge	a5,a3,20107b30 <__adddf3+0x4c4>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 394)
20107b90:	ff850793          	add	a5,a0,-8
20107b94:	00f997b3          	sll	a5,s3,a5
20107b98:	b775                	j	20107b44 <__adddf3+0x4d8>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 406)
20107b9a:	1685                	add	a3,a3,-31
20107b9c:	00d7d533          	srl	a0,a5,a3
20107ba0:	02000693          	li	a3,32
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 415)
20107ba4:	4701                	li	a4,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 406)
20107ba6:	00d60763          	beq	a2,a3,20107bb4 <__adddf3+0x548>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 414)
20107baa:	04000713          	li	a4,64
20107bae:	8f11                	sub	a4,a4,a2
20107bb0:	00e79733          	sll	a4,a5,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 417)
20107bb4:	8f41                	or	a4,a4,s0
20107bb6:	00e03733          	snez	a4,a4
20107bba:	8d59                	or	a0,a0,a4
20107bbc:	4781                	li	a5,0
20107bbe:	bf55                	j	20107b72 <__adddf3+0x506>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 404)
20107bc0:	ff800737          	lui	a4,0xff800
20107bc4:	177d                	add	a4,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fe4df>
20107bc6:	8c95                	sub	s1,s1,a3
20107bc8:	8ff9                	and	a5,a5,a4
20107bca:	8522                	mv	a0,s0
20107bcc:	b1d9                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 78)
20107bce:	87ba                	mv	a5,a4
20107bd0:	8532                	mv	a0,a2
20107bd2:	bb11                	j	201078e6 <__adddf3+0x27a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 131)
20107bd4:	87ba                	mv	a5,a4
20107bd6:	8532                	mv	a0,a2
20107bd8:	b96d                	j	20107892 <__adddf3+0x226>
20107bda:	7ff00493          	li	s1,2047
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 326)
20107bde:	4781                	li	a5,0
20107be0:	4501                	li	a0,0
20107be2:	a809                	j	20107bf4 <__adddf3+0x588>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 200)
20107be4:	84c2                	mv	s1,a6
20107be6:	b175                	j	20107892 <__adddf3+0x226>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 269)
20107be8:	87ba                	mv	a5,a4
20107bea:	8532                	mv	a0,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 257)
20107bec:	84c2                	mv	s1,a6
20107bee:	bd65                	j	20107aa6 <__adddf3+0x43a>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 326)
20107bf0:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:44 (discriminator 331)
20107bf2:	4901                	li	s2,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 62)
20107bf4:	00879713          	sll	a4,a5,0x8
20107bf8:	00075b63          	bgez	a4,20107c0e <__adddf3+0x5a2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 63)
20107bfc:	0485                	add	s1,s1,1
20107bfe:	7ff00713          	li	a4,2047
20107c02:	04e48b63          	beq	s1,a4,20107c58 <__adddf3+0x5ec>
20107c06:	ff800737          	lui	a4,0xff800
20107c0a:	177d                	add	a4,a4,-1 # ff7fffff <metal_segment_heap_target_end+0x7f7fe4df>
20107c0c:	8ff9                	and	a5,a5,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 79)
20107c0e:	01d79693          	sll	a3,a5,0x1d
20107c12:	810d                	srl	a0,a0,0x3
20107c14:	7ff00713          	li	a4,2047
20107c18:	8ec9                	or	a3,a3,a0
20107c1a:	838d                	srl	a5,a5,0x3
20107c1c:	00e49963          	bne	s1,a4,20107c2e <__adddf3+0x5c2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
20107c20:	8edd                	or	a3,a3,a5
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 79)
20107c22:	4781                	li	a5,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 80)
20107c24:	c689                	beqz	a3,20107c2e <__adddf3+0x5c2>
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 84)
20107c26:	000807b7          	lui	a5,0x80
20107c2a:	4681                	li	a3,0
20107c2c:	4901                	li	s2,0
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 90)
20107c2e:	01449713          	sll	a4,s1,0x14
20107c32:	7ff00637          	lui	a2,0x7ff00
20107c36:	07b2                	sll	a5,a5,0xc
20107c38:	8f71                	and	a4,a4,a2
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:49
20107c3a:	40f2                	lw	ra,28(sp)
20107c3c:	4462                	lw	s0,24(sp)
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:45 (discriminator 90)
20107c3e:	83b1                	srl	a5,a5,0xc
20107c40:	8fd9                	or	a5,a5,a4
20107c42:	01f91713          	sll	a4,s2,0x1f
20107c46:	00e7e633          	or	a2,a5,a4
/scratch/jenkins-sw/workspace/freedom-tools/ubuntu20-build/obj/x86_64-w64-mingw32/build/riscv64-unknown-elf-gcc/build-gcc-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/adddf3.c:49
20107c4a:	44d2                	lw	s1,20(sp)
20107c4c:	4942                	lw	s2,16(sp)
20107c4e:	49b2                	lw	s3,12(sp)
20107c50:	8536                	mv	a0,a3
20107c52:	85b2                	mv	a1,a2
20107c54:	6105                	add	sp,sp,32
20107c56:	8082                	ret
20107c58:	4781                	li	a5,0
20107c5a:	4501                	li	a0,0
20107c5c:	bf4d                	j	20107c0e <__adddf3+0x5a2>

20107c5e <metal_init>:
metal_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:21
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20107c5e:	1101                	add	sp,sp,-32
20107c60:	ce06                	sw	ra,28(sp)
20107c62:	cc22                	sw	s0,24(sp)
20107c64:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:24
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20107c66:	800017b7          	lui	a5,0x80001
20107c6a:	aac7a783          	lw	a5,-1364(a5) # 80000aac <init_done.1>
20107c6e:	efa9                	bnez	a5,20107cc8 <metal_init+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:27
        return;
    }
    init_done = 1;
20107c70:	800017b7          	lui	a5,0x80001
20107c74:	4705                	li	a4,1
20107c76:	aae7a623          	sw	a4,-1364(a5) # 80000aac <init_done.1>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:42
#ifdef METAL_SIFIVE_L2PF1
    /* Do L2 Stride Prefetcher initialization. */
    sifive_l2pf1_init();
#endif /* METAL_SIFIVE_L2PF1 */

    if (&metal_constructors_end <= &metal_constructors_start) {
20107c7a:	201007b7          	lui	a5,0x20100
20107c7e:	2d478713          	add	a4,a5,724 # 201002d4 <metal_tty_init>
20107c82:	201007b7          	lui	a5,0x20100
20107c86:	2c878793          	add	a5,a5,712 # 201002c8 <_metal_tty_init_ptr>
20107c8a:	04e7f163          	bgeu	a5,a4,20107ccc <metal_init+0x6e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:46
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20107c8e:	201007b7          	lui	a5,0x20100
20107c92:	2c878793          	add	a5,a5,712 # 201002c8 <_metal_tty_init_ptr>
20107c96:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
20107c9a:	a831                	j	20107cb6 <metal_init+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:48
        metal_constructor_t func = *funcptr;
20107c9c:	fec42783          	lw	a5,-20(s0)
20107ca0:	439c                	lw	a5,0(a5)
20107ca2:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:50

        func();
20107ca6:	fe842783          	lw	a5,-24(s0)
20107caa:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:52

        funcptr += 1;
20107cac:	fec42783          	lw	a5,-20(s0)
20107cb0:	0791                	add	a5,a5,4
20107cb2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:47
    while (funcptr != &metal_constructors_end) {
20107cb6:	fec42703          	lw	a4,-20(s0)
20107cba:	201007b7          	lui	a5,0x20100
20107cbe:	2d478793          	add	a5,a5,724 # 201002d4 <metal_tty_init>
20107cc2:	fcf71de3          	bne	a4,a5,20107c9c <metal_init+0x3e>
20107cc6:	a021                	j	20107cce <metal_init+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:25
        return;
20107cc8:	0001                	nop
20107cca:	a011                	j	20107cce <metal_init+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:43
        return;
20107ccc:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:54
    }
}
20107cce:	40f2                	lw	ra,28(sp)
20107cd0:	4462                	lw	s0,24(sp)
20107cd2:	6105                	add	sp,sp,32
20107cd4:	8082                	ret

20107cd6 <metal_fini>:
metal_fini():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:56

void metal_fini(void) {
20107cd6:	1101                	add	sp,sp,-32
20107cd8:	ce06                	sw	ra,28(sp)
20107cda:	cc22                	sw	s0,24(sp)
20107cdc:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:59
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20107cde:	800017b7          	lui	a5,0x80001
20107ce2:	ab07a783          	lw	a5,-1360(a5) # 80000ab0 <fini_done.0>
20107ce6:	efa9                	bnez	a5,20107d40 <metal_fini+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:62
        return;
    }
    fini_done = 1;
20107ce8:	800017b7          	lui	a5,0x80001
20107cec:	4705                	li	a4,1
20107cee:	aae7a823          	sw	a4,-1360(a5) # 80000ab0 <fini_done.0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:64

    if (&metal_destructors_end <= &metal_destructors_start) {
20107cf2:	201007b7          	lui	a5,0x20100
20107cf6:	2d878713          	add	a4,a5,728 # 201002d8 <__fini_array_end>
20107cfa:	201007b7          	lui	a5,0x20100
20107cfe:	2d878793          	add	a5,a5,728 # 201002d8 <__fini_array_end>
20107d02:	04e7f163          	bgeu	a5,a4,20107d44 <metal_fini+0x6e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:68
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20107d06:	201007b7          	lui	a5,0x20100
20107d0a:	2d878793          	add	a5,a5,728 # 201002d8 <__fini_array_end>
20107d0e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
20107d12:	a831                	j	20107d2e <metal_fini+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:70
        metal_destructor_t func = *funcptr;
20107d14:	fec42783          	lw	a5,-20(s0)
20107d18:	439c                	lw	a5,0(a5)
20107d1a:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:72

        func();
20107d1e:	fe842783          	lw	a5,-24(s0)
20107d22:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:74

        funcptr += 1;
20107d24:	fec42783          	lw	a5,-20(s0)
20107d28:	0791                	add	a5,a5,4
20107d2a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:69
    while (funcptr != &metal_destructors_end) {
20107d2e:	fec42703          	lw	a4,-20(s0)
20107d32:	201007b7          	lui	a5,0x20100
20107d36:	2d878793          	add	a5,a5,728 # 201002d8 <__fini_array_end>
20107d3a:	fcf71de3          	bne	a4,a5,20107d14 <metal_fini+0x3e>
20107d3e:	a021                	j	20107d46 <metal_fini+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:60
        return;
20107d40:	0001                	nop
20107d42:	a011                	j	20107d46 <metal_fini+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:65
        return;
20107d44:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:76
    }
}
20107d46:	40f2                	lw	ra,28(sp)
20107d48:	4462                	lw	s0,24(sp)
20107d4a:	6105                	add	sp,sp,32
20107d4c:	8082                	ret

20107d4e <metal_init_run>:
metal_init_run():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:86
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20107d4e:	1141                	add	sp,sp,-16
20107d50:	c606                	sw	ra,12(sp)
20107d52:	c422                	sw	s0,8(sp)
20107d54:	0800                	add	s0,sp,16
20107d56:	3721                	jal	20107c5e <metal_init>
20107d58:	0001                	nop
20107d5a:	40b2                	lw	ra,12(sp)
20107d5c:	4422                	lw	s0,8(sp)
20107d5e:	0141                	add	sp,sp,16
20107d60:	8082                	ret

20107d62 <metal_fini_run>:
metal_fini_run():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/init.c:89

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20107d62:	1141                	add	sp,sp,-16
20107d64:	c606                	sw	ra,12(sp)
20107d66:	c422                	sw	s0,8(sp)
20107d68:	0800                	add	s0,sp,16
20107d6a:	37b5                	jal	20107cd6 <metal_fini>
20107d6c:	0001                	nop
20107d6e:	40b2                	lw	ra,12(sp)
20107d70:	4422                	lw	s0,8(sp)
20107d72:	0141                	add	sp,sp,16
20107d74:	8082                	ret

20107d76 <metal_tty_putc>:
metal_tty_putc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20107d76:	1101                	add	sp,sp,-32
20107d78:	ce06                	sw	ra,28(sp)
20107d7a:	cc22                	sw	s0,24(sp)
20107d7c:	1000                	add	s0,sp,32
20107d7e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20107d82:	fec42583          	lw	a1,-20(s0)
20107d86:	800017b7          	lui	a5,0x80001
20107d8a:	a2878513          	add	a0,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
20107d8e:	282d                	jal	20107dc8 <metal_uart_putc>
20107d90:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/tty.c:14
}
20107d92:	853e                	mv	a0,a5
20107d94:	40f2                	lw	ra,28(sp)
20107d96:	4462                	lw	s0,24(sp)
20107d98:	6105                	add	sp,sp,32
20107d9a:	8082                	ret

20107d9c <metal_uart_init>:
metal_uart_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20107d9c:	1101                	add	sp,sp,-32
20107d9e:	ce06                	sw	ra,28(sp)
20107da0:	cc22                	sw	s0,24(sp)
20107da2:	1000                	add	s0,sp,32
20107da4:	fea42623          	sw	a0,-20(s0)
20107da8:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20107dac:	fec42783          	lw	a5,-20(s0)
20107db0:	439c                	lw	a5,0(a5)
20107db2:	439c                	lw	a5,0(a5)
20107db4:	fe842583          	lw	a1,-24(s0)
20107db8:	fec42503          	lw	a0,-20(s0)
20107dbc:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:61
}
20107dbe:	0001                	nop
20107dc0:	40f2                	lw	ra,28(sp)
20107dc2:	4462                	lw	s0,24(sp)
20107dc4:	6105                	add	sp,sp,32
20107dc6:	8082                	ret

20107dc8 <metal_uart_putc>:
metal_uart_putc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20107dc8:	1101                	add	sp,sp,-32
20107dca:	ce06                	sw	ra,28(sp)
20107dcc:	cc22                	sw	s0,24(sp)
20107dce:	1000                	add	s0,sp,32
20107dd0:	fea42623          	sw	a0,-20(s0)
20107dd4:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20107dd8:	fec42783          	lw	a5,-20(s0)
20107ddc:	439c                	lw	a5,0(a5)
20107dde:	43dc                	lw	a5,4(a5)
20107de0:	fe842583          	lw	a1,-24(s0)
20107de4:	fec42503          	lw	a0,-20(s0)
20107de8:	9782                	jalr	a5
20107dea:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:71
}
20107dec:	853e                	mv	a0,a5
20107dee:	40f2                	lw	ra,28(sp)
20107df0:	4462                	lw	s0,24(sp)
20107df2:	6105                	add	sp,sp,32
20107df4:	8082                	ret

20107df6 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20107df6:	1101                	add	sp,sp,-32
20107df8:	ce06                	sw	ra,28(sp)
20107dfa:	cc22                	sw	s0,24(sp)
20107dfc:	1000                	add	s0,sp,32
20107dfe:	fea42623          	sw	a0,-20(s0)
20107e02:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20107e06:	fec42783          	lw	a5,-20(s0)
20107e0a:	439c                	lw	a5,0(a5)
20107e0c:	4bdc                	lw	a5,20(a5)
20107e0e:	fe842583          	lw	a1,-24(s0)
20107e12:	fec42503          	lw	a0,-20(s0)
20107e16:	9782                	jalr	a5
20107e18:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/uart.h:113
}
20107e1a:	853e                	mv	a0,a5
20107e1c:	40f2                	lw	ra,28(sp)
20107e1e:	4462                	lw	s0,24(sp)
20107e20:	6105                	add	sp,sp,32
20107e22:	8082                	ret

20107e24 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:208
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20107e24:	1101                	add	sp,sp,-32
20107e26:	ce22                	sw	s0,28(sp)
20107e28:	1000                	add	s0,sp,32
20107e2a:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:209
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20107e2e:	fec42703          	lw	a4,-20(s0)
20107e32:	800017b7          	lui	a5,0x80001
20107e36:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_dt_clint_2000000>
20107e3a:	00f71563          	bne	a4,a5,20107e44 <__metal_driver_sifive_clint0_control_base+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:210
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20107e3e:	020007b7          	lui	a5,0x2000
20107e42:	a011                	j	20107e46 <__metal_driver_sifive_clint0_control_base+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:213
	}
	else {
		return 0;
20107e44:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:215
	}
}
20107e46:	853e                	mv	a0,a5
20107e48:	4472                	lw	s0,28(sp)
20107e4a:	6105                	add	sp,sp,32
20107e4c:	8082                	ret

20107e4e <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:228
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20107e4e:	1101                	add	sp,sp,-32
20107e50:	ce22                	sw	s0,28(sp)
20107e52:	1000                	add	s0,sp,32
20107e54:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:229
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20107e58:	fec42703          	lw	a4,-20(s0)
20107e5c:	800017b7          	lui	a5,0x80001
20107e60:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_dt_clint_2000000>
20107e64:	00f71463          	bne	a4,a5,20107e6c <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:230
		return METAL_MAX_CLINT_INTERRUPTS;
20107e68:	4789                	li	a5,2
20107e6a:	a011                	j	20107e6e <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:233
	}
	else {
		return 0;
20107e6c:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:235
	}
}
20107e6e:	853e                	mv	a0,a5
20107e70:	4472                	lw	s0,28(sp)
20107e72:	6105                	add	sp,sp,32
20107e74:	8082                	ret

20107e76 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:238

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20107e76:	1101                	add	sp,sp,-32
20107e78:	ce22                	sw	s0,28(sp)
20107e7a:	1000                	add	s0,sp,32
20107e7c:	fea42623          	sw	a0,-20(s0)
20107e80:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:239
	if (idx == 0) {
20107e84:	fe842783          	lw	a5,-24(s0)
20107e88:	e791                	bnez	a5,20107e94 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:240
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20107e8a:	800007b7          	lui	a5,0x80000
20107e8e:	08078793          	add	a5,a5,128 # 80000080 <__metal_dt_cpu_0_interrupt_controller>
20107e92:	a821                	j	20107eaa <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:242
	}
	else if (idx == 1) {
20107e94:	fe842703          	lw	a4,-24(s0)
20107e98:	4785                	li	a5,1
20107e9a:	00f71763          	bne	a4,a5,20107ea8 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:243
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20107e9e:	800007b7          	lui	a5,0x80000
20107ea2:	08078793          	add	a5,a5,128 # 80000080 <__metal_dt_cpu_0_interrupt_controller>
20107ea6:	a011                	j	20107eaa <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:246
	}
	else {
		return NULL;
20107ea8:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:248
	}
}
20107eaa:	853e                	mv	a0,a5
20107eac:	4472                	lw	s0,28(sp)
20107eae:	6105                	add	sp,sp,32
20107eb0:	8082                	ret

20107eb2 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:251

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20107eb2:	1101                	add	sp,sp,-32
20107eb4:	ce22                	sw	s0,28(sp)
20107eb6:	1000                	add	s0,sp,32
20107eb8:	fea42623          	sw	a0,-20(s0)
20107ebc:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:252
	if (idx == 0) {
20107ec0:	fe842783          	lw	a5,-24(s0)
20107ec4:	e399                	bnez	a5,20107eca <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:253
		return 3;
20107ec6:	478d                	li	a5,3
20107ec8:	a809                	j	20107eda <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:255
	}
	else if (idx == 1) {
20107eca:	fe842703          	lw	a4,-24(s0)
20107ece:	4785                	li	a5,1
20107ed0:	00f71463          	bne	a4,a5,20107ed8 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:256
		return 7;
20107ed4:	479d                	li	a5,7
20107ed6:	a011                	j	20107eda <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:259
	}
	else {
		return 0;
20107ed8:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:261
	}
}
20107eda:	853e                	mv	a0,a5
20107edc:	4472                	lw	s0,28(sp)
20107ede:	6105                	add	sp,sp,32
20107ee0:	8082                	ret

20107ee2 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20107ee2:	715d                	add	sp,sp,-80
20107ee4:	c686                	sw	ra,76(sp)
20107ee6:	c4a2                	sw	s0,72(sp)
20107ee8:	c2ca                	sw	s2,68(sp)
20107eea:	c0ce                	sw	s3,64(sp)
20107eec:	de52                	sw	s4,60(sp)
20107eee:	dc56                	sw	s5,56(sp)
20107ef0:	da5a                	sw	s6,52(sp)
20107ef2:	d85e                	sw	s7,48(sp)
20107ef4:	d662                	sw	s8,44(sp)
20107ef6:	d466                	sw	s9,40(sp)
20107ef8:	0880                	add	s0,sp,80
20107efa:	faa42e23          	sw	a0,-68(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20107efe:	fbc42783          	lw	a5,-68(s0)
20107f02:	853e                	mv	a0,a5
20107f04:	3705                	jal	20107e24 <__metal_driver_sifive_clint0_control_base>
20107f06:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:21

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20107f0a:	fcc42703          	lw	a4,-52(s0)
20107f0e:	67b1                	lui	a5,0xc
20107f10:	17f1                	add	a5,a5,-4 # bffc <__heap_size+0xb7fc>
20107f12:	97ba                	add	a5,a5,a4
20107f14:	439c                	lw	a5,0(a5)
20107f16:	fcf42423          	sw	a5,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:23
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20107f1a:	fcc42703          	lw	a4,-52(s0)
20107f1e:	67b1                	lui	a5,0xc
20107f20:	17e1                	add	a5,a5,-8 # bff8 <__heap_size+0xb7f8>
20107f22:	97ba                	add	a5,a5,a4
20107f24:	439c                	lw	a5,0(a5)
20107f26:	fcf42223          	sw	a5,-60(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:25
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20107f2a:	fcc42703          	lw	a4,-52(s0)
20107f2e:	67b1                	lui	a5,0xc
20107f30:	17f1                	add	a5,a5,-4 # bffc <__heap_size+0xb7fc>
20107f32:	97ba                	add	a5,a5,a4
20107f34:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:27 (discriminator 1)
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);
20107f36:	fc842703          	lw	a4,-56(s0)
20107f3a:	fcf718e3          	bne	a4,a5,20107f0a <__metal_clint0_mtime_get+0x28>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:29

    return (((unsigned long long)hi) << 32) | lo;
20107f3e:	fc842783          	lw	a5,-56(s0)
20107f42:	8c3e                	mv	s8,a5
20107f44:	4c81                	li	s9,0
20107f46:	000c1993          	sll	s3,s8,0x0
20107f4a:	4901                	li	s2,0
20107f4c:	fc442783          	lw	a5,-60(s0)
20107f50:	8a3e                	mv	s4,a5
20107f52:	4a81                	li	s5,0
20107f54:	01496b33          	or	s6,s2,s4
20107f58:	0159ebb3          	or	s7,s3,s5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:29 (discriminator 1)
20107f5c:	875a                	mv	a4,s6
20107f5e:	87de                	mv	a5,s7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:30
}
20107f60:	853a                	mv	a0,a4
20107f62:	85be                	mv	a1,a5
20107f64:	40b6                	lw	ra,76(sp)
20107f66:	4426                	lw	s0,72(sp)
20107f68:	4916                	lw	s2,68(sp)
20107f6a:	4986                	lw	s3,64(sp)
20107f6c:	5a72                	lw	s4,60(sp)
20107f6e:	5ae2                	lw	s5,56(sp)
20107f70:	5b52                	lw	s6,52(sp)
20107f72:	5bc2                	lw	s7,48(sp)
20107f74:	5c32                	lw	s8,44(sp)
20107f76:	5ca2                	lw	s9,40(sp)
20107f78:	6161                	add	sp,sp,80
20107f7a:	8082                	ret

20107f7c <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20107f7c:	7179                	add	sp,sp,-48
20107f7e:	d606                	sw	ra,44(sp)
20107f80:	d422                	sw	s0,40(sp)
20107f82:	d24a                	sw	s2,36(sp)
20107f84:	d04e                	sw	s3,32(sp)
20107f86:	1800                	add	s0,sp,48
20107f88:	fca42e23          	sw	a0,-36(s0)
20107f8c:	fcb42c23          	sw	a1,-40(s0)
20107f90:	fcc42823          	sw	a2,-48(s0)
20107f94:	fcd42a23          	sw	a3,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20107f98:	fdc42783          	lw	a5,-36(s0)
20107f9c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20107fa0:	fec42783          	lw	a5,-20(s0)
20107fa4:	853e                	mv	a0,a5
20107fa6:	3dbd                	jal	20107e24 <__metal_driver_sifive_clint0_control_base>
20107fa8:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20107fac:	fd842783          	lw	a5,-40(s0)
20107fb0:	078e                	sll	a5,a5,0x3
20107fb2:	873e                	mv	a4,a5
20107fb4:	fe842783          	lw	a5,-24(s0)
20107fb8:	973e                	add	a4,a4,a5
20107fba:	6791                	lui	a5,0x4
20107fbc:	0791                	add	a5,a5,4 # 4004 <__heap_size+0x3804>
20107fbe:	97ba                	add	a5,a5,a4
20107fc0:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20107fc2:	57fd                	li	a5,-1
20107fc4:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20107fc6:	fd842783          	lw	a5,-40(s0)
20107fca:	078e                	sll	a5,a5,0x3
20107fcc:	873e                	mv	a4,a5
20107fce:	fe842783          	lw	a5,-24(s0)
20107fd2:	973e                	add	a4,a4,a5
20107fd4:	6791                	lui	a5,0x4
20107fd6:	97ba                	add	a5,a5,a4
20107fd8:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20107fda:	fd042783          	lw	a5,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20107fde:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20107fe0:	fd442783          	lw	a5,-44(s0)
20107fe4:	0007d913          	srl	s2,a5,0x0
20107fe8:	4981                	li	s3,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20107fea:	fd842783          	lw	a5,-40(s0)
20107fee:	078e                	sll	a5,a5,0x3
20107ff0:	873e                	mv	a4,a5
20107ff2:	fe842783          	lw	a5,-24(s0)
20107ff6:	973e                	add	a4,a4,a5
20107ff8:	6791                	lui	a5,0x4
20107ffa:	0791                	add	a5,a5,4 # 4004 <__heap_size+0x3804>
20107ffc:	97ba                	add	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20107ffe:	874a                	mv	a4,s2
20108000:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20108002:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:55
}
20108004:	853e                	mv	a0,a5
20108006:	50b2                	lw	ra,44(sp)
20108008:	5422                	lw	s0,40(sp)
2010800a:	5912                	lw	s2,36(sp)
2010800c:	5982                	lw	s3,32(sp)
2010800e:	6145                	add	sp,sp,48
20108010:	8082                	ret

20108012 <_get_cpu_intc>:
_get_cpu_intc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20108012:	1101                	add	sp,sp,-32
20108014:	ce06                	sw	ra,28(sp)
20108016:	cc22                	sw	s0,24(sp)
20108018:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
2010801a:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2010801e:	f14027f3          	csrr	a5,mhartid
20108022:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20108026:	fec42783          	lw	a5,-20(s0)
2010802a:	853e                	mv	a0,a5
2010802c:	258040ef          	jal	2010c284 <metal_cpu_get>
20108030:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20108034:	fe842503          	lw	a0,-24(s0)
20108038:	226040ef          	jal	2010c25e <metal_cpu_interrupt_controller>
2010803c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:65
}
2010803e:	853e                	mv	a0,a5
20108040:	40f2                	lw	ra,28(sp)
20108042:	4462                	lw	s0,24(sp)
20108044:	6105                	add	sp,sp,32
20108046:	8082                	ret

20108048 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20108048:	7139                	add	sp,sp,-64
2010804a:	de06                	sw	ra,60(sp)
2010804c:	dc22                	sw	s0,56(sp)
2010804e:	0080                	add	s0,sp,64
20108050:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20108054:	fcc42503          	lw	a0,-52(s0)
20108058:	3bdd                	jal	20107e4e <__metal_driver_sifive_clint0_num_interrupts>
2010805a:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
2010805e:	fcc42783          	lw	a5,-52(s0)
20108062:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20108066:	fe442783          	lw	a5,-28(s0)
2010806a:	43dc                	lw	a5,4(a5)
2010806c:	efa9                	bnez	a5,201080c6 <__metal_driver_riscv_clint0_init+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
2010806e:	fe042623          	sw	zero,-20(s0)
20108072:	a081                	j	201080b2 <__metal_driver_riscv_clint0_init+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:78
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20108074:	fec42583          	lw	a1,-20(s0)
20108078:	fcc42503          	lw	a0,-52(s0)
2010807c:	3bed                	jal	20107e76 <__metal_driver_sifive_clint0_interrupt_parents>
2010807e:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:80
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20108082:	fec42583          	lw	a1,-20(s0)
20108086:	fcc42503          	lw	a0,-52(s0)
2010808a:	3525                	jal	20107eb2 <__metal_driver_sifive_clint0_interrupt_lines>
2010808c:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:81
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20108090:	fe042783          	lw	a5,-32(s0)
20108094:	439c                	lw	a5,0(a5)
20108096:	4fdc                	lw	a5,28(a5)
20108098:	fcc42683          	lw	a3,-52(s0)
2010809c:	4601                	li	a2,0
2010809e:	fdc42583          	lw	a1,-36(s0)
201080a2:	fe042503          	lw	a0,-32(s0)
201080a6:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
201080a8:	fec42783          	lw	a5,-20(s0)
201080ac:	0785                	add	a5,a5,1
201080ae:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
201080b2:	fec42703          	lw	a4,-20(s0)
201080b6:	fe842783          	lw	a5,-24(s0)
201080ba:	faf74de3          	blt	a4,a5,20108074 <__metal_driver_riscv_clint0_init+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
201080be:	fe442783          	lw	a5,-28(s0)
201080c2:	4705                	li	a4,1
201080c4:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
201080c6:	0001                	nop
201080c8:	50f2                	lw	ra,60(sp)
201080ca:	5462                	lw	s0,56(sp)
201080cc:	6121                	add	sp,sp,64
201080ce:	8082                	ret

201080d0 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
201080d0:	7139                	add	sp,sp,-64
201080d2:	de06                	sw	ra,60(sp)
201080d4:	dc22                	sw	s0,56(sp)
201080d6:	0080                	add	s0,sp,64
201080d8:	fca42623          	sw	a0,-52(s0)
201080dc:	fcb42423          	sw	a1,-56(s0)
201080e0:	fcc42223          	sw	a2,-60(s0)
201080e4:	fcd42023          	sw	a3,-64(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
201080e8:	57fd                	li	a5,-1
201080ea:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
201080ee:	46c010ef          	jal	2010955a <__metal_controller_interrupt_vector_mode>
201080f2:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
201080f6:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
201080fa:	3f21                	jal	20108012 <_get_cpu_intc>
201080fc:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20108100:	fcc42503          	lw	a0,-52(s0)
20108104:	33a9                	jal	20107e4e <__metal_driver_sifive_clint0_num_interrupts>
20108106:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
2010810a:	fe042703          	lw	a4,-32(s0)
2010810e:	4785                	li	a5,1
20108110:	00f70863          	beq	a4,a5,20108120 <__metal_driver_riscv_clint0_register+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20108114:	fe042783          	lw	a5,-32(s0)
20108118:	c781                	beqz	a5,20108120 <__metal_driver_riscv_clint0_register+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
2010811a:	fec42783          	lw	a5,-20(s0)
2010811e:	a049                	j	201081a0 <__metal_driver_riscv_clint0_register+0xd0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20108120:	fe042223          	sw	zero,-28(s0)
20108124:	a091                	j	20108168 <__metal_driver_riscv_clint0_register+0x98>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20108126:	fe442583          	lw	a1,-28(s0)
2010812a:	fcc42503          	lw	a0,-52(s0)
2010812e:	3351                	jal	20107eb2 <__metal_driver_sifive_clint0_interrupt_lines>
20108130:	fca42a23          	sw	a0,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20108134:	fe442583          	lw	a1,-28(s0)
20108138:	fcc42503          	lw	a0,-52(s0)
2010813c:	3b2d                	jal	20107e76 <__metal_driver_sifive_clint0_interrupt_parents>
2010813e:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20108142:	fdc42703          	lw	a4,-36(s0)
20108146:	fe842783          	lw	a5,-24(s0)
2010814a:	00f71863          	bne	a4,a5,2010815a <__metal_driver_riscv_clint0_register+0x8a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
2010814e:	fc842703          	lw	a4,-56(s0)
20108152:	fd442783          	lw	a5,-44(s0)
20108156:	02f70063          	beq	a4,a5,20108176 <__metal_driver_riscv_clint0_register+0xa6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:107
            break;
        }
        intc = NULL;
2010815a:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
2010815e:	fe442783          	lw	a5,-28(s0)
20108162:	0785                	add	a5,a5,1
20108164:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20108168:	fe442703          	lw	a4,-28(s0)
2010816c:	fd842783          	lw	a5,-40(s0)
20108170:	faf74be3          	blt	a4,a5,20108126 <__metal_driver_riscv_clint0_register+0x56>
20108174:	a011                	j	20108178 <__metal_driver_riscv_clint0_register+0xa8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20108176:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20108178:	fe842783          	lw	a5,-24(s0)
2010817c:	c385                	beqz	a5,2010819c <__metal_driver_riscv_clint0_register+0xcc>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
2010817e:	fe842783          	lw	a5,-24(s0)
20108182:	439c                	lw	a5,0(a5)
20108184:	4fdc                	lw	a5,28(a5)
20108186:	fc042683          	lw	a3,-64(s0)
2010818a:	fc442603          	lw	a2,-60(s0)
2010818e:	fc842583          	lw	a1,-56(s0)
20108192:	fe842503          	lw	a0,-24(s0)
20108196:	9782                	jalr	a5
20108198:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
2010819c:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:115
}
201081a0:	853e                	mv	a0,a5
201081a2:	50f2                	lw	ra,60(sp)
201081a4:	5462                	lw	s0,56(sp)
201081a6:	6121                	add	sp,sp,64
201081a8:	8082                	ret

201081aa <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
201081aa:	7179                	add	sp,sp,-48
201081ac:	d622                	sw	s0,44(sp)
201081ae:	1800                	add	s0,sp,48
201081b0:	fca42e23          	sw	a0,-36(s0)
201081b4:	fcb42c23          	sw	a1,-40(s0)
201081b8:	fcc42a23          	sw	a2,-44(s0)
201081bc:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
201081c0:	57fd                	li	a5,-1
201081c2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
201081c6:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:123
}
201081ca:	853e                	mv	a0,a5
201081cc:	5432                	lw	s0,44(sp)
201081ce:	6145                	add	sp,sp,48
201081d0:	8082                	ret

201081d2 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
201081d2:	1101                	add	sp,sp,-32
201081d4:	ce06                	sw	ra,28(sp)
201081d6:	cc22                	sw	s0,24(sp)
201081d8:	1000                	add	s0,sp,32
201081da:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
201081de:	37c010ef          	jal	2010955a <__metal_controller_interrupt_vector_mode>
201081e2:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:128
}
201081e4:	853e                	mv	a0,a5
201081e6:	40f2                	lw	ra,28(sp)
201081e8:	4462                	lw	s0,24(sp)
201081ea:	6105                	add	sp,sp,32
201081ec:	8082                	ret

201081ee <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
201081ee:	7179                	add	sp,sp,-48
201081f0:	d606                	sw	ra,44(sp)
201081f2:	d422                	sw	s0,40(sp)
201081f4:	1800                	add	s0,sp,48
201081f6:	fca42e23          	sw	a0,-36(s0)
201081fa:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
201081fe:	57fd                	li	a5,-1
20108200:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20108204:	3539                	jal	20108012 <_get_cpu_intc>
20108206:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
2010820a:	fe842783          	lw	a5,-24(s0)
2010820e:	c39d                	beqz	a5,20108234 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20108210:	fd842703          	lw	a4,-40(s0)
20108214:	4785                	li	a5,1
20108216:	00e7ee63          	bltu	a5,a4,20108232 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
2010821a:	fe842783          	lw	a5,-24(s0)
2010821e:	439c                	lw	a5,0(a5)
20108220:	43dc                	lw	a5,4(a5)
20108222:	fd842583          	lw	a1,-40(s0)
20108226:	fe842503          	lw	a0,-24(s0)
2010822a:	9782                	jalr	a5
2010822c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20108230:	a011                	j	20108234 <__metal_driver_riscv_clint0_set_vector_mode+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:144
        default:
            break;
20108232:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:147
        }
    }
    return rc;
20108234:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:148
}
20108238:	853e                	mv	a0,a5
2010823a:	50b2                	lw	ra,44(sp)
2010823c:	5422                	lw	s0,40(sp)
2010823e:	6145                	add	sp,sp,48
20108240:	8082                	ret

20108242 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20108242:	7139                	add	sp,sp,-64
20108244:	de06                	sw	ra,60(sp)
20108246:	dc22                	sw	s0,56(sp)
20108248:	0080                	add	s0,sp,64
2010824a:	fca42623          	sw	a0,-52(s0)
2010824e:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20108252:	57fd                	li	a5,-1
20108254:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20108258:	fc842783          	lw	a5,-56(s0)
2010825c:	cbc1                	beqz	a5,201082ec <__metal_driver_riscv_clint0_enable+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2010825e:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20108262:	3b45                	jal	20108012 <_get_cpu_intc>
20108264:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20108268:	fcc42503          	lw	a0,-52(s0)
2010826c:	be3ff0ef          	jal	20107e4e <__metal_driver_sifive_clint0_num_interrupts>
20108270:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20108274:	fe042223          	sw	zero,-28(s0)
20108278:	a0a1                	j	201082c0 <__metal_driver_riscv_clint0_enable+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2010827a:	fe442583          	lw	a1,-28(s0)
2010827e:	fcc42503          	lw	a0,-52(s0)
20108282:	c31ff0ef          	jal	20107eb2 <__metal_driver_sifive_clint0_interrupt_lines>
20108286:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2010828a:	fe442583          	lw	a1,-28(s0)
2010828e:	fcc42503          	lw	a0,-52(s0)
20108292:	be5ff0ef          	jal	20107e76 <__metal_driver_sifive_clint0_interrupt_parents>
20108296:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
2010829a:	fe042703          	lw	a4,-32(s0)
2010829e:	fe842783          	lw	a5,-24(s0)
201082a2:	00f71863          	bne	a4,a5,201082b2 <__metal_driver_riscv_clint0_enable+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
201082a6:	fc842703          	lw	a4,-56(s0)
201082aa:	fd842783          	lw	a5,-40(s0)
201082ae:	02f70063          	beq	a4,a5,201082ce <__metal_driver_riscv_clint0_enable+0x8c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:168
                break;
            }
            intc = NULL;
201082b2:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
201082b6:	fe442783          	lw	a5,-28(s0)
201082ba:	0785                	add	a5,a5,1
201082bc:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
201082c0:	fe442703          	lw	a4,-28(s0)
201082c4:	fdc42783          	lw	a5,-36(s0)
201082c8:	faf749e3          	blt	a4,a5,2010827a <__metal_driver_riscv_clint0_enable+0x38>
201082cc:	a011                	j	201082d0 <__metal_driver_riscv_clint0_enable+0x8e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
201082ce:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
201082d0:	fe842783          	lw	a5,-24(s0)
201082d4:	cf81                	beqz	a5,201082ec <__metal_driver_riscv_clint0_enable+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
201082d6:	fe842783          	lw	a5,-24(s0)
201082da:	439c                	lw	a5,0(a5)
201082dc:	53dc                	lw	a5,36(a5)
201082de:	fc842583          	lw	a1,-56(s0)
201082e2:	fe842503          	lw	a0,-24(s0)
201082e6:	9782                	jalr	a5
201082e8:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
201082ec:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:178
}
201082f0:	853e                	mv	a0,a5
201082f2:	50f2                	lw	ra,60(sp)
201082f4:	5462                	lw	s0,56(sp)
201082f6:	6121                	add	sp,sp,64
201082f8:	8082                	ret

201082fa <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
201082fa:	7139                	add	sp,sp,-64
201082fc:	de06                	sw	ra,60(sp)
201082fe:	dc22                	sw	s0,56(sp)
20108300:	0080                	add	s0,sp,64
20108302:	fca42623          	sw	a0,-52(s0)
20108306:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
2010830a:	57fd                	li	a5,-1
2010830c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20108310:	fc842783          	lw	a5,-56(s0)
20108314:	cbc1                	beqz	a5,201083a4 <__metal_driver_riscv_clint0_disable+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20108316:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2010831a:	39e5                	jal	20108012 <_get_cpu_intc>
2010831c:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20108320:	fcc42503          	lw	a0,-52(s0)
20108324:	b2bff0ef          	jal	20107e4e <__metal_driver_sifive_clint0_num_interrupts>
20108328:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
2010832c:	fe042223          	sw	zero,-28(s0)
20108330:	a0a1                	j	20108378 <__metal_driver_riscv_clint0_disable+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20108332:	fe442583          	lw	a1,-28(s0)
20108336:	fcc42503          	lw	a0,-52(s0)
2010833a:	b79ff0ef          	jal	20107eb2 <__metal_driver_sifive_clint0_interrupt_lines>
2010833e:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20108342:	fe442583          	lw	a1,-28(s0)
20108346:	fcc42503          	lw	a0,-52(s0)
2010834a:	b2dff0ef          	jal	20107e76 <__metal_driver_sifive_clint0_interrupt_parents>
2010834e:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20108352:	fe042703          	lw	a4,-32(s0)
20108356:	fe842783          	lw	a5,-24(s0)
2010835a:	00f71863          	bne	a4,a5,2010836a <__metal_driver_riscv_clint0_disable+0x70>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
2010835e:	fc842703          	lw	a4,-56(s0)
20108362:	fd842783          	lw	a5,-40(s0)
20108366:	02f70063          	beq	a4,a5,20108386 <__metal_driver_riscv_clint0_disable+0x8c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:198
                break;
            }
            intc = NULL;
2010836a:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
2010836e:	fe442783          	lw	a5,-28(s0)
20108372:	0785                	add	a5,a5,1
20108374:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20108378:	fe442703          	lw	a4,-28(s0)
2010837c:	fdc42783          	lw	a5,-36(s0)
20108380:	faf749e3          	blt	a4,a5,20108332 <__metal_driver_riscv_clint0_disable+0x38>
20108384:	a011                	j	20108388 <__metal_driver_riscv_clint0_disable+0x8e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20108386:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20108388:	fe842783          	lw	a5,-24(s0)
2010838c:	cf81                	beqz	a5,201083a4 <__metal_driver_riscv_clint0_disable+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
2010838e:	fe842783          	lw	a5,-24(s0)
20108392:	439c                	lw	a5,0(a5)
20108394:	579c                	lw	a5,40(a5)
20108396:	fc842583          	lw	a1,-56(s0)
2010839a:	fe842503          	lw	a0,-24(s0)
2010839e:	9782                	jalr	a5
201083a0:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
201083a4:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:208
}
201083a8:	853e                	mv	a0,a5
201083aa:	50f2                	lw	ra,60(sp)
201083ac:	5462                	lw	s0,56(sp)
201083ae:	6121                	add	sp,sp,64
201083b0:	8082                	ret

201083b2 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
201083b2:	7179                	add	sp,sp,-48
201083b4:	d606                	sw	ra,44(sp)
201083b6:	d422                	sw	s0,40(sp)
201083b8:	1800                	add	s0,sp,48
201083ba:	fca42e23          	sw	a0,-36(s0)
201083be:	fcb42c23          	sw	a1,-40(s0)
201083c2:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
201083c6:	57fd                	li	a5,-1
201083c8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
201083cc:	fdc42783          	lw	a5,-36(s0)
201083d0:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
201083d4:	fdc42503          	lw	a0,-36(s0)
201083d8:	a4dff0ef          	jal	20107e24 <__metal_driver_sifive_clint0_control_base>
201083dc:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
201083e0:	fd842703          	lw	a4,-40(s0)
201083e4:	4791                	li	a5,4
201083e6:	0cf70163          	beq	a4,a5,201084a8 <__metal_driver_riscv_clint0_command_request+0xf6>
201083ea:	fd842703          	lw	a4,-40(s0)
201083ee:	4791                	li	a5,4
201083f0:	0ee7c163          	blt	a5,a4,201084d2 <__metal_driver_riscv_clint0_command_request+0x120>
201083f4:	fd842703          	lw	a4,-40(s0)
201083f8:	478d                	li	a5,3
201083fa:	06f70663          	beq	a4,a5,20108466 <__metal_driver_riscv_clint0_command_request+0xb4>
201083fe:	fd842703          	lw	a4,-40(s0)
20108402:	478d                	li	a5,3
20108404:	0ce7c763          	blt	a5,a4,201084d2 <__metal_driver_riscv_clint0_command_request+0x120>
20108408:	fd842703          	lw	a4,-40(s0)
2010840c:	4785                	li	a5,1
2010840e:	00f70863          	beq	a4,a5,2010841e <__metal_driver_riscv_clint0_command_request+0x6c>
20108412:	fd842703          	lw	a4,-40(s0)
20108416:	4789                	li	a5,2
20108418:	02f70363          	beq	a4,a5,2010843e <__metal_driver_riscv_clint0_command_request+0x8c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
2010841c:	a85d                	j	201084d2 <__metal_driver_riscv_clint0_command_request+0x120>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
2010841e:	fd442783          	lw	a5,-44(s0)
20108422:	cbd5                	beqz	a5,201084d6 <__metal_driver_riscv_clint0_command_request+0x124>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20108424:	fe842503          	lw	a0,-24(s0)
20108428:	abbff0ef          	jal	20107ee2 <__metal_clint0_mtime_get>
2010842c:	872a                	mv	a4,a0
2010842e:	87ae                	mv	a5,a1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:222 (discriminator 1)
20108430:	fd442683          	lw	a3,-44(s0)
20108434:	c298                	sw	a4,0(a3)
20108436:	c2dc                	sw	a5,4(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20108438:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2010843c:	a869                	j	201084d6 <__metal_driver_riscv_clint0_command_request+0x124>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
2010843e:	fd442783          	lw	a5,-44(s0)
20108442:	cfc1                	beqz	a5,201084da <__metal_driver_riscv_clint0_command_request+0x128>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20108444:	fd442783          	lw	a5,-44(s0)
20108448:	439c                	lw	a5,0(a5)
2010844a:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
2010844e:	fe042783          	lw	a5,-32(s0)
20108452:	078a                	sll	a5,a5,0x2
20108454:	873e                	mv	a4,a5
20108456:	fe442783          	lw	a5,-28(s0)
2010845a:	97ba                	add	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
2010845c:	0007a023          	sw	zero,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20108460:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20108464:	a89d                	j	201084da <__metal_driver_riscv_clint0_command_request+0x128>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20108466:	fd442783          	lw	a5,-44(s0)
2010846a:	cbb5                	beqz	a5,201084de <__metal_driver_riscv_clint0_command_request+0x12c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
2010846c:	fd442783          	lw	a5,-44(s0)
20108470:	439c                	lw	a5,0(a5)
20108472:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20108476:	fe042783          	lw	a5,-32(s0)
2010847a:	078a                	sll	a5,a5,0x2
2010847c:	873e                	mv	a4,a5
2010847e:	fe442783          	lw	a5,-28(s0)
20108482:	97ba                	add	a5,a5,a4
20108484:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20108486:	4785                	li	a5,1
20108488:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
2010848a:	0480000f          	fence	o,i
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
2010848e:	fe042783          	lw	a5,-32(s0)
20108492:	078a                	sll	a5,a5,0x2
20108494:	873e                	mv	a4,a5
20108496:	fe442783          	lw	a5,-28(s0)
2010849a:	97ba                	add	a5,a5,a4
2010849c:	439c                	lw	a5,0(a5)
2010849e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
201084a2:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
201084a6:	a825                	j	201084de <__metal_driver_riscv_clint0_command_request+0x12c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
201084a8:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
201084ac:	fd442783          	lw	a5,-44(s0)
201084b0:	cb8d                	beqz	a5,201084e2 <__metal_driver_riscv_clint0_command_request+0x130>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
201084b2:	fd442783          	lw	a5,-44(s0)
201084b6:	439c                	lw	a5,0(a5)
201084b8:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
201084bc:	fe042783          	lw	a5,-32(s0)
201084c0:	078a                	sll	a5,a5,0x2
201084c2:	873e                	mv	a4,a5
201084c4:	fe442783          	lw	a5,-28(s0)
201084c8:	97ba                	add	a5,a5,a4
201084ca:	439c                	lw	a5,0(a5)
201084cc:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
201084d0:	a809                	j	201084e2 <__metal_driver_riscv_clint0_command_request+0x130>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
201084d2:	0001                	nop
201084d4:	a801                	j	201084e4 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
201084d6:	0001                	nop
201084d8:	a031                	j	201084e4 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
201084da:	0001                	nop
201084dc:	a021                	j	201084e4 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
201084de:	0001                	nop
201084e0:	a011                	j	201084e4 <__metal_driver_riscv_clint0_command_request+0x132>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
201084e2:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
201084e4:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:267
}
201084e8:	853e                	mv	a0,a5
201084ea:	50b2                	lw	ra,44(sp)
201084ec:	5422                	lw	s0,40(sp)
201084ee:	6145                	add	sp,sp,48
201084f0:	8082                	ret

201084f2 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
201084f2:	7179                	add	sp,sp,-48
201084f4:	d606                	sw	ra,44(sp)
201084f6:	d422                	sw	s0,40(sp)
201084f8:	1800                	add	s0,sp,48
201084fa:	fca42e23          	sw	a0,-36(s0)
201084fe:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20108502:	5b1030ef          	jal	2010c2b2 <metal_cpu_get_current_hartid>
20108506:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:271 (discriminator 1)
20108508:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
2010850c:	fec40793          	add	a5,s0,-20
20108510:	863e                	mv	a2,a5
20108512:	4589                	li	a1,2
20108514:	fdc42503          	lw	a0,-36(s0)
20108518:	3d69                	jal	201083b2 <__metal_driver_riscv_clint0_command_request>
2010851a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
2010851c:	853e                	mv	a0,a5
2010851e:	50b2                	lw	ra,44(sp)
20108520:	5422                	lw	s0,40(sp)
20108522:	6145                	add	sp,sp,48
20108524:	8082                	ret

20108526 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20108526:	7179                	add	sp,sp,-48
20108528:	d606                	sw	ra,44(sp)
2010852a:	d422                	sw	s0,40(sp)
2010852c:	1800                	add	s0,sp,48
2010852e:	fca42e23          	sw	a0,-36(s0)
20108532:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20108536:	57d030ef          	jal	2010c2b2 <metal_cpu_get_current_hartid>
2010853a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:278 (discriminator 1)
2010853c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20108540:	fec40793          	add	a5,s0,-20
20108544:	863e                	mv	a2,a5
20108546:	458d                	li	a1,3
20108548:	fdc42503          	lw	a0,-36(s0)
2010854c:	359d                	jal	201083b2 <__metal_driver_riscv_clint0_command_request>
2010854e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20108550:	853e                	mv	a0,a5
20108552:	50b2                	lw	ra,44(sp)
20108554:	5422                	lw	s0,40(sp)
20108556:	6145                	add	sp,sp,48
20108558:	8082                	ret

2010855a <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:267



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
2010855a:	1101                	add	sp,sp,-32
2010855c:	ce22                	sw	s0,28(sp)
2010855e:	1000                	add	s0,sp,32
20108560:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:268
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20108564:	fec42703          	lw	a4,-20(s0)
20108568:	81418793          	add	a5,gp,-2028 # 80000a84 <__metal_dt_cpu_0>
2010856c:	00f71463          	bne	a4,a5,20108574 <__metal_driver_cpu_hartid+0x1a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:269
		return 0;
20108570:	4781                	li	a5,0
20108572:	a011                	j	20108576 <__metal_driver_cpu_hartid+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:272
	}
	else {
		return -1;
20108574:	57fd                	li	a5,-1
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:274
	}
}
20108576:	853e                	mv	a0,a5
20108578:	4472                	lw	s0,28(sp)
2010857a:	6105                	add	sp,sp,32
2010857c:	8082                	ret

2010857e <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:277

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
2010857e:	1101                	add	sp,sp,-32
20108580:	ce22                	sw	s0,28(sp)
20108582:	1000                	add	s0,sp,32
20108584:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:278
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20108588:	fec42703          	lw	a4,-20(s0)
2010858c:	81418793          	add	a5,gp,-2028 # 80000a84 <__metal_dt_cpu_0>
20108590:	00f71763          	bne	a4,a5,2010859e <__metal_driver_cpu_timebase+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:279
		return 1000000;
20108594:	000f47b7          	lui	a5,0xf4
20108598:	24078793          	add	a5,a5,576 # f4240 <__heap_size+0xf3a40>
2010859c:	a011                	j	201085a0 <__metal_driver_cpu_timebase+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:282
	}
	else {
		return 0;
2010859e:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:284
	}
}
201085a0:	853e                	mv	a0,a5
201085a2:	4472                	lw	s0,28(sp)
201085a4:	6105                	add	sp,sp,32
201085a6:	8082                	ret

201085a8 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:287

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
201085a8:	1101                	add	sp,sp,-32
201085aa:	ce22                	sw	s0,28(sp)
201085ac:	1000                	add	s0,sp,32
201085ae:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:288
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
201085b2:	fec42703          	lw	a4,-20(s0)
201085b6:	81418793          	add	a5,gp,-2028 # 80000a84 <__metal_dt_cpu_0>
201085ba:	00f71763          	bne	a4,a5,201085c8 <__metal_driver_cpu_interrupt_controller+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:289
		return &__metal_dt_cpu_0_interrupt_controller.controller;
201085be:	800007b7          	lui	a5,0x80000
201085c2:	08078793          	add	a5,a5,128 # 80000080 <__metal_dt_cpu_0_interrupt_controller>
201085c6:	a011                	j	201085ca <__metal_driver_cpu_interrupt_controller+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:292
	}
	else {
		return NULL;
201085c8:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:294
	}
}
201085ca:	853e                	mv	a0,a5
201085cc:	4472                	lw	s0,28(sp)
201085ce:	6105                	add	sp,sp,32
201085d0:	8082                	ret

201085d2 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:307
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
201085d2:	1101                	add	sp,sp,-32
201085d4:	ce22                	sw	s0,28(sp)
201085d6:	1000                	add	s0,sp,32
201085d8:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:308
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
201085dc:	fec42703          	lw	a4,-20(s0)
201085e0:	81418793          	add	a5,gp,-2028 # 80000a84 <__metal_dt_cpu_0>
201085e4:	00f71463          	bne	a4,a5,201085ec <__metal_driver_cpu_buserror+0x1a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:309
		return NULL;
201085e8:	4781                	li	a5,0
201085ea:	a011                	j	201085ee <__metal_driver_cpu_buserror+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:312
	}
	else {
		return NULL;
201085ec:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:314
	}
}
201085ee:	853e                	mv	a0,a5
201085f0:	4472                	lw	s0,28(sp)
201085f2:	6105                	add	sp,sp,32
201085f4:	8082                	ret

201085f6 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
201085f6:	1101                	add	sp,sp,-32
201085f8:	ce22                	sw	s0,28(sp)
201085fa:	1000                	add	s0,sp,32
201085fc:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20108600:	fec42783          	lw	a5,-20(s0)
20108604:	00f04c63          	bgtz	a5,2010861c <__metal_driver_cpu_get+0x26>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20108608:	800017b7          	lui	a5,0x80001
2010860c:	fec42703          	lw	a4,-20(s0)
20108610:	070a                	sll	a4,a4,0x2
20108612:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108616:	97ba                	add	a5,a5,a4
20108618:	439c                	lw	a5,0(a5)
2010861a:	a011                	j	2010861e <__metal_driver_cpu_get+0x28>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
2010861c:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:30
}
2010861e:	853e                	mv	a0,a5
20108620:	4472                	lw	s0,28(sp)
20108622:	6105                	add	sp,sp,32
20108624:	8082                	ret

20108626 <__metal_myhart_id>:
__metal_myhart_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20108626:	1101                	add	sp,sp,-32
20108628:	ce22                	sw	s0,28(sp)
2010862a:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
2010862c:	f14027f3          	csrr	a5,mhartid
20108630:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20108634:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:36
}
20108638:	853e                	mv	a0,a5
2010863a:	4472                	lw	s0,28(sp)
2010863c:	6105                	add	sp,sp,32
2010863e:	8082                	ret

20108640 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20108640:	1101                	add	sp,sp,-32
20108642:	ce22                	sw	s0,28(sp)
20108644:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20108646:	47a1                	li	a5,8
20108648:	3007a7f3          	csrrs	a5,mstatus,a5
2010864c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20108650:	0001                	nop
20108652:	4472                	lw	s0,28(sp)
20108654:	6105                	add	sp,sp,32
20108656:	8082                	ret

20108658 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20108658:	1101                	add	sp,sp,-32
2010865a:	ce22                	sw	s0,28(sp)
2010865c:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
2010865e:	47a1                	li	a5,8
20108660:	3007b7f3          	csrrc	a5,mstatus,a5
20108664:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20108668:	0001                	nop
2010866a:	4472                	lw	s0,28(sp)
2010866c:	6105                	add	sp,sp,32
2010866e:	8082                	ret

20108670 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20108670:	1101                	add	sp,sp,-32
20108672:	ce22                	sw	s0,28(sp)
20108674:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20108676:	47a1                	li	a5,8
20108678:	3047a7f3          	csrrs	a5,mie,a5
2010867c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20108680:	0001                	nop
20108682:	4472                	lw	s0,28(sp)
20108684:	6105                	add	sp,sp,32
20108686:	8082                	ret

20108688 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20108688:	1101                	add	sp,sp,-32
2010868a:	ce22                	sw	s0,28(sp)
2010868c:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2010868e:	47a1                	li	a5,8
20108690:	3047b7f3          	csrrc	a5,mie,a5
20108694:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20108698:	0001                	nop
2010869a:	4472                	lw	s0,28(sp)
2010869c:	6105                	add	sp,sp,32
2010869e:	8082                	ret

201086a0 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
201086a0:	1101                	add	sp,sp,-32
201086a2:	ce22                	sw	s0,28(sp)
201086a4:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
201086a6:	08000793          	li	a5,128
201086aa:	3047a7f3          	csrrs	a5,mie,a5
201086ae:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
201086b2:	0001                	nop
201086b4:	4472                	lw	s0,28(sp)
201086b6:	6105                	add	sp,sp,32
201086b8:	8082                	ret

201086ba <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
201086ba:	1101                	add	sp,sp,-32
201086bc:	ce22                	sw	s0,28(sp)
201086be:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
201086c0:	08000793          	li	a5,128
201086c4:	3047b7f3          	csrrc	a5,mie,a5
201086c8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
201086cc:	0001                	nop
201086ce:	4472                	lw	s0,28(sp)
201086d0:	6105                	add	sp,sp,32
201086d2:	8082                	ret

201086d4 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
201086d4:	1101                	add	sp,sp,-32
201086d6:	ce22                	sw	s0,28(sp)
201086d8:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
201086da:	6785                	lui	a5,0x1
201086dc:	80078793          	add	a5,a5,-2048 # 800 <__heap_size>
201086e0:	3047a7f3          	csrrs	a5,mie,a5
201086e4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
201086e8:	0001                	nop
201086ea:	4472                	lw	s0,28(sp)
201086ec:	6105                	add	sp,sp,32
201086ee:	8082                	ret

201086f0 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
201086f0:	1101                	add	sp,sp,-32
201086f2:	ce22                	sw	s0,28(sp)
201086f4:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
201086f6:	6785                	lui	a5,0x1
201086f8:	80078793          	add	a5,a5,-2048 # 800 <__heap_size>
201086fc:	3047b7f3          	csrrc	a5,mie,a5
20108700:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20108704:	0001                	nop
20108706:	4472                	lw	s0,28(sp)
20108708:	6105                	add	sp,sp,32
2010870a:	8082                	ret

2010870c <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
2010870c:	7179                	add	sp,sp,-48
2010870e:	d622                	sw	s0,44(sp)
20108710:	1800                	add	s0,sp,48
20108712:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20108716:	fdc42783          	lw	a5,-36(s0)
2010871a:	4705                	li	a4,1
2010871c:	00f717b3          	sll	a5,a4,a5
20108720:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20108724:	fec42783          	lw	a5,-20(s0)
20108728:	3047a7f3          	csrrs	a5,mie,a5
2010872c:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:105
}
20108730:	0001                	nop
20108732:	5432                	lw	s0,44(sp)
20108734:	6145                	add	sp,sp,48
20108736:	8082                	ret

20108738 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20108738:	7179                	add	sp,sp,-48
2010873a:	d622                	sw	s0,44(sp)
2010873c:	1800                	add	s0,sp,48
2010873e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20108742:	fdc42783          	lw	a5,-36(s0)
20108746:	4705                	li	a4,1
20108748:	00f717b3          	sll	a5,a4,a5
2010874c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20108750:	fec42783          	lw	a5,-20(s0)
20108754:	3047b7f3          	csrrc	a5,mie,a5
20108758:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:111
}
2010875c:	0001                	nop
2010875e:	5432                	lw	s0,44(sp)
20108760:	6145                	add	sp,sp,48
20108762:	8082                	ret

20108764 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20108764:	1101                	add	sp,sp,-32
20108766:	ce06                	sw	ra,28(sp)
20108768:	cc22                	sw	s0,24(sp)
2010876a:	1000                	add	s0,sp,32
2010876c:	fea42623          	sw	a0,-20(s0)
20108770:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20108774:	06400513          	li	a0,100
20108778:	355030ef          	jal	2010c2cc <metal_shutdown>

2010877c <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
2010877c:	1101                	add	sp,sp,-32
2010877e:	ce06                	sw	ra,28(sp)
20108780:	cc22                	sw	s0,24(sp)
20108782:	1000                	add	s0,sp,32
20108784:	fea42623          	sw	a0,-20(s0)
20108788:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
2010878c:	0c800513          	li	a0,200
20108790:	33d030ef          	jal	2010c2cc <metal_shutdown>

20108794 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20108794:	715d                	add	sp,sp,-80
20108796:	c686                	sw	ra,76(sp)
20108798:	c496                	sw	t0,72(sp)
2010879a:	c29a                	sw	t1,68(sp)
2010879c:	c09e                	sw	t2,64(sp)
2010879e:	de22                	sw	s0,60(sp)
201087a0:	dc2a                	sw	a0,56(sp)
201087a2:	da2e                	sw	a1,52(sp)
201087a4:	d832                	sw	a2,48(sp)
201087a6:	d636                	sw	a3,44(sp)
201087a8:	d43a                	sw	a4,40(sp)
201087aa:	d23e                	sw	a5,36(sp)
201087ac:	d042                	sw	a6,32(sp)
201087ae:	ce46                	sw	a7,28(sp)
201087b0:	cc72                	sw	t3,24(sp)
201087b2:	ca76                	sw	t4,20(sp)
201087b4:	c87a                	sw	t5,16(sp)
201087b6:	c67e                	sw	t6,12(sp)
201087b8:	0880                	add	s0,sp,80
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
201087ba:	12c00513          	li	a0,300
201087be:	30f030ef          	jal	2010c2cc <metal_shutdown>

201087c2 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
201087c2:	711d                	add	sp,sp,-96
201087c4:	ce86                	sw	ra,92(sp)
201087c6:	cc96                	sw	t0,88(sp)
201087c8:	ca9a                	sw	t1,84(sp)
201087ca:	c89e                	sw	t2,80(sp)
201087cc:	c6a2                	sw	s0,76(sp)
201087ce:	c4aa                	sw	a0,72(sp)
201087d0:	c2ae                	sw	a1,68(sp)
201087d2:	c0b2                	sw	a2,64(sp)
201087d4:	de36                	sw	a3,60(sp)
201087d6:	dc3a                	sw	a4,56(sp)
201087d8:	da3e                	sw	a5,52(sp)
201087da:	d842                	sw	a6,48(sp)
201087dc:	d646                	sw	a7,44(sp)
201087de:	d472                	sw	t3,40(sp)
201087e0:	d276                	sw	t4,36(sp)
201087e2:	d07a                	sw	t5,32(sp)
201087e4:	ce7e                	sw	t6,28(sp)
201087e6:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
201087e8:	3d3d                	jal	20108626 <__metal_myhart_id>
201087ea:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
201087ec:	800017b7          	lui	a5,0x80001
201087f0:	070a                	sll	a4,a4,0x2
201087f2:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
201087f6:	97ba                	add	a5,a5,a4
201087f8:	439c                	lw	a5,0(a5)
201087fa:	faf42623          	sw	a5,-84(s0)
201087fe:	fac42783          	lw	a5,-84(s0)
20108802:	c785                	beqz	a5,2010882a <metal_software_interrupt_vector_handler+0x68>
20108804:	fac42503          	lw	a0,-84(s0)
20108808:	3345                	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
2010880a:	faa42423          	sw	a0,-88(s0)
2010880e:	fa842783          	lw	a5,-88(s0)
20108812:	0e07a783          	lw	a5,224(a5)
20108816:	faf42223          	sw	a5,-92(s0)
2010881a:	fa842783          	lw	a5,-88(s0)
2010881e:	0d87a783          	lw	a5,216(a5)
20108822:	fa442583          	lw	a1,-92(s0)
20108826:	450d                	li	a0,3
20108828:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:130
}
2010882a:	0001                	nop
2010882c:	40f6                	lw	ra,92(sp)
2010882e:	42e6                	lw	t0,88(sp)
20108830:	4356                	lw	t1,84(sp)
20108832:	43c6                	lw	t2,80(sp)
20108834:	4436                	lw	s0,76(sp)
20108836:	4526                	lw	a0,72(sp)
20108838:	4596                	lw	a1,68(sp)
2010883a:	4606                	lw	a2,64(sp)
2010883c:	56f2                	lw	a3,60(sp)
2010883e:	5762                	lw	a4,56(sp)
20108840:	57d2                	lw	a5,52(sp)
20108842:	5842                	lw	a6,48(sp)
20108844:	58b2                	lw	a7,44(sp)
20108846:	5e22                	lw	t3,40(sp)
20108848:	5e92                	lw	t4,36(sp)
2010884a:	5f02                	lw	t5,32(sp)
2010884c:	4ff2                	lw	t6,28(sp)
2010884e:	6125                	add	sp,sp,96
20108850:	30200073          	mret

20108854 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20108854:	7179                	add	sp,sp,-48
20108856:	d606                	sw	ra,44(sp)
20108858:	d422                	sw	s0,40(sp)
2010885a:	1800                	add	s0,sp,48
2010885c:	fca42e23          	sw	a0,-36(s0)
20108860:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20108864:	33c9                	jal	20108626 <__metal_myhart_id>
20108866:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:135 (discriminator 1)
20108868:	800017b7          	lui	a5,0x80001
2010886c:	070a                	sll	a4,a4,0x2
2010886e:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108872:	97ba                	add	a5,a5,a4
20108874:	439c                	lw	a5,0(a5)
20108876:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2010887a:	342027f3          	csrr	a5,mcause
2010887e:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20108882:	fec42783          	lw	a5,-20(s0)
20108886:	c795                	beqz	a5,201088b2 <__metal_default_sw_handler+0x5e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20108888:	fec42503          	lw	a0,-20(s0)
2010888c:	3b31                	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
2010888e:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20108892:	fe842783          	lw	a5,-24(s0)
20108896:	3ff7f793          	and	a5,a5,1023
2010889a:	fe442703          	lw	a4,-28(s0)
2010889e:	0e878793          	add	a5,a5,232
201088a2:	078a                	sll	a5,a5,0x2
201088a4:	97ba                	add	a5,a5,a4
201088a6:	439c                	lw	a5,0(a5)
201088a8:	fdc42583          	lw	a1,-36(s0)
201088ac:	fec42503          	lw	a0,-20(s0)
201088b0:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
201088b2:	0001                	nop
201088b4:	50b2                	lw	ra,44(sp)
201088b6:	5422                	lw	s0,40(sp)
201088b8:	6145                	add	sp,sp,48
201088ba:	8082                	ret

201088bc <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
201088bc:	711d                	add	sp,sp,-96
201088be:	ce86                	sw	ra,92(sp)
201088c0:	cc96                	sw	t0,88(sp)
201088c2:	ca9a                	sw	t1,84(sp)
201088c4:	c89e                	sw	t2,80(sp)
201088c6:	c6a2                	sw	s0,76(sp)
201088c8:	c4aa                	sw	a0,72(sp)
201088ca:	c2ae                	sw	a1,68(sp)
201088cc:	c0b2                	sw	a2,64(sp)
201088ce:	de36                	sw	a3,60(sp)
201088d0:	dc3a                	sw	a4,56(sp)
201088d2:	da3e                	sw	a5,52(sp)
201088d4:	d842                	sw	a6,48(sp)
201088d6:	d646                	sw	a7,44(sp)
201088d8:	d472                	sw	t3,40(sp)
201088da:	d276                	sw	t4,36(sp)
201088dc:	d07a                	sw	t5,32(sp)
201088de:	ce7e                	sw	t6,28(sp)
201088e0:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
201088e2:	3391                	jal	20108626 <__metal_myhart_id>
201088e4:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
201088e6:	800017b7          	lui	a5,0x80001
201088ea:	070a                	sll	a4,a4,0x2
201088ec:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
201088f0:	97ba                	add	a5,a5,a4
201088f2:	439c                	lw	a5,0(a5)
201088f4:	faf42623          	sw	a5,-84(s0)
201088f8:	fac42783          	lw	a5,-84(s0)
201088fc:	c78d                	beqz	a5,20108926 <metal_timer_interrupt_vector_handler+0x6a>
201088fe:	fac42503          	lw	a0,-84(s0)
20108902:	ca7ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108906:	faa42423          	sw	a0,-88(s0)
2010890a:	fa842783          	lw	a5,-88(s0)
2010890e:	1407a783          	lw	a5,320(a5)
20108912:	faf42223          	sw	a5,-92(s0)
20108916:	fa842783          	lw	a5,-88(s0)
2010891a:	1387a783          	lw	a5,312(a5)
2010891e:	fa442583          	lw	a1,-92(s0)
20108922:	451d                	li	a0,7
20108924:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:150
}
20108926:	0001                	nop
20108928:	40f6                	lw	ra,92(sp)
2010892a:	42e6                	lw	t0,88(sp)
2010892c:	4356                	lw	t1,84(sp)
2010892e:	43c6                	lw	t2,80(sp)
20108930:	4436                	lw	s0,76(sp)
20108932:	4526                	lw	a0,72(sp)
20108934:	4596                	lw	a1,68(sp)
20108936:	4606                	lw	a2,64(sp)
20108938:	56f2                	lw	a3,60(sp)
2010893a:	5762                	lw	a4,56(sp)
2010893c:	57d2                	lw	a5,52(sp)
2010893e:	5842                	lw	a6,48(sp)
20108940:	58b2                	lw	a7,44(sp)
20108942:	5e22                	lw	t3,40(sp)
20108944:	5e92                	lw	t4,36(sp)
20108946:	5f02                	lw	t5,32(sp)
20108948:	4ff2                	lw	t6,28(sp)
2010894a:	6125                	add	sp,sp,96
2010894c:	30200073          	mret

20108950 <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20108950:	1101                	add	sp,sp,-32
20108952:	ce22                	sw	s0,28(sp)
20108954:	1000                	add	s0,sp,32
20108956:	fea42623          	sw	a0,-20(s0)
2010895a:	feb42423          	sw	a1,-24(s0)
2010895e:	0001                	nop
20108960:	4472                	lw	s0,28(sp)
20108962:	6105                	add	sp,sp,32
20108964:	8082                	ret

20108966 <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20108966:	7179                	add	sp,sp,-48
20108968:	d606                	sw	ra,44(sp)
2010896a:	d422                	sw	s0,40(sp)
2010896c:	1800                	add	s0,sp,48
2010896e:	fca42e23          	sw	a0,-36(s0)
20108972:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20108976:	cb1ff0ef          	jal	20108626 <__metal_myhart_id>
2010897a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:155 (discriminator 1)
2010897c:	853e                	mv	a0,a5
2010897e:	c79ff0ef          	jal	201085f6 <__metal_driver_cpu_get>
20108982:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20108986:	fec42503          	lw	a0,-20(s0)
2010898a:	29c010ef          	jal	20109c26 <__metal_driver_cpu_mtime_get>
2010898e:	fea42023          	sw	a0,-32(s0)
20108992:	feb42223          	sw	a1,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20108996:	fe042703          	lw	a4,-32(s0)
2010899a:	fe442783          	lw	a5,-28(s0)
2010899e:	4529                	li	a0,10
201089a0:	4581                	li	a1,0
201089a2:	00a70633          	add	a2,a4,a0
201089a6:	8832                	mv	a6,a2
201089a8:	00e83833          	sltu	a6,a6,a4
201089ac:	00b786b3          	add	a3,a5,a1
201089b0:	00d807b3          	add	a5,a6,a3
201089b4:	86be                	mv	a3,a5
201089b6:	8732                	mv	a4,a2
201089b8:	87b6                	mv	a5,a3
201089ba:	85ba                	mv	a1,a4
201089bc:	863e                	mv	a2,a5
201089be:	fec42503          	lw	a0,-20(s0)
201089c2:	2ca010ef          	jal	20109c8c <__metal_driver_cpu_mtimecmp_set>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:160
}
201089c6:	0001                	nop
201089c8:	50b2                	lw	ra,44(sp)
201089ca:	5422                	lw	s0,40(sp)
201089cc:	6145                	add	sp,sp,48
201089ce:	8082                	ret
	...

20108a00 <__metal_exception_handler>:
__metal_exception_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20108a00:	7119                	add	sp,sp,-128
20108a02:	de86                	sw	ra,124(sp)
20108a04:	dc96                	sw	t0,120(sp)
20108a06:	da9a                	sw	t1,116(sp)
20108a08:	d89e                	sw	t2,112(sp)
20108a0a:	d6a2                	sw	s0,108(sp)
20108a0c:	d4aa                	sw	a0,104(sp)
20108a0e:	d2ae                	sw	a1,100(sp)
20108a10:	d0b2                	sw	a2,96(sp)
20108a12:	ceb6                	sw	a3,92(sp)
20108a14:	ccba                	sw	a4,88(sp)
20108a16:	cabe                	sw	a5,84(sp)
20108a18:	c8c2                	sw	a6,80(sp)
20108a1a:	c6c6                	sw	a7,76(sp)
20108a1c:	c4f2                	sw	t3,72(sp)
20108a1e:	c2f6                	sw	t4,68(sp)
20108a20:	c0fa                	sw	t5,64(sp)
20108a22:	de7e                	sw	t6,60(sp)
20108a24:	0100                	add	s0,sp,128
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20108a26:	c01ff0ef          	jal	20108626 <__metal_myhart_id>
20108a2a:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:174 (discriminator 1)
20108a2c:	800017b7          	lui	a5,0x80001
20108a30:	070a                	sll	a4,a4,0x2
20108a32:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108a36:	97ba                	add	a5,a5,a4
20108a38:	439c                	lw	a5,0(a5)
20108a3a:	faf42623          	sw	a5,-84(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20108a3e:	342027f3          	csrr	a5,mcause
20108a42:	faf42423          	sw	a5,-88(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20108a46:	341027f3          	csrr	a5,mepc
20108a4a:	faf42223          	sw	a5,-92(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20108a4e:	343027f3          	csrr	a5,mtval
20108a52:	faf42023          	sw	a5,-96(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20108a56:	305027f3          	csrr	a5,mtvec
20108a5a:	f8f42e23          	sw	a5,-100(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20108a5e:	fac42783          	lw	a5,-84(s0)
20108a62:	cbfd                	beqz	a5,20108b58 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20108a64:	fac42503          	lw	a0,-84(s0)
20108a68:	b41ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108a6c:	f8a42c23          	sw	a0,-104(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20108a70:	fa842783          	lw	a5,-88(s0)
20108a74:	3ff7f793          	and	a5,a5,1023
20108a78:	f8f42a23          	sw	a5,-108(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20108a7c:	fa842783          	lw	a5,-88(s0)
20108a80:	0a07de63          	bgez	a5,20108b3c <__metal_exception_handler+0x13c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20108a84:	f9442703          	lw	a4,-108(s0)
20108a88:	08000793          	li	a5,128
20108a8c:	02f71263          	bne	a4,a5,20108ab0 <__metal_exception_handler+0xb0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20108a90:	f9842783          	lw	a5,-104(s0)
20108a94:	3987a783          	lw	a5,920(a5)
20108a98:	f8f42623          	sw	a5,-116(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20108a9c:	f9842783          	lw	a5,-104(s0)
20108aa0:	3907a783          	lw	a5,912(a5)
20108aa4:	f8c42583          	lw	a1,-116(s0)
20108aa8:	f9442503          	lw	a0,-108(s0)
20108aac:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20108aae:	a06d                	j	20108b58 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20108ab0:	f9442703          	lw	a4,-108(s0)
20108ab4:	47ad                	li	a5,11
20108ab6:	00e7d763          	bge	a5,a4,20108ac4 <__metal_exception_handler+0xc4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:192
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20108aba:	f9c42783          	lw	a5,-100(s0)
20108abe:	03f7f793          	and	a5,a5,63
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20108ac2:	ef9d                	bnez	a5,20108b00 <__metal_exception_handler+0x100>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20108ac4:	f9842683          	lw	a3,-104(s0)
20108ac8:	f9442703          	lw	a4,-108(s0)
20108acc:	87ba                	mv	a5,a4
20108ace:	0786                	sll	a5,a5,0x1
20108ad0:	97ba                	add	a5,a5,a4
20108ad2:	078e                	sll	a5,a5,0x3
20108ad4:	97b6                	add	a5,a5,a3
20108ad6:	0987a783          	lw	a5,152(a5)
20108ada:	f8f42623          	sw	a5,-116(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20108ade:	f9842683          	lw	a3,-104(s0)
20108ae2:	f9442703          	lw	a4,-108(s0)
20108ae6:	87ba                	mv	a5,a4
20108ae8:	0786                	sll	a5,a5,0x1
20108aea:	97ba                	add	a5,a5,a4
20108aec:	078e                	sll	a5,a5,0x3
20108aee:	97b6                	add	a5,a5,a3
20108af0:	0907a783          	lw	a5,144(a5)
20108af4:	f8c42583          	lw	a1,-116(s0)
20108af8:	f9442503          	lw	a0,-108(s0)
20108afc:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20108afe:	a8a9                	j	20108b58 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20108b00:	f9c42783          	lw	a5,-100(s0)
20108b04:	03f7f713          	and	a4,a5,63
20108b08:	4789                	li	a5,2
20108b0a:	04f71763          	bne	a4,a5,20108b58 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20108b0e:	307027f3          	csrr	a5,mtvt
20108b12:	f8f42823          	sw	a5,-112(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20108b16:	f9842783          	lw	a5,-104(s0)
20108b1a:	0dc7a783          	lw	a5,220(a5)
20108b1e:	f8f42623          	sw	a5,-116(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20108b22:	f9042783          	lw	a5,-112(s0)
20108b26:	439c                	lw	a5,0(a5)
20108b28:	f8f42423          	sw	a5,-120(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20108b2c:	f8842783          	lw	a5,-120(s0)
20108b30:	f8c42583          	lw	a1,-116(s0)
20108b34:	f9442503          	lw	a0,-108(s0)
20108b38:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20108b3a:	a839                	j	20108b58 <__metal_exception_handler+0x158>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20108b3c:	f9842703          	lw	a4,-104(s0)
20108b40:	f9442783          	lw	a5,-108(s0)
20108b44:	0e878793          	add	a5,a5,232
20108b48:	078a                	sll	a5,a5,0x2
20108b4a:	97ba                	add	a5,a5,a4
20108b4c:	439c                	lw	a5,0(a5)
20108b4e:	f9442583          	lw	a1,-108(s0)
20108b52:	fac42503          	lw	a0,-84(s0)
20108b56:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20108b58:	50f6                	lw	ra,124(sp)
20108b5a:	52e6                	lw	t0,120(sp)
20108b5c:	5356                	lw	t1,116(sp)
20108b5e:	53c6                	lw	t2,112(sp)
20108b60:	5436                	lw	s0,108(sp)
20108b62:	5526                	lw	a0,104(sp)
20108b64:	5596                	lw	a1,100(sp)
20108b66:	5606                	lw	a2,96(sp)
20108b68:	46f6                	lw	a3,92(sp)
20108b6a:	4766                	lw	a4,88(sp)
20108b6c:	47d6                	lw	a5,84(sp)
20108b6e:	4846                	lw	a6,80(sp)
20108b70:	48b6                	lw	a7,76(sp)
20108b72:	4e26                	lw	t3,72(sp)
20108b74:	4e96                	lw	t4,68(sp)
20108b76:	4f06                	lw	t5,64(sp)
20108b78:	5ff2                	lw	t6,60(sp)
20108b7a:	6109                	add	sp,sp,128
20108b7c:	30200073          	mret
	...

20108bfa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20108bfa:	711d                	add	sp,sp,-96
20108bfc:	ce86                	sw	ra,92(sp)
20108bfe:	cc96                	sw	t0,88(sp)
20108c00:	ca9a                	sw	t1,84(sp)
20108c02:	c89e                	sw	t2,80(sp)
20108c04:	c6a2                	sw	s0,76(sp)
20108c06:	c4aa                	sw	a0,72(sp)
20108c08:	c2ae                	sw	a1,68(sp)
20108c0a:	c0b2                	sw	a2,64(sp)
20108c0c:	de36                	sw	a3,60(sp)
20108c0e:	dc3a                	sw	a4,56(sp)
20108c10:	da3e                	sw	a5,52(sp)
20108c12:	d842                	sw	a6,48(sp)
20108c14:	d646                	sw	a7,44(sp)
20108c16:	d472                	sw	t3,40(sp)
20108c18:	d276                	sw	t4,36(sp)
20108c1a:	d07a                	sw	t5,32(sp)
20108c1c:	ce7e                	sw	t6,28(sp)
20108c1e:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20108c20:	a07ff0ef          	jal	20108626 <__metal_myhart_id>
20108c24:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20108c26:	800017b7          	lui	a5,0x80001
20108c2a:	070a                	sll	a4,a4,0x2
20108c2c:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108c30:	97ba                	add	a5,a5,a4
20108c32:	439c                	lw	a5,0(a5)
20108c34:	faf42623          	sw	a5,-84(s0)
20108c38:	fac42783          	lw	a5,-84(s0)
20108c3c:	c78d                	beqz	a5,20108c66 <metal_lc0_interrupt_vector_handler+0x6c>
20108c3e:	fac42503          	lw	a0,-84(s0)
20108c42:	967ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108c46:	faa42423          	sw	a0,-88(s0)
20108c4a:	fa842783          	lw	a5,-88(s0)
20108c4e:	2187a783          	lw	a5,536(a5)
20108c52:	faf42223          	sw	a5,-92(s0)
20108c56:	fa842783          	lw	a5,-88(s0)
20108c5a:	2107a783          	lw	a5,528(a5)
20108c5e:	fa442583          	lw	a1,-92(s0)
20108c62:	4541                	li	a0,16
20108c64:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:216
}
20108c66:	0001                	nop
20108c68:	40f6                	lw	ra,92(sp)
20108c6a:	42e6                	lw	t0,88(sp)
20108c6c:	4356                	lw	t1,84(sp)
20108c6e:	43c6                	lw	t2,80(sp)
20108c70:	4436                	lw	s0,76(sp)
20108c72:	4526                	lw	a0,72(sp)
20108c74:	4596                	lw	a1,68(sp)
20108c76:	4606                	lw	a2,64(sp)
20108c78:	56f2                	lw	a3,60(sp)
20108c7a:	5762                	lw	a4,56(sp)
20108c7c:	57d2                	lw	a5,52(sp)
20108c7e:	5842                	lw	a6,48(sp)
20108c80:	58b2                	lw	a7,44(sp)
20108c82:	5e22                	lw	t3,40(sp)
20108c84:	5e92                	lw	t4,36(sp)
20108c86:	5f02                	lw	t5,32(sp)
20108c88:	4ff2                	lw	t6,28(sp)
20108c8a:	6125                	add	sp,sp,96
20108c8c:	30200073          	mret

20108c90 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20108c90:	711d                	add	sp,sp,-96
20108c92:	ce86                	sw	ra,92(sp)
20108c94:	cc96                	sw	t0,88(sp)
20108c96:	ca9a                	sw	t1,84(sp)
20108c98:	c89e                	sw	t2,80(sp)
20108c9a:	c6a2                	sw	s0,76(sp)
20108c9c:	c4aa                	sw	a0,72(sp)
20108c9e:	c2ae                	sw	a1,68(sp)
20108ca0:	c0b2                	sw	a2,64(sp)
20108ca2:	de36                	sw	a3,60(sp)
20108ca4:	dc3a                	sw	a4,56(sp)
20108ca6:	da3e                	sw	a5,52(sp)
20108ca8:	d842                	sw	a6,48(sp)
20108caa:	d646                	sw	a7,44(sp)
20108cac:	d472                	sw	t3,40(sp)
20108cae:	d276                	sw	t4,36(sp)
20108cb0:	d07a                	sw	t5,32(sp)
20108cb2:	ce7e                	sw	t6,28(sp)
20108cb4:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20108cb6:	971ff0ef          	jal	20108626 <__metal_myhart_id>
20108cba:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20108cbc:	800017b7          	lui	a5,0x80001
20108cc0:	070a                	sll	a4,a4,0x2
20108cc2:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108cc6:	97ba                	add	a5,a5,a4
20108cc8:	439c                	lw	a5,0(a5)
20108cca:	faf42623          	sw	a5,-84(s0)
20108cce:	fac42783          	lw	a5,-84(s0)
20108cd2:	c78d                	beqz	a5,20108cfc <metal_lc1_interrupt_vector_handler+0x6c>
20108cd4:	fac42503          	lw	a0,-84(s0)
20108cd8:	8d1ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108cdc:	faa42423          	sw	a0,-88(s0)
20108ce0:	fa842783          	lw	a5,-88(s0)
20108ce4:	2307a783          	lw	a5,560(a5)
20108ce8:	faf42223          	sw	a5,-92(s0)
20108cec:	fa842783          	lw	a5,-88(s0)
20108cf0:	2287a783          	lw	a5,552(a5)
20108cf4:	fa442583          	lw	a1,-92(s0)
20108cf8:	4545                	li	a0,17
20108cfa:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:221
}
20108cfc:	0001                	nop
20108cfe:	40f6                	lw	ra,92(sp)
20108d00:	42e6                	lw	t0,88(sp)
20108d02:	4356                	lw	t1,84(sp)
20108d04:	43c6                	lw	t2,80(sp)
20108d06:	4436                	lw	s0,76(sp)
20108d08:	4526                	lw	a0,72(sp)
20108d0a:	4596                	lw	a1,68(sp)
20108d0c:	4606                	lw	a2,64(sp)
20108d0e:	56f2                	lw	a3,60(sp)
20108d10:	5762                	lw	a4,56(sp)
20108d12:	57d2                	lw	a5,52(sp)
20108d14:	5842                	lw	a6,48(sp)
20108d16:	58b2                	lw	a7,44(sp)
20108d18:	5e22                	lw	t3,40(sp)
20108d1a:	5e92                	lw	t4,36(sp)
20108d1c:	5f02                	lw	t5,32(sp)
20108d1e:	4ff2                	lw	t6,28(sp)
20108d20:	6125                	add	sp,sp,96
20108d22:	30200073          	mret

20108d26 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20108d26:	711d                	add	sp,sp,-96
20108d28:	ce86                	sw	ra,92(sp)
20108d2a:	cc96                	sw	t0,88(sp)
20108d2c:	ca9a                	sw	t1,84(sp)
20108d2e:	c89e                	sw	t2,80(sp)
20108d30:	c6a2                	sw	s0,76(sp)
20108d32:	c4aa                	sw	a0,72(sp)
20108d34:	c2ae                	sw	a1,68(sp)
20108d36:	c0b2                	sw	a2,64(sp)
20108d38:	de36                	sw	a3,60(sp)
20108d3a:	dc3a                	sw	a4,56(sp)
20108d3c:	da3e                	sw	a5,52(sp)
20108d3e:	d842                	sw	a6,48(sp)
20108d40:	d646                	sw	a7,44(sp)
20108d42:	d472                	sw	t3,40(sp)
20108d44:	d276                	sw	t4,36(sp)
20108d46:	d07a                	sw	t5,32(sp)
20108d48:	ce7e                	sw	t6,28(sp)
20108d4a:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20108d4c:	8dbff0ef          	jal	20108626 <__metal_myhart_id>
20108d50:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20108d52:	800017b7          	lui	a5,0x80001
20108d56:	070a                	sll	a4,a4,0x2
20108d58:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108d5c:	97ba                	add	a5,a5,a4
20108d5e:	439c                	lw	a5,0(a5)
20108d60:	faf42623          	sw	a5,-84(s0)
20108d64:	fac42783          	lw	a5,-84(s0)
20108d68:	c78d                	beqz	a5,20108d92 <metal_lc2_interrupt_vector_handler+0x6c>
20108d6a:	fac42503          	lw	a0,-84(s0)
20108d6e:	83bff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108d72:	faa42423          	sw	a0,-88(s0)
20108d76:	fa842783          	lw	a5,-88(s0)
20108d7a:	2487a783          	lw	a5,584(a5)
20108d7e:	faf42223          	sw	a5,-92(s0)
20108d82:	fa842783          	lw	a5,-88(s0)
20108d86:	2407a783          	lw	a5,576(a5)
20108d8a:	fa442583          	lw	a1,-92(s0)
20108d8e:	4549                	li	a0,18
20108d90:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:226
}
20108d92:	0001                	nop
20108d94:	40f6                	lw	ra,92(sp)
20108d96:	42e6                	lw	t0,88(sp)
20108d98:	4356                	lw	t1,84(sp)
20108d9a:	43c6                	lw	t2,80(sp)
20108d9c:	4436                	lw	s0,76(sp)
20108d9e:	4526                	lw	a0,72(sp)
20108da0:	4596                	lw	a1,68(sp)
20108da2:	4606                	lw	a2,64(sp)
20108da4:	56f2                	lw	a3,60(sp)
20108da6:	5762                	lw	a4,56(sp)
20108da8:	57d2                	lw	a5,52(sp)
20108daa:	5842                	lw	a6,48(sp)
20108dac:	58b2                	lw	a7,44(sp)
20108dae:	5e22                	lw	t3,40(sp)
20108db0:	5e92                	lw	t4,36(sp)
20108db2:	5f02                	lw	t5,32(sp)
20108db4:	4ff2                	lw	t6,28(sp)
20108db6:	6125                	add	sp,sp,96
20108db8:	30200073          	mret

20108dbc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20108dbc:	711d                	add	sp,sp,-96
20108dbe:	ce86                	sw	ra,92(sp)
20108dc0:	cc96                	sw	t0,88(sp)
20108dc2:	ca9a                	sw	t1,84(sp)
20108dc4:	c89e                	sw	t2,80(sp)
20108dc6:	c6a2                	sw	s0,76(sp)
20108dc8:	c4aa                	sw	a0,72(sp)
20108dca:	c2ae                	sw	a1,68(sp)
20108dcc:	c0b2                	sw	a2,64(sp)
20108dce:	de36                	sw	a3,60(sp)
20108dd0:	dc3a                	sw	a4,56(sp)
20108dd2:	da3e                	sw	a5,52(sp)
20108dd4:	d842                	sw	a6,48(sp)
20108dd6:	d646                	sw	a7,44(sp)
20108dd8:	d472                	sw	t3,40(sp)
20108dda:	d276                	sw	t4,36(sp)
20108ddc:	d07a                	sw	t5,32(sp)
20108dde:	ce7e                	sw	t6,28(sp)
20108de0:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20108de2:	845ff0ef          	jal	20108626 <__metal_myhart_id>
20108de6:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20108de8:	800017b7          	lui	a5,0x80001
20108dec:	070a                	sll	a4,a4,0x2
20108dee:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108df2:	97ba                	add	a5,a5,a4
20108df4:	439c                	lw	a5,0(a5)
20108df6:	faf42623          	sw	a5,-84(s0)
20108dfa:	fac42783          	lw	a5,-84(s0)
20108dfe:	c78d                	beqz	a5,20108e28 <metal_lc3_interrupt_vector_handler+0x6c>
20108e00:	fac42503          	lw	a0,-84(s0)
20108e04:	fa4ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108e08:	faa42423          	sw	a0,-88(s0)
20108e0c:	fa842783          	lw	a5,-88(s0)
20108e10:	2607a783          	lw	a5,608(a5)
20108e14:	faf42223          	sw	a5,-92(s0)
20108e18:	fa842783          	lw	a5,-88(s0)
20108e1c:	2587a783          	lw	a5,600(a5)
20108e20:	fa442583          	lw	a1,-92(s0)
20108e24:	454d                	li	a0,19
20108e26:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:231
}
20108e28:	0001                	nop
20108e2a:	40f6                	lw	ra,92(sp)
20108e2c:	42e6                	lw	t0,88(sp)
20108e2e:	4356                	lw	t1,84(sp)
20108e30:	43c6                	lw	t2,80(sp)
20108e32:	4436                	lw	s0,76(sp)
20108e34:	4526                	lw	a0,72(sp)
20108e36:	4596                	lw	a1,68(sp)
20108e38:	4606                	lw	a2,64(sp)
20108e3a:	56f2                	lw	a3,60(sp)
20108e3c:	5762                	lw	a4,56(sp)
20108e3e:	57d2                	lw	a5,52(sp)
20108e40:	5842                	lw	a6,48(sp)
20108e42:	58b2                	lw	a7,44(sp)
20108e44:	5e22                	lw	t3,40(sp)
20108e46:	5e92                	lw	t4,36(sp)
20108e48:	5f02                	lw	t5,32(sp)
20108e4a:	4ff2                	lw	t6,28(sp)
20108e4c:	6125                	add	sp,sp,96
20108e4e:	30200073          	mret

20108e52 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20108e52:	711d                	add	sp,sp,-96
20108e54:	ce86                	sw	ra,92(sp)
20108e56:	cc96                	sw	t0,88(sp)
20108e58:	ca9a                	sw	t1,84(sp)
20108e5a:	c89e                	sw	t2,80(sp)
20108e5c:	c6a2                	sw	s0,76(sp)
20108e5e:	c4aa                	sw	a0,72(sp)
20108e60:	c2ae                	sw	a1,68(sp)
20108e62:	c0b2                	sw	a2,64(sp)
20108e64:	de36                	sw	a3,60(sp)
20108e66:	dc3a                	sw	a4,56(sp)
20108e68:	da3e                	sw	a5,52(sp)
20108e6a:	d842                	sw	a6,48(sp)
20108e6c:	d646                	sw	a7,44(sp)
20108e6e:	d472                	sw	t3,40(sp)
20108e70:	d276                	sw	t4,36(sp)
20108e72:	d07a                	sw	t5,32(sp)
20108e74:	ce7e                	sw	t6,28(sp)
20108e76:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20108e78:	faeff0ef          	jal	20108626 <__metal_myhart_id>
20108e7c:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20108e7e:	800017b7          	lui	a5,0x80001
20108e82:	070a                	sll	a4,a4,0x2
20108e84:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108e88:	97ba                	add	a5,a5,a4
20108e8a:	439c                	lw	a5,0(a5)
20108e8c:	faf42623          	sw	a5,-84(s0)
20108e90:	fac42783          	lw	a5,-84(s0)
20108e94:	c78d                	beqz	a5,20108ebe <metal_lc4_interrupt_vector_handler+0x6c>
20108e96:	fac42503          	lw	a0,-84(s0)
20108e9a:	f0eff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108e9e:	faa42423          	sw	a0,-88(s0)
20108ea2:	fa842783          	lw	a5,-88(s0)
20108ea6:	2787a783          	lw	a5,632(a5)
20108eaa:	faf42223          	sw	a5,-92(s0)
20108eae:	fa842783          	lw	a5,-88(s0)
20108eb2:	2707a783          	lw	a5,624(a5)
20108eb6:	fa442583          	lw	a1,-92(s0)
20108eba:	4551                	li	a0,20
20108ebc:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:236
}
20108ebe:	0001                	nop
20108ec0:	40f6                	lw	ra,92(sp)
20108ec2:	42e6                	lw	t0,88(sp)
20108ec4:	4356                	lw	t1,84(sp)
20108ec6:	43c6                	lw	t2,80(sp)
20108ec8:	4436                	lw	s0,76(sp)
20108eca:	4526                	lw	a0,72(sp)
20108ecc:	4596                	lw	a1,68(sp)
20108ece:	4606                	lw	a2,64(sp)
20108ed0:	56f2                	lw	a3,60(sp)
20108ed2:	5762                	lw	a4,56(sp)
20108ed4:	57d2                	lw	a5,52(sp)
20108ed6:	5842                	lw	a6,48(sp)
20108ed8:	58b2                	lw	a7,44(sp)
20108eda:	5e22                	lw	t3,40(sp)
20108edc:	5e92                	lw	t4,36(sp)
20108ede:	5f02                	lw	t5,32(sp)
20108ee0:	4ff2                	lw	t6,28(sp)
20108ee2:	6125                	add	sp,sp,96
20108ee4:	30200073          	mret

20108ee8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20108ee8:	711d                	add	sp,sp,-96
20108eea:	ce86                	sw	ra,92(sp)
20108eec:	cc96                	sw	t0,88(sp)
20108eee:	ca9a                	sw	t1,84(sp)
20108ef0:	c89e                	sw	t2,80(sp)
20108ef2:	c6a2                	sw	s0,76(sp)
20108ef4:	c4aa                	sw	a0,72(sp)
20108ef6:	c2ae                	sw	a1,68(sp)
20108ef8:	c0b2                	sw	a2,64(sp)
20108efa:	de36                	sw	a3,60(sp)
20108efc:	dc3a                	sw	a4,56(sp)
20108efe:	da3e                	sw	a5,52(sp)
20108f00:	d842                	sw	a6,48(sp)
20108f02:	d646                	sw	a7,44(sp)
20108f04:	d472                	sw	t3,40(sp)
20108f06:	d276                	sw	t4,36(sp)
20108f08:	d07a                	sw	t5,32(sp)
20108f0a:	ce7e                	sw	t6,28(sp)
20108f0c:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20108f0e:	f18ff0ef          	jal	20108626 <__metal_myhart_id>
20108f12:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20108f14:	800017b7          	lui	a5,0x80001
20108f18:	070a                	sll	a4,a4,0x2
20108f1a:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108f1e:	97ba                	add	a5,a5,a4
20108f20:	439c                	lw	a5,0(a5)
20108f22:	faf42623          	sw	a5,-84(s0)
20108f26:	fac42783          	lw	a5,-84(s0)
20108f2a:	c78d                	beqz	a5,20108f54 <metal_lc5_interrupt_vector_handler+0x6c>
20108f2c:	fac42503          	lw	a0,-84(s0)
20108f30:	e78ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108f34:	faa42423          	sw	a0,-88(s0)
20108f38:	fa842783          	lw	a5,-88(s0)
20108f3c:	2907a783          	lw	a5,656(a5)
20108f40:	faf42223          	sw	a5,-92(s0)
20108f44:	fa842783          	lw	a5,-88(s0)
20108f48:	2887a783          	lw	a5,648(a5)
20108f4c:	fa442583          	lw	a1,-92(s0)
20108f50:	4555                	li	a0,21
20108f52:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:241
}
20108f54:	0001                	nop
20108f56:	40f6                	lw	ra,92(sp)
20108f58:	42e6                	lw	t0,88(sp)
20108f5a:	4356                	lw	t1,84(sp)
20108f5c:	43c6                	lw	t2,80(sp)
20108f5e:	4436                	lw	s0,76(sp)
20108f60:	4526                	lw	a0,72(sp)
20108f62:	4596                	lw	a1,68(sp)
20108f64:	4606                	lw	a2,64(sp)
20108f66:	56f2                	lw	a3,60(sp)
20108f68:	5762                	lw	a4,56(sp)
20108f6a:	57d2                	lw	a5,52(sp)
20108f6c:	5842                	lw	a6,48(sp)
20108f6e:	58b2                	lw	a7,44(sp)
20108f70:	5e22                	lw	t3,40(sp)
20108f72:	5e92                	lw	t4,36(sp)
20108f74:	5f02                	lw	t5,32(sp)
20108f76:	4ff2                	lw	t6,28(sp)
20108f78:	6125                	add	sp,sp,96
20108f7a:	30200073          	mret

20108f7e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
20108f7e:	711d                	add	sp,sp,-96
20108f80:	ce86                	sw	ra,92(sp)
20108f82:	cc96                	sw	t0,88(sp)
20108f84:	ca9a                	sw	t1,84(sp)
20108f86:	c89e                	sw	t2,80(sp)
20108f88:	c6a2                	sw	s0,76(sp)
20108f8a:	c4aa                	sw	a0,72(sp)
20108f8c:	c2ae                	sw	a1,68(sp)
20108f8e:	c0b2                	sw	a2,64(sp)
20108f90:	de36                	sw	a3,60(sp)
20108f92:	dc3a                	sw	a4,56(sp)
20108f94:	da3e                	sw	a5,52(sp)
20108f96:	d842                	sw	a6,48(sp)
20108f98:	d646                	sw	a7,44(sp)
20108f9a:	d472                	sw	t3,40(sp)
20108f9c:	d276                	sw	t4,36(sp)
20108f9e:	d07a                	sw	t5,32(sp)
20108fa0:	ce7e                	sw	t6,28(sp)
20108fa2:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20108fa4:	e82ff0ef          	jal	20108626 <__metal_myhart_id>
20108fa8:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20108faa:	800017b7          	lui	a5,0x80001
20108fae:	070a                	sll	a4,a4,0x2
20108fb0:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20108fb4:	97ba                	add	a5,a5,a4
20108fb6:	439c                	lw	a5,0(a5)
20108fb8:	faf42623          	sw	a5,-84(s0)
20108fbc:	fac42783          	lw	a5,-84(s0)
20108fc0:	c78d                	beqz	a5,20108fea <metal_lc6_interrupt_vector_handler+0x6c>
20108fc2:	fac42503          	lw	a0,-84(s0)
20108fc6:	de2ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20108fca:	faa42423          	sw	a0,-88(s0)
20108fce:	fa842783          	lw	a5,-88(s0)
20108fd2:	2a87a783          	lw	a5,680(a5)
20108fd6:	faf42223          	sw	a5,-92(s0)
20108fda:	fa842783          	lw	a5,-88(s0)
20108fde:	2a07a783          	lw	a5,672(a5)
20108fe2:	fa442583          	lw	a1,-92(s0)
20108fe6:	4559                	li	a0,22
20108fe8:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:246
}
20108fea:	0001                	nop
20108fec:	40f6                	lw	ra,92(sp)
20108fee:	42e6                	lw	t0,88(sp)
20108ff0:	4356                	lw	t1,84(sp)
20108ff2:	43c6                	lw	t2,80(sp)
20108ff4:	4436                	lw	s0,76(sp)
20108ff6:	4526                	lw	a0,72(sp)
20108ff8:	4596                	lw	a1,68(sp)
20108ffa:	4606                	lw	a2,64(sp)
20108ffc:	56f2                	lw	a3,60(sp)
20108ffe:	5762                	lw	a4,56(sp)
20109000:	57d2                	lw	a5,52(sp)
20109002:	5842                	lw	a6,48(sp)
20109004:	58b2                	lw	a7,44(sp)
20109006:	5e22                	lw	t3,40(sp)
20109008:	5e92                	lw	t4,36(sp)
2010900a:	5f02                	lw	t5,32(sp)
2010900c:	4ff2                	lw	t6,28(sp)
2010900e:	6125                	add	sp,sp,96
20109010:	30200073          	mret

20109014 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20109014:	711d                	add	sp,sp,-96
20109016:	ce86                	sw	ra,92(sp)
20109018:	cc96                	sw	t0,88(sp)
2010901a:	ca9a                	sw	t1,84(sp)
2010901c:	c89e                	sw	t2,80(sp)
2010901e:	c6a2                	sw	s0,76(sp)
20109020:	c4aa                	sw	a0,72(sp)
20109022:	c2ae                	sw	a1,68(sp)
20109024:	c0b2                	sw	a2,64(sp)
20109026:	de36                	sw	a3,60(sp)
20109028:	dc3a                	sw	a4,56(sp)
2010902a:	da3e                	sw	a5,52(sp)
2010902c:	d842                	sw	a6,48(sp)
2010902e:	d646                	sw	a7,44(sp)
20109030:	d472                	sw	t3,40(sp)
20109032:	d276                	sw	t4,36(sp)
20109034:	d07a                	sw	t5,32(sp)
20109036:	ce7e                	sw	t6,28(sp)
20109038:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2010903a:	decff0ef          	jal	20108626 <__metal_myhart_id>
2010903e:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20109040:	800017b7          	lui	a5,0x80001
20109044:	070a                	sll	a4,a4,0x2
20109046:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
2010904a:	97ba                	add	a5,a5,a4
2010904c:	439c                	lw	a5,0(a5)
2010904e:	faf42623          	sw	a5,-84(s0)
20109052:	fac42783          	lw	a5,-84(s0)
20109056:	c78d                	beqz	a5,20109080 <metal_lc7_interrupt_vector_handler+0x6c>
20109058:	fac42503          	lw	a0,-84(s0)
2010905c:	d4cff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109060:	faa42423          	sw	a0,-88(s0)
20109064:	fa842783          	lw	a5,-88(s0)
20109068:	2c07a783          	lw	a5,704(a5)
2010906c:	faf42223          	sw	a5,-92(s0)
20109070:	fa842783          	lw	a5,-88(s0)
20109074:	2b87a783          	lw	a5,696(a5)
20109078:	fa442583          	lw	a1,-92(s0)
2010907c:	455d                	li	a0,23
2010907e:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:251
}
20109080:	0001                	nop
20109082:	40f6                	lw	ra,92(sp)
20109084:	42e6                	lw	t0,88(sp)
20109086:	4356                	lw	t1,84(sp)
20109088:	43c6                	lw	t2,80(sp)
2010908a:	4436                	lw	s0,76(sp)
2010908c:	4526                	lw	a0,72(sp)
2010908e:	4596                	lw	a1,68(sp)
20109090:	4606                	lw	a2,64(sp)
20109092:	56f2                	lw	a3,60(sp)
20109094:	5762                	lw	a4,56(sp)
20109096:	57d2                	lw	a5,52(sp)
20109098:	5842                	lw	a6,48(sp)
2010909a:	58b2                	lw	a7,44(sp)
2010909c:	5e22                	lw	t3,40(sp)
2010909e:	5e92                	lw	t4,36(sp)
201090a0:	5f02                	lw	t5,32(sp)
201090a2:	4ff2                	lw	t6,28(sp)
201090a4:	6125                	add	sp,sp,96
201090a6:	30200073          	mret

201090aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
201090aa:	711d                	add	sp,sp,-96
201090ac:	ce86                	sw	ra,92(sp)
201090ae:	cc96                	sw	t0,88(sp)
201090b0:	ca9a                	sw	t1,84(sp)
201090b2:	c89e                	sw	t2,80(sp)
201090b4:	c6a2                	sw	s0,76(sp)
201090b6:	c4aa                	sw	a0,72(sp)
201090b8:	c2ae                	sw	a1,68(sp)
201090ba:	c0b2                	sw	a2,64(sp)
201090bc:	de36                	sw	a3,60(sp)
201090be:	dc3a                	sw	a4,56(sp)
201090c0:	da3e                	sw	a5,52(sp)
201090c2:	d842                	sw	a6,48(sp)
201090c4:	d646                	sw	a7,44(sp)
201090c6:	d472                	sw	t3,40(sp)
201090c8:	d276                	sw	t4,36(sp)
201090ca:	d07a                	sw	t5,32(sp)
201090cc:	ce7e                	sw	t6,28(sp)
201090ce:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
201090d0:	d56ff0ef          	jal	20108626 <__metal_myhart_id>
201090d4:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
201090d6:	800017b7          	lui	a5,0x80001
201090da:	070a                	sll	a4,a4,0x2
201090dc:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
201090e0:	97ba                	add	a5,a5,a4
201090e2:	439c                	lw	a5,0(a5)
201090e4:	faf42623          	sw	a5,-84(s0)
201090e8:	fac42783          	lw	a5,-84(s0)
201090ec:	c78d                	beqz	a5,20109116 <metal_lc8_interrupt_vector_handler+0x6c>
201090ee:	fac42503          	lw	a0,-84(s0)
201090f2:	cb6ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
201090f6:	faa42423          	sw	a0,-88(s0)
201090fa:	fa842783          	lw	a5,-88(s0)
201090fe:	2d87a783          	lw	a5,728(a5)
20109102:	faf42223          	sw	a5,-92(s0)
20109106:	fa842783          	lw	a5,-88(s0)
2010910a:	2d07a783          	lw	a5,720(a5)
2010910e:	fa442583          	lw	a1,-92(s0)
20109112:	4561                	li	a0,24
20109114:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:256
}
20109116:	0001                	nop
20109118:	40f6                	lw	ra,92(sp)
2010911a:	42e6                	lw	t0,88(sp)
2010911c:	4356                	lw	t1,84(sp)
2010911e:	43c6                	lw	t2,80(sp)
20109120:	4436                	lw	s0,76(sp)
20109122:	4526                	lw	a0,72(sp)
20109124:	4596                	lw	a1,68(sp)
20109126:	4606                	lw	a2,64(sp)
20109128:	56f2                	lw	a3,60(sp)
2010912a:	5762                	lw	a4,56(sp)
2010912c:	57d2                	lw	a5,52(sp)
2010912e:	5842                	lw	a6,48(sp)
20109130:	58b2                	lw	a7,44(sp)
20109132:	5e22                	lw	t3,40(sp)
20109134:	5e92                	lw	t4,36(sp)
20109136:	5f02                	lw	t5,32(sp)
20109138:	4ff2                	lw	t6,28(sp)
2010913a:	6125                	add	sp,sp,96
2010913c:	30200073          	mret

20109140 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20109140:	711d                	add	sp,sp,-96
20109142:	ce86                	sw	ra,92(sp)
20109144:	cc96                	sw	t0,88(sp)
20109146:	ca9a                	sw	t1,84(sp)
20109148:	c89e                	sw	t2,80(sp)
2010914a:	c6a2                	sw	s0,76(sp)
2010914c:	c4aa                	sw	a0,72(sp)
2010914e:	c2ae                	sw	a1,68(sp)
20109150:	c0b2                	sw	a2,64(sp)
20109152:	de36                	sw	a3,60(sp)
20109154:	dc3a                	sw	a4,56(sp)
20109156:	da3e                	sw	a5,52(sp)
20109158:	d842                	sw	a6,48(sp)
2010915a:	d646                	sw	a7,44(sp)
2010915c:	d472                	sw	t3,40(sp)
2010915e:	d276                	sw	t4,36(sp)
20109160:	d07a                	sw	t5,32(sp)
20109162:	ce7e                	sw	t6,28(sp)
20109164:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20109166:	cc0ff0ef          	jal	20108626 <__metal_myhart_id>
2010916a:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
2010916c:	800017b7          	lui	a5,0x80001
20109170:	070a                	sll	a4,a4,0x2
20109172:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20109176:	97ba                	add	a5,a5,a4
20109178:	439c                	lw	a5,0(a5)
2010917a:	faf42623          	sw	a5,-84(s0)
2010917e:	fac42783          	lw	a5,-84(s0)
20109182:	c78d                	beqz	a5,201091ac <metal_lc9_interrupt_vector_handler+0x6c>
20109184:	fac42503          	lw	a0,-84(s0)
20109188:	c20ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
2010918c:	faa42423          	sw	a0,-88(s0)
20109190:	fa842783          	lw	a5,-88(s0)
20109194:	2f07a783          	lw	a5,752(a5)
20109198:	faf42223          	sw	a5,-92(s0)
2010919c:	fa842783          	lw	a5,-88(s0)
201091a0:	2e87a783          	lw	a5,744(a5)
201091a4:	fa442583          	lw	a1,-92(s0)
201091a8:	4565                	li	a0,25
201091aa:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:261
}
201091ac:	0001                	nop
201091ae:	40f6                	lw	ra,92(sp)
201091b0:	42e6                	lw	t0,88(sp)
201091b2:	4356                	lw	t1,84(sp)
201091b4:	43c6                	lw	t2,80(sp)
201091b6:	4436                	lw	s0,76(sp)
201091b8:	4526                	lw	a0,72(sp)
201091ba:	4596                	lw	a1,68(sp)
201091bc:	4606                	lw	a2,64(sp)
201091be:	56f2                	lw	a3,60(sp)
201091c0:	5762                	lw	a4,56(sp)
201091c2:	57d2                	lw	a5,52(sp)
201091c4:	5842                	lw	a6,48(sp)
201091c6:	58b2                	lw	a7,44(sp)
201091c8:	5e22                	lw	t3,40(sp)
201091ca:	5e92                	lw	t4,36(sp)
201091cc:	5f02                	lw	t5,32(sp)
201091ce:	4ff2                	lw	t6,28(sp)
201091d0:	6125                	add	sp,sp,96
201091d2:	30200073          	mret

201091d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
201091d6:	711d                	add	sp,sp,-96
201091d8:	ce86                	sw	ra,92(sp)
201091da:	cc96                	sw	t0,88(sp)
201091dc:	ca9a                	sw	t1,84(sp)
201091de:	c89e                	sw	t2,80(sp)
201091e0:	c6a2                	sw	s0,76(sp)
201091e2:	c4aa                	sw	a0,72(sp)
201091e4:	c2ae                	sw	a1,68(sp)
201091e6:	c0b2                	sw	a2,64(sp)
201091e8:	de36                	sw	a3,60(sp)
201091ea:	dc3a                	sw	a4,56(sp)
201091ec:	da3e                	sw	a5,52(sp)
201091ee:	d842                	sw	a6,48(sp)
201091f0:	d646                	sw	a7,44(sp)
201091f2:	d472                	sw	t3,40(sp)
201091f4:	d276                	sw	t4,36(sp)
201091f6:	d07a                	sw	t5,32(sp)
201091f8:	ce7e                	sw	t6,28(sp)
201091fa:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
201091fc:	c2aff0ef          	jal	20108626 <__metal_myhart_id>
20109200:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20109202:	800017b7          	lui	a5,0x80001
20109206:	070a                	sll	a4,a4,0x2
20109208:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
2010920c:	97ba                	add	a5,a5,a4
2010920e:	439c                	lw	a5,0(a5)
20109210:	faf42623          	sw	a5,-84(s0)
20109214:	fac42783          	lw	a5,-84(s0)
20109218:	c78d                	beqz	a5,20109242 <metal_lc10_interrupt_vector_handler+0x6c>
2010921a:	fac42503          	lw	a0,-84(s0)
2010921e:	b8aff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109222:	faa42423          	sw	a0,-88(s0)
20109226:	fa842783          	lw	a5,-88(s0)
2010922a:	3087a783          	lw	a5,776(a5)
2010922e:	faf42223          	sw	a5,-92(s0)
20109232:	fa842783          	lw	a5,-88(s0)
20109236:	3007a783          	lw	a5,768(a5)
2010923a:	fa442583          	lw	a1,-92(s0)
2010923e:	4569                	li	a0,26
20109240:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:267
}
20109242:	0001                	nop
20109244:	40f6                	lw	ra,92(sp)
20109246:	42e6                	lw	t0,88(sp)
20109248:	4356                	lw	t1,84(sp)
2010924a:	43c6                	lw	t2,80(sp)
2010924c:	4436                	lw	s0,76(sp)
2010924e:	4526                	lw	a0,72(sp)
20109250:	4596                	lw	a1,68(sp)
20109252:	4606                	lw	a2,64(sp)
20109254:	56f2                	lw	a3,60(sp)
20109256:	5762                	lw	a4,56(sp)
20109258:	57d2                	lw	a5,52(sp)
2010925a:	5842                	lw	a6,48(sp)
2010925c:	58b2                	lw	a7,44(sp)
2010925e:	5e22                	lw	t3,40(sp)
20109260:	5e92                	lw	t4,36(sp)
20109262:	5f02                	lw	t5,32(sp)
20109264:	4ff2                	lw	t6,28(sp)
20109266:	6125                	add	sp,sp,96
20109268:	30200073          	mret

2010926c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
2010926c:	711d                	add	sp,sp,-96
2010926e:	ce86                	sw	ra,92(sp)
20109270:	cc96                	sw	t0,88(sp)
20109272:	ca9a                	sw	t1,84(sp)
20109274:	c89e                	sw	t2,80(sp)
20109276:	c6a2                	sw	s0,76(sp)
20109278:	c4aa                	sw	a0,72(sp)
2010927a:	c2ae                	sw	a1,68(sp)
2010927c:	c0b2                	sw	a2,64(sp)
2010927e:	de36                	sw	a3,60(sp)
20109280:	dc3a                	sw	a4,56(sp)
20109282:	da3e                	sw	a5,52(sp)
20109284:	d842                	sw	a6,48(sp)
20109286:	d646                	sw	a7,44(sp)
20109288:	d472                	sw	t3,40(sp)
2010928a:	d276                	sw	t4,36(sp)
2010928c:	d07a                	sw	t5,32(sp)
2010928e:	ce7e                	sw	t6,28(sp)
20109290:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20109292:	b94ff0ef          	jal	20108626 <__metal_myhart_id>
20109296:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20109298:	800017b7          	lui	a5,0x80001
2010929c:	070a                	sll	a4,a4,0x2
2010929e:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
201092a2:	97ba                	add	a5,a5,a4
201092a4:	439c                	lw	a5,0(a5)
201092a6:	faf42623          	sw	a5,-84(s0)
201092aa:	fac42783          	lw	a5,-84(s0)
201092ae:	c78d                	beqz	a5,201092d8 <metal_lc11_interrupt_vector_handler+0x6c>
201092b0:	fac42503          	lw	a0,-84(s0)
201092b4:	af4ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
201092b8:	faa42423          	sw	a0,-88(s0)
201092bc:	fa842783          	lw	a5,-88(s0)
201092c0:	3207a783          	lw	a5,800(a5)
201092c4:	faf42223          	sw	a5,-92(s0)
201092c8:	fa842783          	lw	a5,-88(s0)
201092cc:	3187a783          	lw	a5,792(a5)
201092d0:	fa442583          	lw	a1,-92(s0)
201092d4:	456d                	li	a0,27
201092d6:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:273
}
201092d8:	0001                	nop
201092da:	40f6                	lw	ra,92(sp)
201092dc:	42e6                	lw	t0,88(sp)
201092de:	4356                	lw	t1,84(sp)
201092e0:	43c6                	lw	t2,80(sp)
201092e2:	4436                	lw	s0,76(sp)
201092e4:	4526                	lw	a0,72(sp)
201092e6:	4596                	lw	a1,68(sp)
201092e8:	4606                	lw	a2,64(sp)
201092ea:	56f2                	lw	a3,60(sp)
201092ec:	5762                	lw	a4,56(sp)
201092ee:	57d2                	lw	a5,52(sp)
201092f0:	5842                	lw	a6,48(sp)
201092f2:	58b2                	lw	a7,44(sp)
201092f4:	5e22                	lw	t3,40(sp)
201092f6:	5e92                	lw	t4,36(sp)
201092f8:	5f02                	lw	t5,32(sp)
201092fa:	4ff2                	lw	t6,28(sp)
201092fc:	6125                	add	sp,sp,96
201092fe:	30200073          	mret

20109302 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20109302:	711d                	add	sp,sp,-96
20109304:	ce86                	sw	ra,92(sp)
20109306:	cc96                	sw	t0,88(sp)
20109308:	ca9a                	sw	t1,84(sp)
2010930a:	c89e                	sw	t2,80(sp)
2010930c:	c6a2                	sw	s0,76(sp)
2010930e:	c4aa                	sw	a0,72(sp)
20109310:	c2ae                	sw	a1,68(sp)
20109312:	c0b2                	sw	a2,64(sp)
20109314:	de36                	sw	a3,60(sp)
20109316:	dc3a                	sw	a4,56(sp)
20109318:	da3e                	sw	a5,52(sp)
2010931a:	d842                	sw	a6,48(sp)
2010931c:	d646                	sw	a7,44(sp)
2010931e:	d472                	sw	t3,40(sp)
20109320:	d276                	sw	t4,36(sp)
20109322:	d07a                	sw	t5,32(sp)
20109324:	ce7e                	sw	t6,28(sp)
20109326:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20109328:	afeff0ef          	jal	20108626 <__metal_myhart_id>
2010932c:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
2010932e:	800017b7          	lui	a5,0x80001
20109332:	070a                	sll	a4,a4,0x2
20109334:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20109338:	97ba                	add	a5,a5,a4
2010933a:	439c                	lw	a5,0(a5)
2010933c:	faf42623          	sw	a5,-84(s0)
20109340:	fac42783          	lw	a5,-84(s0)
20109344:	c78d                	beqz	a5,2010936e <metal_lc12_interrupt_vector_handler+0x6c>
20109346:	fac42503          	lw	a0,-84(s0)
2010934a:	a5eff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
2010934e:	faa42423          	sw	a0,-88(s0)
20109352:	fa842783          	lw	a5,-88(s0)
20109356:	3387a783          	lw	a5,824(a5)
2010935a:	faf42223          	sw	a5,-92(s0)
2010935e:	fa842783          	lw	a5,-88(s0)
20109362:	3307a783          	lw	a5,816(a5)
20109366:	fa442583          	lw	a1,-92(s0)
2010936a:	4571                	li	a0,28
2010936c:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:279
}
2010936e:	0001                	nop
20109370:	40f6                	lw	ra,92(sp)
20109372:	42e6                	lw	t0,88(sp)
20109374:	4356                	lw	t1,84(sp)
20109376:	43c6                	lw	t2,80(sp)
20109378:	4436                	lw	s0,76(sp)
2010937a:	4526                	lw	a0,72(sp)
2010937c:	4596                	lw	a1,68(sp)
2010937e:	4606                	lw	a2,64(sp)
20109380:	56f2                	lw	a3,60(sp)
20109382:	5762                	lw	a4,56(sp)
20109384:	57d2                	lw	a5,52(sp)
20109386:	5842                	lw	a6,48(sp)
20109388:	58b2                	lw	a7,44(sp)
2010938a:	5e22                	lw	t3,40(sp)
2010938c:	5e92                	lw	t4,36(sp)
2010938e:	5f02                	lw	t5,32(sp)
20109390:	4ff2                	lw	t6,28(sp)
20109392:	6125                	add	sp,sp,96
20109394:	30200073          	mret

20109398 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20109398:	711d                	add	sp,sp,-96
2010939a:	ce86                	sw	ra,92(sp)
2010939c:	cc96                	sw	t0,88(sp)
2010939e:	ca9a                	sw	t1,84(sp)
201093a0:	c89e                	sw	t2,80(sp)
201093a2:	c6a2                	sw	s0,76(sp)
201093a4:	c4aa                	sw	a0,72(sp)
201093a6:	c2ae                	sw	a1,68(sp)
201093a8:	c0b2                	sw	a2,64(sp)
201093aa:	de36                	sw	a3,60(sp)
201093ac:	dc3a                	sw	a4,56(sp)
201093ae:	da3e                	sw	a5,52(sp)
201093b0:	d842                	sw	a6,48(sp)
201093b2:	d646                	sw	a7,44(sp)
201093b4:	d472                	sw	t3,40(sp)
201093b6:	d276                	sw	t4,36(sp)
201093b8:	d07a                	sw	t5,32(sp)
201093ba:	ce7e                	sw	t6,28(sp)
201093bc:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
201093be:	a68ff0ef          	jal	20108626 <__metal_myhart_id>
201093c2:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
201093c4:	800017b7          	lui	a5,0x80001
201093c8:	070a                	sll	a4,a4,0x2
201093ca:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
201093ce:	97ba                	add	a5,a5,a4
201093d0:	439c                	lw	a5,0(a5)
201093d2:	faf42623          	sw	a5,-84(s0)
201093d6:	fac42783          	lw	a5,-84(s0)
201093da:	c78d                	beqz	a5,20109404 <metal_lc13_interrupt_vector_handler+0x6c>
201093dc:	fac42503          	lw	a0,-84(s0)
201093e0:	9c8ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
201093e4:	faa42423          	sw	a0,-88(s0)
201093e8:	fa842783          	lw	a5,-88(s0)
201093ec:	3507a783          	lw	a5,848(a5)
201093f0:	faf42223          	sw	a5,-92(s0)
201093f4:	fa842783          	lw	a5,-88(s0)
201093f8:	3487a783          	lw	a5,840(a5)
201093fc:	fa442583          	lw	a1,-92(s0)
20109400:	4575                	li	a0,29
20109402:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:285
}
20109404:	0001                	nop
20109406:	40f6                	lw	ra,92(sp)
20109408:	42e6                	lw	t0,88(sp)
2010940a:	4356                	lw	t1,84(sp)
2010940c:	43c6                	lw	t2,80(sp)
2010940e:	4436                	lw	s0,76(sp)
20109410:	4526                	lw	a0,72(sp)
20109412:	4596                	lw	a1,68(sp)
20109414:	4606                	lw	a2,64(sp)
20109416:	56f2                	lw	a3,60(sp)
20109418:	5762                	lw	a4,56(sp)
2010941a:	57d2                	lw	a5,52(sp)
2010941c:	5842                	lw	a6,48(sp)
2010941e:	58b2                	lw	a7,44(sp)
20109420:	5e22                	lw	t3,40(sp)
20109422:	5e92                	lw	t4,36(sp)
20109424:	5f02                	lw	t5,32(sp)
20109426:	4ff2                	lw	t6,28(sp)
20109428:	6125                	add	sp,sp,96
2010942a:	30200073          	mret

2010942e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
2010942e:	711d                	add	sp,sp,-96
20109430:	ce86                	sw	ra,92(sp)
20109432:	cc96                	sw	t0,88(sp)
20109434:	ca9a                	sw	t1,84(sp)
20109436:	c89e                	sw	t2,80(sp)
20109438:	c6a2                	sw	s0,76(sp)
2010943a:	c4aa                	sw	a0,72(sp)
2010943c:	c2ae                	sw	a1,68(sp)
2010943e:	c0b2                	sw	a2,64(sp)
20109440:	de36                	sw	a3,60(sp)
20109442:	dc3a                	sw	a4,56(sp)
20109444:	da3e                	sw	a5,52(sp)
20109446:	d842                	sw	a6,48(sp)
20109448:	d646                	sw	a7,44(sp)
2010944a:	d472                	sw	t3,40(sp)
2010944c:	d276                	sw	t4,36(sp)
2010944e:	d07a                	sw	t5,32(sp)
20109450:	ce7e                	sw	t6,28(sp)
20109452:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20109454:	9d2ff0ef          	jal	20108626 <__metal_myhart_id>
20109458:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
2010945a:	800017b7          	lui	a5,0x80001
2010945e:	070a                	sll	a4,a4,0x2
20109460:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
20109464:	97ba                	add	a5,a5,a4
20109466:	439c                	lw	a5,0(a5)
20109468:	faf42623          	sw	a5,-84(s0)
2010946c:	fac42783          	lw	a5,-84(s0)
20109470:	c78d                	beqz	a5,2010949a <metal_lc14_interrupt_vector_handler+0x6c>
20109472:	fac42503          	lw	a0,-84(s0)
20109476:	932ff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
2010947a:	faa42423          	sw	a0,-88(s0)
2010947e:	fa842783          	lw	a5,-88(s0)
20109482:	3687a783          	lw	a5,872(a5)
20109486:	faf42223          	sw	a5,-92(s0)
2010948a:	fa842783          	lw	a5,-88(s0)
2010948e:	3607a783          	lw	a5,864(a5)
20109492:	fa442583          	lw	a1,-92(s0)
20109496:	4579                	li	a0,30
20109498:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:291
}
2010949a:	0001                	nop
2010949c:	40f6                	lw	ra,92(sp)
2010949e:	42e6                	lw	t0,88(sp)
201094a0:	4356                	lw	t1,84(sp)
201094a2:	43c6                	lw	t2,80(sp)
201094a4:	4436                	lw	s0,76(sp)
201094a6:	4526                	lw	a0,72(sp)
201094a8:	4596                	lw	a1,68(sp)
201094aa:	4606                	lw	a2,64(sp)
201094ac:	56f2                	lw	a3,60(sp)
201094ae:	5762                	lw	a4,56(sp)
201094b0:	57d2                	lw	a5,52(sp)
201094b2:	5842                	lw	a6,48(sp)
201094b4:	58b2                	lw	a7,44(sp)
201094b6:	5e22                	lw	t3,40(sp)
201094b8:	5e92                	lw	t4,36(sp)
201094ba:	5f02                	lw	t5,32(sp)
201094bc:	4ff2                	lw	t6,28(sp)
201094be:	6125                	add	sp,sp,96
201094c0:	30200073          	mret

201094c4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
201094c4:	711d                	add	sp,sp,-96
201094c6:	ce86                	sw	ra,92(sp)
201094c8:	cc96                	sw	t0,88(sp)
201094ca:	ca9a                	sw	t1,84(sp)
201094cc:	c89e                	sw	t2,80(sp)
201094ce:	c6a2                	sw	s0,76(sp)
201094d0:	c4aa                	sw	a0,72(sp)
201094d2:	c2ae                	sw	a1,68(sp)
201094d4:	c0b2                	sw	a2,64(sp)
201094d6:	de36                	sw	a3,60(sp)
201094d8:	dc3a                	sw	a4,56(sp)
201094da:	da3e                	sw	a5,52(sp)
201094dc:	d842                	sw	a6,48(sp)
201094de:	d646                	sw	a7,44(sp)
201094e0:	d472                	sw	t3,40(sp)
201094e2:	d276                	sw	t4,36(sp)
201094e4:	d07a                	sw	t5,32(sp)
201094e6:	ce7e                	sw	t6,28(sp)
201094e8:	1080                	add	s0,sp,96
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
201094ea:	93cff0ef          	jal	20108626 <__metal_myhart_id>
201094ee:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
201094f0:	800017b7          	lui	a5,0x80001
201094f4:	070a                	sll	a4,a4,0x2
201094f6:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
201094fa:	97ba                	add	a5,a5,a4
201094fc:	439c                	lw	a5,0(a5)
201094fe:	faf42623          	sw	a5,-84(s0)
20109502:	fac42783          	lw	a5,-84(s0)
20109506:	c78d                	beqz	a5,20109530 <metal_lc15_interrupt_vector_handler+0x6c>
20109508:	fac42503          	lw	a0,-84(s0)
2010950c:	89cff0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109510:	faa42423          	sw	a0,-88(s0)
20109514:	fa842783          	lw	a5,-88(s0)
20109518:	3807a783          	lw	a5,896(a5)
2010951c:	faf42223          	sw	a5,-92(s0)
20109520:	fa842783          	lw	a5,-88(s0)
20109524:	3787a783          	lw	a5,888(a5)
20109528:	fa442583          	lw	a1,-92(s0)
2010952c:	457d                	li	a0,31
2010952e:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:297
}
20109530:	0001                	nop
20109532:	40f6                	lw	ra,92(sp)
20109534:	42e6                	lw	t0,88(sp)
20109536:	4356                	lw	t1,84(sp)
20109538:	43c6                	lw	t2,80(sp)
2010953a:	4436                	lw	s0,76(sp)
2010953c:	4526                	lw	a0,72(sp)
2010953e:	4596                	lw	a1,68(sp)
20109540:	4606                	lw	a2,64(sp)
20109542:	56f2                	lw	a3,60(sp)
20109544:	5762                	lw	a4,56(sp)
20109546:	57d2                	lw	a5,52(sp)
20109548:	5842                	lw	a6,48(sp)
2010954a:	58b2                	lw	a7,44(sp)
2010954c:	5e22                	lw	t3,40(sp)
2010954e:	5e92                	lw	t4,36(sp)
20109550:	5f02                	lw	t5,32(sp)
20109552:	4ff2                	lw	t6,28(sp)
20109554:	6125                	add	sp,sp,96
20109556:	30200073          	mret

2010955a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
2010955a:	1101                	add	sp,sp,-32
2010955c:	ce22                	sw	s0,28(sp)
2010955e:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20109560:	305027f3          	csrr	a5,mtvec
20109564:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20109568:	fec42783          	lw	a5,-20(s0)
2010956c:	03f7f793          	and	a5,a5,63
20109570:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20109574:	fec42703          	lw	a4,-20(s0)
20109578:	478d                	li	a5,3
2010957a:	02f70363          	beq	a4,a5,201095a0 <__metal_controller_interrupt_vector_mode+0x46>
2010957e:	fec42703          	lw	a4,-20(s0)
20109582:	478d                	li	a5,3
20109584:	02e7e263          	bltu	a5,a4,201095a8 <__metal_controller_interrupt_vector_mode+0x4e>
20109588:	fec42703          	lw	a4,-20(s0)
2010958c:	4785                	li	a5,1
2010958e:	00f70b63          	beq	a4,a5,201095a4 <__metal_controller_interrupt_vector_mode+0x4a>
20109592:	fec42703          	lw	a4,-20(s0)
20109596:	4789                	li	a5,2
20109598:	00f71863          	bne	a4,a5,201095a8 <__metal_controller_interrupt_vector_mode+0x4e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2010959c:	478d                	li	a5,3
2010959e:	a031                	j	201095aa <__metal_controller_interrupt_vector_mode+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
201095a0:	4791                	li	a5,4
201095a2:	a021                	j	201095aa <__metal_controller_interrupt_vector_mode+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
201095a4:	4785                	li	a5,1
201095a6:	a011                	j	201095aa <__metal_controller_interrupt_vector_mode+0x50>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
201095a8:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:314
}
201095aa:	853e                	mv	a0,a5
201095ac:	4472                	lw	s0,28(sp)
201095ae:	6105                	add	sp,sp,32
201095b0:	8082                	ret

201095b2 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
201095b2:	7179                	add	sp,sp,-48
201095b4:	d622                	sw	s0,44(sp)
201095b6:	1800                	add	s0,sp,48
201095b8:	fca42e23          	sw	a0,-36(s0)
201095bc:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
201095c0:	305027f3          	csrr	a5,mtvec
201095c4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
201095c8:	fec42783          	lw	a5,-20(s0)
201095cc:	fc07f793          	and	a5,a5,-64
201095d0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
201095d4:	fd842783          	lw	a5,-40(s0)
201095d8:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
201095dc:	fdc42703          	lw	a4,-36(s0)
201095e0:	4791                	li	a5,4
201095e2:	04f70563          	beq	a4,a5,2010962c <__metal_controller_interrupt_vector+0x7a>
201095e6:	fdc42703          	lw	a4,-36(s0)
201095ea:	4791                	li	a5,4
201095ec:	06e7e863          	bltu	a5,a4,2010965c <__metal_controller_interrupt_vector+0xaa>
201095f0:	fdc42703          	lw	a4,-36(s0)
201095f4:	478d                	li	a5,3
201095f6:	06e7e363          	bltu	a5,a4,2010965c <__metal_controller_interrupt_vector+0xaa>
201095fa:	fdc42703          	lw	a4,-36(s0)
201095fe:	4789                	li	a5,2
20109600:	00f77b63          	bgeu	a4,a5,20109616 <__metal_controller_interrupt_vector+0x64>
20109604:	fdc42783          	lw	a5,-36(s0)
20109608:	c7a1                	beqz	a5,20109650 <__metal_controller_interrupt_vector+0x9e>
2010960a:	fdc42703          	lw	a4,-36(s0)
2010960e:	4785                	li	a5,1
20109610:	02f70963          	beq	a4,a5,20109642 <__metal_controller_interrupt_vector+0x90>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20109614:	a0a1                	j	2010965c <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20109616:	fe842783          	lw	a5,-24(s0)
2010961a:	30779073          	csrw	mtvt,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2010961e:	fec42783          	lw	a5,-20(s0)
20109622:	0027e793          	or	a5,a5,2
20109626:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
2010962a:	a80d                	j	2010965c <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2010962c:	fe842783          	lw	a5,-24(s0)
20109630:	30779073          	csrw	mtvt,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20109634:	fec42783          	lw	a5,-20(s0)
20109638:	0037e793          	or	a5,a5,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
2010963c:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20109640:	a831                	j	2010965c <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20109642:	fe842783          	lw	a5,-24(s0)
20109646:	0017e793          	or	a5,a5,1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
2010964a:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
2010964e:	a039                	j	2010965c <__metal_controller_interrupt_vector+0xaa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20109650:	fe842783          	lw	a5,-24(s0)
20109654:	9bf1                	and	a5,a5,-4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20109656:	30579073          	csrw	mtvec,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
2010965a:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:344
}
2010965c:	0001                	nop
2010965e:	5432                	lw	s0,44(sp)
20109660:	6145                	add	sp,sp,48
20109662:	8082                	ret

20109664 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20109664:	1101                	add	sp,sp,-32
20109666:	ce22                	sw	s0,28(sp)
20109668:	1000                	add	s0,sp,32
2010966a:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2010966e:	fec42703          	lw	a4,-20(s0)
20109672:	47fd                	li	a5,31
20109674:	02e7c563          	blt	a5,a4,2010969e <__metal_valid_interrupt_id+0x3a>
20109678:	fec42703          	lw	a4,-20(s0)
2010967c:	478d                	li	a5,3
2010967e:	02f74863          	blt	a4,a5,201096ae <__metal_valid_interrupt_id+0x4a>
20109682:	fec42783          	lw	a5,-20(s0)
20109686:	7745                	lui	a4,0xffff1
20109688:	88870713          	add	a4,a4,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffeed68>
2010968c:	00f757b3          	srl	a5,a4,a5
20109690:	8b85                	and	a5,a5,1
20109692:	00f037b3          	snez	a5,a5
20109696:	0ff7f793          	zext.b	a5,a5
2010969a:	eb81                	bnez	a5,201096aa <__metal_valid_interrupt_id+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2010969c:	a809                	j	201096ae <__metal_valid_interrupt_id+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2010969e:	fec42703          	lw	a4,-20(s0)
201096a2:	08000793          	li	a5,128
201096a6:	00f71463          	bne	a4,a5,201096ae <__metal_valid_interrupt_id+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
201096aa:	4785                	li	a5,1
201096ac:	a019                	j	201096b2 <__metal_valid_interrupt_id+0x4e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
201096ae:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
201096b0:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:374
}
201096b2:	853e                	mv	a0,a5
201096b4:	4472                	lw	s0,28(sp)
201096b6:	6105                	add	sp,sp,32
201096b8:	8082                	ret

201096ba <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
201096ba:	7179                	add	sp,sp,-48
201096bc:	d606                	sw	ra,44(sp)
201096be:	d422                	sw	s0,40(sp)
201096c0:	1800                	add	s0,sp,48
201096c2:	fca42e23          	sw	a0,-36(s0)
201096c6:	fcb42c23          	sw	a1,-40(s0)
201096ca:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
201096ce:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
201096d2:	fdc42783          	lw	a5,-36(s0)
201096d6:	e399                	bnez	a5,201096dc <__metal_local_interrupt_enable+0x22>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
201096d8:	57fd                	li	a5,-1
201096da:	a849                	j	2010976c <__metal_local_interrupt_enable+0xb2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
201096dc:	fd842703          	lw	a4,-40(s0)
201096e0:	47fd                	li	a5,31
201096e2:	08e7e063          	bltu	a5,a4,20109762 <__metal_local_interrupt_enable+0xa8>
201096e6:	fd842783          	lw	a5,-40(s0)
201096ea:	00279713          	sll	a4,a5,0x2
201096ee:	201047b7          	lui	a5,0x20104
201096f2:	65878793          	add	a5,a5,1624 # 20104658 <__metal_driver_vtable_riscv_clint0+0x64>
201096f6:	97ba                	add	a5,a5,a4
201096f8:	439c                	lw	a5,0(a5)
201096fa:	8782                	jr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
201096fc:	fd442783          	lw	a5,-44(s0)
20109700:	c781                	beqz	a5,20109708 <__metal_local_interrupt_enable+0x4e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20109702:	f3ffe0ef          	jal	20108640 <__metal_interrupt_global_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20109706:	a08d                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20109708:	f51fe0ef          	jal	20108658 <__metal_interrupt_global_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2010970c:	a8b1                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
2010970e:	fd442783          	lw	a5,-44(s0)
20109712:	c781                	beqz	a5,2010971a <__metal_local_interrupt_enable+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20109714:	f5dfe0ef          	jal	20108670 <__metal_interrupt_software_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20109718:	a881                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2010971a:	f6ffe0ef          	jal	20108688 <__metal_interrupt_software_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
2010971e:	a0a9                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20109720:	fd442783          	lw	a5,-44(s0)
20109724:	c781                	beqz	a5,2010972c <__metal_local_interrupt_enable+0x72>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20109726:	f7bfe0ef          	jal	201086a0 <__metal_interrupt_timer_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
2010972a:	a83d                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
2010972c:	f8ffe0ef          	jal	201086ba <__metal_interrupt_timer_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20109730:	a825                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20109732:	fd442783          	lw	a5,-44(s0)
20109736:	c781                	beqz	a5,2010973e <__metal_local_interrupt_enable+0x84>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20109738:	f9dfe0ef          	jal	201086d4 <__metal_interrupt_external_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2010973c:	a035                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
2010973e:	fb3fe0ef          	jal	201086f0 <__metal_interrupt_external_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20109742:	a01d                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20109744:	fd442783          	lw	a5,-44(s0)
20109748:	c799                	beqz	a5,20109756 <__metal_local_interrupt_enable+0x9c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
2010974a:	fd842783          	lw	a5,-40(s0)
2010974e:	853e                	mv	a0,a5
20109750:	fbdfe0ef          	jal	2010870c <__metal_interrupt_local_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20109754:	a811                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20109756:	fd842783          	lw	a5,-40(s0)
2010975a:	853e                	mv	a0,a5
2010975c:	fddfe0ef          	jal	20108738 <__metal_interrupt_local_disable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20109760:	a021                	j	20109768 <__metal_local_interrupt_enable+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20109762:	57fd                	li	a5,-1
20109764:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20109768:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:439
}
2010976c:	853e                	mv	a0,a5
2010976e:	50b2                	lw	ra,44(sp)
20109770:	5422                	lw	s0,40(sp)
20109772:	6145                	add	sp,sp,48
20109774:	8082                	ret

20109776 <__metal_exception_register>:
__metal_exception_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20109776:	7179                	add	sp,sp,-48
20109778:	d622                	sw	s0,44(sp)
2010977a:	1800                	add	s0,sp,48
2010977c:	fca42e23          	sw	a0,-36(s0)
20109780:	fcb42c23          	sw	a1,-40(s0)
20109784:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20109788:	fdc42783          	lw	a5,-36(s0)
2010978c:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20109790:	fd842703          	lw	a4,-40(s0)
20109794:	47ad                	li	a5,11
20109796:	02e7c263          	blt	a5,a4,201097ba <__metal_exception_register+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2010979a:	fd442783          	lw	a5,-44(s0)
2010979e:	cf91                	beqz	a5,201097ba <__metal_exception_register+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
201097a0:	fec42703          	lw	a4,-20(s0)
201097a4:	fd842783          	lw	a5,-40(s0)
201097a8:	0e878793          	add	a5,a5,232
201097ac:	078a                	sll	a5,a5,0x2
201097ae:	97ba                	add	a5,a5,a4
201097b0:	fd442703          	lw	a4,-44(s0)
201097b4:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
201097b6:	4781                	li	a5,0
201097b8:	a011                	j	201097bc <__metal_exception_register+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
201097ba:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:450
}
201097bc:	853e                	mv	a0,a5
201097be:	5432                	lw	s0,44(sp)
201097c0:	6145                	add	sp,sp,48
201097c2:	8082                	ret

201097c4 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
201097c4:	7179                	add	sp,sp,-48
201097c6:	d606                	sw	ra,44(sp)
201097c8:	d422                	sw	s0,40(sp)
201097ca:	1800                	add	s0,sp,48
201097cc:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
201097d0:	fdc42783          	lw	a5,-36(s0)
201097d4:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
201097d8:	fe442783          	lw	a5,-28(s0)
201097dc:	43dc                	lw	a5,4(a5)
201097de:	e3e1                	bnez	a5,2010989e <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
201097e0:	fe042623          	sw	zero,-20(s0)
201097e4:	a0b9                	j	20109832 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:460
            intc->metal_int_table[i].handler = NULL;
201097e6:	fe442683          	lw	a3,-28(s0)
201097ea:	fec42703          	lw	a4,-20(s0)
201097ee:	87ba                	mv	a5,a4
201097f0:	0786                	sll	a5,a5,0x1
201097f2:	97ba                	add	a5,a5,a4
201097f4:	078e                	sll	a5,a5,0x3
201097f6:	97b6                	add	a5,a5,a3
201097f8:	0807a823          	sw	zero,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:461
            intc->metal_int_table[i].sub_int = NULL;
201097fc:	fe442683          	lw	a3,-28(s0)
20109800:	fec42703          	lw	a4,-20(s0)
20109804:	87ba                	mv	a5,a4
20109806:	0786                	sll	a5,a5,0x1
20109808:	97ba                	add	a5,a5,a4
2010980a:	078e                	sll	a5,a5,0x3
2010980c:	97b6                	add	a5,a5,a3
2010980e:	0807aa23          	sw	zero,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:462
            intc->metal_int_table[i].exint_data = NULL;
20109812:	fe442683          	lw	a3,-28(s0)
20109816:	fec42703          	lw	a4,-20(s0)
2010981a:	87ba                	mv	a5,a4
2010981c:	0786                	sll	a5,a5,0x1
2010981e:	97ba                	add	a5,a5,a4
20109820:	078e                	sll	a5,a5,0x3
20109822:	97b6                	add	a5,a5,a3
20109824:	0807ac23          	sw	zero,152(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20109828:	fec42783          	lw	a5,-20(s0)
2010982c:	0785                	add	a5,a5,1
2010982e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20109832:	fec42703          	lw	a4,-20(s0)
20109836:	47fd                	li	a5,31
20109838:	fae7d7e3          	bge	a5,a4,201097e6 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
2010983c:	fe042423          	sw	zero,-24(s0)
20109840:	a01d                	j	20109866 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:466
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20109842:	fe442703          	lw	a4,-28(s0)
20109846:	fe842783          	lw	a5,-24(s0)
2010984a:	0e878793          	add	a5,a5,232
2010984e:	078a                	sll	a5,a5,0x2
20109850:	97ba                	add	a5,a5,a4
20109852:	20108737          	lui	a4,0x20108
20109856:	76470713          	add	a4,a4,1892 # 20108764 <__metal_default_exception_handler>
2010985a:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
2010985c:	fe842783          	lw	a5,-24(s0)
20109860:	0785                	add	a5,a5,1
20109862:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20109866:	fe842703          	lw	a4,-24(s0)
2010986a:	47ad                	li	a5,11
2010986c:	fce7dbe3          	bge	a5,a4,20109842 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20109870:	305027f3          	csrr	a5,mtvec
20109874:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20109878:	201007b7          	lui	a5,0x20100
2010987c:	13478793          	add	a5,a5,308 # 20100134 <early_trap_vector>
20109880:	fe042703          	lw	a4,-32(s0)
20109884:	00f71963          	bne	a4,a5,20109896 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20109888:	201097b7          	lui	a5,0x20109
2010988c:	a0078593          	add	a1,a5,-1536 # 20108a00 <__metal_exception_handler>
20109890:	4501                	li	a0,0
20109892:	d21ff0ef          	jal	201095b2 <__metal_controller_interrupt_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20109896:	fe442783          	lw	a5,-28(s0)
2010989a:	4705                	li	a4,1
2010989c:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
2010989e:	0001                	nop
201098a0:	50b2                	lw	ra,44(sp)
201098a2:	5422                	lw	s0,40(sp)
201098a4:	6145                	add	sp,sp,48
201098a6:	8082                	ret

201098a8 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
201098a8:	7179                	add	sp,sp,-48
201098aa:	d606                	sw	ra,44(sp)
201098ac:	d422                	sw	s0,40(sp)
201098ae:	1800                	add	s0,sp,48
201098b0:	fca42e23          	sw	a0,-36(s0)
201098b4:	fcb42c23          	sw	a1,-40(s0)
201098b8:	fcc42a23          	sw	a2,-44(s0)
201098bc:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
201098c0:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
201098c4:	fdc42783          	lw	a5,-36(s0)
201098c8:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
201098cc:	fd842503          	lw	a0,-40(s0)
201098d0:	d95ff0ef          	jal	20109664 <__metal_valid_interrupt_id>
201098d4:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:491 (discriminator 1)
201098d6:	e399                	bnez	a5,201098dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x34>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
201098d8:	57d5                	li	a5,-11
201098da:	a265                	j	20109a82 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1da>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
201098dc:	fd842703          	lw	a4,-40(s0)
201098e0:	08000793          	li	a5,128
201098e4:	00f71863          	bne	a4,a5,201098f4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:495
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
201098e8:	c73ff0ef          	jal	2010955a <__metal_controller_interrupt_vector_mode>
201098ec:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
201098ee:	c399                	beqz	a5,201098f4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
201098f0:	57cd                	li	a5,-13
201098f2:	aa41                	j	20109a82 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1da>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
201098f4:	fd442783          	lw	a5,-44(s0)
201098f8:	cfb9                	beqz	a5,20109956 <__metal_driver_riscv_cpu_controller_interrupt_register+0xae>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
201098fa:	fd842703          	lw	a4,-40(s0)
201098fe:	08000793          	li	a5,128
20109902:	00f71f63          	bne	a4,a5,20109920 <__metal_driver_riscv_cpu_controller_interrupt_register+0x78>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20109906:	fe842783          	lw	a5,-24(s0)
2010990a:	fd442703          	lw	a4,-44(s0)
2010990e:	38e7a823          	sw	a4,912(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20109912:	fe842783          	lw	a5,-24(s0)
20109916:	fd042703          	lw	a4,-48(s0)
2010991a:	38e7ac23          	sw	a4,920(a5)
2010991e:	a285                	j	20109a7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20109920:	fe842683          	lw	a3,-24(s0)
20109924:	fd842703          	lw	a4,-40(s0)
20109928:	87ba                	mv	a5,a4
2010992a:	0786                	sll	a5,a5,0x1
2010992c:	97ba                	add	a5,a5,a4
2010992e:	078e                	sll	a5,a5,0x3
20109930:	97b6                	add	a5,a5,a3
20109932:	fd442703          	lw	a4,-44(s0)
20109936:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
2010993a:	fe842683          	lw	a3,-24(s0)
2010993e:	fd842703          	lw	a4,-40(s0)
20109942:	87ba                	mv	a5,a4
20109944:	0786                	sll	a5,a5,0x1
20109946:	97ba                	add	a5,a5,a4
20109948:	078e                	sll	a5,a5,0x3
2010994a:	97b6                	add	a5,a5,a3
2010994c:	fd042703          	lw	a4,-48(s0)
20109950:	08e7ac23          	sw	a4,152(a5)
20109954:	a22d                	j	20109a7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20109956:	fd842703          	lw	a4,-40(s0)
2010995a:	08000793          	li	a5,128
2010995e:	0cf70163          	beq	a4,a5,20109a20 <__metal_driver_riscv_cpu_controller_interrupt_register+0x178>
20109962:	fd842703          	lw	a4,-40(s0)
20109966:	08000793          	li	a5,128
2010996a:	10e7c763          	blt	a5,a4,20109a78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
2010996e:	fd842703          	lw	a4,-40(s0)
20109972:	47fd                	li	a5,31
20109974:	10e7c263          	blt	a5,a4,20109a78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
20109978:	fd842703          	lw	a4,-40(s0)
2010997c:	47c1                	li	a5,16
2010997e:	0cf75063          	bge	a4,a5,20109a3e <__metal_driver_riscv_cpu_controller_interrupt_register+0x196>
20109982:	fd842703          	lw	a4,-40(s0)
20109986:	47ad                	li	a5,11
20109988:	0af70b63          	beq	a4,a5,20109a3e <__metal_driver_riscv_cpu_controller_interrupt_register+0x196>
2010998c:	fd842703          	lw	a4,-40(s0)
20109990:	47ad                	li	a5,11
20109992:	0ee7c363          	blt	a5,a4,20109a78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
20109996:	fd842703          	lw	a4,-40(s0)
2010999a:	478d                	li	a5,3
2010999c:	00f70863          	beq	a4,a5,201099ac <__metal_driver_riscv_cpu_controller_interrupt_register+0x104>
201099a0:	fd842703          	lw	a4,-40(s0)
201099a4:	479d                	li	a5,7
201099a6:	04f70063          	beq	a4,a5,201099e6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13e>
201099aa:	a0f9                	j	20109a78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
201099ac:	fe842683          	lw	a3,-24(s0)
201099b0:	fd842703          	lw	a4,-40(s0)
201099b4:	87ba                	mv	a5,a4
201099b6:	0786                	sll	a5,a5,0x1
201099b8:	97ba                	add	a5,a5,a4
201099ba:	078e                	sll	a5,a5,0x3
201099bc:	97b6                	add	a5,a5,a3
201099be:	20109737          	lui	a4,0x20109
201099c2:	85470713          	add	a4,a4,-1964 # 20108854 <__metal_default_sw_handler>
201099c6:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
201099ca:	fe842683          	lw	a3,-24(s0)
201099ce:	fd842703          	lw	a4,-40(s0)
201099d2:	87ba                	mv	a5,a4
201099d4:	0786                	sll	a5,a5,0x1
201099d6:	97ba                	add	a5,a5,a4
201099d8:	078e                	sll	a5,a5,0x3
201099da:	97b6                	add	a5,a5,a3
201099dc:	fd042703          	lw	a4,-48(s0)
201099e0:	08e7aa23          	sw	a4,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
201099e4:	a869                	j	20109a7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
201099e6:	fe842683          	lw	a3,-24(s0)
201099ea:	fd842703          	lw	a4,-40(s0)
201099ee:	87ba                	mv	a5,a4
201099f0:	0786                	sll	a5,a5,0x1
201099f2:	97ba                	add	a5,a5,a4
201099f4:	078e                	sll	a5,a5,0x3
201099f6:	97b6                	add	a5,a5,a3
201099f8:	20109737          	lui	a4,0x20109
201099fc:	96670713          	add	a4,a4,-1690 # 20108966 <__metal_default_timer_handler>
20109a00:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20109a04:	fe842683          	lw	a3,-24(s0)
20109a08:	fd842703          	lw	a4,-40(s0)
20109a0c:	87ba                	mv	a5,a4
20109a0e:	0786                	sll	a5,a5,0x1
20109a10:	97ba                	add	a5,a5,a4
20109a12:	078e                	sll	a5,a5,0x3
20109a14:	97b6                	add	a5,a5,a3
20109a16:	fd042703          	lw	a4,-48(s0)
20109a1a:	08e7aa23          	sw	a4,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20109a1e:	a085                	j	20109a7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20109a20:	fe842783          	lw	a5,-24(s0)
20109a24:	20109737          	lui	a4,0x20109
20109a28:	95070713          	add	a4,a4,-1712 # 20108950 <__metal_default_beu_handler>
20109a2c:	38e7a823          	sw	a4,912(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20109a30:	fe842783          	lw	a5,-24(s0)
20109a34:	fd042703          	lw	a4,-48(s0)
20109a38:	38e7ac23          	sw	a4,920(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20109a3c:	a089                	j	20109a7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20109a3e:	fe842683          	lw	a3,-24(s0)
20109a42:	fd842703          	lw	a4,-40(s0)
20109a46:	87ba                	mv	a5,a4
20109a48:	0786                	sll	a5,a5,0x1
20109a4a:	97ba                	add	a5,a5,a4
20109a4c:	078e                	sll	a5,a5,0x3
20109a4e:	97b6                	add	a5,a5,a3
20109a50:	20108737          	lui	a4,0x20108
20109a54:	77c70713          	add	a4,a4,1916 # 2010877c <__metal_default_interrupt_handler>
20109a58:	08e7a823          	sw	a4,144(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20109a5c:	fe842683          	lw	a3,-24(s0)
20109a60:	fd842703          	lw	a4,-40(s0)
20109a64:	87ba                	mv	a5,a4
20109a66:	0786                	sll	a5,a5,0x1
20109a68:	97ba                	add	a5,a5,a4
20109a6a:	078e                	sll	a5,a5,0x3
20109a6c:	97b6                	add	a5,a5,a3
20109a6e:	fd042703          	lw	a4,-48(s0)
20109a72:	08e7aa23          	sw	a4,148(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20109a76:	a021                	j	20109a7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20109a78:	57d1                	li	a5,-12
20109a7a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20109a7e:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:549
}
20109a82:	853e                	mv	a0,a5
20109a84:	50b2                	lw	ra,44(sp)
20109a86:	5422                	lw	s0,40(sp)
20109a88:	6145                	add	sp,sp,48
20109a8a:	8082                	ret

20109a8c <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20109a8c:	1101                	add	sp,sp,-32
20109a8e:	ce06                	sw	ra,28(sp)
20109a90:	cc22                	sw	s0,24(sp)
20109a92:	1000                	add	s0,sp,32
20109a94:	fea42623          	sw	a0,-20(s0)
20109a98:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20109a9c:	fe842783          	lw	a5,-24(s0)
20109aa0:	4605                	li	a2,1
20109aa2:	85be                	mv	a1,a5
20109aa4:	fec42503          	lw	a0,-20(s0)
20109aa8:	c13ff0ef          	jal	201096ba <__metal_local_interrupt_enable>
20109aac:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:554
}
20109aae:	853e                	mv	a0,a5
20109ab0:	40f2                	lw	ra,28(sp)
20109ab2:	4462                	lw	s0,24(sp)
20109ab4:	6105                	add	sp,sp,32
20109ab6:	8082                	ret

20109ab8 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20109ab8:	1101                	add	sp,sp,-32
20109aba:	ce06                	sw	ra,28(sp)
20109abc:	cc22                	sw	s0,24(sp)
20109abe:	1000                	add	s0,sp,32
20109ac0:	fea42623          	sw	a0,-20(s0)
20109ac4:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20109ac8:	fe842783          	lw	a5,-24(s0)
20109acc:	4601                	li	a2,0
20109ace:	85be                	mv	a1,a5
20109ad0:	fec42503          	lw	a0,-20(s0)
20109ad4:	be7ff0ef          	jal	201096ba <__metal_local_interrupt_enable>
20109ad8:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:559
}
20109ada:	853e                	mv	a0,a5
20109adc:	40f2                	lw	ra,28(sp)
20109ade:	4462                	lw	s0,24(sp)
20109ae0:	6105                	add	sp,sp,32
20109ae2:	8082                	ret

20109ae4 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20109ae4:	1101                	add	sp,sp,-32
20109ae6:	ce06                	sw	ra,28(sp)
20109ae8:	cc22                	sw	s0,24(sp)
20109aea:	1000                	add	s0,sp,32
20109aec:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20109af0:	a6bff0ef          	jal	2010955a <__metal_controller_interrupt_vector_mode>
20109af4:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:593
}
20109af6:	853e                	mv	a0,a5
20109af8:	40f2                	lw	ra,28(sp)
20109afa:	4462                	lw	s0,24(sp)
20109afc:	6105                	add	sp,sp,32
20109afe:	8082                	ret

20109b00 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20109b00:	1101                	add	sp,sp,-32
20109b02:	ce06                	sw	ra,28(sp)
20109b04:	cc22                	sw	s0,24(sp)
20109b06:	1000                	add	s0,sp,32
20109b08:	fea42623          	sw	a0,-20(s0)
20109b0c:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20109b10:	fe842783          	lw	a5,-24(s0)
20109b14:	eb99                	bnez	a5,20109b2a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20109b16:	201097b7          	lui	a5,0x20109
20109b1a:	a0078593          	add	a1,a5,-1536 # 20108a00 <__metal_exception_handler>
20109b1e:	fe842503          	lw	a0,-24(s0)
20109b22:	a91ff0ef          	jal	201095b2 <__metal_controller_interrupt_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20109b26:	4781                	li	a5,0
20109b28:	a00d                	j	20109b4a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20109b2a:	fe842703          	lw	a4,-24(s0)
20109b2e:	4785                	li	a5,1
20109b30:	00f71c63          	bne	a4,a5,20109b48 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20109b34:	2010c7b7          	lui	a5,0x2010c
20109b38:	30078593          	add	a1,a5,768 # 2010c300 <__metal_vector_table>
20109b3c:	fe842503          	lw	a0,-24(s0)
20109b40:	a73ff0ef          	jal	201095b2 <__metal_controller_interrupt_vector>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20109b44:	4781                	li	a5,0
20109b46:	a011                	j	20109b4a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20109b48:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:609
}
20109b4a:	853e                	mv	a0,a5
20109b4c:	40f2                	lw	ra,28(sp)
20109b4e:	4462                	lw	s0,24(sp)
20109b50:	6105                	add	sp,sp,32
20109b52:	8082                	ret

20109b54 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20109b54:	1101                	add	sp,sp,-32
20109b56:	ce22                	sw	s0,28(sp)
20109b58:	1000                	add	s0,sp,32
20109b5a:	fea42623          	sw	a0,-20(s0)
20109b5e:	feb42423          	sw	a1,-24(s0)
20109b62:	fec42223          	sw	a2,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20109b66:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:616
}
20109b68:	853e                	mv	a0,a5
20109b6a:	4472                	lw	s0,28(sp)
20109b6c:	6105                	add	sp,sp,32
20109b6e:	8082                	ret

20109b70 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20109b70:	7139                	add	sp,sp,-64
20109b72:	de22                	sw	s0,60(sp)
20109b74:	0080                	add	s0,sp,64
20109b76:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20109b7a:	4501                	li	a0,0
20109b7c:	4581                	li	a1,0
20109b7e:	fea42423          	sw	a0,-24(s0)
20109b82:	feb42623          	sw	a1,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:627

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20109b86:	b80025f3          	csrr	a1,mcycleh
20109b8a:	feb42223          	sw	a1,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:628
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20109b8e:	b00025f3          	csrr	a1,mcycle
20109b92:	feb42023          	sw	a1,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:629
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20109b96:	b80025f3          	csrr	a1,mcycleh
20109b9a:	fcb42e23          	sw	a1,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20109b9e:	fe442503          	lw	a0,-28(s0)
20109ba2:	fdc42583          	lw	a1,-36(s0)
20109ba6:	feb510e3          	bne	a0,a1,20109b86 <__metal_driver_cpu_mcycle_get+0x16>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20109baa:	fe442583          	lw	a1,-28(s0)
20109bae:	882e                	mv	a6,a1
20109bb0:	4881                	li	a7,0
20109bb2:	00081793          	sll	a5,a6,0x0
20109bb6:	4701                	li	a4,0
20109bb8:	fe042583          	lw	a1,-32(s0)
20109bbc:	862e                	mv	a2,a1
20109bbe:	4681                	li	a3,0
20109bc0:	00c765b3          	or	a1,a4,a2
20109bc4:	feb42423          	sw	a1,-24(s0)
20109bc8:	8fd5                	or	a5,a5,a3
20109bca:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20109bce:	fe842703          	lw	a4,-24(s0)
20109bd2:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:640
}
20109bd6:	853a                	mv	a0,a4
20109bd8:	85be                	mv	a1,a5
20109bda:	5472                	lw	s0,60(sp)
20109bdc:	6121                	add	sp,sp,64
20109bde:	8082                	ret

20109be0 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20109be0:	7179                	add	sp,sp,-48
20109be2:	d606                	sw	ra,44(sp)
20109be4:	d422                	sw	s0,40(sp)
20109be6:	d24a                	sw	s2,36(sp)
20109be8:	d04e                	sw	s3,32(sp)
20109bea:	1800                	add	s0,sp,48
20109bec:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20109bf0:	fdc42783          	lw	a5,-36(s0)
20109bf4:	e781                	bnez	a5,20109bfc <__metal_driver_cpu_timebase_get+0x1c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20109bf6:	4901                	li	s2,0
20109bf8:	4981                	li	s3,0
20109bfa:	a821                	j	20109c12 <__metal_driver_cpu_timebase_get+0x32>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20109bfc:	fdc42503          	lw	a0,-36(s0)
20109c00:	97ffe0ef          	jal	2010857e <__metal_driver_cpu_timebase>
20109c04:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20109c08:	fec42783          	lw	a5,-20(s0)
20109c0c:	893e                	mv	s2,a5
20109c0e:	87fd                	sra	a5,a5,0x1f
20109c10:	89be                	mv	s3,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:650
}
20109c12:	874a                	mv	a4,s2
20109c14:	87ce                	mv	a5,s3
20109c16:	853a                	mv	a0,a4
20109c18:	85be                	mv	a1,a5
20109c1a:	50b2                	lw	ra,44(sp)
20109c1c:	5422                	lw	s0,40(sp)
20109c1e:	5912                	lw	s2,36(sp)
20109c20:	5982                	lw	s3,32(sp)
20109c22:	6145                	add	sp,sp,48
20109c24:	8082                	ret

20109c26 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20109c26:	7179                	add	sp,sp,-48
20109c28:	d606                	sw	ra,44(sp)
20109c2a:	d422                	sw	s0,40(sp)
20109c2c:	1800                	add	s0,sp,48
20109c2e:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20109c32:	4781                	li	a5,0
20109c34:	4801                	li	a6,0
20109c36:	fef42023          	sw	a5,-32(s0)
20109c3a:	ff042223          	sw	a6,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20109c3e:	fdc42503          	lw	a0,-36(s0)
20109c42:	967fe0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109c46:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20109c4a:	fec42783          	lw	a5,-20(s0)
20109c4e:	c78d                	beqz	a5,20109c78 <__metal_driver_cpu_mtime_get+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20109c50:	fec42783          	lw	a5,-20(s0)
20109c54:	13c7a783          	lw	a5,316(a5)
20109c58:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20109c5c:	fe842783          	lw	a5,-24(s0)
20109c60:	cf81                	beqz	a5,20109c78 <__metal_driver_cpu_mtime_get+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20109c62:	fe842783          	lw	a5,-24(s0)
20109c66:	439c                	lw	a5,0(a5)
20109c68:	47fc                	lw	a5,76(a5)
20109c6a:	fe040713          	add	a4,s0,-32
20109c6e:	863a                	mv	a2,a4
20109c70:	4585                	li	a1,1
20109c72:	fe842503          	lw	a0,-24(s0)
20109c76:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20109c78:	fe042703          	lw	a4,-32(s0)
20109c7c:	fe442783          	lw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:667
}
20109c80:	853a                	mv	a0,a4
20109c82:	85be                	mv	a1,a5
20109c84:	50b2                	lw	ra,44(sp)
20109c86:	5422                	lw	s0,40(sp)
20109c88:	6145                	add	sp,sp,48
20109c8a:	8082                	ret

20109c8c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20109c8c:	7179                	add	sp,sp,-48
20109c8e:	d606                	sw	ra,44(sp)
20109c90:	d422                	sw	s0,40(sp)
20109c92:	d226                	sw	s1,36(sp)
20109c94:	1800                	add	s0,sp,48
20109c96:	fca42e23          	sw	a0,-36(s0)
20109c9a:	fcb42823          	sw	a1,-48(s0)
20109c9e:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20109ca2:	57fd                	li	a5,-1
20109ca4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20109ca8:	fdc42503          	lw	a0,-36(s0)
20109cac:	8fdfe0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109cb0:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20109cb4:	fe842783          	lw	a5,-24(s0)
20109cb8:	cf8d                	beqz	a5,20109cf2 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20109cba:	fe842783          	lw	a5,-24(s0)
20109cbe:	13c7a783          	lw	a5,316(a5)
20109cc2:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20109cc6:	fe442783          	lw	a5,-28(s0)
20109cca:	c785                	beqz	a5,20109cf2 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20109ccc:	fe442783          	lw	a5,-28(s0)
20109cd0:	439c                	lw	a5,0(a5)
20109cd2:	4ba4                	lw	s1,80(a5)
20109cd4:	fdc42503          	lw	a0,-36(s0)
20109cd8:	883fe0ef          	jal	2010855a <__metal_driver_cpu_hartid>
20109cdc:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:680 (discriminator 1)
20109cde:	fd042603          	lw	a2,-48(s0)
20109ce2:	fd442683          	lw	a3,-44(s0)
20109ce6:	85be                	mv	a1,a5
20109ce8:	fe442503          	lw	a0,-28(s0)
20109cec:	9482                	jalr	s1
20109cee:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20109cf2:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:685
}
20109cf6:	853e                	mv	a0,a5
20109cf8:	50b2                	lw	ra,44(sp)
20109cfa:	5422                	lw	s0,40(sp)
20109cfc:	5492                	lw	s1,36(sp)
20109cfe:	6145                	add	sp,sp,48
20109d00:	8082                	ret

20109d02 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20109d02:	1101                	add	sp,sp,-32
20109d04:	ce22                	sw	s0,28(sp)
20109d06:	1000                	add	s0,sp,32
20109d08:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20109d0c:	800017b7          	lui	a5,0x80001
20109d10:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_dt_clint_2000000>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20109d14:	853e                	mv	a0,a5
20109d16:	4472                	lw	s0,28(sp)
20109d18:	6105                	add	sp,sp,32
20109d1a:	8082                	ret

20109d1c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20109d1c:	1101                	add	sp,sp,-32
20109d1e:	ce22                	sw	s0,28(sp)
20109d20:	1000                	add	s0,sp,32
20109d22:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20109d26:	479d                	li	a5,7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:703
}
20109d28:	853e                	mv	a0,a5
20109d2a:	4472                	lw	s0,28(sp)
20109d2c:	6105                	add	sp,sp,32
20109d2e:	8082                	ret

20109d30 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20109d30:	1101                	add	sp,sp,-32
20109d32:	ce22                	sw	s0,28(sp)
20109d34:	1000                	add	s0,sp,32
20109d36:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20109d3a:	800017b7          	lui	a5,0x80001
20109d3e:	a7c78793          	add	a5,a5,-1412 # 80000a7c <__metal_dt_clint_2000000>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20109d42:	853e                	mv	a0,a5
20109d44:	4472                	lw	s0,28(sp)
20109d46:	6105                	add	sp,sp,32
20109d48:	8082                	ret

20109d4a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20109d4a:	1101                	add	sp,sp,-32
20109d4c:	ce22                	sw	s0,28(sp)
20109d4e:	1000                	add	s0,sp,32
20109d50:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20109d54:	478d                	li	a5,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:721
}
20109d56:	853e                	mv	a0,a5
20109d58:	4472                	lw	s0,28(sp)
20109d5a:	6105                	add	sp,sp,32
20109d5c:	8082                	ret

20109d5e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20109d5e:	7179                	add	sp,sp,-48
20109d60:	d606                	sw	ra,44(sp)
20109d62:	d422                	sw	s0,40(sp)
20109d64:	1800                	add	s0,sp,48
20109d66:	fca42e23          	sw	a0,-36(s0)
20109d6a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20109d6e:	57fd                	li	a5,-1
20109d70:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20109d74:	fdc42503          	lw	a0,-36(s0)
20109d78:	831fe0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109d7c:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20109d80:	fe842783          	lw	a5,-24(s0)
20109d84:	c79d                	beqz	a5,20109db2 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20109d86:	fe842783          	lw	a5,-24(s0)
20109d8a:	0dc7a783          	lw	a5,220(a5)
20109d8e:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20109d92:	fe442783          	lw	a5,-28(s0)
20109d96:	cf91                	beqz	a5,20109db2 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20109d98:	fe442783          	lw	a5,-28(s0)
20109d9c:	439c                	lw	a5,0(a5)
20109d9e:	47fc                	lw	a5,76(a5)
20109da0:	fd840713          	add	a4,s0,-40
20109da4:	863a                	mv	a2,a4
20109da6:	458d                	li	a1,3
20109da8:	fe442503          	lw	a0,-28(s0)
20109dac:	9782                	jalr	a5
20109dae:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20109db2:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:738
}
20109db6:	853e                	mv	a0,a5
20109db8:	50b2                	lw	ra,44(sp)
20109dba:	5422                	lw	s0,40(sp)
20109dbc:	6145                	add	sp,sp,48
20109dbe:	8082                	ret

20109dc0 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20109dc0:	7179                	add	sp,sp,-48
20109dc2:	d606                	sw	ra,44(sp)
20109dc4:	d422                	sw	s0,40(sp)
20109dc6:	1800                	add	s0,sp,48
20109dc8:	fca42e23          	sw	a0,-36(s0)
20109dcc:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20109dd0:	57fd                	li	a5,-1
20109dd2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20109dd6:	fdc42503          	lw	a0,-36(s0)
20109dda:	fcefe0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109dde:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20109de2:	fe842783          	lw	a5,-24(s0)
20109de6:	c79d                	beqz	a5,20109e14 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20109de8:	fe842783          	lw	a5,-24(s0)
20109dec:	0dc7a783          	lw	a5,220(a5)
20109df0:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20109df4:	fe442783          	lw	a5,-28(s0)
20109df8:	cf91                	beqz	a5,20109e14 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20109dfa:	fe442783          	lw	a5,-28(s0)
20109dfe:	439c                	lw	a5,0(a5)
20109e00:	47fc                	lw	a5,76(a5)
20109e02:	fd840713          	add	a4,s0,-40
20109e06:	863a                	mv	a2,a4
20109e08:	4589                	li	a1,2
20109e0a:	fe442503          	lw	a0,-28(s0)
20109e0e:	9782                	jalr	a5
20109e10:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20109e14:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:755
}
20109e18:	853e                	mv	a0,a5
20109e1a:	50b2                	lw	ra,44(sp)
20109e1c:	5422                	lw	s0,40(sp)
20109e1e:	6145                	add	sp,sp,48
20109e20:	8082                	ret

20109e22 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20109e22:	7179                	add	sp,sp,-48
20109e24:	d606                	sw	ra,44(sp)
20109e26:	d422                	sw	s0,40(sp)
20109e28:	1800                	add	s0,sp,48
20109e2a:	fca42e23          	sw	a0,-36(s0)
20109e2e:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20109e32:	fe042623          	sw	zero,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20109e36:	fdc42503          	lw	a0,-36(s0)
20109e3a:	f6efe0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109e3e:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20109e42:	fe842783          	lw	a5,-24(s0)
20109e46:	c79d                	beqz	a5,20109e74 <__metal_driver_cpu_get_msip+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20109e48:	fe842783          	lw	a5,-24(s0)
20109e4c:	0dc7a783          	lw	a5,220(a5)
20109e50:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20109e54:	fe442783          	lw	a5,-28(s0)
20109e58:	cf91                	beqz	a5,20109e74 <__metal_driver_cpu_get_msip+0x52>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20109e5a:	fe442783          	lw	a5,-28(s0)
20109e5e:	439c                	lw	a5,0(a5)
20109e60:	47fc                	lw	a5,76(a5)
20109e62:	fd840713          	add	a4,s0,-40
20109e66:	863a                	mv	a2,a4
20109e68:	4591                	li	a1,4
20109e6a:	fe442503          	lw	a0,-28(s0)
20109e6e:	9782                	jalr	a5
20109e70:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20109e74:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:772
}
20109e78:	853e                	mv	a0,a5
20109e7a:	50b2                	lw	ra,44(sp)
20109e7c:	5422                	lw	s0,40(sp)
20109e7e:	6145                	add	sp,sp,48
20109e80:	8082                	ret

20109e82 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20109e82:	1101                	add	sp,sp,-32
20109e84:	ce06                	sw	ra,28(sp)
20109e86:	cc22                	sw	s0,24(sp)
20109e88:	1000                	add	s0,sp,32
20109e8a:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20109e8e:	fec42503          	lw	a0,-20(s0)
20109e92:	f16fe0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109e96:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:777
}
20109e98:	853e                	mv	a0,a5
20109e9a:	40f2                	lw	ra,28(sp)
20109e9c:	4462                	lw	s0,24(sp)
20109e9e:	6105                	add	sp,sp,32
20109ea0:	8082                	ret

20109ea2 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20109ea2:	7179                	add	sp,sp,-48
20109ea4:	d606                	sw	ra,44(sp)
20109ea6:	d422                	sw	s0,40(sp)
20109ea8:	1800                	add	s0,sp,48
20109eaa:	fca42e23          	sw	a0,-36(s0)
20109eae:	fcb42c23          	sw	a1,-40(s0)
20109eb2:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20109eb6:	fdc42503          	lw	a0,-36(s0)
20109eba:	eeefe0ef          	jal	201085a8 <__metal_driver_cpu_interrupt_controller>
20109ebe:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20109ec2:	fec42783          	lw	a5,-20(s0)
20109ec6:	cb99                	beqz	a5,20109edc <__metal_driver_cpu_exception_register+0x3a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20109ec8:	fd442603          	lw	a2,-44(s0)
20109ecc:	fd842583          	lw	a1,-40(s0)
20109ed0:	fec42503          	lw	a0,-20(s0)
20109ed4:	8a3ff0ef          	jal	20109776 <__metal_exception_register>
20109ed8:	87aa                	mv	a5,a0
20109eda:	a011                	j	20109ede <__metal_driver_cpu_exception_register+0x3c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20109edc:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:808
}
20109ede:	853e                	mv	a0,a5
20109ee0:	50b2                	lw	ra,44(sp)
20109ee2:	5422                	lw	s0,40(sp)
20109ee4:	6145                	add	sp,sp,48
20109ee6:	8082                	ret

20109ee8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20109ee8:	1101                	add	sp,sp,-32
20109eea:	ce22                	sw	s0,28(sp)
20109eec:	1000                	add	s0,sp,32
20109eee:	fea42623          	sw	a0,-20(s0)
20109ef2:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20109ef6:	fe842783          	lw	a5,-24(s0)
20109efa:	0007d783          	lhu	a5,0(a5)
20109efe:	0037f713          	and	a4,a5,3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20109f02:	478d                	li	a5,3
20109f04:	00f71463          	bne	a4,a5,20109f0c <__metal_driver_cpu_get_instruction_length+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20109f08:	4791                	li	a5,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820
20109f0a:	a011                	j	20109f0e <__metal_driver_cpu_get_instruction_length+0x26>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20109f0c:	4789                	li	a5,2
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:821
}
20109f0e:	853e                	mv	a0,a5
20109f10:	4472                	lw	s0,28(sp)
20109f12:	6105                	add	sp,sp,32
20109f14:	8082                	ret

20109f16 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20109f16:	7179                	add	sp,sp,-48
20109f18:	d622                	sw	s0,44(sp)
20109f1a:	1800                	add	s0,sp,48
20109f1c:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20109f20:	341027f3          	csrr	a5,mepc
20109f24:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20109f28:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:827
}
20109f2c:	853e                	mv	a0,a5
20109f2e:	5432                	lw	s0,44(sp)
20109f30:	6145                	add	sp,sp,48
20109f32:	8082                	ret

20109f34 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20109f34:	1101                	add	sp,sp,-32
20109f36:	ce22                	sw	s0,28(sp)
20109f38:	1000                	add	s0,sp,32
20109f3a:	fea42623          	sw	a0,-20(s0)
20109f3e:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20109f42:	fe842783          	lw	a5,-24(s0)
20109f46:	34179073          	csrw	mepc,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20109f4a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:832
}
20109f4c:	853e                	mv	a0,a5
20109f4e:	4472                	lw	s0,28(sp)
20109f50:	6105                	add	sp,sp,32
20109f52:	8082                	ret

20109f54 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20109f54:	1101                	add	sp,sp,-32
20109f56:	ce06                	sw	ra,28(sp)
20109f58:	cc22                	sw	s0,24(sp)
20109f5a:	1000                	add	s0,sp,32
20109f5c:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20109f60:	fec42503          	lw	a0,-20(s0)
20109f64:	e6efe0ef          	jal	201085d2 <__metal_driver_cpu_buserror>
20109f68:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_cpu.c:836
}
20109f6a:	853e                	mv	a0,a5
20109f6c:	40f2                	lw	ra,28(sp)
20109f6e:	4462                	lw	s0,24(sp)
20109f70:	6105                	add	sp,sp,32
20109f72:	8082                	ret

20109f74 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:320



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20109f74:	1101                	add	sp,sp,-32
20109f76:	ce22                	sw	s0,28(sp)
20109f78:	1000                	add	s0,sp,32
20109f7a:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:321
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20109f7e:	fec42703          	lw	a4,-20(s0)
20109f82:	800007b7          	lui	a5,0x80000
20109f86:	45078793          	add	a5,a5,1104 # 80000450 <__metal_dt_interrupt_controller_c000000>
20109f8a:	00f71563          	bne	a4,a5,20109f94 <__metal_driver_sifive_plic0_control_base+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:322
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20109f8e:	0c0007b7          	lui	a5,0xc000
20109f92:	a011                	j	20109f96 <__metal_driver_sifive_plic0_control_base+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:325
	}
	else {
		return 0;
20109f94:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:327
	}
}
20109f96:	853e                	mv	a0,a5
20109f98:	4472                	lw	s0,28(sp)
20109f9a:	6105                	add	sp,sp,32
20109f9c:	8082                	ret

20109f9e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:340
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20109f9e:	1101                	add	sp,sp,-32
20109fa0:	ce22                	sw	s0,28(sp)
20109fa2:	1000                	add	s0,sp,32
20109fa4:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:341
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20109fa8:	fec42703          	lw	a4,-20(s0)
20109fac:	800007b7          	lui	a5,0x80000
20109fb0:	45078793          	add	a5,a5,1104 # 80000450 <__metal_dt_interrupt_controller_c000000>
20109fb4:	00f71563          	bne	a4,a5,20109fbe <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:342
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20109fb8:	03500793          	li	a5,53
20109fbc:	a011                	j	20109fc0 <__metal_driver_sifive_plic0_num_interrupts+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:345
	}
	else {
		return 0;
20109fbe:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:347
	}
}
20109fc0:	853e                	mv	a0,a5
20109fc2:	4472                	lw	s0,28(sp)
20109fc4:	6105                	add	sp,sp,32
20109fc6:	8082                	ret

20109fc8 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:350

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20109fc8:	1101                	add	sp,sp,-32
20109fca:	ce22                	sw	s0,28(sp)
20109fcc:	1000                	add	s0,sp,32
20109fce:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:351
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20109fd2:	fec42703          	lw	a4,-20(s0)
20109fd6:	800007b7          	lui	a5,0x80000
20109fda:	45078793          	add	a5,a5,1104 # 80000450 <__metal_dt_interrupt_controller_c000000>
20109fde:	00f71463          	bne	a4,a5,20109fe6 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:352
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20109fe2:	479d                	li	a5,7
20109fe4:	a011                	j	20109fe8 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:355
	}
	else {
		return 0;
20109fe6:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:357
	}
}
20109fe8:	853e                	mv	a0,a5
20109fea:	4472                	lw	s0,28(sp)
20109fec:	6105                	add	sp,sp,32
20109fee:	8082                	ret

20109ff0 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:360

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20109ff0:	1101                	add	sp,sp,-32
20109ff2:	ce22                	sw	s0,28(sp)
20109ff4:	1000                	add	s0,sp,32
20109ff6:	fea42623          	sw	a0,-20(s0)
20109ffa:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:361
	if (idx == 0) {
20109ffe:	fe842783          	lw	a5,-24(s0)
2010a002:	e791                	bnez	a5,2010a00e <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:362
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2010a004:	800007b7          	lui	a5,0x80000
2010a008:	08078793          	add	a5,a5,128 # 80000080 <__metal_dt_cpu_0_interrupt_controller>
2010a00c:	a011                	j	2010a010 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:365
	}
	else {
		return NULL;
2010a00e:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:367
	}
}
2010a010:	853e                	mv	a0,a5
2010a012:	4472                	lw	s0,28(sp)
2010a014:	6105                	add	sp,sp,32
2010a016:	8082                	ret

2010a018 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:370

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2010a018:	1101                	add	sp,sp,-32
2010a01a:	ce22                	sw	s0,28(sp)
2010a01c:	1000                	add	s0,sp,32
2010a01e:	fea42623          	sw	a0,-20(s0)
2010a022:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:371
	if (idx == 0) {
2010a026:	fe842783          	lw	a5,-24(s0)
2010a02a:	e399                	bnez	a5,2010a030 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:372
		return 11;
2010a02c:	47ad                	li	a5,11
2010a02e:	a011                	j	2010a032 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:375
	}
	else {
		return 0;
2010a030:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:377
	}
}
2010a032:	853e                	mv	a0,a5
2010a034:	4472                	lw	s0,28(sp)
2010a036:	6105                	add	sp,sp,32
2010a038:	8082                	ret

2010a03a <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:380

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2010a03a:	1101                	add	sp,sp,-32
2010a03c:	ce22                	sw	s0,28(sp)
2010a03e:	1000                	add	s0,sp,32
2010a040:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:381
	if (hartid == 0) {
2010a044:	fec42783          	lw	a5,-20(s0)
2010a048:	e399                	bnez	a5,2010a04e <__metal_driver_sifive_plic0_context_ids+0x14>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:382
		return 0;
2010a04a:	4781                	li	a5,0
2010a04c:	a011                	j	2010a050 <__metal_driver_sifive_plic0_context_ids+0x16>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:385
	}
	else {
		return -1;
2010a04e:	57fd                	li	a5,-1
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:387
	}
}
2010a050:	853e                	mv	a0,a5
2010a052:	4472                	lw	s0,28(sp)
2010a054:	6105                	add	sp,sp,32
2010a056:	8082                	ret

2010a058 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
2010a058:	7179                	add	sp,sp,-48
2010a05a:	d606                	sw	ra,44(sp)
2010a05c:	d422                	sw	s0,40(sp)
2010a05e:	1800                	add	s0,sp,48
2010a060:	fca42e23          	sw	a0,-36(s0)
2010a064:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2010a068:	fdc42503          	lw	a0,-36(s0)
2010a06c:	3721                	jal	20109f74 <__metal_driver_sifive_plic0_control_base>
2010a06e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
2010a072:	fd842783          	lw	a5,-40(s0)
2010a076:	00c79713          	sll	a4,a5,0xc
2010a07a:	fec42783          	lw	a5,-20(s0)
2010a07e:	973e                	add	a4,a4,a5
2010a080:	002007b7          	lui	a5,0x200
2010a084:	0791                	add	a5,a5,4 # 200004 <__heap_size+0x1ff804>
2010a086:	97ba                	add	a5,a5,a4
2010a088:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
2010a08a:	853e                	mv	a0,a5
2010a08c:	50b2                	lw	ra,44(sp)
2010a08e:	5422                	lw	s0,40(sp)
2010a090:	6145                	add	sp,sp,48
2010a092:	8082                	ret

2010a094 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
2010a094:	7179                	add	sp,sp,-48
2010a096:	d606                	sw	ra,44(sp)
2010a098:	d422                	sw	s0,40(sp)
2010a09a:	1800                	add	s0,sp,48
2010a09c:	fca42e23          	sw	a0,-36(s0)
2010a0a0:	fcb42c23          	sw	a1,-40(s0)
2010a0a4:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2010a0a8:	fdc42503          	lw	a0,-36(s0)
2010a0ac:	35e1                	jal	20109f74 <__metal_driver_sifive_plic0_control_base>
2010a0ae:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
2010a0b2:	fd842783          	lw	a5,-40(s0)
2010a0b6:	00c79713          	sll	a4,a5,0xc
2010a0ba:	fec42783          	lw	a5,-20(s0)
2010a0be:	973e                	add	a4,a4,a5
2010a0c0:	002007b7          	lui	a5,0x200
2010a0c4:	0791                	add	a5,a5,4 # 200004 <__heap_size+0x1ff804>
2010a0c6:	97ba                	add	a5,a5,a4
2010a0c8:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
2010a0ca:	fd442783          	lw	a5,-44(s0)
2010a0ce:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:35
}
2010a0d0:	0001                	nop
2010a0d2:	50b2                	lw	ra,44(sp)
2010a0d4:	5422                	lw	s0,40(sp)
2010a0d6:	6145                	add	sp,sp,48
2010a0d8:	8082                	ret

2010a0da <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
2010a0da:	7179                	add	sp,sp,-48
2010a0dc:	d606                	sw	ra,44(sp)
2010a0de:	d422                	sw	s0,40(sp)
2010a0e0:	1800                	add	s0,sp,48
2010a0e2:	fca42e23          	sw	a0,-36(s0)
2010a0e6:	fcb42c23          	sw	a1,-40(s0)
2010a0ea:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2010a0ee:	fdc42503          	lw	a0,-36(s0)
2010a0f2:	3549                	jal	20109f74 <__metal_driver_sifive_plic0_control_base>
2010a0f4:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
2010a0f8:	fd842783          	lw	a5,-40(s0)
2010a0fc:	00c79713          	sll	a4,a5,0xc
2010a100:	fec42783          	lw	a5,-20(s0)
2010a104:	973e                	add	a4,a4,a5
2010a106:	002007b7          	lui	a5,0x200
2010a10a:	97ba                	add	a5,a5,a4
2010a10c:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2010a10e:	fd442783          	lw	a5,-44(s0)
2010a112:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
2010a114:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:46
}
2010a116:	853e                	mv	a0,a5
2010a118:	50b2                	lw	ra,44(sp)
2010a11a:	5422                	lw	s0,40(sp)
2010a11c:	6145                	add	sp,sp,48
2010a11e:	8082                	ret

2010a120 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2010a120:	7179                	add	sp,sp,-48
2010a122:	d606                	sw	ra,44(sp)
2010a124:	d422                	sw	s0,40(sp)
2010a126:	1800                	add	s0,sp,48
2010a128:	fca42e23          	sw	a0,-36(s0)
2010a12c:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2010a130:	fdc42503          	lw	a0,-36(s0)
2010a134:	3581                	jal	20109f74 <__metal_driver_sifive_plic0_control_base>
2010a136:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
2010a13a:	fd842783          	lw	a5,-40(s0)
2010a13e:	00c79713          	sll	a4,a5,0xc
2010a142:	fec42783          	lw	a5,-20(s0)
2010a146:	973e                	add	a4,a4,a5
2010a148:	002007b7          	lui	a5,0x200
2010a14c:	97ba                	add	a5,a5,a4
2010a14e:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
2010a150:	853e                	mv	a0,a5
2010a152:	50b2                	lw	ra,44(sp)
2010a154:	5422                	lw	s0,40(sp)
2010a156:	6145                	add	sp,sp,48
2010a158:	8082                	ret

2010a15a <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
2010a15a:	7179                	add	sp,sp,-48
2010a15c:	d606                	sw	ra,44(sp)
2010a15e:	d422                	sw	s0,40(sp)
2010a160:	1800                	add	s0,sp,48
2010a162:	fca42e23          	sw	a0,-36(s0)
2010a166:	fcb42c23          	sw	a1,-40(s0)
2010a16a:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2010a16e:	fdc42503          	lw	a0,-36(s0)
2010a172:	e03ff0ef          	jal	20109f74 <__metal_driver_sifive_plic0_control_base>
2010a176:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
2010a17a:	fdc42503          	lw	a0,-36(s0)
2010a17e:	35a9                	jal	20109fc8 <__metal_driver_sifive_plic0_max_priority>
2010a180:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:62 (discriminator 1)
2010a182:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
2010a186:	fe842783          	lw	a5,-24(s0)
2010a18a:	c785                	beqz	a5,2010a1b2 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
2010a18c:	fd442703          	lw	a4,-44(s0)
2010a190:	fe842783          	lw	a5,-24(s0)
2010a194:	00f77f63          	bgeu	a4,a5,2010a1b2 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
2010a198:	fd842783          	lw	a5,-40(s0)
2010a19c:	00279713          	sll	a4,a5,0x2
2010a1a0:	fec42783          	lw	a5,-20(s0)
2010a1a4:	97ba                	add	a5,a5,a4
2010a1a6:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
2010a1a8:	fd442783          	lw	a5,-44(s0)
2010a1ac:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
2010a1ae:	4781                	li	a5,0
2010a1b0:	a011                	j	2010a1b4 <__metal_driver_riscv_plic0_set_priority+0x5a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
2010a1b2:	57fd                	li	a5,-1
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:72
}
2010a1b4:	853e                	mv	a0,a5
2010a1b6:	50b2                	lw	ra,44(sp)
2010a1b8:	5422                	lw	s0,40(sp)
2010a1ba:	6145                	add	sp,sp,48
2010a1bc:	8082                	ret

2010a1be <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2010a1be:	7179                	add	sp,sp,-48
2010a1c0:	d606                	sw	ra,44(sp)
2010a1c2:	d422                	sw	s0,40(sp)
2010a1c4:	1800                	add	s0,sp,48
2010a1c6:	fca42e23          	sw	a0,-36(s0)
2010a1ca:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2010a1ce:	fdc42503          	lw	a0,-36(s0)
2010a1d2:	da3ff0ef          	jal	20109f74 <__metal_driver_sifive_plic0_control_base>
2010a1d6:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
2010a1da:	fd842783          	lw	a5,-40(s0)
2010a1de:	00279713          	sll	a4,a5,0x2
2010a1e2:	fec42783          	lw	a5,-20(s0)
2010a1e6:	97ba                	add	a5,a5,a4
2010a1e8:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
2010a1ea:	853e                	mv	a0,a5
2010a1ec:	50b2                	lw	ra,44(sp)
2010a1ee:	5422                	lw	s0,40(sp)
2010a1f0:	6145                	add	sp,sp,48
2010a1f2:	8082                	ret

2010a1f4 <__metal_plic0_enable>:
__metal_plic0_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2010a1f4:	7179                	add	sp,sp,-48
2010a1f6:	d606                	sw	ra,44(sp)
2010a1f8:	d422                	sw	s0,40(sp)
2010a1fa:	1800                	add	s0,sp,48
2010a1fc:	fca42e23          	sw	a0,-36(s0)
2010a200:	fcb42c23          	sw	a1,-40(s0)
2010a204:	fcc42a23          	sw	a2,-44(s0)
2010a208:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2010a20c:	fdc42503          	lw	a0,-36(s0)
2010a210:	d65ff0ef          	jal	20109f74 <__metal_driver_sifive_plic0_control_base>
2010a214:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
2010a218:	fd842783          	lw	a5,-40(s0)
2010a21c:	00779713          	sll	a4,a5,0x7
2010a220:	fec42783          	lw	a5,-20(s0)
2010a224:	97ba                	add	a5,a5,a4
2010a226:	fd442703          	lw	a4,-44(s0)
2010a22a:	8715                	sra	a4,a4,0x5
2010a22c:	070a                	sll	a4,a4,0x2
2010a22e:	973e                	add	a4,a4,a5
2010a230:	6789                	lui	a5,0x2
2010a232:	97ba                	add	a5,a5,a4
2010a234:	439c                	lw	a5,0(a5)
2010a236:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2010a23a:	fd042783          	lw	a5,-48(s0)
2010a23e:	cf81                	beqz	a5,2010a256 <__metal_plic0_enable+0x62>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:99
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
2010a240:	fd442783          	lw	a5,-44(s0)
2010a244:	8bfd                	and	a5,a5,31
2010a246:	4705                	li	a4,1
2010a248:	00f717b3          	sll	a5,a4,a5
2010a24c:	873e                	mv	a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2010a24e:	fe842783          	lw	a5,-24(s0)
2010a252:	8fd9                	or	a5,a5,a4
2010a254:	a829                	j	2010a26e <__metal_plic0_enable+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
2010a256:	fd442783          	lw	a5,-44(s0)
2010a25a:	8bfd                	and	a5,a5,31
2010a25c:	4705                	li	a4,1
2010a25e:	00f717b3          	sll	a5,a4,a5
2010a262:	fff7c793          	not	a5,a5
2010a266:	873e                	mv	a4,a5
2010a268:	fe842783          	lw	a5,-24(s0)
2010a26c:	8ff9                	and	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
2010a26e:	fd842703          	lw	a4,-40(s0)
2010a272:	00771693          	sll	a3,a4,0x7
2010a276:	fec42703          	lw	a4,-20(s0)
2010a27a:	9736                	add	a4,a4,a3
2010a27c:	fd442683          	lw	a3,-44(s0)
2010a280:	8695                	sra	a3,a3,0x5
2010a282:	068a                	sll	a3,a3,0x2
2010a284:	96ba                	add	a3,a3,a4
2010a286:	6709                	lui	a4,0x2
2010a288:	9736                	add	a4,a4,a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
2010a28a:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
2010a28c:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:103
}
2010a28e:	853e                	mv	a0,a5
2010a290:	50b2                	lw	ra,44(sp)
2010a292:	5422                	lw	s0,40(sp)
2010a294:	6145                	add	sp,sp,48
2010a296:	8082                	ret

2010a298 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
2010a298:	1101                	add	sp,sp,-32
2010a29a:	ce06                	sw	ra,28(sp)
2010a29c:	cc22                	sw	s0,24(sp)
2010a29e:	1000                	add	s0,sp,32
2010a2a0:	fea42623          	sw	a0,-20(s0)
2010a2a4:	feb42423          	sw	a1,-24(s0)
2010a2a8:	12c00513          	li	a0,300
2010a2ac:	020020ef          	jal	2010c2cc <metal_shutdown>

2010a2b0 <__metal_plic0_handler>:
__metal_plic0_handler():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
2010a2b0:	7179                	add	sp,sp,-48
2010a2b2:	d606                	sw	ra,44(sp)
2010a2b4:	d422                	sw	s0,40(sp)
2010a2b6:	1800                	add	s0,sp,48
2010a2b8:	fca42e23          	sw	a0,-36(s0)
2010a2bc:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
2010a2c0:	fd842783          	lw	a5,-40(s0)
2010a2c4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
2010a2c8:	b5efe0ef          	jal	20108626 <__metal_myhart_id>
2010a2cc:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:110 (discriminator 1)
2010a2ce:	853e                	mv	a0,a5
2010a2d0:	d6bff0ef          	jal	2010a03a <__metal_driver_sifive_plic0_context_ids>
2010a2d4:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
2010a2d8:	fe842583          	lw	a1,-24(s0)
2010a2dc:	fec42503          	lw	a0,-20(s0)
2010a2e0:	d79ff0ef          	jal	2010a058 <__metal_plic0_claim_interrupt>
2010a2e4:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
2010a2e8:	fec42503          	lw	a0,-20(s0)
2010a2ec:	cb3ff0ef          	jal	20109f9e <__metal_driver_sifive_plic0_num_interrupts>
2010a2f0:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:112 (discriminator 1)
2010a2f2:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
2010a2f6:	fe442703          	lw	a4,-28(s0)
2010a2fa:	fe042783          	lw	a5,-32(s0)
2010a2fe:	04f77063          	bgeu	a4,a5,2010a33e <__metal_plic0_handler+0x8e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
2010a302:	fec42703          	lw	a4,-20(s0)
2010a306:	fe442783          	lw	a5,-28(s0)
2010a30a:	078a                	sll	a5,a5,0x2
2010a30c:	97ba                	add	a5,a5,a4
2010a30e:	479c                	lw	a5,8(a5)
2010a310:	c79d                	beqz	a5,2010a33e <__metal_plic0_handler+0x8e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2010a312:	fec42703          	lw	a4,-20(s0)
2010a316:	fe442783          	lw	a5,-28(s0)
2010a31a:	078a                	sll	a5,a5,0x2
2010a31c:	97ba                	add	a5,a5,a4
2010a31e:	4794                	lw	a3,8(a5)
2010a320:	fe442503          	lw	a0,-28(s0)
2010a324:	fec42603          	lw	a2,-20(s0)
2010a328:	fe442703          	lw	a4,-28(s0)
2010a32c:	87ba                	mv	a5,a4
2010a32e:	0786                	sll	a5,a5,0x1
2010a330:	97ba                	add	a5,a5,a4
2010a332:	078e                	sll	a5,a5,0x3
2010a334:	97b2                	add	a5,a5,a2
2010a336:	0f07a783          	lw	a5,240(a5) # 20f0 <__heap_size+0x18f0>
2010a33a:	85be                	mv	a1,a5
2010a33c:	9682                	jalr	a3
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
2010a33e:	fe442603          	lw	a2,-28(s0)
2010a342:	fe842583          	lw	a1,-24(s0)
2010a346:	fec42503          	lw	a0,-20(s0)
2010a34a:	d4bff0ef          	jal	2010a094 <__metal_plic0_complete_interrupt>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:121
}
2010a34e:	0001                	nop
2010a350:	50b2                	lw	ra,44(sp)
2010a352:	5422                	lw	s0,40(sp)
2010a354:	6145                	add	sp,sp,48
2010a356:	8082                	ret

2010a358 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
2010a358:	7139                	add	sp,sp,-64
2010a35a:	de06                	sw	ra,60(sp)
2010a35c:	dc22                	sw	s0,56(sp)
2010a35e:	0080                	add	s0,sp,64
2010a360:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010a364:	fcc42783          	lw	a5,-52(s0)
2010a368:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
2010a36c:	fe442783          	lw	a5,-28(s0)
2010a370:	43dc                	lw	a5,4(a5)
2010a372:	12079c63          	bnez	a5,2010a4aa <__metal_driver_riscv_plic0_init+0x152>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2010a376:	fe042623          	sw	zero,-20(s0)
2010a37a:	a205                	j	2010a49a <__metal_driver_riscv_plic0_init+0x142>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
2010a37c:	fcc42503          	lw	a0,-52(s0)
2010a380:	c1fff0ef          	jal	20109f9e <__metal_driver_sifive_plic0_num_interrupts>
2010a384:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
2010a388:	fec42583          	lw	a1,-20(s0)
2010a38c:	fcc42503          	lw	a0,-52(s0)
2010a390:	c61ff0ef          	jal	20109ff0 <__metal_driver_sifive_plic0_interrupt_parents>
2010a394:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
2010a398:	fec42583          	lw	a1,-20(s0)
2010a39c:	fcc42503          	lw	a0,-52(s0)
2010a3a0:	c79ff0ef          	jal	2010a018 <__metal_driver_sifive_plic0_interrupt_lines>
2010a3a4:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
2010a3a8:	fdc42783          	lw	a5,-36(s0)
2010a3ac:	439c                	lw	a5,0(a5)
2010a3ae:	439c                	lw	a5,0(a5)
2010a3b0:	fdc42503          	lw	a0,-36(s0)
2010a3b4:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
2010a3b6:	fe042423          	sw	zero,-24(s0)
2010a3ba:	a895                	j	2010a42e <__metal_driver_riscv_plic0_init+0xd6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
2010a3bc:	4681                	li	a3,0
2010a3be:	fe842603          	lw	a2,-24(s0)
2010a3c2:	fec42583          	lw	a1,-20(s0)
2010a3c6:	fe442503          	lw	a0,-28(s0)
2010a3ca:	e2bff0ef          	jal	2010a1f4 <__metal_plic0_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
2010a3ce:	fe842703          	lw	a4,-24(s0)
2010a3d2:	fe042783          	lw	a5,-32(s0)
2010a3d6:	04f75763          	bge	a4,a5,2010a424 <__metal_driver_riscv_plic0_init+0xcc>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
2010a3da:	4601                	li	a2,0
2010a3dc:	fe842583          	lw	a1,-24(s0)
2010a3e0:	fcc42503          	lw	a0,-52(s0)
2010a3e4:	d77ff0ef          	jal	2010a15a <__metal_driver_riscv_plic0_set_priority>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
2010a3e8:	fe442703          	lw	a4,-28(s0)
2010a3ec:	fe842783          	lw	a5,-24(s0)
2010a3f0:	078a                	sll	a5,a5,0x2
2010a3f2:	97ba                	add	a5,a5,a4
2010a3f4:	0007a423          	sw	zero,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
2010a3f8:	fe442683          	lw	a3,-28(s0)
2010a3fc:	fe842703          	lw	a4,-24(s0)
2010a400:	87ba                	mv	a5,a4
2010a402:	0786                	sll	a5,a5,0x1
2010a404:	97ba                	add	a5,a5,a4
2010a406:	078e                	sll	a5,a5,0x3
2010a408:	97b6                	add	a5,a5,a3
2010a40a:	0e07a623          	sw	zero,236(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
2010a40e:	fe442683          	lw	a3,-28(s0)
2010a412:	fe842703          	lw	a4,-24(s0)
2010a416:	87ba                	mv	a5,a4
2010a418:	0786                	sll	a5,a5,0x1
2010a41a:	97ba                	add	a5,a5,a4
2010a41c:	078e                	sll	a5,a5,0x3
2010a41e:	97b6                	add	a5,a5,a3
2010a420:	0e07a823          	sw	zero,240(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
2010a424:	fe842783          	lw	a5,-24(s0)
2010a428:	0785                	add	a5,a5,1
2010a42a:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2010a42e:	fe842703          	lw	a4,-24(s0)
2010a432:	3ff00793          	li	a5,1023
2010a436:	f8e7d3e3          	bge	a5,a4,2010a3bc <__metal_driver_riscv_plic0_init+0x64>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:151
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
2010a43a:	4601                	li	a2,0
2010a43c:	fec42583          	lw	a1,-20(s0)
2010a440:	fcc42503          	lw	a0,-52(s0)
2010a444:	c97ff0ef          	jal	2010a0da <__metal_plic0_set_threshold>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:154

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
2010a448:	fdc42783          	lw	a5,-36(s0)
2010a44c:	439c                	lw	a5,0(a5)
2010a44e:	4fdc                	lw	a5,28(a5)
2010a450:	fe442683          	lw	a3,-28(s0)
2010a454:	4601                	li	a2,0
2010a456:	fd842583          	lw	a1,-40(s0)
2010a45a:	fdc42503          	lw	a0,-36(s0)
2010a45e:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:156
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
2010a460:	fdc42783          	lw	a5,-36(s0)
2010a464:	439c                	lw	a5,0(a5)
2010a466:	4fdc                	lw	a5,28(a5)
2010a468:	fe442683          	lw	a3,-28(s0)
2010a46c:	2010a737          	lui	a4,0x2010a
2010a470:	2b070613          	add	a2,a4,688 # 2010a2b0 <__metal_plic0_handler>
2010a474:	fd842583          	lw	a1,-40(s0)
2010a478:	fdc42503          	lw	a0,-36(s0)
2010a47c:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:159
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
2010a47e:	fdc42783          	lw	a5,-36(s0)
2010a482:	439c                	lw	a5,0(a5)
2010a484:	53dc                	lw	a5,36(a5)
2010a486:	fd842583          	lw	a1,-40(s0)
2010a48a:	fdc42503          	lw	a0,-36(s0)
2010a48e:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2010a490:	fec42783          	lw	a5,-20(s0)
2010a494:	0785                	add	a5,a5,1
2010a496:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
2010a49a:	fec42783          	lw	a5,-20(s0)
2010a49e:	ecf05fe3          	blez	a5,2010a37c <__metal_driver_riscv_plic0_init+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
2010a4a2:	fe442783          	lw	a5,-28(s0)
2010a4a6:	4705                	li	a4,1
2010a4a8:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
2010a4aa:	0001                	nop
2010a4ac:	50f2                	lw	ra,60(sp)
2010a4ae:	5462                	lw	s0,56(sp)
2010a4b0:	6121                	add	sp,sp,64
2010a4b2:	8082                	ret

2010a4b4 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
2010a4b4:	7179                	add	sp,sp,-48
2010a4b6:	d606                	sw	ra,44(sp)
2010a4b8:	d422                	sw	s0,40(sp)
2010a4ba:	1800                	add	s0,sp,48
2010a4bc:	fca42e23          	sw	a0,-36(s0)
2010a4c0:	fcb42c23          	sw	a1,-40(s0)
2010a4c4:	fcc42a23          	sw	a2,-44(s0)
2010a4c8:	fcd42823          	sw	a3,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010a4cc:	fdc42783          	lw	a5,-36(s0)
2010a4d0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2010a4d4:	fdc42503          	lw	a0,-36(s0)
2010a4d8:	ac7ff0ef          	jal	20109f9e <__metal_driver_sifive_plic0_num_interrupts>
2010a4dc:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:170 (discriminator 1)
2010a4de:	fd842783          	lw	a5,-40(s0)
2010a4e2:	00e7c463          	blt	a5,a4,2010a4ea <__metal_driver_riscv_plic0_register+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
2010a4e6:	57fd                	li	a5,-1
2010a4e8:	a051                	j	2010a56c <__metal_driver_riscv_plic0_register+0xb8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
2010a4ea:	fd442783          	lw	a5,-44(s0)
2010a4ee:	cf9d                	beqz	a5,2010a52c <__metal_driver_riscv_plic0_register+0x78>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
2010a4f0:	4609                	li	a2,2
2010a4f2:	fd842583          	lw	a1,-40(s0)
2010a4f6:	fdc42503          	lw	a0,-36(s0)
2010a4fa:	c61ff0ef          	jal	2010a15a <__metal_driver_riscv_plic0_set_priority>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
2010a4fe:	fec42703          	lw	a4,-20(s0)
2010a502:	fd842783          	lw	a5,-40(s0)
2010a506:	078a                	sll	a5,a5,0x2
2010a508:	97ba                	add	a5,a5,a4
2010a50a:	fd442703          	lw	a4,-44(s0)
2010a50e:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
2010a510:	fec42683          	lw	a3,-20(s0)
2010a514:	fd842703          	lw	a4,-40(s0)
2010a518:	87ba                	mv	a5,a4
2010a51a:	0786                	sll	a5,a5,0x1
2010a51c:	97ba                	add	a5,a5,a4
2010a51e:	078e                	sll	a5,a5,0x3
2010a520:	97b6                	add	a5,a5,a3
2010a522:	fd042703          	lw	a4,-48(s0)
2010a526:	0ee7a823          	sw	a4,240(a5)
2010a52a:	a081                	j	2010a56a <__metal_driver_riscv_plic0_register+0xb6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
2010a52c:	4605                	li	a2,1
2010a52e:	fd842583          	lw	a1,-40(s0)
2010a532:	fdc42503          	lw	a0,-36(s0)
2010a536:	c25ff0ef          	jal	2010a15a <__metal_driver_riscv_plic0_set_priority>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
2010a53a:	fec42703          	lw	a4,-20(s0)
2010a53e:	fd842783          	lw	a5,-40(s0)
2010a542:	078a                	sll	a5,a5,0x2
2010a544:	97ba                	add	a5,a5,a4
2010a546:	2010a737          	lui	a4,0x2010a
2010a54a:	29870713          	add	a4,a4,664 # 2010a298 <__metal_plic0_default_handler>
2010a54e:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
2010a550:	fec42683          	lw	a3,-20(s0)
2010a554:	fd842703          	lw	a4,-40(s0)
2010a558:	87ba                	mv	a5,a4
2010a55a:	0786                	sll	a5,a5,0x1
2010a55c:	97ba                	add	a5,a5,a4
2010a55e:	078e                	sll	a5,a5,0x3
2010a560:	97b6                	add	a5,a5,a3
2010a562:	fd042703          	lw	a4,-48(s0)
2010a566:	0ee7a623          	sw	a4,236(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
2010a56a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:185
}
2010a56c:	853e                	mv	a0,a5
2010a56e:	50b2                	lw	ra,44(sp)
2010a570:	5422                	lw	s0,40(sp)
2010a572:	6145                	add	sp,sp,48
2010a574:	8082                	ret

2010a576 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
2010a576:	7179                	add	sp,sp,-48
2010a578:	d606                	sw	ra,44(sp)
2010a57a:	d422                	sw	s0,40(sp)
2010a57c:	1800                	add	s0,sp,48
2010a57e:	fca42e23          	sw	a0,-36(s0)
2010a582:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010a586:	fdc42783          	lw	a5,-36(s0)
2010a58a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2010a58e:	fdc42503          	lw	a0,-36(s0)
2010a592:	a0dff0ef          	jal	20109f9e <__metal_driver_sifive_plic0_num_interrupts>
2010a596:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:191 (discriminator 1)
2010a598:	fd842783          	lw	a5,-40(s0)
2010a59c:	00e7c463          	blt	a5,a4,2010a5a4 <__metal_driver_riscv_plic0_enable+0x2e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2010a5a0:	57fd                	li	a5,-1
2010a5a2:	a829                	j	2010a5bc <__metal_driver_riscv_plic0_enable+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
2010a5a4:	882fe0ef          	jal	20108626 <__metal_myhart_id>
2010a5a8:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:195 (discriminator 1)
2010a5aa:	4685                	li	a3,1
2010a5ac:	fd842603          	lw	a2,-40(s0)
2010a5b0:	85be                	mv	a1,a5
2010a5b2:	fec42503          	lw	a0,-20(s0)
2010a5b6:	c3fff0ef          	jal	2010a1f4 <__metal_plic0_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
2010a5ba:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:197
}
2010a5bc:	853e                	mv	a0,a5
2010a5be:	50b2                	lw	ra,44(sp)
2010a5c0:	5422                	lw	s0,40(sp)
2010a5c2:	6145                	add	sp,sp,48
2010a5c4:	8082                	ret

2010a5c6 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
2010a5c6:	7179                	add	sp,sp,-48
2010a5c8:	d606                	sw	ra,44(sp)
2010a5ca:	d422                	sw	s0,40(sp)
2010a5cc:	1800                	add	s0,sp,48
2010a5ce:	fca42e23          	sw	a0,-36(s0)
2010a5d2:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010a5d6:	fdc42783          	lw	a5,-36(s0)
2010a5da:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2010a5de:	fdc42503          	lw	a0,-36(s0)
2010a5e2:	9bdff0ef          	jal	20109f9e <__metal_driver_sifive_plic0_num_interrupts>
2010a5e6:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:203 (discriminator 1)
2010a5e8:	fd842783          	lw	a5,-40(s0)
2010a5ec:	00e7c463          	blt	a5,a4,2010a5f4 <__metal_driver_riscv_plic0_disable+0x2e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
2010a5f0:	57fd                	li	a5,-1
2010a5f2:	a829                	j	2010a60c <__metal_driver_riscv_plic0_disable+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
2010a5f4:	832fe0ef          	jal	20108626 <__metal_myhart_id>
2010a5f8:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:206 (discriminator 1)
2010a5fa:	4681                	li	a3,0
2010a5fc:	fd842603          	lw	a2,-40(s0)
2010a600:	85be                	mv	a1,a5
2010a602:	fec42503          	lw	a0,-20(s0)
2010a606:	befff0ef          	jal	2010a1f4 <__metal_plic0_enable>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
2010a60a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:208
}
2010a60c:	853e                	mv	a0,a5
2010a60e:	50b2                	lw	ra,44(sp)
2010a610:	5422                	lw	s0,40(sp)
2010a612:	6145                	add	sp,sp,48
2010a614:	8082                	ret

2010a616 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
2010a616:	1101                	add	sp,sp,-32
2010a618:	ce06                	sw	ra,28(sp)
2010a61a:	cc22                	sw	s0,24(sp)
2010a61c:	1000                	add	s0,sp,32
2010a61e:	fea42623          	sw	a0,-20(s0)
2010a622:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
2010a626:	800fe0ef          	jal	20108626 <__metal_myhart_id>
2010a62a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:212 (discriminator 1)
2010a62c:	fe842603          	lw	a2,-24(s0)
2010a630:	85be                	mv	a1,a5
2010a632:	fec42503          	lw	a0,-20(s0)
2010a636:	aa5ff0ef          	jal	2010a0da <__metal_plic0_set_threshold>
2010a63a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
2010a63c:	853e                	mv	a0,a5
2010a63e:	40f2                	lw	ra,28(sp)
2010a640:	4462                	lw	s0,24(sp)
2010a642:	6105                	add	sp,sp,32
2010a644:	8082                	ret

2010a646 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
2010a646:	1101                	add	sp,sp,-32
2010a648:	ce06                	sw	ra,28(sp)
2010a64a:	cc22                	sw	s0,24(sp)
2010a64c:	1000                	add	s0,sp,32
2010a64e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
2010a652:	fd5fd0ef          	jal	20108626 <__metal_myhart_id>
2010a656:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:218 (discriminator 1)
2010a658:	85be                	mv	a1,a5
2010a65a:	fec42503          	lw	a0,-20(s0)
2010a65e:	ac3ff0ef          	jal	2010a120 <__metal_plic0_get_threshold>
2010a662:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:219
}
2010a664:	853e                	mv	a0,a5
2010a666:	40f2                	lw	ra,28(sp)
2010a668:	4462                	lw	s0,24(sp)
2010a66a:	6105                	add	sp,sp,32
2010a66c:	8082                	ret

2010a66e <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
2010a66e:	7179                	add	sp,sp,-48
2010a670:	d606                	sw	ra,44(sp)
2010a672:	d422                	sw	s0,40(sp)
2010a674:	1800                	add	s0,sp,48
2010a676:	fca42e23          	sw	a0,-36(s0)
2010a67a:	fcb42c23          	sw	a1,-40(s0)
2010a67e:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
2010a682:	fe042223          	sw	zero,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010a686:	fdc42783          	lw	a5,-36(s0)
2010a68a:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2010a68e:	fdc42503          	lw	a0,-36(s0)
2010a692:	90dff0ef          	jal	20109f9e <__metal_driver_sifive_plic0_num_interrupts>
2010a696:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:229 (discriminator 1)
2010a698:	fd442783          	lw	a5,-44(s0)
2010a69c:	00e7c863          	blt	a5,a4,2010a6ac <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2010a6a0:	57fd                	li	a5,-1
2010a6a2:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
2010a6a6:	fe442783          	lw	a5,-28(s0)
2010a6aa:	a899                	j	2010a700 <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
2010a6ac:	fe042623          	sw	zero,-20(s0)
2010a6b0:	a099                	j	2010a6f6 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
2010a6b2:	fec42783          	lw	a5,-20(s0)
2010a6b6:	c795                	beqz	a5,2010a6e2 <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
2010a6b8:	4685                	li	a3,1
2010a6ba:	fd442603          	lw	a2,-44(s0)
2010a6be:	fec42583          	lw	a1,-20(s0)
2010a6c2:	fe842503          	lw	a0,-24(s0)
2010a6c6:	b2fff0ef          	jal	2010a1f4 <__metal_plic0_enable>
2010a6ca:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:236 (discriminator 1)
2010a6cc:	0017f713          	and	a4,a5,1
2010a6d0:	fec42783          	lw	a5,-20(s0)
2010a6d4:	00f71733          	sll	a4,a4,a5
2010a6d8:	fe442783          	lw	a5,-28(s0)
2010a6dc:	8fd9                	or	a5,a5,a4
2010a6de:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2010a6e2:	fec42783          	lw	a5,-20(s0)
2010a6e6:	0785                	add	a5,a5,1
2010a6e8:	fef42623          	sw	a5,-20(s0)
2010a6ec:	fd842783          	lw	a5,-40(s0)
2010a6f0:	8385                	srl	a5,a5,0x1
2010a6f2:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
2010a6f6:	fd842783          	lw	a5,-40(s0)
2010a6fa:	ffc5                	bnez	a5,2010a6b2 <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
2010a6fc:	fe442783          	lw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:242
}
2010a700:	853e                	mv	a0,a5
2010a702:	50b2                	lw	ra,44(sp)
2010a704:	5422                	lw	s0,40(sp)
2010a706:	6145                	add	sp,sp,48
2010a708:	8082                	ret

2010a70a <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
2010a70a:	7179                	add	sp,sp,-48
2010a70c:	d606                	sw	ra,44(sp)
2010a70e:	d422                	sw	s0,40(sp)
2010a710:	1800                	add	s0,sp,48
2010a712:	fca42e23          	sw	a0,-36(s0)
2010a716:	fcb42c23          	sw	a1,-40(s0)
2010a71a:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2010a71e:	fe042223          	sw	zero,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2010a722:	fdc42783          	lw	a5,-36(s0)
2010a726:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2010a72a:	fdc42503          	lw	a0,-36(s0)
2010a72e:	871ff0ef          	jal	20109f9e <__metal_driver_sifive_plic0_num_interrupts>
2010a732:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:252 (discriminator 1)
2010a734:	fd442783          	lw	a5,-44(s0)
2010a738:	00e7c863          	blt	a5,a4,2010a748 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
2010a73c:	57fd                	li	a5,-1
2010a73e:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
2010a742:	fe442783          	lw	a5,-28(s0)
2010a746:	a899                	j	2010a79c <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
2010a748:	fe042623          	sw	zero,-20(s0)
2010a74c:	a099                	j	2010a792 <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2010a74e:	fec42783          	lw	a5,-20(s0)
2010a752:	c795                	beqz	a5,2010a77e <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
2010a754:	4681                	li	a3,0
2010a756:	fd442603          	lw	a2,-44(s0)
2010a75a:	fec42583          	lw	a1,-20(s0)
2010a75e:	fe842503          	lw	a0,-24(s0)
2010a762:	a93ff0ef          	jal	2010a1f4 <__metal_plic0_enable>
2010a766:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:259 (discriminator 1)
2010a768:	0017f713          	and	a4,a5,1
2010a76c:	fec42783          	lw	a5,-20(s0)
2010a770:	00f71733          	sll	a4,a4,a5
2010a774:	fe442783          	lw	a5,-28(s0)
2010a778:	8fd9                	or	a5,a5,a4
2010a77a:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2010a77e:	fec42783          	lw	a5,-20(s0)
2010a782:	0785                	add	a5,a5,1
2010a784:	fef42623          	sw	a5,-20(s0)
2010a788:	fd842783          	lw	a5,-40(s0)
2010a78c:	8385                	srl	a5,a5,0x1
2010a78e:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
2010a792:	fd842783          	lw	a5,-40(s0)
2010a796:	ffc5                	bnez	a5,2010a74e <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
2010a798:	fe442783          	lw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:265
}
2010a79c:	853e                	mv	a0,a5
2010a79e:	50b2                	lw	ra,44(sp)
2010a7a0:	5422                	lw	s0,40(sp)
2010a7a2:	6145                	add	sp,sp,48
2010a7a4:	8082                	ret

2010a7a6 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
2010a7a6:	7179                	add	sp,sp,-48
2010a7a8:	d606                	sw	ra,44(sp)
2010a7aa:	d422                	sw	s0,40(sp)
2010a7ac:	1800                	add	s0,sp,48
2010a7ae:	fca42e23          	sw	a0,-36(s0)
2010a7b2:	fcb42c23          	sw	a1,-40(s0)
2010a7b6:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
2010a7ba:	fe042423          	sw	zero,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
2010a7be:	fe042623          	sw	zero,-20(s0)
2010a7c2:	a091                	j	2010a806 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
2010a7c4:	fec42783          	lw	a5,-20(s0)
2010a7c8:	c78d                	beqz	a5,2010a7f2 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
2010a7ca:	fd442603          	lw	a2,-44(s0)
2010a7ce:	fec42583          	lw	a1,-20(s0)
2010a7d2:	fdc42503          	lw	a0,-36(s0)
2010a7d6:	905ff0ef          	jal	2010a0da <__metal_plic0_set_threshold>
2010a7da:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:275 (discriminator 1)
2010a7dc:	0017f713          	and	a4,a5,1
2010a7e0:	fec42783          	lw	a5,-20(s0)
2010a7e4:	00f71733          	sll	a4,a4,a5
2010a7e8:	fe842783          	lw	a5,-24(s0)
2010a7ec:	8fd9                	or	a5,a5,a4
2010a7ee:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2010a7f2:	fec42783          	lw	a5,-20(s0)
2010a7f6:	0785                	add	a5,a5,1
2010a7f8:	fef42623          	sw	a5,-20(s0)
2010a7fc:	fd842783          	lw	a5,-40(s0)
2010a800:	8385                	srl	a5,a5,0x1
2010a802:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
2010a806:	fd842783          	lw	a5,-40(s0)
2010a80a:	ffcd                	bnez	a5,2010a7c4 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
2010a80c:	fe842783          	lw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:281
}
2010a810:	853e                	mv	a0,a5
2010a812:	50b2                	lw	ra,44(sp)
2010a814:	5422                	lw	s0,40(sp)
2010a816:	6145                	add	sp,sp,48
2010a818:	8082                	ret

2010a81a <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
2010a81a:	1101                	add	sp,sp,-32
2010a81c:	ce06                	sw	ra,28(sp)
2010a81e:	cc22                	sw	s0,24(sp)
2010a820:	1000                	add	s0,sp,32
2010a822:	fea42623          	sw	a0,-20(s0)
2010a826:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
2010a82a:	fe842583          	lw	a1,-24(s0)
2010a82e:	fec42503          	lw	a0,-20(s0)
2010a832:	8efff0ef          	jal	2010a120 <__metal_plic0_get_threshold>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
2010a836:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/riscv_plic0.c:287
}
2010a838:	853e                	mv	a0,a5
2010a83a:	40f2                	lw	ra,28(sp)
2010a83c:	4462                	lw	s0,24(sp)
2010a83e:	6105                	add	sp,sp,32
2010a840:	8082                	ret

2010a842 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1107



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
2010a842:	1101                	add	sp,sp,-32
2010a844:	ce22                	sw	s0,28(sp)
2010a846:	1000                	add	s0,sp,32
2010a848:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1108
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
2010a84c:	800007b7          	lui	a5,0x80000
2010a850:	06478793          	add	a5,a5,100 # 80000064 <__metal_dt_clock_2>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1109
}
2010a854:	853e                	mv	a0,a5
2010a856:	4472                	lw	s0,28(sp)
2010a858:	6105                	add	sp,sp,32
2010a85a:	8082                	ret

2010a85c <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1112

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
2010a85c:	1101                	add	sp,sp,-32
2010a85e:	ce22                	sw	s0,28(sp)
2010a860:	1000                	add	s0,sp,32
2010a862:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1113
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2010a866:	82018793          	add	a5,gp,-2016 # 80000a90 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1114
}
2010a86a:	853e                	mv	a0,a5
2010a86c:	4472                	lw	s0,28(sp)
2010a86e:	6105                	add	sp,sp,32
2010a870:	8082                	ret

2010a872 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1122
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
2010a872:	1101                	add	sp,sp,-32
2010a874:	ce22                	sw	s0,28(sp)
2010a876:	1000                	add	s0,sp,32
2010a878:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1123
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
2010a87c:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1124
}
2010a87e:	853e                	mv	a0,a5
2010a880:	4472                	lw	s0,28(sp)
2010a882:	6105                	add	sp,sp,32
2010a884:	8082                	ret

2010a886 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1239
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
2010a886:	1141                	add	sp,sp,-16
2010a888:	c622                	sw	s0,12(sp)
2010a88a:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2010a88c:	201057b7          	lui	a5,0x20105
2010a890:	17478793          	add	a5,a5,372 # 20105174 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1241
}
2010a894:	853e                	mv	a0,a5
2010a896:	4432                	lw	s0,12(sp)
2010a898:	0141                	add	sp,sp,16
2010a89a:	8082                	ret

2010a89c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
2010a89c:	7139                	add	sp,sp,-64
2010a89e:	de06                	sw	ra,60(sp)
2010a8a0:	dc22                	sw	s0,56(sp)
2010a8a2:	0080                	add	s0,sp,64
2010a8a4:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
2010a8a8:	fcc42503          	lw	a0,-52(s0)
2010a8ac:	3f59                	jal	2010a842 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2010a8ae:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
2010a8b2:	fcc42503          	lw	a0,-52(s0)
2010a8b6:	3f75                	jal	2010a872 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
2010a8b8:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
2010a8bc:	fcc42503          	lw	a0,-52(s0)
2010a8c0:	3f71                	jal	2010a85c <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
2010a8c2:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2010a8c6:	37c1                	jal	2010a886 <__metal_driver_sifive_fe310_g000_prci_vtable>
2010a8c8:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
2010a8cc:	fe042783          	lw	a5,-32(s0)
2010a8d0:	439c                	lw	a5,0(a5)
2010a8d2:	fe842583          	lw	a1,-24(s0)
2010a8d6:	fe442503          	lw	a0,-28(s0)
2010a8da:	9782                	jalr	a5
2010a8dc:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
2010a8e0:	fdc42703          	lw	a4,-36(s0)
2010a8e4:	400007b7          	lui	a5,0x40000
2010a8e8:	8ff9                	and	a5,a5,a4
2010a8ea:	e399                	bnez	a5,2010a8f0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
2010a8ec:	57fd                	li	a5,-1
2010a8ee:	a025                	j	2010a916 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
2010a8f0:	fdc42783          	lw	a5,-36(s0)
2010a8f4:	0007c463          	bltz	a5,2010a8fc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
2010a8f8:	57fd                	li	a5,-1
2010a8fa:	a831                	j	2010a916 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
2010a8fc:	fec42503          	lw	a0,-20(s0)
2010a900:	089010ef          	jal	2010c188 <metal_clock_get_rate_hz>
2010a904:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32 (discriminator 1)
2010a906:	873e                	mv	a4,a5
2010a908:	fdc42783          	lw	a5,-36(s0)
2010a90c:	03f7f793          	and	a5,a5,63
2010a910:	0785                	add	a5,a5,1 # 40000001 <metal_segment_data_source_start+0x1fef3bc1>
2010a912:	02f757b3          	divu	a5,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
2010a916:	853e                	mv	a0,a5
2010a918:	50f2                	lw	ra,60(sp)
2010a91a:	5462                	lw	s0,56(sp)
2010a91c:	6121                	add	sp,sp,64
2010a91e:	8082                	ret

2010a920 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2010a920:	1101                	add	sp,sp,-32
2010a922:	ce06                	sw	ra,28(sp)
2010a924:	cc22                	sw	s0,24(sp)
2010a926:	1000                	add	s0,sp,32
2010a928:	fea42623          	sw	a0,-20(s0)
2010a92c:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
2010a930:	fec42503          	lw	a0,-20(s0)
2010a934:	37a5                	jal	2010a89c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
2010a936:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
2010a938:	853e                	mv	a0,a5
2010a93a:	40f2                	lw	ra,28(sp)
2010a93c:	4462                	lw	s0,24(sp)
2010a93e:	6105                	add	sp,sp,32
2010a940:	8082                	ret

2010a942 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1130
{
2010a942:	1101                	add	sp,sp,-32
2010a944:	ce22                	sw	s0,28(sp)
2010a946:	1000                	add	s0,sp,32
2010a948:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1131
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
2010a94c:	800007b7          	lui	a5,0x80000
2010a950:	05878793          	add	a5,a5,88 # 80000058 <__metal_dt_clock_0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1132
}
2010a954:	853e                	mv	a0,a5
2010a956:	4472                	lw	s0,28(sp)
2010a958:	6105                	add	sp,sp,32
2010a95a:	8082                	ret

2010a95c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1135
{
2010a95c:	1101                	add	sp,sp,-32
2010a95e:	ce22                	sw	s0,28(sp)
2010a960:	1000                	add	s0,sp,32
2010a962:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1136
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2010a966:	82018793          	add	a5,gp,-2016 # 80000a90 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1137
}
2010a96a:	853e                	mv	a0,a5
2010a96c:	4472                	lw	s0,28(sp)
2010a96e:	6105                	add	sp,sp,32
2010a970:	8082                	ret

2010a972 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1140
{
2010a972:	1101                	add	sp,sp,-32
2010a974:	ce22                	sw	s0,28(sp)
2010a976:	1000                	add	s0,sp,32
2010a978:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1141
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
2010a97c:	4791                	li	a5,4
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1142
}
2010a97e:	853e                	mv	a0,a5
2010a980:	4472                	lw	s0,28(sp)
2010a982:	6105                	add	sp,sp,32
2010a984:	8082                	ret

2010a986 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1239
{
2010a986:	1141                	add	sp,sp,-16
2010a988:	c622                	sw	s0,12(sp)
2010a98a:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2010a98c:	201057b7          	lui	a5,0x20105
2010a990:	17478793          	add	a5,a5,372 # 20105174 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1241
}
2010a994:	853e                	mv	a0,a5
2010a996:	4432                	lw	s0,12(sp)
2010a998:	0141                	add	sp,sp,16
2010a99a:	8082                	ret

2010a99c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
2010a99c:	7139                	add	sp,sp,-64
2010a99e:	de06                	sw	ra,60(sp)
2010a9a0:	dc22                	sw	s0,56(sp)
2010a9a2:	0080                	add	s0,sp,64
2010a9a4:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
2010a9a8:	fcc42503          	lw	a0,-52(s0)
2010a9ac:	3f59                	jal	2010a942 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
2010a9ae:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
2010a9b2:	fcc42503          	lw	a0,-52(s0)
2010a9b6:	3f75                	jal	2010a972 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
2010a9b8:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
2010a9bc:	fcc42503          	lw	a0,-52(s0)
2010a9c0:	3f71                	jal	2010a95c <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
2010a9c2:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2010a9c6:	37c1                	jal	2010a986 <__metal_driver_sifive_fe310_g000_prci_vtable>
2010a9c8:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
2010a9cc:	fe042783          	lw	a5,-32(s0)
2010a9d0:	439c                	lw	a5,0(a5)
2010a9d2:	fe842583          	lw	a1,-24(s0)
2010a9d6:	fe442503          	lw	a0,-28(s0)
2010a9da:	9782                	jalr	a5
2010a9dc:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
2010a9e0:	fdc42703          	lw	a4,-36(s0)
2010a9e4:	400007b7          	lui	a5,0x40000
2010a9e8:	8ff9                	and	a5,a5,a4
2010a9ea:	e399                	bnez	a5,2010a9f0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
2010a9ec:	57fd                	li	a5,-1
2010a9ee:	a821                	j	2010aa06 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
2010a9f0:	fdc42783          	lw	a5,-36(s0)
2010a9f4:	0007c463          	bltz	a5,2010a9fc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
2010a9f8:	57fd                	li	a5,-1
2010a9fa:	a031                	j	2010aa06 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
2010a9fc:	fec42503          	lw	a0,-20(s0)
2010aa00:	788010ef          	jal	2010c188 <metal_clock_get_rate_hz>
2010aa04:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
2010aa06:	853e                	mv	a0,a5
2010aa08:	50f2                	lw	ra,60(sp)
2010aa0a:	5462                	lw	s0,56(sp)
2010aa0c:	6121                	add	sp,sp,64
2010aa0e:	8082                	ret

2010aa10 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2010aa10:	1101                	add	sp,sp,-32
2010aa12:	ce06                	sw	ra,28(sp)
2010aa14:	cc22                	sw	s0,24(sp)
2010aa16:	1000                	add	s0,sp,32
2010aa18:	fea42623          	sw	a0,-20(s0)
2010aa1c:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
2010aa20:	fec42503          	lw	a0,-20(s0)
2010aa24:	3fa5                	jal	2010a99c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
2010aa26:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
2010aa28:	853e                	mv	a0,a5
2010aa2a:	40f2                	lw	ra,28(sp)
2010aa2c:	4462                	lw	s0,24(sp)
2010aa2e:	6105                	add	sp,sp,32
2010aa30:	8082                	ret

2010aa32 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1191
{
2010aa32:	1101                	add	sp,sp,-32
2010aa34:	ce22                	sw	s0,28(sp)
2010aa36:	1000                	add	s0,sp,32
2010aa38:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1192
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
2010aa3c:	800017b7          	lui	a5,0x80001
2010aa40:	a4878793          	add	a5,a5,-1464 # 80000a48 <__metal_dt_clock_3>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1193
}
2010aa44:	853e                	mv	a0,a5
2010aa46:	4472                	lw	s0,28(sp)
2010aa48:	6105                	add	sp,sp,32
2010aa4a:	8082                	ret

2010aa4c <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1196
{
2010aa4c:	1101                	add	sp,sp,-32
2010aa4e:	ce22                	sw	s0,28(sp)
2010aa50:	1000                	add	s0,sp,32
2010aa52:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1197
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
2010aa56:	800017b7          	lui	a5,0x80001
2010aa5a:	a5478793          	add	a5,a5,-1452 # 80000a54 <__metal_dt_clock_1>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1198
}
2010aa5e:	853e                	mv	a0,a5
2010aa60:	4472                	lw	s0,28(sp)
2010aa62:	6105                	add	sp,sp,32
2010aa64:	8082                	ret

2010aa66 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1201
{
2010aa66:	1101                	add	sp,sp,-32
2010aa68:	ce22                	sw	s0,28(sp)
2010aa6a:	1000                	add	s0,sp,32
2010aa6c:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1202
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2010aa70:	82018793          	add	a5,gp,-2016 # 80000a90 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1203
}
2010aa74:	853e                	mv	a0,a5
2010aa76:	4472                	lw	s0,28(sp)
2010aa78:	6105                	add	sp,sp,32
2010aa7a:	8082                	ret

2010aa7c <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1206
{
2010aa7c:	1101                	add	sp,sp,-32
2010aa7e:	ce22                	sw	s0,28(sp)
2010aa80:	1000                	add	s0,sp,32
2010aa82:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1207
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
2010aa86:	47b1                	li	a5,12
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1208
}
2010aa88:	853e                	mv	a0,a5
2010aa8a:	4472                	lw	s0,28(sp)
2010aa8c:	6105                	add	sp,sp,32
2010aa8e:	8082                	ret

2010aa90 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1211
{
2010aa90:	1141                	add	sp,sp,-16
2010aa92:	c622                	sw	s0,12(sp)
2010aa94:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1212
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2010aa96:	82018793          	add	a5,gp,-2016 # 80000a90 <__metal_dt_prci_10008000>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1213
}
2010aa9a:	853e                	mv	a0,a5
2010aa9c:	4432                	lw	s0,12(sp)
2010aa9e:	0141                	add	sp,sp,16
2010aaa0:	8082                	ret

2010aaa2 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1216
{
2010aaa2:	1141                	add	sp,sp,-16
2010aaa4:	c622                	sw	s0,12(sp)
2010aaa6:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1217
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
2010aaa8:	47a1                	li	a5,8
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1218
}
2010aaaa:	853e                	mv	a0,a5
2010aaac:	4432                	lw	s0,12(sp)
2010aaae:	0141                	add	sp,sp,16
2010aab0:	8082                	ret

2010aab2 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1221
{
2010aab2:	1141                	add	sp,sp,-16
2010aab4:	c622                	sw	s0,12(sp)
2010aab6:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1222
		return 16000000;
2010aab8:	00f427b7          	lui	a5,0xf42
2010aabc:	40078793          	add	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1223
}
2010aac0:	853e                	mv	a0,a5
2010aac2:	4432                	lw	s0,12(sp)
2010aac4:	0141                	add	sp,sp,16
2010aac6:	8082                	ret

2010aac8 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1229
{
2010aac8:	1141                	add	sp,sp,-16
2010aaca:	c622                	sw	s0,12(sp)
2010aacc:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1230
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2010aace:	100087b7          	lui	a5,0x10008
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1231
}
2010aad2:	853e                	mv	a0,a5
2010aad4:	4432                	lw	s0,12(sp)
2010aad6:	0141                	add	sp,sp,16
2010aad8:	8082                	ret

2010aada <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1239
{
2010aada:	1141                	add	sp,sp,-16
2010aadc:	c622                	sw	s0,12(sp)
2010aade:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1240
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2010aae0:	201057b7          	lui	a5,0x20105
2010aae4:	17478793          	add	a5,a5,372 # 20105174 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1241
}
2010aae8:	853e                	mv	a0,a5
2010aaea:	4432                	lw	s0,12(sp)
2010aaec:	0141                	add	sp,sp,16
2010aaee:	8082                	ret

2010aaf0 <get_pll_config_freq>:
get_pll_config_freq():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
2010aaf0:	1101                	add	sp,sp,-32
2010aaf2:	ce22                	sw	s0,28(sp)
2010aaf4:	1000                	add	s0,sp,32
2010aaf6:	fea42623          	sw	a0,-20(s0)
2010aafa:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
2010aafe:	fe842783          	lw	a5,-24(s0)
2010ab02:	479c                	lw	a5,8(a5)
2010ab04:	fec42703          	lw	a4,-20(s0)
2010ab08:	00f76963          	bltu	a4,a5,2010ab1a <get_pll_config_freq+0x2a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143
        pll_input_rate > config->max_input_rate)
2010ab0c:	fe842783          	lw	a5,-24(s0)
2010ab10:	47dc                	lw	a5,12(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
2010ab12:	fec42703          	lw	a4,-20(s0)
2010ab16:	00e7f463          	bgeu	a5,a4,2010ab1e <get_pll_config_freq+0x2e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
2010ab1a:	57fd                	li	a5,-1
2010ab1c:	a829                	j	2010ab36 <get_pll_config_freq+0x46>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
2010ab1e:	fe842783          	lw	a5,-24(s0)
2010ab22:	4398                	lw	a4,0(a5)
2010ab24:	fec42783          	lw	a5,-20(s0)
2010ab28:	02f70733          	mul	a4,a4,a5
2010ab2c:	fe842783          	lw	a5,-24(s0)
2010ab30:	43dc                	lw	a5,4(a5)
2010ab32:	02f757b3          	divu	a5,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
2010ab36:	853e                	mv	a0,a5
2010ab38:	4472                	lw	s0,28(sp)
2010ab3a:	6105                	add	sp,sp,32
2010ab3c:	8082                	ret

2010ab3e <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
2010ab3e:	7139                	add	sp,sp,-64
2010ab40:	de06                	sw	ra,60(sp)
2010ab42:	dc22                	sw	s0,56(sp)
2010ab44:	0080                	add	s0,sp,64
2010ab46:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
2010ab4a:	fcc42783          	lw	a5,-52(s0)
2010ab4e:	853e                	mv	a0,a5
2010ab50:	3df5                	jal	2010aa4c <__metal_driver_sifive_fe310_g000_pll_pllref>
2010ab52:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
2010ab56:	3fb1                	jal	2010aab2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2010ab58:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
2010ab5c:	3799                	jal	2010aaa2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2010ab5e:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2010ab62:	379d                	jal	2010aac8 <__metal_driver_sifive_fe310_g000_prci_base>
2010ab64:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2010ab68:	fe042703          	lw	a4,-32(s0)
2010ab6c:	fe442783          	lw	a5,-28(s0)
2010ab70:	97ba                	add	a5,a5,a4
2010ab72:	fcf42e23          	sw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
2010ab76:	fcc42783          	lw	a5,-52(s0)
2010ab7a:	43dc                	lw	a5,4(a5)
2010ab7c:	853e                	mv	a0,a5
2010ab7e:	574010ef          	jal	2010c0f2 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
2010ab82:	fdc42783          	lw	a5,-36(s0)
2010ab86:	4398                	lw	a4,0(a5)
2010ab88:	67c1                	lui	a5,0x10
2010ab8a:	8ff9                	and	a5,a5,a4
2010ab8c:	cb91                	beqz	a5,2010aba0 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2010ab8e:	fdc42783          	lw	a5,-36(s0)
2010ab92:	4398                	lw	a4,0(a5)
2010ab94:	77c1                	lui	a5,0xffff0
2010ab96:	17fd                	add	a5,a5,-1 # fffeffff <metal_segment_heap_target_end+0x7ffee4df>
2010ab98:	8f7d                	and	a4,a4,a5
2010ab9a:	fdc42783          	lw	a5,-36(s0)
2010ab9e:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
2010aba0:	fec42783          	lw	a5,-20(s0)
2010aba4:	cb91                	beqz	a5,2010abb8 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
2010aba6:	fdc42783          	lw	a5,-36(s0)
2010abaa:	4398                	lw	a4,0(a5)
2010abac:	000207b7          	lui	a5,0x20
2010abb0:	8f5d                	or	a4,a4,a5
2010abb2:	fdc42783          	lw	a5,-36(s0)
2010abb6:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
2010abb8:	fcc42783          	lw	a5,-52(s0)
2010abbc:	439c                	lw	a5,0(a5)
2010abbe:	43dc                	lw	a5,4(a5)
2010abc0:	fcc42703          	lw	a4,-52(s0)
2010abc4:	fe842583          	lw	a1,-24(s0)
2010abc8:	853a                	mv	a0,a4
2010abca:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
2010abcc:	fcc42783          	lw	a5,-52(s0)
2010abd0:	479c                	lw	a5,8(a5)
2010abd2:	853e                	mv	a0,a5
2010abd4:	51e010ef          	jal	2010c0f2 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
2010abd8:	0001                	nop
2010abda:	50f2                	lw	ra,60(sp)
2010abdc:	5462                	lw	s0,56(sp)
2010abde:	6121                	add	sp,sp,64
2010abe0:	8082                	ret

2010abe2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
2010abe2:	711d                	add	sp,sp,-96
2010abe4:	ce86                	sw	ra,92(sp)
2010abe6:	cca2                	sw	s0,88(sp)
2010abe8:	1080                	add	s0,sp,96
2010abea:	faa42623          	sw	a0,-84(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2010abee:	fac42503          	lw	a0,-84(s0)
2010abf2:	e5bff0ef          	jal	2010aa4c <__metal_driver_sifive_fe310_g000_pll_pllref>
2010abf6:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2010abfa:	fac42503          	lw	a0,-84(s0)
2010abfe:	e35ff0ef          	jal	2010aa32 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2010ac02:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2010ac06:	fac42503          	lw	a0,-84(s0)
2010ac0a:	e99ff0ef          	jal	2010aaa2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2010ac0e:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
2010ac12:	fac42503          	lw	a0,-84(s0)
2010ac16:	e7bff0ef          	jal	2010aa90 <__metal_driver_sifive_fe310_g000_pll_config_base>
2010ac1a:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
2010ac1e:	fac42503          	lw	a0,-84(s0)
2010ac22:	e5bff0ef          	jal	2010aa7c <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2010ac26:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
2010ac2a:	fac42503          	lw	a0,-84(s0)
2010ac2e:	e39ff0ef          	jal	2010aa66 <__metal_driver_sifive_fe310_g000_pll_divider_base>
2010ac32:	fca42c23          	sw	a0,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
2010ac36:	ea5ff0ef          	jal	2010aada <__metal_driver_sifive_fe310_g000_prci_vtable>
2010ac3a:	fca42a23          	sw	a0,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
2010ac3e:	fd442783          	lw	a5,-44(s0)
2010ac42:	439c                	lw	a5,0(a5)
2010ac44:	fe442583          	lw	a1,-28(s0)
2010ac48:	fe042503          	lw	a0,-32(s0)
2010ac4c:	9782                	jalr	a5
2010ac4e:	fca42823          	sw	a0,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
2010ac52:	fd442783          	lw	a5,-44(s0)
2010ac56:	439c                	lw	a5,0(a5)
2010ac58:	fdc42583          	lw	a1,-36(s0)
2010ac5c:	fd842503          	lw	a0,-40(s0)
2010ac60:	9782                	jalr	a5
2010ac62:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
2010ac66:	fd042703          	lw	a4,-48(s0)
2010ac6a:	67c1                	lui	a5,0x10
2010ac6c:	8f7d                	and	a4,a4,a5
2010ac6e:	67c1                	lui	a5,0x10
2010ac70:	00f77863          	bgeu	a4,a5,2010ac80 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
2010ac74:	fe842503          	lw	a0,-24(s0)
2010ac78:	510010ef          	jal	2010c188 <metal_clock_get_rate_hz>
2010ac7c:	87aa                	mv	a5,a0
2010ac7e:	a8e1                	j	2010ad56 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
2010ac80:	fd042703          	lw	a4,-48(s0)
2010ac84:	000207b7          	lui	a5,0x20
2010ac88:	8f7d                	and	a4,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
2010ac8a:	000207b7          	lui	a5,0x20
2010ac8e:	00f76563          	bltu	a4,a5,2010ac98 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
2010ac92:	fec42783          	lw	a5,-20(s0)
2010ac96:	a019                	j	2010ac9c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xba>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
2010ac98:	fe842783          	lw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
2010ac9c:	853e                	mv	a0,a5
2010ac9e:	4ea010ef          	jal	2010c188 <metal_clock_get_rate_hz>
2010aca2:	fca42423          	sw	a0,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
2010aca6:	fd042703          	lw	a4,-48(s0)
2010acaa:	000407b7          	lui	a5,0x40
2010acae:	8f7d                	and	a4,a4,a5
2010acb0:	000407b7          	lui	a5,0x40
2010acb4:	00f76563          	bltu	a4,a5,2010acbe <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xdc>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
2010acb8:	fc842783          	lw	a5,-56(s0)
2010acbc:	a869                	j	2010ad56 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
2010acbe:	fd042783          	lw	a5,-48(s0)
2010acc2:	8b9d                	and	a5,a5,7
2010acc4:	0785                	add	a5,a5,1 # 40001 <__heap_size+0x3f801>
2010acc6:	fcf42223          	sw	a5,-60(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
2010acca:	fd042783          	lw	a5,-48(s0)
2010acce:	3f07f793          	and	a5,a5,1008
2010acd2:	8391                	srl	a5,a5,0x4
2010acd4:	0785                	add	a5,a5,1
2010acd6:	0786                	sll	a5,a5,0x1
2010acd8:	fcf42023          	sw	a5,-64(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
2010acdc:	fd042703          	lw	a4,-48(s0)
2010ace0:	6785                	lui	a5,0x1
2010ace2:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
2010ace6:	8f7d                	and	a4,a4,a5
2010ace8:	3ff00793          	li	a5,1023
2010acec:	00e7e463          	bltu	a5,a4,2010acf4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x112>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
2010acf0:	57fd                	li	a5,-1
2010acf2:	a095                	j	2010ad56 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
2010acf4:	fd042703          	lw	a4,-48(s0)
2010acf8:	6785                	lui	a5,0x1
2010acfa:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
2010acfe:	8ff9                	and	a5,a5,a4
2010ad00:	83a9                	srl	a5,a5,0xa
2010ad02:	4705                	li	a4,1
2010ad04:	00f717b3          	sll	a5,a4,a5
2010ad08:	faf42e23          	sw	a5,-68(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2010ad0c:	fc842703          	lw	a4,-56(s0)
2010ad10:	fc442783          	lw	a5,-60(s0)
2010ad14:	02f74733          	div	a4,a4,a5
2010ad18:	fc042783          	lw	a5,-64(s0)
2010ad1c:	02f70733          	mul	a4,a4,a5
2010ad20:	fbc42783          	lw	a5,-68(s0)
2010ad24:	02f747b3          	div	a5,a4,a5
2010ad28:	faf42c23          	sw	a5,-72(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2010ad2c:	fcc42783          	lw	a5,-52(s0)
2010ad30:	1007f713          	and	a4,a5,256
2010ad34:	0ff00793          	li	a5,255
2010ad38:	00e7f563          	bgeu	a5,a4,2010ad42 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x160>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2010ad3c:	fb842783          	lw	a5,-72(s0)
2010ad40:	a819                	j	2010ad56 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
2010ad42:	fb842703          	lw	a4,-72(s0)
2010ad46:	fcc42783          	lw	a5,-52(s0)
2010ad4a:	03f7f793          	and	a5,a5,63
2010ad4e:	0785                	add	a5,a5,1
2010ad50:	0786                	sll	a5,a5,0x1
2010ad52:	02f757b3          	divu	a5,a4,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
2010ad56:	853e                	mv	a0,a5
2010ad58:	40f6                	lw	ra,92(sp)
2010ad5a:	4466                	lw	s0,88(sp)
2010ad5c:	6125                	add	sp,sp,96
2010ad5e:	8082                	ret

2010ad60 <find_closest_config>:
find_closest_config():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2010ad60:	7139                	add	sp,sp,-64
2010ad62:	de06                	sw	ra,60(sp)
2010ad64:	dc22                	sw	s0,56(sp)
2010ad66:	0080                	add	s0,sp,64
2010ad68:	fca42623          	sw	a0,-52(s0)
2010ad6c:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2010ad70:	57fd                	li	a5,-1
2010ad72:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
2010ad76:	800007b7          	lui	a5,0x80000
2010ad7a:	17fd                	add	a5,a5,-1 # 7fffffff <metal_segment_data_source_start+0x5fef3bbf>
2010ad7c:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2010ad80:	04300793          	li	a5,67
2010ad84:	fef42223          	sw	a5,-28(s0)
2010ad88:	a0b5                	j	2010adf4 <find_closest_config+0x94>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
2010ad8a:	fcc42683          	lw	a3,-52(s0)
2010ad8e:	fe442783          	lw	a5,-28(s0)
2010ad92:	00579713          	sll	a4,a5,0x5
2010ad96:	201047b7          	lui	a5,0x20104
2010ad9a:	7e478793          	add	a5,a5,2020 # 201047e4 <pll_configs>
2010ad9e:	97ba                	add	a5,a5,a4
2010ada0:	85be                	mv	a1,a5
2010ada2:	8536                	mv	a0,a3
2010ada4:	d4dff0ef          	jal	2010aaf0 <get_pll_config_freq>
2010ada8:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2010adac:	fe042703          	lw	a4,-32(s0)
2010adb0:	57fd                	li	a5,-1
2010adb2:	02f70c63          	beq	a4,a5,2010adea <find_closest_config+0x8a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
2010adb6:	fe042703          	lw	a4,-32(s0)
2010adba:	fc842783          	lw	a5,-56(s0)
2010adbe:	8f1d                	sub	a4,a4,a5
2010adc0:	41f75793          	sra	a5,a4,0x1f
2010adc4:	8f3d                	xor	a4,a4,a5
2010adc6:	40f707b3          	sub	a5,a4,a5
2010adca:	fcf42e23          	sw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
2010adce:	fdc42703          	lw	a4,-36(s0)
2010add2:	fe842783          	lw	a5,-24(s0)
2010add6:	00f75a63          	bge	a4,a5,2010adea <find_closest_config+0x8a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
2010adda:	fe442783          	lw	a5,-28(s0)
2010adde:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
2010ade2:	fdc42783          	lw	a5,-36(s0)
2010ade6:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
2010adea:	fe442783          	lw	a5,-28(s0)
2010adee:	17fd                	add	a5,a5,-1
2010adf0:	fef42223          	sw	a5,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2010adf4:	fe442783          	lw	a5,-28(s0)
2010adf8:	f807d9e3          	bgez	a5,2010ad8a <find_closest_config+0x2a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
2010adfc:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
2010ae00:	853e                	mv	a0,a5
2010ae02:	50f2                	lw	ra,60(sp)
2010ae04:	5462                	lw	s0,56(sp)
2010ae06:	6121                	add	sp,sp,64
2010ae08:	8082                	ret

2010ae0a <configure_pll>:
configure_pll():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
2010ae0a:	7179                	add	sp,sp,-48
2010ae0c:	d606                	sw	ra,44(sp)
2010ae0e:	d422                	sw	s0,40(sp)
2010ae10:	1800                	add	s0,sp,48
2010ae12:	fca42e23          	sw	a0,-36(s0)
2010ae16:	fcb42c23          	sw	a1,-40(s0)
2010ae1a:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
2010ae1e:	fdc42783          	lw	a5,-36(s0)
2010ae22:	439c                	lw	a5,0(a5)
2010ae24:	ff87f713          	and	a4,a5,-8
2010ae28:	fdc42783          	lw	a5,-36(s0)
2010ae2c:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2010ae2e:	fdc42783          	lw	a5,-36(s0)
2010ae32:	4398                	lw	a4,0(a5)
2010ae34:	fd442783          	lw	a5,-44(s0)
2010ae38:	4b9c                	lw	a5,16(a5)
2010ae3a:	8b9d                	and	a5,a5,7
2010ae3c:	8f5d                	or	a4,a4,a5
2010ae3e:	fdc42783          	lw	a5,-36(s0)
2010ae42:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
2010ae44:	fdc42783          	lw	a5,-36(s0)
2010ae48:	439c                	lw	a5,0(a5)
2010ae4a:	c0f7f713          	and	a4,a5,-1009
2010ae4e:	fdc42783          	lw	a5,-36(s0)
2010ae52:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
2010ae54:	fdc42783          	lw	a5,-36(s0)
2010ae58:	4398                	lw	a4,0(a5)
2010ae5a:	fd442783          	lw	a5,-44(s0)
2010ae5e:	4bdc                	lw	a5,20(a5)
2010ae60:	0792                	sll	a5,a5,0x4
2010ae62:	3f07f793          	and	a5,a5,1008
2010ae66:	8f5d                	or	a4,a4,a5
2010ae68:	fdc42783          	lw	a5,-36(s0)
2010ae6c:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2010ae6e:	fdc42783          	lw	a5,-36(s0)
2010ae72:	4398                	lw	a4,0(a5)
2010ae74:	77fd                	lui	a5,0xfffff
2010ae76:	3ff78793          	add	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd8df>
2010ae7a:	8f7d                	and	a4,a4,a5
2010ae7c:	fdc42783          	lw	a5,-36(s0)
2010ae80:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
2010ae82:	fdc42783          	lw	a5,-36(s0)
2010ae86:	4398                	lw	a4,0(a5)
2010ae88:	fd442783          	lw	a5,-44(s0)
2010ae8c:	4f9c                	lw	a5,24(a5)
2010ae8e:	00a79693          	sll	a3,a5,0xa
2010ae92:	6785                	lui	a5,0x1
2010ae94:	c0078793          	add	a5,a5,-1024 # c00 <__heap_size+0x400>
2010ae98:	8ff5                	and	a5,a5,a3
2010ae9a:	8f5d                	or	a4,a4,a5
2010ae9c:	fdc42783          	lw	a5,-36(s0)
2010aea0:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
2010aea2:	fd442783          	lw	a5,-44(s0)
2010aea6:	4fdc                	lw	a5,28(a5)
2010aea8:	0207db63          	bgez	a5,2010aede <configure_pll+0xd4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
2010aeac:	fd842783          	lw	a5,-40(s0)
2010aeb0:	439c                	lw	a5,0(a5)
2010aeb2:	1007e713          	or	a4,a5,256
2010aeb6:	fd842783          	lw	a5,-40(s0)
2010aeba:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2010aebc:	fd842783          	lw	a5,-40(s0)
2010aec0:	439c                	lw	a5,0(a5)
2010aec2:	fc07f713          	and	a4,a5,-64
2010aec6:	fd842783          	lw	a5,-40(s0)
2010aeca:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
2010aecc:	fd842783          	lw	a5,-40(s0)
2010aed0:	439c                	lw	a5,0(a5)
2010aed2:	0017e713          	or	a4,a5,1
2010aed6:	fd842783          	lw	a5,-40(s0)
2010aeda:	c398                	sw	a4,0(a5)
2010aedc:	a82d                	j	2010af16 <configure_pll+0x10c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
2010aede:	fd842783          	lw	a5,-40(s0)
2010aee2:	439c                	lw	a5,0(a5)
2010aee4:	eff7f713          	and	a4,a5,-257
2010aee8:	fd842783          	lw	a5,-40(s0)
2010aeec:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2010aeee:	fd842783          	lw	a5,-40(s0)
2010aef2:	439c                	lw	a5,0(a5)
2010aef4:	fc07f713          	and	a4,a5,-64
2010aef8:	fd842783          	lw	a5,-40(s0)
2010aefc:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
2010aefe:	fd842783          	lw	a5,-40(s0)
2010af02:	4398                	lw	a4,0(a5)
2010af04:	fd442783          	lw	a5,-44(s0)
2010af08:	4fdc                	lw	a5,28(a5)
2010af0a:	03f7f793          	and	a5,a5,63
2010af0e:	8f5d                	or	a4,a4,a5
2010af10:	fd842783          	lw	a5,-40(s0)
2010af14:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2010af16:	fdc42783          	lw	a5,-36(s0)
2010af1a:	4398                	lw	a4,0(a5)
2010af1c:	fffc07b7          	lui	a5,0xfffc0
2010af20:	17fd                	add	a5,a5,-1 # fffbffff <metal_segment_heap_target_end+0x7ffbe4df>
2010af22:	8f7d                	and	a4,a4,a5
2010af24:	fdc42783          	lw	a5,-36(s0)
2010af28:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2010af2a:	fe040793          	add	a5,s0,-32
2010af2e:	863e                	mv	a2,a5
2010af30:	4585                	li	a1,1
2010af32:	800017b7          	lui	a5,0x80001
2010af36:	a7c78513          	add	a0,a5,-1412 # 80000a7c <__metal_dt_clint_2000000>
2010af3a:	c78fd0ef          	jal	201083b2 <__metal_driver_riscv_clint0_command_request>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2010af3e:	fe042603          	lw	a2,-32(s0)
2010af42:	fe442683          	lw	a3,-28(s0)
2010af46:	4511                	li	a0,4
2010af48:	4581                	li	a1,0
2010af4a:	00a60733          	add	a4,a2,a0
2010af4e:	883a                	mv	a6,a4
2010af50:	00c83833          	sltu	a6,a6,a2
2010af54:	00b687b3          	add	a5,a3,a1
2010af58:	00f806b3          	add	a3,a6,a5
2010af5c:	87b6                	mv	a5,a3
2010af5e:	fee42423          	sw	a4,-24(s0)
2010af62:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2010af66:	a819                	j	2010af7c <configure_pll+0x172>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
2010af68:	fe040793          	add	a5,s0,-32
2010af6c:	863e                	mv	a2,a5
2010af6e:	4585                	li	a1,1
2010af70:	800017b7          	lui	a5,0x80001
2010af74:	a7c78513          	add	a0,a5,-1412 # 80000a7c <__metal_dt_clint_2000000>
2010af78:	c3afd0ef          	jal	201083b2 <__metal_driver_riscv_clint0_command_request>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2010af7c:	fe042703          	lw	a4,-32(s0)
2010af80:	fe442783          	lw	a5,-28(s0)
2010af84:	fec42683          	lw	a3,-20(s0)
2010af88:	863e                	mv	a2,a5
2010af8a:	00c6ec63          	bltu	a3,a2,2010afa2 <configure_pll+0x198>
2010af8e:	fec42683          	lw	a3,-20(s0)
2010af92:	863e                	mv	a2,a5
2010af94:	fcc69ae3          	bne	a3,a2,2010af68 <configure_pll+0x15e>
2010af98:	fe842683          	lw	a3,-24(s0)
2010af9c:	87ba                	mv	a5,a4
2010af9e:	fcf6f5e3          	bgeu	a3,a5,2010af68 <configure_pll+0x15e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
2010afa2:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
2010afa4:	fdc42783          	lw	a5,-36(s0)
2010afa8:	439c                	lw	a5,0(a5)
2010afaa:	fe07dde3          	bgez	a5,2010afa4 <configure_pll+0x19a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
2010afae:	0001                	nop
2010afb0:	0001                	nop
2010afb2:	50b2                	lw	ra,44(sp)
2010afb4:	5422                	lw	s0,40(sp)
2010afb6:	6145                	add	sp,sp,48
2010afb8:	8082                	ret

2010afba <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
2010afba:	715d                	add	sp,sp,-80
2010afbc:	c686                	sw	ra,76(sp)
2010afbe:	c4a2                	sw	s0,72(sp)
2010afc0:	0880                	add	s0,sp,80
2010afc2:	faa42e23          	sw	a0,-68(s0)
2010afc6:	fab42c23          	sw	a1,-72(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2010afca:	fbc42503          	lw	a0,-68(s0)
2010afce:	a7fff0ef          	jal	2010aa4c <__metal_driver_sifive_fe310_g000_pll_pllref>
2010afd2:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2010afd6:	fbc42503          	lw	a0,-68(s0)
2010afda:	a59ff0ef          	jal	2010aa32 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2010afde:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2010afe2:	fbc42503          	lw	a0,-68(s0)
2010afe6:	abdff0ef          	jal	2010aaa2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2010afea:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
2010afee:	fbc42503          	lw	a0,-68(s0)
2010aff2:	a8bff0ef          	jal	2010aa7c <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2010aff6:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2010affa:	acfff0ef          	jal	2010aac8 <__metal_driver_sifive_fe310_g000_prci_base>
2010affe:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2010b002:	fdc42703          	lw	a4,-36(s0)
2010b006:	fe442783          	lw	a5,-28(s0)
2010b00a:	97ba                	add	a5,a5,a4
2010b00c:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
2010b010:	fdc42703          	lw	a4,-36(s0)
2010b014:	fe042783          	lw	a5,-32(s0)
2010b018:	97ba                	add	a5,a5,a4
2010b01a:	fcf42a23          	sw	a5,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
2010b01e:	fd842783          	lw	a5,-40(s0)
2010b022:	4398                	lw	a4,0(a5)
2010b024:	67c1                	lui	a5,0x10
2010b026:	8ff9                	and	a5,a5,a4
2010b028:	cb91                	beqz	a5,2010b03c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2010b02a:	fd842783          	lw	a5,-40(s0)
2010b02e:	4398                	lw	a4,0(a5)
2010b030:	77c1                	lui	a5,0xffff0
2010b032:	17fd                	add	a5,a5,-1 # fffeffff <metal_segment_heap_target_end+0x7ffee4df>
2010b034:	8f7d                	and	a4,a4,a5
2010b036:	fd842783          	lw	a5,-40(s0)
2010b03a:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2010b03c:	fd842783          	lw	a5,-40(s0)
2010b040:	4398                	lw	a4,0(a5)
2010b042:	000207b7          	lui	a5,0x20
2010b046:	8ff9                	and	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2010b048:	c781                	beqz	a5,2010b050 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2010b04a:	fec42783          	lw	a5,-20(s0)
2010b04e:	a019                	j	2010b054 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
2010b050:	fe842783          	lw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
2010b054:	853e                	mv	a0,a5
2010b056:	132010ef          	jal	2010c188 <metal_clock_get_rate_hz>
2010b05a:	fca42823          	sw	a0,-48(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
2010b05e:	fd042703          	lw	a4,-48(s0)
2010b062:	87ba                	mv	a5,a4
2010b064:	0786                	sll	a5,a5,0x1
2010b066:	97ba                	add	a5,a5,a4
2010b068:	41f7d713          	sra	a4,a5,0x1f
2010b06c:	8b0d                	and	a4,a4,3
2010b06e:	97ba                	add	a5,a5,a4
2010b070:	8789                	sra	a5,a5,0x2
2010b072:	873e                	mv	a4,a5
2010b074:	fb842783          	lw	a5,-72(s0)
2010b078:	02e7cb63          	blt	a5,a4,2010b0ae <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
2010b07c:	fd042703          	lw	a4,-48(s0)
2010b080:	87ba                	mv	a5,a4
2010b082:	078a                	sll	a5,a5,0x2
2010b084:	97ba                	add	a5,a5,a4
2010b086:	41f7d713          	sra	a4,a5,0x1f
2010b08a:	8b0d                	and	a4,a4,3
2010b08c:	97ba                	add	a5,a5,a4
2010b08e:	8789                	sra	a5,a5,0x2
2010b090:	873e                	mv	a4,a5
2010b092:	fb842783          	lw	a5,-72(s0)
2010b096:	00f74c63          	blt	a4,a5,2010b0ae <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2010b09a:	fd842783          	lw	a5,-40(s0)
2010b09e:	4398                	lw	a4,0(a5)
2010b0a0:	000407b7          	lui	a5,0x40
2010b0a4:	8f5d                	or	a4,a4,a5
2010b0a6:	fd842783          	lw	a5,-40(s0)
2010b0aa:	c398                	sw	a4,0(a5)
2010b0ac:	a881                	j	2010b0fc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
2010b0ae:	fb842583          	lw	a1,-72(s0)
2010b0b2:	fd042503          	lw	a0,-48(s0)
2010b0b6:	cabff0ef          	jal	2010ad60 <find_closest_config>
2010b0ba:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
2010b0be:	fcc42703          	lw	a4,-52(s0)
2010b0c2:	57fd                	li	a5,-1
2010b0c4:	02f70363          	beq	a4,a5,2010b0ea <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
2010b0c8:	fcc42783          	lw	a5,-52(s0)
2010b0cc:	00579713          	sll	a4,a5,0x5
2010b0d0:	201047b7          	lui	a5,0x20104
2010b0d4:	7e478793          	add	a5,a5,2020 # 201047e4 <pll_configs>
2010b0d8:	97ba                	add	a5,a5,a4
2010b0da:	863e                	mv	a2,a5
2010b0dc:	fd442583          	lw	a1,-44(s0)
2010b0e0:	fd842503          	lw	a0,-40(s0)
2010b0e4:	d27ff0ef          	jal	2010ae0a <configure_pll>
2010b0e8:	a811                	j	2010b0fc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2010b0ea:	fd842783          	lw	a5,-40(s0)
2010b0ee:	4398                	lw	a4,0(a5)
2010b0f0:	000407b7          	lui	a5,0x40
2010b0f4:	8f5d                	or	a4,a4,a5
2010b0f6:	fd842783          	lw	a5,-40(s0)
2010b0fa:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
2010b0fc:	fd842783          	lw	a5,-40(s0)
2010b100:	4398                	lw	a4,0(a5)
2010b102:	67c1                	lui	a5,0x10
2010b104:	8f5d                	or	a4,a4,a5
2010b106:	fd842783          	lw	a5,-40(s0)
2010b10a:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
2010b10c:	fbc42503          	lw	a0,-68(s0)
2010b110:	ad3ff0ef          	jal	2010abe2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
2010b114:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2010b116:	853e                	mv	a0,a5
2010b118:	40b6                	lw	ra,76(sp)
2010b11a:	4426                	lw	s0,72(sp)
2010b11c:	6161                	add	sp,sp,80
2010b11e:	8082                	ret

2010b120 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1229
{
2010b120:	1141                	add	sp,sp,-16
2010b122:	c622                	sw	s0,12(sp)
2010b124:	0800                	add	s0,sp,16
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1230
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2010b126:	100087b7          	lui	a5,0x10008
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1231
}
2010b12a:	853e                	mv	a0,a5
2010b12c:	4432                	lw	s0,12(sp)
2010b12e:	0141                	add	sp,sp,16
2010b130:	8082                	ret

2010b132 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
2010b132:	7179                	add	sp,sp,-48
2010b134:	d606                	sw	ra,44(sp)
2010b136:	d422                	sw	s0,40(sp)
2010b138:	1800                	add	s0,sp,48
2010b13a:	fca42e23          	sw	a0,-36(s0)
2010b13e:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2010b142:	3ff9                	jal	2010b120 <__metal_driver_sifive_fe310_g000_prci_base>
2010b144:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13 (discriminator 1)
2010b146:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
2010b14a:	fd842703          	lw	a4,-40(s0)
2010b14e:	fec42783          	lw	a5,-20(s0)
2010b152:	97ba                	add	a5,a5,a4
2010b154:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2010b156:	853e                	mv	a0,a5
2010b158:	50b2                	lw	ra,44(sp)
2010b15a:	5422                	lw	s0,40(sp)
2010b15c:	6145                	add	sp,sp,48
2010b15e:	8082                	ret

2010b160 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
2010b160:	7179                	add	sp,sp,-48
2010b162:	d606                	sw	ra,44(sp)
2010b164:	d422                	sw	s0,40(sp)
2010b166:	1800                	add	s0,sp,48
2010b168:	fca42e23          	sw	a0,-36(s0)
2010b16c:	fcb42c23          	sw	a1,-40(s0)
2010b170:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2010b174:	3775                	jal	2010b120 <__metal_driver_sifive_fe310_g000_prci_base>
2010b176:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20 (discriminator 1)
2010b178:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
2010b17c:	fd842703          	lw	a4,-40(s0)
2010b180:	fec42783          	lw	a5,-20(s0)
2010b184:	97ba                	add	a5,a5,a4
2010b186:	873e                	mv	a4,a5
2010b188:	fd442783          	lw	a5,-44(s0)
2010b18c:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
2010b18e:	853e                	mv	a0,a5
2010b190:	50b2                	lw	ra,44(sp)
2010b192:	5422                	lw	s0,40(sp)
2010b194:	6145                	add	sp,sp,48
2010b196:	8082                	ret

2010b198 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:480
{
2010b198:	1101                	add	sp,sp,-32
2010b19a:	ce22                	sw	s0,28(sp)
2010b19c:	1000                	add	s0,sp,32
2010b19e:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:481
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2010b1a2:	fec42703          	lw	a4,-20(s0)
2010b1a6:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b1aa:	00f71563          	bne	a4,a5,2010b1b4 <__metal_driver_sifive_gpio0_base+0x1c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:482
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
2010b1ae:	100127b7          	lui	a5,0x10012
2010b1b2:	a011                	j	2010b1b6 <__metal_driver_sifive_gpio0_base+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:485
		return 0;
2010b1b4:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:487
}
2010b1b6:	853e                	mv	a0,a5
2010b1b8:	4472                	lw	s0,28(sp)
2010b1ba:	6105                	add	sp,sp,32
2010b1bc:	8082                	ret

2010b1be <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:510
{
2010b1be:	1101                	add	sp,sp,-32
2010b1c0:	ce22                	sw	s0,28(sp)
2010b1c2:	1000                	add	s0,sp,32
2010b1c4:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:511
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2010b1c8:	fec42703          	lw	a4,-20(s0)
2010b1cc:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b1d0:	00f71763          	bne	a4,a5,2010b1de <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:512
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
2010b1d4:	800007b7          	lui	a5,0x80000
2010b1d8:	45078793          	add	a5,a5,1104 # 80000450 <__metal_dt_interrupt_controller_c000000>
2010b1dc:	a011                	j	2010b1e0 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:515
		return 0;
2010b1de:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:517
}
2010b1e0:	853e                	mv	a0,a5
2010b1e2:	4472                	lw	s0,28(sp)
2010b1e4:	6105                	add	sp,sp,32
2010b1e6:	8082                	ret

2010b1e8 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:520
{
2010b1e8:	1101                	add	sp,sp,-32
2010b1ea:	ce22                	sw	s0,28(sp)
2010b1ec:	1000                	add	s0,sp,32
2010b1ee:	fea42623          	sw	a0,-20(s0)
2010b1f2:	feb42423          	sw	a1,-24(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:521
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2010b1f6:	fec42703          	lw	a4,-20(s0)
2010b1fa:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b1fe:	00f71763          	bne	a4,a5,2010b20c <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
2010b202:	fe842783          	lw	a5,-24(s0)
2010b206:	e399                	bnez	a5,2010b20c <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:522
		return 7;
2010b208:	479d                	li	a5,7
2010b20a:	a269                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
2010b20c:	fec42703          	lw	a4,-20(s0)
2010b210:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b214:	00f71963          	bne	a4,a5,2010b226 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
2010b218:	fe842703          	lw	a4,-24(s0)
2010b21c:	4785                	li	a5,1
2010b21e:	00f71463          	bne	a4,a5,2010b226 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:525
		return 8;
2010b222:	47a1                	li	a5,8
2010b224:	aa85                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2010b226:	fec42703          	lw	a4,-20(s0)
2010b22a:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b22e:	00f71963          	bne	a4,a5,2010b240 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
2010b232:	fe842703          	lw	a4,-24(s0)
2010b236:	4789                	li	a5,2
2010b238:	00f71463          	bne	a4,a5,2010b240 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:528
		return 9;
2010b23c:	47a5                	li	a5,9
2010b23e:	aa99                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2010b240:	fec42703          	lw	a4,-20(s0)
2010b244:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b248:	00f71963          	bne	a4,a5,2010b25a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
2010b24c:	fe842703          	lw	a4,-24(s0)
2010b250:	478d                	li	a5,3
2010b252:	00f71463          	bne	a4,a5,2010b25a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:531
		return 10;
2010b256:	47a9                	li	a5,10
2010b258:	aa35                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
2010b25a:	fec42703          	lw	a4,-20(s0)
2010b25e:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b262:	00f71963          	bne	a4,a5,2010b274 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
2010b266:	fe842703          	lw	a4,-24(s0)
2010b26a:	4791                	li	a5,4
2010b26c:	00f71463          	bne	a4,a5,2010b274 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:534
		return 11;
2010b270:	47ad                	li	a5,11
2010b272:	a20d                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
2010b274:	fec42703          	lw	a4,-20(s0)
2010b278:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b27c:	00f71963          	bne	a4,a5,2010b28e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
2010b280:	fe842703          	lw	a4,-24(s0)
2010b284:	4795                	li	a5,5
2010b286:	00f71463          	bne	a4,a5,2010b28e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:537
		return 12;
2010b28a:	47b1                	li	a5,12
2010b28c:	a221                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2010b28e:	fec42703          	lw	a4,-20(s0)
2010b292:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b296:	00f71963          	bne	a4,a5,2010b2a8 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
2010b29a:	fe842703          	lw	a4,-24(s0)
2010b29e:	4799                	li	a5,6
2010b2a0:	00f71463          	bne	a4,a5,2010b2a8 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:540
		return 13;
2010b2a4:	47b5                	li	a5,13
2010b2a6:	a0fd                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
2010b2a8:	fec42703          	lw	a4,-20(s0)
2010b2ac:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b2b0:	00f71963          	bne	a4,a5,2010b2c2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
2010b2b4:	fe842703          	lw	a4,-24(s0)
2010b2b8:	479d                	li	a5,7
2010b2ba:	00f71463          	bne	a4,a5,2010b2c2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:543
		return 14;
2010b2be:	47b9                	li	a5,14
2010b2c0:	a8d1                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
2010b2c2:	fec42703          	lw	a4,-20(s0)
2010b2c6:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b2ca:	00f71963          	bne	a4,a5,2010b2dc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
2010b2ce:	fe842703          	lw	a4,-24(s0)
2010b2d2:	47a1                	li	a5,8
2010b2d4:	00f71463          	bne	a4,a5,2010b2dc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:546
		return 15;
2010b2d8:	47bd                	li	a5,15
2010b2da:	a86d                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
2010b2dc:	fec42703          	lw	a4,-20(s0)
2010b2e0:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b2e4:	00f71963          	bne	a4,a5,2010b2f6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
2010b2e8:	fe842703          	lw	a4,-24(s0)
2010b2ec:	47a5                	li	a5,9
2010b2ee:	00f71463          	bne	a4,a5,2010b2f6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:549
		return 16;
2010b2f2:	47c1                	li	a5,16
2010b2f4:	a045                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2010b2f6:	fec42703          	lw	a4,-20(s0)
2010b2fa:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b2fe:	00f71963          	bne	a4,a5,2010b310 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
2010b302:	fe842703          	lw	a4,-24(s0)
2010b306:	47a9                	li	a5,10
2010b308:	00f71463          	bne	a4,a5,2010b310 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:552
		return 17;
2010b30c:	47c5                	li	a5,17
2010b30e:	a059                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2010b310:	fec42703          	lw	a4,-20(s0)
2010b314:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b318:	00f71963          	bne	a4,a5,2010b32a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
2010b31c:	fe842703          	lw	a4,-24(s0)
2010b320:	47ad                	li	a5,11
2010b322:	00f71463          	bne	a4,a5,2010b32a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:555
		return 18;
2010b326:	47c9                	li	a5,18
2010b328:	a0b5                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
2010b32a:	fec42703          	lw	a4,-20(s0)
2010b32e:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b332:	00f71963          	bne	a4,a5,2010b344 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
2010b336:	fe842703          	lw	a4,-24(s0)
2010b33a:	47b1                	li	a5,12
2010b33c:	00f71463          	bne	a4,a5,2010b344 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:558
		return 19;
2010b340:	47cd                	li	a5,19
2010b342:	a889                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
2010b344:	fec42703          	lw	a4,-20(s0)
2010b348:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b34c:	00f71963          	bne	a4,a5,2010b35e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
2010b350:	fe842703          	lw	a4,-24(s0)
2010b354:	47b5                	li	a5,13
2010b356:	00f71463          	bne	a4,a5,2010b35e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:561
		return 20;
2010b35a:	47d1                	li	a5,20
2010b35c:	a825                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:563
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2010b35e:	fec42703          	lw	a4,-20(s0)
2010b362:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b366:	00f71963          	bne	a4,a5,2010b378 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:563 (discriminator 1)
2010b36a:	fe842703          	lw	a4,-24(s0)
2010b36e:	47b9                	li	a5,14
2010b370:	00f71463          	bne	a4,a5,2010b378 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:564
		return 21;
2010b374:	47d5                	li	a5,21
2010b376:	a839                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:566
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
2010b378:	fec42703          	lw	a4,-20(s0)
2010b37c:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010b380:	00f71963          	bne	a4,a5,2010b392 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:566 (discriminator 1)
2010b384:	fe842703          	lw	a4,-24(s0)
2010b388:	47bd                	li	a5,15
2010b38a:	00f71463          	bne	a4,a5,2010b392 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:567
		return 22;
2010b38e:	47d9                	li	a5,22
2010b390:	a011                	j	2010b394 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:570
		return 0;
2010b392:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:572
}
2010b394:	853e                	mv	a0,a5
2010b396:	4472                	lw	s0,28(sp)
2010b398:	6105                	add	sp,sp,32
2010b39a:	8082                	ret

2010b39c <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
2010b39c:	7179                	add	sp,sp,-48
2010b39e:	d606                	sw	ra,44(sp)
2010b3a0:	d422                	sw	s0,40(sp)
2010b3a2:	1800                	add	s0,sp,48
2010b3a4:	fca42e23          	sw	a0,-36(s0)
2010b3a8:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b3ac:	fdc42503          	lw	a0,-36(s0)
2010b3b0:	de9ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b3b4:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:14 (discriminator 1)
2010b3b6:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:16

    __METAL_ACCESS_ONCE(
2010b3ba:	fec42783          	lw	a5,-20(s0)
2010b3be:	0791                	add	a5,a5,4
2010b3c0:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:17
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2010b3c2:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:16
    __METAL_ACCESS_ONCE(
2010b3c6:	fec42683          	lw	a3,-20(s0)
2010b3ca:	0691                	add	a3,a3,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:17
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2010b3cc:	8fd9                	or	a5,a5,a4
2010b3ce:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
2010b3d0:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:20
}
2010b3d2:	853e                	mv	a0,a5
2010b3d4:	50b2                	lw	ra,44(sp)
2010b3d6:	5422                	lw	s0,40(sp)
2010b3d8:	6145                	add	sp,sp,48
2010b3da:	8082                	ret

2010b3dc <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
2010b3dc:	7179                	add	sp,sp,-48
2010b3de:	d606                	sw	ra,44(sp)
2010b3e0:	d422                	sw	s0,40(sp)
2010b3e2:	1800                	add	s0,sp,48
2010b3e4:	fca42e23          	sw	a0,-36(s0)
2010b3e8:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b3ec:	fdc42503          	lw	a0,-36(s0)
2010b3f0:	da9ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b3f4:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:24 (discriminator 1)
2010b3f6:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:26

    __METAL_ACCESS_ONCE(
2010b3fa:	fec42783          	lw	a5,-20(s0)
2010b3fe:	0791                	add	a5,a5,4
2010b400:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:27
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
2010b402:	fd842703          	lw	a4,-40(s0)
2010b406:	fff74713          	not	a4,a4
2010b40a:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:26
    __METAL_ACCESS_ONCE(
2010b40c:	fec42703          	lw	a4,-20(s0)
2010b410:	0711                	add	a4,a4,4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:27
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
2010b412:	8ff5                	and	a5,a5,a3
2010b414:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
2010b416:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:30
}
2010b418:	853e                	mv	a0,a5
2010b41a:	50b2                	lw	ra,44(sp)
2010b41c:	5422                	lw	s0,40(sp)
2010b41e:	6145                	add	sp,sp,48
2010b420:	8082                	ret

2010b422 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
2010b422:	7179                	add	sp,sp,-48
2010b424:	d606                	sw	ra,44(sp)
2010b426:	d422                	sw	s0,40(sp)
2010b428:	1800                	add	s0,sp,48
2010b42a:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b42e:	fdc42503          	lw	a0,-36(s0)
2010b432:	d67ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b436:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:33 (discriminator 1)
2010b438:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
2010b43c:	fec42783          	lw	a5,-20(s0)
2010b440:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
2010b442:	853e                	mv	a0,a5
2010b444:	50b2                	lw	ra,44(sp)
2010b446:	5422                	lw	s0,40(sp)
2010b448:	6145                	add	sp,sp,48
2010b44a:	8082                	ret

2010b44c <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
2010b44c:	7179                	add	sp,sp,-48
2010b44e:	d606                	sw	ra,44(sp)
2010b450:	d422                	sw	s0,40(sp)
2010b452:	1800                	add	s0,sp,48
2010b454:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b458:	fdc42503          	lw	a0,-36(s0)
2010b45c:	d3dff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b460:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:40 (discriminator 1)
2010b462:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
2010b466:	fec42783          	lw	a5,-20(s0)
2010b46a:	07b1                	add	a5,a5,12
2010b46c:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
2010b46e:	853e                	mv	a0,a5
2010b470:	50b2                	lw	ra,44(sp)
2010b472:	5422                	lw	s0,40(sp)
2010b474:	6145                	add	sp,sp,48
2010b476:	8082                	ret

2010b478 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
2010b478:	7179                	add	sp,sp,-48
2010b47a:	d606                	sw	ra,44(sp)
2010b47c:	d422                	sw	s0,40(sp)
2010b47e:	1800                	add	s0,sp,48
2010b480:	fca42e23          	sw	a0,-36(s0)
2010b484:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b488:	fdc42503          	lw	a0,-36(s0)
2010b48c:	d0dff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b490:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:48 (discriminator 1)
2010b492:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:50

    __METAL_ACCESS_ONCE(
2010b496:	fec42783          	lw	a5,-20(s0)
2010b49a:	07a1                	add	a5,a5,8
2010b49c:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:51
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
2010b49e:	fd842703          	lw	a4,-40(s0)
2010b4a2:	fff74713          	not	a4,a4
2010b4a6:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:50
    __METAL_ACCESS_ONCE(
2010b4a8:	fec42703          	lw	a4,-20(s0)
2010b4ac:	0721                	add	a4,a4,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:51
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
2010b4ae:	8ff5                	and	a5,a5,a3
2010b4b0:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
2010b4b2:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:54
}
2010b4b4:	853e                	mv	a0,a5
2010b4b6:	50b2                	lw	ra,44(sp)
2010b4b8:	5422                	lw	s0,40(sp)
2010b4ba:	6145                	add	sp,sp,48
2010b4bc:	8082                	ret

2010b4be <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2010b4be:	7179                	add	sp,sp,-48
2010b4c0:	d606                	sw	ra,44(sp)
2010b4c2:	d422                	sw	s0,40(sp)
2010b4c4:	1800                	add	s0,sp,48
2010b4c6:	fca42e23          	sw	a0,-36(s0)
2010b4ca:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b4ce:	fdc42503          	lw	a0,-36(s0)
2010b4d2:	cc7ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b4d6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:58 (discriminator 1)
2010b4d8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:60

    __METAL_ACCESS_ONCE(
2010b4dc:	fec42783          	lw	a5,-20(s0)
2010b4e0:	07a1                	add	a5,a5,8
2010b4e2:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:61
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
2010b4e4:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:60
    __METAL_ACCESS_ONCE(
2010b4e8:	fec42683          	lw	a3,-20(s0)
2010b4ec:	06a1                	add	a3,a3,8
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:61
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
2010b4ee:	8fd9                	or	a5,a5,a4
2010b4f0:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
2010b4f2:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:64
}
2010b4f4:	853e                	mv	a0,a5
2010b4f6:	50b2                	lw	ra,44(sp)
2010b4f8:	5422                	lw	s0,40(sp)
2010b4fa:	6145                	add	sp,sp,48
2010b4fc:	8082                	ret

2010b4fe <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
2010b4fe:	7179                	add	sp,sp,-48
2010b500:	d606                	sw	ra,44(sp)
2010b502:	d422                	sw	s0,40(sp)
2010b504:	1800                	add	s0,sp,48
2010b506:	fca42e23          	sw	a0,-36(s0)
2010b50a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b50e:	fdc42503          	lw	a0,-36(s0)
2010b512:	c87ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b516:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:68 (discriminator 1)
2010b518:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
2010b51c:	fec42783          	lw	a5,-20(s0)
2010b520:	07b1                	add	a5,a5,12
2010b522:	4398                	lw	a4,0(a5)
2010b524:	fd842783          	lw	a5,-40(s0)
2010b528:	fec42683          	lw	a3,-20(s0)
2010b52c:	06b1                	add	a3,a3,12
2010b52e:	8fd9                	or	a5,a5,a4
2010b530:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
2010b532:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:74
}
2010b534:	853e                	mv	a0,a5
2010b536:	50b2                	lw	ra,44(sp)
2010b538:	5422                	lw	s0,40(sp)
2010b53a:	6145                	add	sp,sp,48
2010b53c:	8082                	ret

2010b53e <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
2010b53e:	7179                	add	sp,sp,-48
2010b540:	d606                	sw	ra,44(sp)
2010b542:	d422                	sw	s0,40(sp)
2010b544:	1800                	add	s0,sp,48
2010b546:	fca42e23          	sw	a0,-36(s0)
2010b54a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b54e:	fdc42503          	lw	a0,-36(s0)
2010b552:	c47ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b556:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:78 (discriminator 1)
2010b558:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2010b55c:	fec42783          	lw	a5,-20(s0)
2010b560:	07b1                	add	a5,a5,12
2010b562:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
2010b564:	fd842703          	lw	a4,-40(s0)
2010b568:	fff74713          	not	a4,a4
2010b56c:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2010b56e:	fec42703          	lw	a4,-20(s0)
2010b572:	0731                	add	a4,a4,12
2010b574:	8ff5                	and	a5,a5,a3
2010b576:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
2010b578:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:84
}
2010b57a:	853e                	mv	a0,a5
2010b57c:	50b2                	lw	ra,44(sp)
2010b57e:	5422                	lw	s0,40(sp)
2010b580:	6145                	add	sp,sp,48
2010b582:	8082                	ret

2010b584 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
2010b584:	7179                	add	sp,sp,-48
2010b586:	d606                	sw	ra,44(sp)
2010b588:	d422                	sw	s0,40(sp)
2010b58a:	1800                	add	s0,sp,48
2010b58c:	fca42e23          	sw	a0,-36(s0)
2010b590:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b594:	fdc42503          	lw	a0,-36(s0)
2010b598:	c01ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b59c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:88 (discriminator 1)
2010b59e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
2010b5a2:	fec42783          	lw	a5,-20(s0)
2010b5a6:	07b1                	add	a5,a5,12
2010b5a8:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2010b5aa:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2010b5ae:	fec42683          	lw	a3,-20(s0)
2010b5b2:	06b1                	add	a3,a3,12
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2010b5b4:	8fb9                	xor	a5,a5,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2010b5b6:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
2010b5b8:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2010b5ba:	853e                	mv	a0,a5
2010b5bc:	50b2                	lw	ra,44(sp)
2010b5be:	5422                	lw	s0,40(sp)
2010b5c0:	6145                	add	sp,sp,48
2010b5c2:	8082                	ret

2010b5c4 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
2010b5c4:	7179                	add	sp,sp,-48
2010b5c6:	d606                	sw	ra,44(sp)
2010b5c8:	d422                	sw	s0,40(sp)
2010b5ca:	1800                	add	s0,sp,48
2010b5cc:	fca42e23          	sw	a0,-36(s0)
2010b5d0:	fcb42c23          	sw	a1,-40(s0)
2010b5d4:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b5d8:	fdc42503          	lw	a0,-36(s0)
2010b5dc:	bbdff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b5e0:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:100 (discriminator 1)
2010b5e2:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:102

    __METAL_ACCESS_ONCE(
2010b5e6:	fec42783          	lw	a5,-20(s0)
2010b5ea:	03c78793          	add	a5,a5,60
2010b5ee:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:103
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
2010b5f0:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:102
    __METAL_ACCESS_ONCE(
2010b5f4:	fec42683          	lw	a3,-20(s0)
2010b5f8:	03c68693          	add	a3,a3,60
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:103
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
2010b5fc:	8fd9                	or	a5,a5,a4
2010b5fe:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
2010b600:	fec42783          	lw	a5,-20(s0)
2010b604:	03878793          	add	a5,a5,56
2010b608:	4398                	lw	a4,0(a5)
2010b60a:	fd442783          	lw	a5,-44(s0)
2010b60e:	fec42683          	lw	a3,-20(s0)
2010b612:	03868693          	add	a3,a3,56
2010b616:	8fd9                	or	a5,a5,a4
2010b618:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
2010b61a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:108
}
2010b61c:	853e                	mv	a0,a5
2010b61e:	50b2                	lw	ra,44(sp)
2010b620:	5422                	lw	s0,40(sp)
2010b622:	6145                	add	sp,sp,48
2010b624:	8082                	ret

2010b626 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2010b626:	7179                	add	sp,sp,-48
2010b628:	d606                	sw	ra,44(sp)
2010b62a:	d422                	sw	s0,40(sp)
2010b62c:	1800                	add	s0,sp,48
2010b62e:	fca42e23          	sw	a0,-36(s0)
2010b632:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b636:	fdc42503          	lw	a0,-36(s0)
2010b63a:	b5fff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b63e:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:112 (discriminator 1)
2010b640:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2010b644:	fec42783          	lw	a5,-20(s0)
2010b648:	03878793          	add	a5,a5,56
2010b64c:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
2010b64e:	fd842703          	lw	a4,-40(s0)
2010b652:	fff74713          	not	a4,a4
2010b656:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2010b658:	fec42703          	lw	a4,-20(s0)
2010b65c:	03870713          	add	a4,a4,56
2010b660:	8ff5                	and	a5,a5,a3
2010b662:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
2010b664:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:118
}
2010b666:	853e                	mv	a0,a5
2010b668:	50b2                	lw	ra,44(sp)
2010b66a:	5422                	lw	s0,40(sp)
2010b66c:	6145                	add	sp,sp,48
2010b66e:	8082                	ret

2010b670 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
2010b670:	7179                	add	sp,sp,-48
2010b672:	d606                	sw	ra,44(sp)
2010b674:	d422                	sw	s0,40(sp)
2010b676:	1800                	add	s0,sp,48
2010b678:	fca42e23          	sw	a0,-36(s0)
2010b67c:	fcb42c23          	sw	a1,-40(s0)
2010b680:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b684:	fdc42503          	lw	a0,-36(s0)
2010b688:	b11ff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b68c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:122 (discriminator 1)
2010b68e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
2010b692:	fd442703          	lw	a4,-44(s0)
2010b696:	479d                	li	a5,7
2010b698:	1ce7e963          	bltu	a5,a4,2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
2010b69c:	fd442783          	lw	a5,-44(s0)
2010b6a0:	00279713          	sll	a4,a5,0x2
2010b6a4:	201057b7          	lui	a5,0x20105
2010b6a8:	07078793          	add	a5,a5,112 # 20105070 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2010b6ac:	97ba                	add	a5,a5,a4
2010b6ae:	439c                	lw	a5,0(a5)
2010b6b0:	8782                	jr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:126
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
2010b6b2:	fec42783          	lw	a5,-20(s0)
2010b6b6:	07e1                	add	a5,a5,24
2010b6b8:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:127
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
2010b6ba:	fd842703          	lw	a4,-40(s0)
2010b6be:	fff74713          	not	a4,a4
2010b6c2:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:126
        __METAL_ACCESS_ONCE(
2010b6c4:	fec42703          	lw	a4,-20(s0)
2010b6c8:	0761                	add	a4,a4,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:127
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
2010b6ca:	8ff5                	and	a5,a5,a3
2010b6cc:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:128
        __METAL_ACCESS_ONCE(
2010b6ce:	fec42783          	lw	a5,-20(s0)
2010b6d2:	02078793          	add	a5,a5,32
2010b6d6:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:129
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
2010b6d8:	fd842703          	lw	a4,-40(s0)
2010b6dc:	fff74713          	not	a4,a4
2010b6e0:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:128
        __METAL_ACCESS_ONCE(
2010b6e2:	fec42703          	lw	a4,-20(s0)
2010b6e6:	02070713          	add	a4,a4,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:129
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
2010b6ea:	8ff5                	and	a5,a5,a3
2010b6ec:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:130
        __METAL_ACCESS_ONCE(
2010b6ee:	fec42783          	lw	a5,-20(s0)
2010b6f2:	02878793          	add	a5,a5,40
2010b6f6:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:131
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
2010b6f8:	fd842703          	lw	a4,-40(s0)
2010b6fc:	fff74713          	not	a4,a4
2010b700:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:130
        __METAL_ACCESS_ONCE(
2010b702:	fec42703          	lw	a4,-20(s0)
2010b706:	02870713          	add	a4,a4,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:131
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
2010b70a:	8ff5                	and	a5,a5,a3
2010b70c:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:132
        __METAL_ACCESS_ONCE(
2010b70e:	fec42783          	lw	a5,-20(s0)
2010b712:	03078793          	add	a5,a5,48
2010b716:	439c                	lw	a5,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:133
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
2010b718:	fd842703          	lw	a4,-40(s0)
2010b71c:	fff74713          	not	a4,a4
2010b720:	86ba                	mv	a3,a4
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:132
        __METAL_ACCESS_ONCE(
2010b722:	fec42703          	lw	a4,-20(s0)
2010b726:	03070713          	add	a4,a4,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:133
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
2010b72a:	8ff5                	and	a5,a5,a3
2010b72c:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
2010b72e:	aa35                	j	2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:136
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
2010b730:	fec42783          	lw	a5,-20(s0)
2010b734:	07e1                	add	a5,a5,24
2010b736:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:137
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010b738:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:136
        __METAL_ACCESS_ONCE(
2010b73c:	fec42683          	lw	a3,-20(s0)
2010b740:	06e1                	add	a3,a3,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:137
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010b742:	8fd9                	or	a5,a5,a4
2010b744:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
2010b746:	a215                	j	2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:140
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
2010b748:	fec42783          	lw	a5,-20(s0)
2010b74c:	02078793          	add	a5,a5,32
2010b750:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:141
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010b752:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:140
        __METAL_ACCESS_ONCE(
2010b756:	fec42683          	lw	a3,-20(s0)
2010b75a:	02068693          	add	a3,a3,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:141
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010b75e:	8fd9                	or	a5,a5,a4
2010b760:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
2010b762:	a221                	j	2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:144
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
2010b764:	fec42783          	lw	a5,-20(s0)
2010b768:	07e1                	add	a5,a5,24
2010b76a:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:145
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010b76c:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:144
        __METAL_ACCESS_ONCE(
2010b770:	fec42683          	lw	a3,-20(s0)
2010b774:	06e1                	add	a3,a3,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:145
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010b776:	8fd9                	or	a5,a5,a4
2010b778:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:146
        __METAL_ACCESS_ONCE(
2010b77a:	fec42783          	lw	a5,-20(s0)
2010b77e:	02078793          	add	a5,a5,32
2010b782:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:147
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010b784:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:146
        __METAL_ACCESS_ONCE(
2010b788:	fec42683          	lw	a3,-20(s0)
2010b78c:	02068693          	add	a3,a3,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:147
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010b790:	8fd9                	or	a5,a5,a4
2010b792:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
2010b794:	a8d9                	j	2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:150
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
2010b796:	fec42783          	lw	a5,-20(s0)
2010b79a:	02878793          	add	a5,a5,40
2010b79e:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:151
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010b7a0:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:150
        __METAL_ACCESS_ONCE(
2010b7a4:	fec42683          	lw	a3,-20(s0)
2010b7a8:	02868693          	add	a3,a3,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:151
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010b7ac:	8fd9                	or	a5,a5,a4
2010b7ae:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
2010b7b0:	a86d                	j	2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:154
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
2010b7b2:	fec42783          	lw	a5,-20(s0)
2010b7b6:	03078793          	add	a5,a5,48
2010b7ba:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:155
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010b7bc:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:154
        __METAL_ACCESS_ONCE(
2010b7c0:	fec42683          	lw	a3,-20(s0)
2010b7c4:	03068693          	add	a3,a3,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:155
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010b7c8:	8fd9                	or	a5,a5,a4
2010b7ca:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
2010b7cc:	a879                	j	2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:158
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
2010b7ce:	fec42783          	lw	a5,-20(s0)
2010b7d2:	02878793          	add	a5,a5,40
2010b7d6:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:159
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010b7d8:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:158
        __METAL_ACCESS_ONCE(
2010b7dc:	fec42683          	lw	a3,-20(s0)
2010b7e0:	02868693          	add	a3,a3,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:159
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010b7e4:	8fd9                	or	a5,a5,a4
2010b7e6:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:160
        __METAL_ACCESS_ONCE(
2010b7e8:	fec42783          	lw	a5,-20(s0)
2010b7ec:	03078793          	add	a5,a5,48
2010b7f0:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:161
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010b7f2:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:160
        __METAL_ACCESS_ONCE(
2010b7f6:	fec42683          	lw	a3,-20(s0)
2010b7fa:	03068693          	add	a3,a3,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:161
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010b7fe:	8fd9                	or	a5,a5,a4
2010b800:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
2010b802:	a0a5                	j	2010b86a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:164
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
2010b804:	fec42783          	lw	a5,-20(s0)
2010b808:	07e1                	add	a5,a5,24
2010b80a:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:165
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010b80c:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:164
        __METAL_ACCESS_ONCE(
2010b810:	fec42683          	lw	a3,-20(s0)
2010b814:	06e1                	add	a3,a3,24
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:165
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2010b816:	8fd9                	or	a5,a5,a4
2010b818:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:166
        __METAL_ACCESS_ONCE(
2010b81a:	fec42783          	lw	a5,-20(s0)
2010b81e:	02078793          	add	a5,a5,32
2010b822:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:167
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010b824:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:166
        __METAL_ACCESS_ONCE(
2010b828:	fec42683          	lw	a3,-20(s0)
2010b82c:	02068693          	add	a3,a3,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:167
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2010b830:	8fd9                	or	a5,a5,a4
2010b832:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:168
        __METAL_ACCESS_ONCE(
2010b834:	fec42783          	lw	a5,-20(s0)
2010b838:	02878793          	add	a5,a5,40
2010b83c:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:169
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010b83e:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:168
        __METAL_ACCESS_ONCE(
2010b842:	fec42683          	lw	a3,-20(s0)
2010b846:	02868693          	add	a3,a3,40
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:169
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2010b84a:	8fd9                	or	a5,a5,a4
2010b84c:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:170
        __METAL_ACCESS_ONCE(
2010b84e:	fec42783          	lw	a5,-20(s0)
2010b852:	03078793          	add	a5,a5,48
2010b856:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:171
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010b858:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:170
        __METAL_ACCESS_ONCE(
2010b85c:	fec42683          	lw	a3,-20(s0)
2010b860:	03068693          	add	a3,a3,48
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:171
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2010b864:	8fd9                	or	a5,a5,a4
2010b866:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
2010b868:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
2010b86a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:175
}
2010b86c:	853e                	mv	a0,a5
2010b86e:	50b2                	lw	ra,44(sp)
2010b870:	5422                	lw	s0,40(sp)
2010b872:	6145                	add	sp,sp,48
2010b874:	8082                	ret

2010b876 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
2010b876:	7179                	add	sp,sp,-48
2010b878:	d606                	sw	ra,44(sp)
2010b87a:	d422                	sw	s0,40(sp)
2010b87c:	1800                	add	s0,sp,48
2010b87e:	fca42e23          	sw	a0,-36(s0)
2010b882:	fcb42c23          	sw	a1,-40(s0)
2010b886:	fcc42a23          	sw	a2,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2010b88a:	fdc42503          	lw	a0,-36(s0)
2010b88e:	90bff0ef          	jal	2010b198 <__metal_driver_sifive_gpio0_base>
2010b892:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:179 (discriminator 1)
2010b894:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
2010b898:	fd442703          	lw	a4,-44(s0)
2010b89c:	479d                	li	a5,7
2010b89e:	14e7ea63          	bltu	a5,a4,2010b9f2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
2010b8a2:	fd442783          	lw	a5,-44(s0)
2010b8a6:	00279713          	sll	a4,a5,0x2
2010b8aa:	201057b7          	lui	a5,0x20105
2010b8ae:	09078793          	add	a5,a5,144 # 20105090 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
2010b8b2:	97ba                	add	a5,a5,a4
2010b8b4:	439c                	lw	a5,0(a5)
2010b8b6:	8782                	jr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:183
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
2010b8b8:	fec42783          	lw	a5,-20(s0)
2010b8bc:	07f1                	add	a5,a5,28
2010b8be:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:184
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010b8c0:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:183
        __METAL_ACCESS_ONCE(
2010b8c4:	fec42683          	lw	a3,-20(s0)
2010b8c8:	06f1                	add	a3,a3,28
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:184
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010b8ca:	8fd9                	or	a5,a5,a4
2010b8cc:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
2010b8ce:	a215                	j	2010b9f2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:187
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
2010b8d0:	fec42783          	lw	a5,-20(s0)
2010b8d4:	02478793          	add	a5,a5,36
2010b8d8:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:188
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010b8da:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:187
        __METAL_ACCESS_ONCE(
2010b8de:	fec42683          	lw	a3,-20(s0)
2010b8e2:	02468693          	add	a3,a3,36
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:188
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010b8e6:	8fd9                	or	a5,a5,a4
2010b8e8:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
2010b8ea:	a221                	j	2010b9f2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:191
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
2010b8ec:	fec42783          	lw	a5,-20(s0)
2010b8f0:	07f1                	add	a5,a5,28
2010b8f2:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:192
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010b8f4:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:191
        __METAL_ACCESS_ONCE(
2010b8f8:	fec42683          	lw	a3,-20(s0)
2010b8fc:	06f1                	add	a3,a3,28
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:192
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010b8fe:	8fd9                	or	a5,a5,a4
2010b900:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:193
        __METAL_ACCESS_ONCE(
2010b902:	fec42783          	lw	a5,-20(s0)
2010b906:	02478793          	add	a5,a5,36
2010b90a:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:194
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010b90c:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:193
        __METAL_ACCESS_ONCE(
2010b910:	fec42683          	lw	a3,-20(s0)
2010b914:	02468693          	add	a3,a3,36
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:194
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010b918:	8fd9                	or	a5,a5,a4
2010b91a:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
2010b91c:	a8d9                	j	2010b9f2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:197
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
2010b91e:	fec42783          	lw	a5,-20(s0)
2010b922:	02c78793          	add	a5,a5,44
2010b926:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:198
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010b928:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:197
        __METAL_ACCESS_ONCE(
2010b92c:	fec42683          	lw	a3,-20(s0)
2010b930:	02c68693          	add	a3,a3,44
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:198
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010b934:	8fd9                	or	a5,a5,a4
2010b936:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
2010b938:	a86d                	j	2010b9f2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:201
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
2010b93a:	fec42783          	lw	a5,-20(s0)
2010b93e:	03478793          	add	a5,a5,52
2010b942:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:202
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010b944:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:201
        __METAL_ACCESS_ONCE(
2010b948:	fec42683          	lw	a3,-20(s0)
2010b94c:	03468693          	add	a3,a3,52
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:202
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010b950:	8fd9                	or	a5,a5,a4
2010b952:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
2010b954:	a879                	j	2010b9f2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:205
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
2010b956:	fec42783          	lw	a5,-20(s0)
2010b95a:	02c78793          	add	a5,a5,44
2010b95e:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:206
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010b960:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:205
        __METAL_ACCESS_ONCE(
2010b964:	fec42683          	lw	a3,-20(s0)
2010b968:	02c68693          	add	a3,a3,44
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:206
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010b96c:	8fd9                	or	a5,a5,a4
2010b96e:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:207
        __METAL_ACCESS_ONCE(
2010b970:	fec42783          	lw	a5,-20(s0)
2010b974:	03478793          	add	a5,a5,52
2010b978:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:208
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010b97a:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:207
        __METAL_ACCESS_ONCE(
2010b97e:	fec42683          	lw	a3,-20(s0)
2010b982:	03468693          	add	a3,a3,52
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:208
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010b986:	8fd9                	or	a5,a5,a4
2010b988:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2010b98a:	a0a5                	j	2010b9f2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:211
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
2010b98c:	fec42783          	lw	a5,-20(s0)
2010b990:	07f1                	add	a5,a5,28
2010b992:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:212
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010b994:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:211
        __METAL_ACCESS_ONCE(
2010b998:	fec42683          	lw	a3,-20(s0)
2010b99c:	06f1                	add	a3,a3,28
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:212
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2010b99e:	8fd9                	or	a5,a5,a4
2010b9a0:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:213
        __METAL_ACCESS_ONCE(
2010b9a2:	fec42783          	lw	a5,-20(s0)
2010b9a6:	02478793          	add	a5,a5,36
2010b9aa:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:214
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010b9ac:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:213
        __METAL_ACCESS_ONCE(
2010b9b0:	fec42683          	lw	a3,-20(s0)
2010b9b4:	02468693          	add	a3,a3,36
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:214
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2010b9b8:	8fd9                	or	a5,a5,a4
2010b9ba:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:215
        __METAL_ACCESS_ONCE(
2010b9bc:	fec42783          	lw	a5,-20(s0)
2010b9c0:	02c78793          	add	a5,a5,44
2010b9c4:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:216
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010b9c6:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:215
        __METAL_ACCESS_ONCE(
2010b9ca:	fec42683          	lw	a3,-20(s0)
2010b9ce:	02c68693          	add	a3,a3,44
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:216
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2010b9d2:	8fd9                	or	a5,a5,a4
2010b9d4:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:217
        __METAL_ACCESS_ONCE(
2010b9d6:	fec42783          	lw	a5,-20(s0)
2010b9da:	03478793          	add	a5,a5,52
2010b9de:	4398                	lw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:218
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010b9e0:	fd842783          	lw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:217
        __METAL_ACCESS_ONCE(
2010b9e4:	fec42683          	lw	a3,-20(s0)
2010b9e8:	03468693          	add	a3,a3,52
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:218
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2010b9ec:	8fd9                	or	a5,a5,a4
2010b9ee:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
2010b9f0:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
2010b9f2:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:222
}
2010b9f4:	853e                	mv	a0,a5
2010b9f6:	50b2                	lw	ra,44(sp)
2010b9f8:	5422                	lw	s0,40(sp)
2010b9fa:	6145                	add	sp,sp,48
2010b9fc:	8082                	ret

2010b9fe <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
2010b9fe:	1101                	add	sp,sp,-32
2010ba00:	ce06                	sw	ra,28(sp)
2010ba02:	cc22                	sw	s0,24(sp)
2010ba04:	1000                	add	s0,sp,32
2010ba06:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
2010ba0a:	fec42503          	lw	a0,-20(s0)
2010ba0e:	fb0ff0ef          	jal	2010b1be <__metal_driver_sifive_gpio0_interrupt_parent>
2010ba12:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:227
}
2010ba14:	853e                	mv	a0,a5
2010ba16:	40f2                	lw	ra,28(sp)
2010ba18:	4462                	lw	s0,24(sp)
2010ba1a:	6105                	add	sp,sp,32
2010ba1c:	8082                	ret

2010ba1e <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
2010ba1e:	7179                	add	sp,sp,-48
2010ba20:	d606                	sw	ra,44(sp)
2010ba22:	d422                	sw	s0,40(sp)
2010ba24:	1800                	add	s0,sp,48
2010ba26:	fca42e23          	sw	a0,-36(s0)
2010ba2a:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
2010ba2e:	fd842583          	lw	a1,-40(s0)
2010ba32:	fdc42503          	lw	a0,-36(s0)
2010ba36:	fb2ff0ef          	jal	2010b1e8 <__metal_driver_sifive_gpio0_interrupt_lines>
2010ba3a:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
2010ba3e:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_gpio0.c:233
}
2010ba42:	853e                	mv	a0,a5
2010ba44:	50b2                	lw	ra,44(sp)
2010ba46:	5422                	lw	s0,40(sp)
2010ba48:	6145                	add	sp,sp,48
2010ba4a:	8082                	ret

2010ba4c <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:958
{
2010ba4c:	1101                	add	sp,sp,-32
2010ba4e:	ce22                	sw	s0,28(sp)
2010ba50:	1000                	add	s0,sp,32
2010ba52:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010ba56:	fec42703          	lw	a4,-20(s0)
2010ba5a:	800017b7          	lui	a5,0x80001
2010ba5e:	a2878793          	add	a5,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
2010ba62:	00f71563          	bne	a4,a5,2010ba6c <__metal_driver_sifive_uart0_control_base+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:960
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
2010ba66:	100137b7          	lui	a5,0x10013
2010ba6a:	a011                	j	2010ba6e <__metal_driver_sifive_uart0_control_base+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:963
		return 0;
2010ba6c:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:965
}
2010ba6e:	853e                	mv	a0,a5
2010ba70:	4472                	lw	s0,28(sp)
2010ba72:	6105                	add	sp,sp,32
2010ba74:	8082                	ret

2010ba76 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:988
{
2010ba76:	1101                	add	sp,sp,-32
2010ba78:	ce22                	sw	s0,28(sp)
2010ba7a:	1000                	add	s0,sp,32
2010ba7c:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:989
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010ba80:	fec42703          	lw	a4,-20(s0)
2010ba84:	800017b7          	lui	a5,0x80001
2010ba88:	a2878793          	add	a5,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
2010ba8c:	00f71763          	bne	a4,a5,2010ba9a <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:990
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
2010ba90:	800007b7          	lui	a5,0x80000
2010ba94:	45078793          	add	a5,a5,1104 # 80000450 <__metal_dt_interrupt_controller_c000000>
2010ba98:	a011                	j	2010ba9c <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:993
		return 0;
2010ba9a:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:995
}
2010ba9c:	853e                	mv	a0,a5
2010ba9e:	4472                	lw	s0,28(sp)
2010baa0:	6105                	add	sp,sp,32
2010baa2:	8082                	ret

2010baa4 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:998
{
2010baa4:	1101                	add	sp,sp,-32
2010baa6:	ce22                	sw	s0,28(sp)
2010baa8:	1000                	add	s0,sp,32
2010baaa:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:999
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010baae:	fec42703          	lw	a4,-20(s0)
2010bab2:	800017b7          	lui	a5,0x80001
2010bab6:	a2878793          	add	a5,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
2010baba:	00f71463          	bne	a4,a5,2010bac2 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1000
		return 5;
2010babe:	4795                	li	a5,5
2010bac0:	a011                	j	2010bac4 <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1003
		return 0;
2010bac2:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1005
}
2010bac4:	853e                	mv	a0,a5
2010bac6:	4472                	lw	s0,28(sp)
2010bac8:	6105                	add	sp,sp,32
2010baca:	8082                	ret

2010bacc <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1008
{
2010bacc:	1101                	add	sp,sp,-32
2010bace:	ce22                	sw	s0,28(sp)
2010bad0:	1000                	add	s0,sp,32
2010bad2:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1009
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010bad6:	fec42703          	lw	a4,-20(s0)
2010bada:	800017b7          	lui	a5,0x80001
2010bade:	a2878793          	add	a5,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
2010bae2:	00f71763          	bne	a4,a5,2010baf0 <__metal_driver_sifive_uart0_clock+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1010
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
2010bae6:	800017b7          	lui	a5,0x80001
2010baea:	a6078793          	add	a5,a5,-1440 # 80000a60 <__metal_dt_clock_4>
2010baee:	a011                	j	2010baf2 <__metal_driver_sifive_uart0_clock+0x26>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1013
		return 0;
2010baf0:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1015
}
2010baf2:	853e                	mv	a0,a5
2010baf4:	4472                	lw	s0,28(sp)
2010baf6:	6105                	add	sp,sp,32
2010baf8:	8082                	ret

2010bafa <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1018
{
2010bafa:	1101                	add	sp,sp,-32
2010bafc:	ce22                	sw	s0,28(sp)
2010bafe:	1000                	add	s0,sp,32
2010bb00:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1019
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010bb04:	fec42703          	lw	a4,-20(s0)
2010bb08:	800017b7          	lui	a5,0x80001
2010bb0c:	a2878793          	add	a5,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
2010bb10:	00f71563          	bne	a4,a5,2010bb1a <__metal_driver_sifive_uart0_pinmux+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1020
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
2010bb14:	81c18793          	add	a5,gp,-2020 # 80000a8c <__metal_dt_gpio_10012000>
2010bb18:	a011                	j	2010bb1c <__metal_driver_sifive_uart0_pinmux+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1023
		return 0;
2010bb1a:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1025
}
2010bb1c:	853e                	mv	a0,a5
2010bb1e:	4472                	lw	s0,28(sp)
2010bb20:	6105                	add	sp,sp,32
2010bb22:	8082                	ret

2010bb24 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1028
{
2010bb24:	1101                	add	sp,sp,-32
2010bb26:	ce22                	sw	s0,28(sp)
2010bb28:	1000                	add	s0,sp,32
2010bb2a:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1029
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010bb2e:	fec42703          	lw	a4,-20(s0)
2010bb32:	800017b7          	lui	a5,0x80001
2010bb36:	a2878793          	add	a5,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
2010bb3a:	00f71463          	bne	a4,a5,2010bb42 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1030
		return 0;
2010bb3e:	4781                	li	a5,0
2010bb40:	a011                	j	2010bb44 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1033
		return 0;
2010bb42:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1035
}
2010bb44:	853e                	mv	a0,a5
2010bb46:	4472                	lw	s0,28(sp)
2010bb48:	6105                	add	sp,sp,32
2010bb4a:	8082                	ret

2010bb4c <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1038
{
2010bb4c:	1101                	add	sp,sp,-32
2010bb4e:	ce22                	sw	s0,28(sp)
2010bb50:	1000                	add	s0,sp,32
2010bb52:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1039
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2010bb56:	fec42703          	lw	a4,-20(s0)
2010bb5a:	800017b7          	lui	a5,0x80001
2010bb5e:	a2878793          	add	a5,a5,-1496 # 80000a28 <__metal_dt_serial_10013000>
2010bb62:	00f71563          	bne	a4,a5,2010bb6c <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1040
		return 196608;
2010bb66:	000307b7          	lui	a5,0x30
2010bb6a:	a011                	j	2010bb6e <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1043
		return 0;
2010bb6c:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:1045
}
2010bb6e:	853e                	mv	a0,a5
2010bb70:	4472                	lw	s0,28(sp)
2010bb72:	6105                	add	sp,sp,32
2010bb74:	8082                	ret

2010bb76 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
2010bb76:	1101                	add	sp,sp,-32
2010bb78:	ce06                	sw	ra,28(sp)
2010bb7a:	cc22                	sw	s0,24(sp)
2010bb7c:	1000                	add	s0,sp,32
2010bb7e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
2010bb82:	fec42503          	lw	a0,-20(s0)
2010bb86:	ef1ff0ef          	jal	2010ba76 <__metal_driver_sifive_uart0_interrupt_parent>
2010bb8a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:39
}
2010bb8c:	853e                	mv	a0,a5
2010bb8e:	40f2                	lw	ra,28(sp)
2010bb90:	4462                	lw	s0,24(sp)
2010bb92:	6105                	add	sp,sp,32
2010bb94:	8082                	ret

2010bb96 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
2010bb96:	1101                	add	sp,sp,-32
2010bb98:	ce06                	sw	ra,28(sp)
2010bb9a:	cc22                	sw	s0,24(sp)
2010bb9c:	1000                	add	s0,sp,32
2010bb9e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
2010bba2:	fec42503          	lw	a0,-20(s0)
2010bba6:	effff0ef          	jal	2010baa4 <__metal_driver_sifive_uart0_interrupt_line>
2010bbaa:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:43
}
2010bbac:	853e                	mv	a0,a5
2010bbae:	40f2                	lw	ra,28(sp)
2010bbb0:	4462                	lw	s0,24(sp)
2010bbb2:	6105                	add	sp,sp,32
2010bbb4:	8082                	ret

2010bbb6 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
2010bbb6:	7179                	add	sp,sp,-48
2010bbb8:	d606                	sw	ra,44(sp)
2010bbba:	d422                	sw	s0,40(sp)
2010bbbc:	1800                	add	s0,sp,48
2010bbbe:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bbc2:	fdc42503          	lw	a0,-36(s0)
2010bbc6:	e87ff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bbca:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:46 (discriminator 1)
2010bbcc:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
2010bbd0:	fec42783          	lw	a5,-20(s0)
2010bbd4:	07c1                	add	a5,a5,16 # 30010 <__heap_size+0x2f810>
2010bbd6:	439c                	lw	a5,0(a5)
2010bbd8:	fec42703          	lw	a4,-20(s0)
2010bbdc:	0741                	add	a4,a4,16
2010bbde:	0017e793          	or	a5,a5,1
2010bbe2:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
2010bbe4:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:50
}
2010bbe6:	853e                	mv	a0,a5
2010bbe8:	50b2                	lw	ra,44(sp)
2010bbea:	5422                	lw	s0,40(sp)
2010bbec:	6145                	add	sp,sp,48
2010bbee:	8082                	ret

2010bbf0 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
2010bbf0:	7179                	add	sp,sp,-48
2010bbf2:	d606                	sw	ra,44(sp)
2010bbf4:	d422                	sw	s0,40(sp)
2010bbf6:	1800                	add	s0,sp,48
2010bbf8:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bbfc:	fdc42503          	lw	a0,-36(s0)
2010bc00:	e4dff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bc04:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:53 (discriminator 1)
2010bc06:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
2010bc0a:	fec42783          	lw	a5,-20(s0)
2010bc0e:	07c1                	add	a5,a5,16
2010bc10:	439c                	lw	a5,0(a5)
2010bc12:	fec42703          	lw	a4,-20(s0)
2010bc16:	0741                	add	a4,a4,16
2010bc18:	9bf9                	and	a5,a5,-2
2010bc1a:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
2010bc1c:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:57
}
2010bc1e:	853e                	mv	a0,a5
2010bc20:	50b2                	lw	ra,44(sp)
2010bc22:	5422                	lw	s0,40(sp)
2010bc24:	6145                	add	sp,sp,48
2010bc26:	8082                	ret

2010bc28 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
2010bc28:	7179                	add	sp,sp,-48
2010bc2a:	d606                	sw	ra,44(sp)
2010bc2c:	d422                	sw	s0,40(sp)
2010bc2e:	1800                	add	s0,sp,48
2010bc30:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bc34:	fdc42503          	lw	a0,-36(s0)
2010bc38:	e15ff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bc3c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:60 (discriminator 1)
2010bc3e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
2010bc42:	fec42783          	lw	a5,-20(s0)
2010bc46:	07c1                	add	a5,a5,16
2010bc48:	439c                	lw	a5,0(a5)
2010bc4a:	fec42703          	lw	a4,-20(s0)
2010bc4e:	0741                	add	a4,a4,16
2010bc50:	0027e793          	or	a5,a5,2
2010bc54:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
2010bc56:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:64
}
2010bc58:	853e                	mv	a0,a5
2010bc5a:	50b2                	lw	ra,44(sp)
2010bc5c:	5422                	lw	s0,40(sp)
2010bc5e:	6145                	add	sp,sp,48
2010bc60:	8082                	ret

2010bc62 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
2010bc62:	7179                	add	sp,sp,-48
2010bc64:	d606                	sw	ra,44(sp)
2010bc66:	d422                	sw	s0,40(sp)
2010bc68:	1800                	add	s0,sp,48
2010bc6a:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bc6e:	fdc42503          	lw	a0,-36(s0)
2010bc72:	ddbff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bc76:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:67 (discriminator 1)
2010bc78:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
2010bc7c:	fec42783          	lw	a5,-20(s0)
2010bc80:	07c1                	add	a5,a5,16
2010bc82:	439c                	lw	a5,0(a5)
2010bc84:	fec42703          	lw	a4,-20(s0)
2010bc88:	0741                	add	a4,a4,16
2010bc8a:	9bf5                	and	a5,a5,-3
2010bc8c:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
2010bc8e:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:71
}
2010bc90:	853e                	mv	a0,a5
2010bc92:	50b2                	lw	ra,44(sp)
2010bc94:	5422                	lw	s0,40(sp)
2010bc96:	6145                	add	sp,sp,48
2010bc98:	8082                	ret

2010bc9a <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
2010bc9a:	7179                	add	sp,sp,-48
2010bc9c:	d606                	sw	ra,44(sp)
2010bc9e:	d422                	sw	s0,40(sp)
2010bca0:	1800                	add	s0,sp,48
2010bca2:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bca6:	fdc42503          	lw	a0,-36(s0)
2010bcaa:	da3ff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bcae:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:74 (discriminator 1)
2010bcb0:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2010bcb4:	fec42783          	lw	a5,-20(s0)
2010bcb8:	439c                	lw	a5,0(a5)
2010bcba:	83fd                	srl	a5,a5,0x1f
2010bcbc:	0ff7f793          	zext.b	a5,a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:77
}
2010bcc0:	853e                	mv	a0,a5
2010bcc2:	50b2                	lw	ra,44(sp)
2010bcc4:	5422                	lw	s0,40(sp)
2010bcc6:	6145                	add	sp,sp,48
2010bcc8:	8082                	ret

2010bcca <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2010bcca:	7179                	add	sp,sp,-48
2010bccc:	d606                	sw	ra,44(sp)
2010bcce:	d422                	sw	s0,40(sp)
2010bcd0:	1800                	add	s0,sp,48
2010bcd2:	fca42e23          	sw	a0,-36(s0)
2010bcd6:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bcda:	fdc42503          	lw	a0,-36(s0)
2010bcde:	d6fff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bce2:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:81 (discriminator 1)
2010bce4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
2010bce8:	fec42783          	lw	a5,-20(s0)
2010bcec:	07a1                	add	a5,a5,8
2010bcee:	4398                	lw	a4,0(a5)
2010bcf0:	fd842783          	lw	a5,-40(s0)
2010bcf4:	01079693          	sll	a3,a5,0x10
2010bcf8:	000707b7          	lui	a5,0x70
2010bcfc:	8ff5                	and	a5,a5,a3
2010bcfe:	fec42683          	lw	a3,-20(s0)
2010bd02:	06a1                	add	a3,a3,8
2010bd04:	8fd9                	or	a5,a5,a4
2010bd06:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
2010bd08:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:85
}
2010bd0a:	853e                	mv	a0,a5
2010bd0c:	50b2                	lw	ra,44(sp)
2010bd0e:	5422                	lw	s0,40(sp)
2010bd10:	6145                	add	sp,sp,48
2010bd12:	8082                	ret

2010bd14 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
2010bd14:	7179                	add	sp,sp,-48
2010bd16:	d606                	sw	ra,44(sp)
2010bd18:	d422                	sw	s0,40(sp)
2010bd1a:	1800                	add	s0,sp,48
2010bd1c:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bd20:	fdc42503          	lw	a0,-36(s0)
2010bd24:	d29ff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bd28:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:88 (discriminator 1)
2010bd2a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2010bd2e:	fec42783          	lw	a5,-20(s0)
2010bd32:	07a1                	add	a5,a5,8 # 70008 <__heap_size+0x6f808>
2010bd34:	439c                	lw	a5,0(a5)
2010bd36:	83c1                	srl	a5,a5,0x10
2010bd38:	8b9d                	and	a5,a5,7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:91
}
2010bd3a:	853e                	mv	a0,a5
2010bd3c:	50b2                	lw	ra,44(sp)
2010bd3e:	5422                	lw	s0,40(sp)
2010bd40:	6145                	add	sp,sp,48
2010bd42:	8082                	ret

2010bd44 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2010bd44:	7179                	add	sp,sp,-48
2010bd46:	d606                	sw	ra,44(sp)
2010bd48:	d422                	sw	s0,40(sp)
2010bd4a:	1800                	add	s0,sp,48
2010bd4c:	fca42e23          	sw	a0,-36(s0)
2010bd50:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bd54:	fdc42503          	lw	a0,-36(s0)
2010bd58:	cf5ff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bd5c:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:95 (discriminator 1)
2010bd5e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
2010bd62:	fec42783          	lw	a5,-20(s0)
2010bd66:	07b1                	add	a5,a5,12
2010bd68:	4398                	lw	a4,0(a5)
2010bd6a:	fd842783          	lw	a5,-40(s0)
2010bd6e:	01079693          	sll	a3,a5,0x10
2010bd72:	000707b7          	lui	a5,0x70
2010bd76:	8ff5                	and	a5,a5,a3
2010bd78:	fec42683          	lw	a3,-20(s0)
2010bd7c:	06b1                	add	a3,a3,12
2010bd7e:	8fd9                	or	a5,a5,a4
2010bd80:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
2010bd82:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:99
}
2010bd84:	853e                	mv	a0,a5
2010bd86:	50b2                	lw	ra,44(sp)
2010bd88:	5422                	lw	s0,40(sp)
2010bd8a:	6145                	add	sp,sp,48
2010bd8c:	8082                	ret

2010bd8e <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
2010bd8e:	7179                	add	sp,sp,-48
2010bd90:	d606                	sw	ra,44(sp)
2010bd92:	d422                	sw	s0,40(sp)
2010bd94:	1800                	add	s0,sp,48
2010bd96:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bd9a:	fdc42503          	lw	a0,-36(s0)
2010bd9e:	cafff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bda2:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:102 (discriminator 1)
2010bda4:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
2010bda8:	fec42783          	lw	a5,-20(s0)
2010bdac:	07b1                	add	a5,a5,12 # 7000c <__heap_size+0x6f80c>
2010bdae:	439c                	lw	a5,0(a5)
2010bdb0:	83c1                	srl	a5,a5,0x10
2010bdb2:	8b9d                	and	a5,a5,7
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:105
}
2010bdb4:	853e                	mv	a0,a5
2010bdb6:	50b2                	lw	ra,44(sp)
2010bdb8:	5422                	lw	s0,40(sp)
2010bdba:	6145                	add	sp,sp,48
2010bdbc:	8082                	ret

2010bdbe <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
2010bdbe:	7179                	add	sp,sp,-48
2010bdc0:	d606                	sw	ra,44(sp)
2010bdc2:	d422                	sw	s0,40(sp)
2010bdc4:	1800                	add	s0,sp,48
2010bdc6:	fca42e23          	sw	a0,-36(s0)
2010bdca:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010bdce:	fdc42503          	lw	a0,-36(s0)
2010bdd2:	c7bff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bdd6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:108 (discriminator 1)
2010bdd8:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
2010bddc:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
2010bdde:	fdc42503          	lw	a0,-36(s0)
2010bde2:	eb9ff0ef          	jal	2010bc9a <__metal_driver_sifive_uart0_txready>
2010bde6:	87aa                	mv	a5,a0
2010bde8:	fbfd                	bnez	a5,2010bdde <__metal_driver_sifive_uart0_putc+0x20>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
2010bdea:	fec42783          	lw	a5,-20(s0)
2010bdee:	fd842703          	lw	a4,-40(s0)
2010bdf2:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2010bdf4:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:115
}
2010bdf6:	853e                	mv	a0,a5
2010bdf8:	50b2                	lw	ra,44(sp)
2010bdfa:	5422                	lw	s0,40(sp)
2010bdfc:	6145                	add	sp,sp,48
2010bdfe:	8082                	ret

2010be00 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
2010be00:	7179                	add	sp,sp,-48
2010be02:	d606                	sw	ra,44(sp)
2010be04:	d422                	sw	s0,40(sp)
2010be06:	1800                	add	s0,sp,48
2010be08:	fca42e23          	sw	a0,-36(s0)
2010be0c:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2010be10:	fdc42503          	lw	a0,-36(s0)
2010be14:	c39ff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010be18:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:119 (discriminator 1)
2010be1a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
2010be1e:	fec42783          	lw	a5,-20(s0)
2010be22:	0791                	add	a5,a5,4
2010be24:	439c                	lw	a5,0(a5)
2010be26:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
2010be2a:	fe842783          	lw	a5,-24(s0)
2010be2e:	0007d763          	bgez	a5,2010be3c <__metal_driver_sifive_uart0_getc+0x3c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
2010be32:	fd842783          	lw	a5,-40(s0)
2010be36:	577d                	li	a4,-1
2010be38:	c398                	sw	a4,0(a5)
2010be3a:	a801                	j	2010be4a <__metal_driver_sifive_uart0_getc+0x4a>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
2010be3c:	fe842783          	lw	a5,-24(s0)
2010be40:	0ff7f713          	zext.b	a4,a5
2010be44:	fd842783          	lw	a5,-40(s0)
2010be48:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
2010be4a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:129
}
2010be4c:	853e                	mv	a0,a5
2010be4e:	50b2                	lw	ra,44(sp)
2010be50:	5422                	lw	s0,40(sp)
2010be52:	6145                	add	sp,sp,48
2010be54:	8082                	ret

2010be56 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
2010be56:	7179                	add	sp,sp,-48
2010be58:	d622                	sw	s0,44(sp)
2010be5a:	1800                	add	s0,sp,48
2010be5c:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2010be60:	fdc42783          	lw	a5,-36(s0)
2010be64:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
2010be68:	fec42783          	lw	a5,-20(s0)
2010be6c:	43dc                	lw	a5,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:134
}
2010be6e:	853e                	mv	a0,a5
2010be70:	5432                	lw	s0,44(sp)
2010be72:	6145                	add	sp,sp,48
2010be74:	8082                	ret

2010be76 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
2010be76:	7179                	add	sp,sp,-48
2010be78:	d606                	sw	ra,44(sp)
2010be7a:	d422                	sw	s0,40(sp)
2010be7c:	1800                	add	s0,sp,48
2010be7e:	fca42e23          	sw	a0,-36(s0)
2010be82:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2010be86:	fdc42783          	lw	a5,-36(s0)
2010be8a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
2010be8e:	fdc42503          	lw	a0,-36(s0)
2010be92:	bbbff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010be96:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:139 (discriminator 1)
2010be98:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2010be9c:	fdc42503          	lw	a0,-36(s0)
2010bea0:	c2dff0ef          	jal	2010bacc <__metal_driver_sifive_uart0_clock>
2010bea4:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2010bea8:	fd842703          	lw	a4,-40(s0)
2010beac:	fec42783          	lw	a5,-20(s0)
2010beb0:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
2010beb2:	fe442783          	lw	a5,-28(s0)
2010beb6:	cbb1                	beqz	a5,2010bf0a <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2010beb8:	fe442783          	lw	a5,-28(s0)
2010bebc:	439c                	lw	a5,0(a5)
2010bebe:	439c                	lw	a5,0(a5)
2010bec0:	fe442503          	lw	a0,-28(s0)
2010bec4:	9782                	jalr	a5
2010bec6:	fea42023          	sw	a0,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2010beca:	fe042703          	lw	a4,-32(s0)
2010bece:	fd842783          	lw	a5,-40(s0)
2010bed2:	02f747b3          	div	a5,a4,a5
2010bed6:	fff78713          	add	a4,a5,-1
2010beda:	fe842783          	lw	a5,-24(s0)
2010bede:	07e1                	add	a5,a5,24
2010bee0:	c398                	sw	a4,0(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2010bee2:	fe842783          	lw	a5,-24(s0)
2010bee6:	07a1                	add	a5,a5,8
2010bee8:	439c                	lw	a5,0(a5)
2010beea:	fe842703          	lw	a4,-24(s0)
2010beee:	0721                	add	a4,a4,8
2010bef0:	0017e793          	or	a5,a5,1
2010bef4:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
2010bef6:	fe842783          	lw	a5,-24(s0)
2010befa:	07b1                	add	a5,a5,12
2010befc:	439c                	lw	a5,0(a5)
2010befe:	fe842703          	lw	a4,-24(s0)
2010bf02:	0731                	add	a4,a4,12
2010bf04:	0017e793          	or	a5,a5,1
2010bf08:	c31c                	sw	a5,0(a4)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
2010bf0a:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:151
}
2010bf0c:	853e                	mv	a0,a5
2010bf0e:	50b2                	lw	ra,44(sp)
2010bf10:	5422                	lw	s0,40(sp)
2010bf12:	6145                	add	sp,sp,48
2010bf14:	8082                	ret

2010bf16 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
2010bf16:	7139                	add	sp,sp,-64
2010bf18:	de06                	sw	ra,60(sp)
2010bf1a:	dc22                	sw	s0,56(sp)
2010bf1c:	0080                	add	s0,sp,64
2010bf1e:	fca42623          	sw	a0,-52(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
2010bf22:	fcc42783          	lw	a5,-52(s0)
2010bf26:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2010bf2a:	fcc42503          	lw	a0,-52(s0)
2010bf2e:	b1fff0ef          	jal	2010ba4c <__metal_driver_sifive_uart0_control_base>
2010bf32:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
2010bf34:	fef42423          	sw	a5,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2010bf38:	fcc42503          	lw	a0,-52(s0)
2010bf3c:	b91ff0ef          	jal	2010bacc <__metal_driver_sifive_uart0_clock>
2010bf40:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
2010bf44:	fe842783          	lw	a5,-24(s0)
2010bf48:	07a1                	add	a5,a5,8
2010bf4a:	4398                	lw	a4,0(a5)
2010bf4c:	fe842783          	lw	a5,-24(s0)
2010bf50:	07a1                	add	a5,a5,8
2010bf52:	86be                	mv	a3,a5
2010bf54:	fff907b7          	lui	a5,0xfff90
2010bf58:	17fd                	add	a5,a5,-1 # fff8ffff <metal_segment_heap_target_end+0x7ff8e4df>
2010bf5a:	8ff9                	and	a5,a5,a4
2010bf5c:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2010bf5e:	fe842783          	lw	a5,-24(s0)
2010bf62:	07a1                	add	a5,a5,8
2010bf64:	4398                	lw	a4,0(a5)
2010bf66:	fe842783          	lw	a5,-24(s0)
2010bf6a:	07a1                	add	a5,a5,8
2010bf6c:	86be                	mv	a3,a5
2010bf6e:	67c1                	lui	a5,0x10
2010bf70:	8fd9                	or	a5,a5,a4
2010bf72:	c29c                	sw	a5,0(a3)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
2010bf74:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
2010bf76:	fe842783          	lw	a5,-24(s0)
2010bf7a:	07d1                	add	a5,a5,20 # 10014 <__heap_size+0xf814>
2010bf7c:	439c                	lw	a5,0(a5)
2010bf7e:	8b85                	and	a5,a5,1
2010bf80:	dbfd                	beqz	a5,2010bf76 <pre_rate_change_callback_func+0x60>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2010bf82:	fe842783          	lw	a5,-24(s0)
2010bf86:	07a1                	add	a5,a5,8
2010bf88:	439c                	lw	a5,0(a5)
2010bf8a:	8b89                	and	a5,a5,2
2010bf8c:	c399                	beqz	a5,2010bf92 <pre_rate_change_callback_func+0x7c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
2010bf8e:	47a5                	li	a5,9
2010bf90:	a011                	j	2010bf94 <pre_rate_change_callback_func+0x7e>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
2010bf92:	47a9                	li	a5,10
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2010bf94:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2010bf98:	fe442783          	lw	a5,-28(s0)
2010bf9c:	439c                	lw	a5,0(a5)
2010bf9e:	439c                	lw	a5,0(a5)
2010bfa0:	fe442503          	lw	a0,-28(s0)
2010bfa4:	9782                	jalr	a5
2010bfa6:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2010bfaa:	fe042703          	lw	a4,-32(s0)
2010bfae:	fdc42783          	lw	a5,-36(s0)
2010bfb2:	02f707b3          	mul	a5,a4,a5
2010bfb6:	873e                	mv	a4,a5
2010bfb8:	fec42783          	lw	a5,-20(s0)
2010bfbc:	43dc                	lw	a5,4(a5)
2010bfbe:	02f757b3          	divu	a5,a4,a5
2010bfc2:	fcf42c23          	sw	a5,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2010bfc6:	fc042a23          	sw	zero,-44(s0)
2010bfca:	a039                	j	2010bfd8 <pre_rate_change_callback_func+0xc2>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:179
        __asm__("nop");
2010bfcc:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
2010bfce:	fd442783          	lw	a5,-44(s0)
2010bfd2:	0785                	add	a5,a5,1
2010bfd4:	fcf42a23          	sw	a5,-44(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2010bfd8:	fd442783          	lw	a5,-44(s0)
2010bfdc:	fd842703          	lw	a4,-40(s0)
2010bfe0:	fee7c6e3          	blt	a5,a4,2010bfcc <pre_rate_change_callback_func+0xb6>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:180
}
2010bfe4:	0001                	nop
2010bfe6:	0001                	nop
2010bfe8:	50f2                	lw	ra,60(sp)
2010bfea:	5462                	lw	s0,56(sp)
2010bfec:	6121                	add	sp,sp,64
2010bfee:	8082                	ret

2010bff0 <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
2010bff0:	7179                	add	sp,sp,-48
2010bff2:	d606                	sw	ra,44(sp)
2010bff4:	d422                	sw	s0,40(sp)
2010bff6:	1800                	add	s0,sp,48
2010bff8:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
2010bffc:	fdc42783          	lw	a5,-36(s0)
2010c000:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2010c004:	fec42703          	lw	a4,-20(s0)
2010c008:	fec42783          	lw	a5,-20(s0)
2010c00c:	43dc                	lw	a5,4(a5)
2010c00e:	85be                	mv	a1,a5
2010c010:	853a                	mv	a0,a4
2010c012:	de5fb0ef          	jal	20107df6 <metal_uart_set_baud_rate>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:185
}
2010c016:	0001                	nop
2010c018:	50b2                	lw	ra,44(sp)
2010c01a:	5422                	lw	s0,40(sp)
2010c01c:	6145                	add	sp,sp,48
2010c01e:	8082                	ret

2010c020 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2010c020:	7139                	add	sp,sp,-64
2010c022:	de06                	sw	ra,60(sp)
2010c024:	dc22                	sw	s0,56(sp)
2010c026:	0080                	add	s0,sp,64
2010c028:	fca42623          	sw	a0,-52(s0)
2010c02c:	fcb42423          	sw	a1,-56(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2010c030:	fcc42783          	lw	a5,-52(s0)
2010c034:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2010c038:	fcc42503          	lw	a0,-52(s0)
2010c03c:	a91ff0ef          	jal	2010bacc <__metal_driver_sifive_uart0_clock>
2010c040:	fea42423          	sw	a0,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
2010c044:	fcc42503          	lw	a0,-52(s0)
2010c048:	ab3ff0ef          	jal	2010bafa <__metal_driver_sifive_uart0_pinmux>
2010c04c:	fea42223          	sw	a0,-28(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2010c050:	fe842783          	lw	a5,-24(s0)
2010c054:	c7b9                	beqz	a5,2010c0a2 <__metal_driver_sifive_uart0_init+0x82>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
2010c056:	fec42783          	lw	a5,-20(s0)
2010c05a:	2010c737          	lui	a4,0x2010c
2010c05e:	f1670713          	add	a4,a4,-234 # 2010bf16 <pre_rate_change_callback_func>
2010c062:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
2010c064:	fec42783          	lw	a5,-20(s0)
2010c068:	fcc42703          	lw	a4,-52(s0)
2010c06c:	c7d8                	sw	a4,12(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2010c06e:	fec42783          	lw	a5,-20(s0)
2010c072:	07a1                	add	a5,a5,8
2010c074:	85be                	mv	a1,a5
2010c076:	fe842503          	lw	a0,-24(s0)
2010c07a:	2241                	jal	2010c1fa <metal_clock_register_pre_rate_change_callback>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
2010c07c:	fec42783          	lw	a5,-20(s0)
2010c080:	2010c737          	lui	a4,0x2010c
2010c084:	ff070713          	add	a4,a4,-16 # 2010bff0 <post_rate_change_callback_func>
2010c088:	cbd8                	sw	a4,20(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
2010c08a:	fec42783          	lw	a5,-20(s0)
2010c08e:	fcc42703          	lw	a4,-52(s0)
2010c092:	cf98                	sw	a4,24(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
2010c094:	fec42783          	lw	a5,-20(s0)
2010c098:	07d1                	add	a5,a5,20
2010c09a:	85be                	mv	a1,a5
2010c09c:	fe842503          	lw	a0,-24(s0)
2010c0a0:	2271                	jal	2010c22c <metal_clock_register_post_rate_change_callback>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2010c0a2:	fec42783          	lw	a5,-20(s0)
2010c0a6:	fc842583          	lw	a1,-56(s0)
2010c0aa:	853e                	mv	a0,a5
2010c0ac:	d4bfb0ef          	jal	20107df6 <metal_uart_set_baud_rate>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2010c0b0:	fe442783          	lw	a5,-28(s0)
2010c0b4:	cb95                	beqz	a5,2010c0e8 <__metal_driver_sifive_uart0_init+0xc8>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
2010c0b6:	fcc42503          	lw	a0,-52(s0)
2010c0ba:	a6bff0ef          	jal	2010bb24 <__metal_driver_sifive_uart0_pinmux_output_selector>
2010c0be:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2010c0c0:	fef42023          	sw	a5,-32(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
2010c0c4:	fcc42503          	lw	a0,-52(s0)
2010c0c8:	a85ff0ef          	jal	2010bb4c <__metal_driver_sifive_uart0_pinmux_source_selector>
2010c0cc:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
2010c0ce:	fcf42e23          	sw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2010c0d2:	fe442783          	lw	a5,-28(s0)
2010c0d6:	439c                	lw	a5,0(a5)
2010c0d8:	53dc                	lw	a5,36(a5)
2010c0da:	fdc42603          	lw	a2,-36(s0)
2010c0de:	fe042583          	lw	a1,-32(s0)
2010c0e2:	fe442503          	lw	a0,-28(s0)
2010c0e6:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
2010c0e8:	0001                	nop
2010c0ea:	50f2                	lw	ra,60(sp)
2010c0ec:	5462                	lw	s0,56(sp)
2010c0ee:	6121                	add	sp,sp,64
2010c0f0:	8082                	ret

2010c0f2 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2010c0f2:	7179                	add	sp,sp,-48
2010c0f4:	d606                	sw	ra,44(sp)
2010c0f6:	d422                	sw	s0,40(sp)
2010c0f8:	1800                	add	s0,sp,48
2010c0fa:	fca42e23          	sw	a0,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
2010c0fe:	fdc42783          	lw	a5,-36(s0)
2010c102:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:52
    while (current) {
2010c106:	a831                	j	2010c122 <_metal_clock_call_all_callbacks+0x30>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
2010c108:	fec42783          	lw	a5,-20(s0)
2010c10c:	439c                	lw	a5,0(a5)
2010c10e:	fec42703          	lw	a4,-20(s0)
2010c112:	4358                	lw	a4,4(a4)
2010c114:	853a                	mv	a0,a4
2010c116:	9782                	jalr	a5
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:54
        current = current->_next;
2010c118:	fec42783          	lw	a5,-20(s0)
2010c11c:	479c                	lw	a5,8(a5)
2010c11e:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:52
    while (current) {
2010c122:	fec42783          	lw	a5,-20(s0)
2010c126:	f3ed                	bnez	a5,2010c108 <_metal_clock_call_all_callbacks+0x16>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:56
    }
}
2010c128:	0001                	nop
2010c12a:	0001                	nop
2010c12c:	50b2                	lw	ra,44(sp)
2010c12e:	5422                	lw	s0,40(sp)
2010c130:	6145                	add	sp,sp,48
2010c132:	8082                	ret

2010c134 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2010c134:	7179                	add	sp,sp,-48
2010c136:	d622                	sw	s0,44(sp)
2010c138:	1800                	add	s0,sp,48
2010c13a:	fca42e23          	sw	a0,-36(s0)
2010c13e:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2010c142:	fd842783          	lw	a5,-40(s0)
2010c146:	0007a423          	sw	zero,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:66

    if (!list) {
2010c14a:	fdc42783          	lw	a5,-36(s0)
2010c14e:	e781                	bnez	a5,2010c156 <_metal_clock_append_to_callbacks+0x22>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:67
        return cb;
2010c150:	fd842783          	lw	a5,-40(s0)
2010c154:	a035                	j	2010c180 <_metal_clock_append_to_callbacks+0x4c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
2010c156:	fdc42783          	lw	a5,-36(s0)
2010c15a:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
2010c15e:	a031                	j	2010c16a <_metal_clock_append_to_callbacks+0x36>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:73
        current = current->_next;
2010c160:	fec42783          	lw	a5,-20(s0)
2010c164:	479c                	lw	a5,8(a5)
2010c166:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
2010c16a:	fec42783          	lw	a5,-20(s0)
2010c16e:	479c                	lw	a5,8(a5)
2010c170:	fbe5                	bnez	a5,2010c160 <_metal_clock_append_to_callbacks+0x2c>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2010c172:	fec42783          	lw	a5,-20(s0)
2010c176:	fd842703          	lw	a4,-40(s0)
2010c17a:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:78

    return list;
2010c17c:	fdc42783          	lw	a5,-36(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:79
}
2010c180:	853e                	mv	a0,a5
2010c182:	5432                	lw	s0,44(sp)
2010c184:	6145                	add	sp,sp,48
2010c186:	8082                	ret

2010c188 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
2010c188:	1101                	add	sp,sp,-32
2010c18a:	ce06                	sw	ra,28(sp)
2010c18c:	cc22                	sw	s0,24(sp)
2010c18e:	1000                	add	s0,sp,32
2010c190:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2010c194:	fec42783          	lw	a5,-20(s0)
2010c198:	439c                	lw	a5,0(a5)
2010c19a:	439c                	lw	a5,0(a5)
2010c19c:	fec42503          	lw	a0,-20(s0)
2010c1a0:	9782                	jalr	a5
2010c1a2:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:112
}
2010c1a4:	853e                	mv	a0,a5
2010c1a6:	40f2                	lw	ra,28(sp)
2010c1a8:	4462                	lw	s0,24(sp)
2010c1aa:	6105                	add	sp,sp,32
2010c1ac:	8082                	ret

2010c1ae <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
2010c1ae:	7179                	add	sp,sp,-48
2010c1b0:	d606                	sw	ra,44(sp)
2010c1b2:	d422                	sw	s0,40(sp)
2010c1b4:	1800                	add	s0,sp,48
2010c1b6:	fca42e23          	sw	a0,-36(s0)
2010c1ba:	fcb42c23          	sw	a1,-40(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
2010c1be:	fdc42783          	lw	a5,-36(s0)
2010c1c2:	43dc                	lw	a5,4(a5)
2010c1c4:	853e                	mv	a0,a5
2010c1c6:	f2dff0ef          	jal	2010c0f2 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
2010c1ca:	fdc42783          	lw	a5,-36(s0)
2010c1ce:	439c                	lw	a5,0(a5)
2010c1d0:	43dc                	lw	a5,4(a5)
2010c1d2:	fd842583          	lw	a1,-40(s0)
2010c1d6:	fdc42503          	lw	a0,-36(s0)
2010c1da:	9782                	jalr	a5
2010c1dc:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
2010c1e0:	fdc42783          	lw	a5,-36(s0)
2010c1e4:	479c                	lw	a5,8(a5)
2010c1e6:	853e                	mv	a0,a5
2010c1e8:	f0bff0ef          	jal	2010c0f2 <_metal_clock_call_all_callbacks>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:135

    return out;
2010c1ec:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:136
}
2010c1f0:	853e                	mv	a0,a5
2010c1f2:	50b2                	lw	ra,44(sp)
2010c1f4:	5422                	lw	s0,40(sp)
2010c1f6:	6145                	add	sp,sp,48
2010c1f8:	8082                	ret

2010c1fa <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
2010c1fa:	1101                	add	sp,sp,-32
2010c1fc:	ce06                	sw	ra,28(sp)
2010c1fe:	cc22                	sw	s0,24(sp)
2010c200:	1000                	add	s0,sp,32
2010c202:	fea42623          	sw	a0,-20(s0)
2010c206:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
2010c20a:	fec42783          	lw	a5,-20(s0)
2010c20e:	43dc                	lw	a5,4(a5)
2010c210:	fe842583          	lw	a1,-24(s0)
2010c214:	853e                	mv	a0,a5
2010c216:	f1fff0ef          	jal	2010c134 <_metal_clock_append_to_callbacks>
2010c21a:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
2010c21c:	fec42783          	lw	a5,-20(s0)
2010c220:	c3d8                	sw	a4,4(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:149
}
2010c222:	0001                	nop
2010c224:	40f2                	lw	ra,28(sp)
2010c226:	4462                	lw	s0,24(sp)
2010c228:	6105                	add	sp,sp,32
2010c22a:	8082                	ret

2010c22c <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
2010c22c:	1101                	add	sp,sp,-32
2010c22e:	ce06                	sw	ra,28(sp)
2010c230:	cc22                	sw	s0,24(sp)
2010c232:	1000                	add	s0,sp,32
2010c234:	fea42623          	sw	a0,-20(s0)
2010c238:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
2010c23c:	fec42783          	lw	a5,-20(s0)
2010c240:	479c                	lw	a5,8(a5)
2010c242:	fe842583          	lw	a1,-24(s0)
2010c246:	853e                	mv	a0,a5
2010c248:	eedff0ef          	jal	2010c134 <_metal_clock_append_to_callbacks>
2010c24c:	872a                	mv	a4,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
2010c24e:	fec42783          	lw	a5,-20(s0)
2010c252:	c798                	sw	a4,8(a5)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/clock.h:162
}
2010c254:	0001                	nop
2010c256:	40f2                	lw	ra,28(sp)
2010c258:	4462                	lw	s0,24(sp)
2010c25a:	6105                	add	sp,sp,32
2010c25c:	8082                	ret

2010c25e <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
2010c25e:	1101                	add	sp,sp,-32
2010c260:	ce06                	sw	ra,28(sp)
2010c262:	cc22                	sw	s0,24(sp)
2010c264:	1000                	add	s0,sp,32
2010c266:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
2010c26a:	fec42783          	lw	a5,-20(s0)
2010c26e:	439c                	lw	a5,0(a5)
2010c270:	57dc                	lw	a5,44(a5)
2010c272:	fec42503          	lw	a0,-20(s0)
2010c276:	9782                	jalr	a5
2010c278:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/metal/cpu.h:226
}
2010c27a:	853e                	mv	a0,a5
2010c27c:	40f2                	lw	ra,28(sp)
2010c27e:	4462                	lw	s0,24(sp)
2010c280:	6105                	add	sp,sp,32
2010c282:	8082                	ret

2010c284 <metal_cpu_get>:
metal_cpu_get():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
2010c284:	1101                	add	sp,sp,-32
2010c286:	ce22                	sw	s0,28(sp)
2010c288:	1000                	add	s0,sp,32
2010c28a:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
2010c28e:	fec42783          	lw	a5,-20(s0)
2010c292:	eb99                	bnez	a5,2010c2a8 <metal_cpu_get+0x24>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
2010c294:	800017b7          	lui	a5,0x80001
2010c298:	fec42703          	lw	a4,-20(s0)
2010c29c:	070a                	sll	a4,a4,0x2
2010c29e:	a7878793          	add	a5,a5,-1416 # 80000a78 <__metal_cpu_table>
2010c2a2:	97ba                	add	a5,a5,a4
2010c2a4:	439c                	lw	a5,0(a5)
2010c2a6:	a011                	j	2010c2aa <metal_cpu_get+0x26>
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:11
    }
    return NULL;
2010c2a8:	4781                	li	a5,0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:12
}
2010c2aa:	853e                	mv	a0,a5
2010c2ac:	4472                	lw	s0,28(sp)
2010c2ae:	6105                	add	sp,sp,32
2010c2b0:	8082                	ret

2010c2b2 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2010c2b2:	1101                	add	sp,sp,-32
2010c2b4:	ce22                	sw	s0,28(sp)
2010c2b6:	1000                	add	s0,sp,32
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
2010c2b8:	f14027f3          	csrr	a5,mhartid
2010c2bc:	fef42623          	sw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:18
    return mhartid;
2010c2c0:	fec42783          	lw	a5,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/cpu.c:20
#endif
}
2010c2c4:	853e                	mv	a0,a5
2010c2c6:	4472                	lw	s0,28(sp)
2010c2c8:	6105                	add	sp,sp,32
2010c2ca:	8082                	ret

2010c2cc <metal_shutdown>:
metal_shutdown():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
2010c2cc:	1101                	add	sp,sp,-32
2010c2ce:	ce22                	sw	s0,28(sp)
2010c2d0:	1000                	add	s0,sp,32
2010c2d2:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
2010c2d6:	0001                	nop
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/shutdown.c:19
2010c2d8:	bffd                	j	2010c2d6 <metal_shutdown+0xa>
	...

2010c300 <__metal_vector_table>:
IRQ_0():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:76
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
2010c300:	c94fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c304 <IRQ_1>:
IRQ_1():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:78
IRQ_1:
        j metal_interrupt_vector_handler
2010c304:	c90fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c308 <IRQ_2>:
IRQ_2():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:80
IRQ_2:
        j metal_interrupt_vector_handler
2010c308:	c8cfc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c30c <IRQ_3>:
IRQ_3():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:82
IRQ_3:
        j metal_software_interrupt_vector_handler
2010c30c:	cb6fc06f          	j	201087c2 <metal_software_interrupt_vector_handler>

2010c310 <IRQ_4>:
IRQ_4():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:84
IRQ_4:
        j metal_interrupt_vector_handler
2010c310:	c84fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c314 <IRQ_5>:
IRQ_5():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:86
IRQ_5:
        j metal_interrupt_vector_handler
2010c314:	c80fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c318 <IRQ_6>:
IRQ_6():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:88
IRQ_6:
        j metal_interrupt_vector_handler
2010c318:	c7cfc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c31c <IRQ_7>:
IRQ_7():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:90
IRQ_7:
        j metal_timer_interrupt_vector_handler
2010c31c:	da0fc06f          	j	201088bc <metal_timer_interrupt_vector_handler>

2010c320 <IRQ_8>:
IRQ_8():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:92
IRQ_8:
        j metal_interrupt_vector_handler
2010c320:	c74fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c324 <IRQ_9>:
IRQ_9():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:94
IRQ_9:
        j metal_interrupt_vector_handler
2010c324:	c70fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c328 <IRQ_10>:
IRQ_10():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:96
IRQ_10:
        j metal_interrupt_vector_handler
2010c328:	c6cfc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c32c <IRQ_11>:
IRQ_11():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:98
IRQ_11:
        j metal_interrupt_vector_handler
2010c32c:	c68fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c330 <IRQ_12>:
IRQ_12():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:100
IRQ_12:
        j metal_interrupt_vector_handler
2010c330:	c64fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c334 <IRQ_13>:
IRQ_13():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:102
IRQ_13:
        j metal_interrupt_vector_handler
2010c334:	c60fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c338 <IRQ_14>:
IRQ_14():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:104
IRQ_14:
        j metal_interrupt_vector_handler
2010c338:	c5cfc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c33c <IRQ_15>:
IRQ_15():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:106
IRQ_15:
        j metal_interrupt_vector_handler
2010c33c:	c58fc06f          	j	20108794 <metal_interrupt_vector_handler>

2010c340 <IRQ_LC0>:
IRQ_LC0():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:108
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
2010c340:	8bbfc06f          	j	20108bfa <metal_lc0_interrupt_vector_handler>

2010c344 <IRQ_LC1>:
IRQ_LC1():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:110
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
2010c344:	94dfc06f          	j	20108c90 <metal_lc1_interrupt_vector_handler>

2010c348 <IRQ_LC2>:
IRQ_LC2():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:112
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
2010c348:	9dffc06f          	j	20108d26 <metal_lc2_interrupt_vector_handler>

2010c34c <IRQ_LC3>:
IRQ_LC3():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:114
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2010c34c:	a71fc06f          	j	20108dbc <metal_lc3_interrupt_vector_handler>

2010c350 <IRQ_LC4>:
IRQ_LC4():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:116
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
2010c350:	b03fc06f          	j	20108e52 <metal_lc4_interrupt_vector_handler>

2010c354 <IRQ_LC5>:
IRQ_LC5():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:118
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
2010c354:	b95fc06f          	j	20108ee8 <metal_lc5_interrupt_vector_handler>

2010c358 <IRQ_LC6>:
IRQ_LC6():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:120
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
2010c358:	c27fc06f          	j	20108f7e <metal_lc6_interrupt_vector_handler>

2010c35c <IRQ_LC7>:
IRQ_LC7():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:122
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2010c35c:	cb9fc06f          	j	20109014 <metal_lc7_interrupt_vector_handler>

2010c360 <IRQ_LC8>:
IRQ_LC8():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:124
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
2010c360:	d4bfc06f          	j	201090aa <metal_lc8_interrupt_vector_handler>

2010c364 <IRQ_LC9>:
IRQ_LC9():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:126
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
2010c364:	dddfc06f          	j	20109140 <metal_lc9_interrupt_vector_handler>

2010c368 <IRQ_LC10>:
IRQ_LC10():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:128
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
2010c368:	e6ffc06f          	j	201091d6 <metal_lc10_interrupt_vector_handler>

2010c36c <IRQ_LC11>:
IRQ_LC11():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:130
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2010c36c:	f01fc06f          	j	2010926c <metal_lc11_interrupt_vector_handler>

2010c370 <IRQ_LC12>:
IRQ_LC12():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:132
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
2010c370:	f93fc06f          	j	20109302 <metal_lc12_interrupt_vector_handler>

2010c374 <IRQ_LC13>:
IRQ_LC13():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:134
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
2010c374:	824fd06f          	j	20109398 <metal_lc13_interrupt_vector_handler>

2010c378 <IRQ_LC14>:
IRQ_LC14():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:136
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
2010c378:	8b6fd06f          	j	2010942e <metal_lc14_interrupt_vector_handler>

2010c37c <IRQ_LC15>:
IRQ_LC15():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/vector.S:138
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2010c37c:	948fd06f          	j	201094c4 <metal_lc15_interrupt_vector_handler>

2010c380 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:186
{
2010c380:	1101                	add	sp,sp,-32
2010c382:	ce22                	sw	s0,28(sp)
2010c384:	1000                	add	s0,sp,32
2010c386:	fea42623          	sw	a0,-20(s0)
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:187
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2010c38a:	fec42703          	lw	a4,-20(s0)
2010c38e:	800007b7          	lui	a5,0x80000
2010c392:	05878793          	add	a5,a5,88 # 80000058 <__metal_dt_clock_0>
2010c396:	00f71763          	bne	a4,a5,2010c3a4 <__metal_driver_fixed_clock_rate+0x24>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_0_CLOCK_0_CLOCK_FREQUENCY;
2010c39a:	00f427b7          	lui	a5,0xf42
2010c39e:	40078793          	add	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
2010c3a2:	a825                	j	2010c3da <__metal_driver_fixed_clock_rate+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:190
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
2010c3a4:	fec42703          	lw	a4,-20(s0)
2010c3a8:	800007b7          	lui	a5,0x80000
2010c3ac:	06478793          	add	a5,a5,100 # 80000064 <__metal_dt_clock_2>
2010c3b0:	00f71763          	bne	a4,a5,2010c3be <__metal_driver_fixed_clock_rate+0x3e>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:191
		return METAL_FIXED_CLOCK_2_CLOCK_2_CLOCK_FREQUENCY;
2010c3b4:	044aa7b7          	lui	a5,0x44aa
2010c3b8:	20078793          	add	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2010c3bc:	a839                	j	2010c3da <__metal_driver_fixed_clock_rate+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:193
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2010c3be:	fec42703          	lw	a4,-20(s0)
2010c3c2:	800007b7          	lui	a5,0x80000
2010c3c6:	07078793          	add	a5,a5,112 # 80000070 <__metal_dt_clock_5>
2010c3ca:	00f71763          	bne	a4,a5,2010c3d8 <__metal_driver_fixed_clock_rate+0x58>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:194
		return METAL_FIXED_CLOCK_5_CLOCK_5_CLOCK_FREQUENCY;
2010c3ce:	01e857b7          	lui	a5,0x1e85
2010c3d2:	80078793          	add	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
2010c3d6:	a011                	j	2010c3da <__metal_driver_fixed_clock_rate+0x5a>
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:197
		return 0;
2010c3d8:	4781                	li	a5,0
C:\VSD_Sqd_Project\sifive_hifive1_BitNet_MNIST_App\bsp\build\debug/./metal/machine.h:199
}
2010c3da:	853e                	mv	a0,a5
2010c3dc:	4472                	lw	s0,28(sp)
2010c3de:	6105                	add	sp,sp,32
2010c3e0:	8082                	ret

2010c3e2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
2010c3e2:	1101                	add	sp,sp,-32
2010c3e4:	ce06                	sw	ra,28(sp)
2010c3e6:	cc22                	sw	s0,24(sp)
2010c3e8:	1000                	add	s0,sp,32
2010c3ea:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2010c3ee:	fec42503          	lw	a0,-20(s0)
2010c3f2:	f8fff0ef          	jal	2010c380 <__metal_driver_fixed_clock_rate>
2010c3f6:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:14
}
2010c3f8:	853e                	mv	a0,a5
2010c3fa:	40f2                	lw	ra,28(sp)
2010c3fc:	4462                	lw	s0,24(sp)
2010c3fe:	6105                	add	sp,sp,32
2010c400:	8082                	ret

2010c402 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
2010c402:	1101                	add	sp,sp,-32
2010c404:	ce06                	sw	ra,28(sp)
2010c406:	cc22                	sw	s0,24(sp)
2010c408:	1000                	add	s0,sp,32
2010c40a:	fea42623          	sw	a0,-20(s0)
2010c40e:	feb42423          	sw	a1,-24(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2010c412:	fec42503          	lw	a0,-20(s0)
2010c416:	fcdff0ef          	jal	2010c3e2 <__metal_driver_fixed_clock_get_rate_hz>
2010c41a:	87aa                	mv	a5,a0
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/src/drivers/fixed-clock.c:19
}
2010c41c:	853e                	mv	a0,a5
2010c41e:	40f2                	lw	ra,28(sp)
2010c420:	4462                	lw	s0,24(sp)
2010c422:	6105                	add	sp,sp,32
2010c424:	8082                	ret

2010c426 <_exit>:
_exit():
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
2010c426:	1101                	add	sp,sp,-32
2010c428:	ce06                	sw	ra,28(sp)
2010c42a:	cc22                	sw	s0,24(sp)
2010c42c:	1000                	add	s0,sp,32
2010c42e:	fea42623          	sw	a0,-20(s0)
C:/VSD_Sqd_Project/sifive_hifive1_BitNet_MNIST_App/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2010c432:	fec42503          	lw	a0,-20(s0)
2010c436:	e97ff0ef          	jal	2010c2cc <metal_shutdown>
